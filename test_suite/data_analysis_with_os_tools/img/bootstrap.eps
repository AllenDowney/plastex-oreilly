%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: bootstrap.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Santosh Kumar
%%CreationDate: 10/13/10
%%BoundingBox: 0 0 279 191
%%HiResBoundingBox: 0 0 278.9346 190.2032
%%CropBox: 0 0 278.9346 190.2032
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.1 x420 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 8492 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FF7D59FD047D597D7D7D597D7D7D597D7D7D597D7D5252FD077D59%7D7D7D597D7D7D597D7D7D527D7D7D597D7D7D597D7D7D597D7D7D597D7D%7D52527D7D597D7D7D597D7D7D597D7D7D59FD047D52527D59FD117D52FD%097D597D7D7D597D7D7D597D527DFFFF7DA8FD13FFA8FFA87DFFFFA8FD0E%FFA8FD14FF84FD13FFA8FD04FFA87DFD04FFA8FFFFA8FD05FF7D7DA8FD13%FF7DFFFF7DFD16FF7D7D525252277DFD3AFFFD06522752275228525252A8%2727275252275252277DFD0BFFA87DFFFF7DA8FD15FFFD05522752FD21FF%A8FD18FF7D27FD05522752525227522EA8285227282727527DF87EFD0BFF%A852FFFF7DFD13FFA8FD46FFA9FD08FF7DFD17FFA87DFFFF7DA8FD11FF52%7D7DA8FD047D527D7DA8527D7D7D527DA8FD05FFA8FD13FFA8FD13FFA8FD%06FF7D277D7DA87D52537D52FD047DFF527D52A8FD067DFD09FFA859FFFF%7DA8FD10FFA87D522727525227522727527E7D7D27275227A8FD05FFA8A8%FD27FFA8FD05FF525227522752F82727525227F8527D7DF8522727275252%5227FD09FFA87DFFFF7DA8FD05FFA8A8FD0AFF7D7D7D527DA852537D7DA8%FF52A8FD047DA8FD05FFA8FD13FFA8A8FD12FFA8FD06FFA852A87DA87DA8%7DA87DA87D5252FF7D52FD057DA87D7EFD09FFA87DFFFF7DFD06FF7D527D%5984FD057DA87D84A8A8527DA85352A8277D84FF527DA8A87DFD1BFFA8FD%19FF7D527DA8A8A8527E7D7D7DA8527DFF7D527DA87D7DA8277DA8A8527D%7DA87DFFFFFFA87DFFFF7DA8FD05FF52535252272727522752522727847D%7D275227522727522728272752F85352FFA8FFFFAFA8FFA8FFA8FD0FFF7E%FFA8FD0DFFA8FFA8A8A8FFA8A8A8FFFF7D27275252522727522752272752%A8537D27522752522752FD0427522752A8FFFFA87DFFFF7DFD06FFA87DA8%A87D27A8A8A87E847D7DA8FF7DA87D7D7DA87D7DA87D7DA87D7DA8A8FD19%FFA8A8FD19FFA87D7DA8A8FD047DA8A8A8277DFFA87DA87DA87DA87D7DA8%7D7DA87DA87DFFFFFFA87DFFFF7DA8FFFFA8527DA8FFFFFFA8A8FFFF7DFF%FFFFA8A8A87D7DFFA8A8A87DA8FFFFA8A8FD1DFFA8FFA8FD18FFA87D7DA8%FD07FF7DA8A8FFA8FFA87D7DFFA8A8A87DA8FFFFA8A8FFA8A9FFA852FFFF%7DFD04FF7D52527D525253527D2727527D52527D7D7D27FD0452F87D527D%2752595252A8FFFFA8FFFFFFA8FD12FFFD04A8FFA8FD15FFA87D52527D52%527D27525227528427537D7D7D27FD0452F859527D27FD0452A8A87DFFFF%7DA8FFFFFF7D7D52522152527D2852277D525227A87D53525227FD075227%7D278459FFFFFFA9FFFFFFA9FD11FF7DAFA8FFFFFFA8FD0FFFA9FD05FF7D%A852522752527D275227527D2727A87D53287D27FD08525927A87DFF59FF%FF7DA8FD08FFA8FD0BFFA8FD0BFFA8FD1BFFA8A8FD06FFA8FD1FFFA8FD05%FFA8FFA8FD0DFFA87DFFFF7DA8FD3BFFA8A87DFFA8FD05FFA8FD34FFA87D%FFFF7DFD3BFFA9FFA8A9FD08FFA8FD33FFA87DFFFF7DA8FD39FFA8A8FFFF%A8FFA8FD06FFA8A8FD32FFA87DFFFF7DFD3DFFA8A8FFFFA8FD05FFA8FD33%FFA87DFFFF7DA8FD38FFA8A8FFFFFFA8FFA8FD07FFA8FD32FFA852FFFF7D%FD39FFA8FFFFFFA8A8A8FFA8FD07FFA8FD31FFA87DFFFF7DA8FD37FFA8FF%A8FFA8A8A8FFA8A8A8FD38FFA859FFFF7DA8FD36FFA8FD05FFA8FFA8FFA8%FFAFFD06FFA8FD30FFA87DFFFF7DA8FD35FF7DFD05FFA8FFFD04A8FFFFA8%AFA8FFFFFFA8FD30FFA87DFFFF7DFD35FFA8FD07FFA8FFA8FFA8FD05FFA8%FFFFFFA8FD2FFFA87DFFFF7DA8FD33FFA8FD07FFA8FFA8FFFFAFA8FD05FF%A8FFFFA8A8FD2EFFA87DFFFF7DFD33FFA8A8FD0AFFA8FFA8FD07FFA8FD31%FFA87DFFFF7DA8FD31FFA8FD09FFA8FFA8FFA8FFA8FD07FFA8FFA8FD2EFF%A852FFFF7DFD31FFA8A8FD08FFA8FD05FFA8FD09FFA8FD2FFFA87DFFFF7D%A8FD2EFFA8A8FD0AFFA8A8FFA8FFA8AFFD0AFFA8FD2EFFA859FFFF7DA8FD%2EFFA8FD0BFFA8FD05FFA8FD0BFFA8FD2DFFA87DFFFF7DA8FD2CFFA8A8FD%0BFFA8A8A8FFA8FFFFFFA8FD0BFFA8FD2CFFA87DFFFF7DFD2DFF7EFD0DFF%A8FD05FFA8FD0DFFA8FD2BFFA87DFFFF7DA8FD2AFFA8A8FD0DFFA8FFFFFF%A8FFFFFFA8FD0CFFAFA8FD2AFFA87DFFFF7DFD2AFFA8A8FD0EFFA8FD06FF%A8AFFD0DFFA8FD2AFFA87DFFFF7DA8FD28FFA8A8FD0FFFA8FFFFFFA8AFA8%FFA8FD0DFFA8FD2AFFA852FFFF7DFD29FFA8FD0FFFA87DA8FFA8A87DA8FF%A8A8FD0DFFA8FD29FFA87DFFFF7DA8FD26FFA8A8FD10FFA852FFA8FF7D7D%7DFFA8A8A8FD0CFFA9A8FD28FFA859FFFF7DA8FD26FFA8FD11FFA8FFFFFF%A8A87DFD04A8FD0FFFA8FD27FFA87DFFFF7DA8FD25FFA8FD12FFA8A8FFA8%7D53A87DA87DA8A8FD0DFFA8A8A8FD26FFA87DFFFF7DFD25FF84FD13FF7D%A8FFFF7DA8FFAFA8FF7EFD37FFA87DFFFF7DA8FD23FFA8A8FD13FF7D7DA8%A8A87DFFFD04A8FD10FFA8FFA8FD24FFA87DFFFF7DFD23FFA8A8FD14FFA8%A87DFFFFA87DA87DAFA8FD11FFA8FFA8FD23FFA87DFFFF7DA8FD21FFA884%A8FD13FFA8FFA87D7DFFA8847DFD04A8FD11FFA8FFA8FD22FFA852FFFF7D%FD22FFA8A8FD15FFA8FF7DA8A8A87DFFFFFF7DAFFD12FFA8FFA9FD21FFA8%7DFFFF7DA8FD20FFA8A8FD15FFA8FFFFA8A8FF537DA8FFFFA87EFD13FFA8%FFA8FD20FFA859FFFF7DA8FD20FFA8FD17FFA8FFA8FFA87D7DFFFFFF7EA8%FD14FFA8FD21FFA87DFFFF7DA8FD1FFFA8FD15FFA8FFA8A8FFFFA8A87DA8%7DFFFFA884FD15FFA8A8A8FD1EFFA87DFFFF7DFD1FFFA8FD17FFA8FF84A8%7E7D7D7D597D7DFFA8A8FD17FFA8A8FD1DFFA87DFFFF7DA8FD1DFFA8FD15%FFA8A8A8FFA8A87D7D7DA8527D52A884A8A8FD17FFA8A8A8FD1CFFA87DFF%FF7DFD1EFFA8FD16FFA8FD04FFA87DFFFF7D7DA87DA8A8A8FD18FFA8A8A8%FD1BFFA87DFFFF7DA8FD19FFA8A8FFFFA8FD17FFA8FFA8FFA8A8FFFF7D7D%A8A8A8FFA8A8A8FD18FFA87DFD1AFFA852FFFF7DFD1DFFA8FD1DFFA8FFFF%A87DA8A8A8FFFFA8FD1BFFA8FD19FFA87DFFFF7DA8FD17FFA8FFFFFFA8FD%19FFA8FFA8FFA87D7EFF7D7D7DA87DA8A8AFFD1CFF7DFD18FFA859FFFF7D%A8FD16FFA8FFFFFFA8FD1AFFA9A8FD05FF7D7D7DFD04A8FFA8FD1DFFA8A8%FD16FFA87DFFFF7DA8FD13FFA8AFA8FFFFFF7EFD1BFFFD05A8FFA8A87DA8%FD05FFA8A8FD1DFFA8A8A8FD14FFA87DFFFF7DFD19FFA8FD1DFFA8A8A8FF%A8FD09FFA8FD21FFA8FD13FFA87DFFFF7DA8FD0FFFA8FFA8FD05FFA8FD1D%FFA8FD07FFA8FD06FFA8A8FD1FFFA8A9A8A8A8FD10FFA87DFFFF7DFD0FFF%A8FD06FFA9FD1EFFA8FD10FFA8A8FD21FFA8FFA8FD0FFFA87DFFFF7DA8FD%07FFA8FFA8FFA8FD07FFA8A8A8FD1DFFA8A8FD08FFA8FD07FFA8A8A8FD22%FFAFA8FFA8FFA8FFFFFFA8FD06FFA852FFFF7DFD11FFA8FD21FFA8FD13FF%A8FD29FFA8FFA8FD07FFA87DFFFF7D52A87D7D7DA87DA87DA87DA8FD057D%A87EA884A884A87DA884A87DA87DA87DA8A8A87DA884A87DA884A87DA87E%A87DA87DA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A87DA87DA87D%A884A87EA8A8A884A884A87DA87EA87DA87DA87DA87EA87DA8A8A87EA884%A87DA8A8A87DA87D7D7DA87DA87D7E7D7D53FFFF7DA8A8FFA8FFA8FFA8FF%A8FFA8FFA8FFFFFFA8FFA8FFA8FFAFFFA8FFAFFFA8FFFFFFA8FFAFFFA8FF%A8FFA8FFA8FFA8FFA8FFA8FD0DFFA8FD09FFA8FFFFFFA8FFAFFFA8FFA8FF%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%FFFFA8FFA8FFA8FFA87DFFFF7DA8FD3DFFA8FD3CFFA87DFFFF7DFD7BFFA8%7DFFFF7DA8FD31FFA8FD0BFFA8FD3CFFA87DFFFF7DFD2FFFA8FFFFA8A8FD%2DFFA8FD19FFA87DFFFF7DA8FD2CFFA9A8A8FFFFA8A8A8FD09FFA8FD05FF%7DA8A8FD19FF84A8A8FD18FFA852FFFF7DFD2BFFA8FFFFFFA8FD0EFFA8FF%FFFFA884A87DA8FD34FFA87DFFFF7DA8FD23FFA8A8A8FFFFFFA8A8A8FD0E%FFA8A8FF7DFFFFFF7D7EA87D7DFFFFFFA8A8FD04FFA8FD07FFA8FD22FFA8%59FFFF7DA8FD22FFA8FFA8FD07FFA8AFA8FD05FFA8A8A8FFFFFFA8A884A8%FD04FFA8FFA8AFA8FFA8AFA8FFFFFFA8A8A8FD05FFA8A8FD22FFA87DFFFF%7DA8FD21FFA8A8A8FFFFFFA8A8A8FFFFA8A8FD06FFA9A8FFFFFFFD04A87D%FFFFFD06A8FFFFFFA8FD05FFA8FD05FF84A8A8FD22FFA87DFFFF7DFD29FF%A8FD11FFA8FFA8FFFFFFA8FFA8FFA8FD35FFA87DFFFF7DA8FD3DFFA8FFFF%FFA9FD38FFA87DFFFF7DFD7BFFA87DFFFF7DA8FD1DFF597DA8FFA8FFA8A8%7DFFFFA87D84A8FFA8FFA8FD0DFFA8FD3CFFA852FFFF7DFD1DFFA8522827%2752277D275252A85227277D282752527DFD05FFA8FFFFFFA8A87DA8FD3C%FFA87DFFFF7DA8FD1DFF5252F827FD05522759A8272E52272727527DFFFF%7EFD07A87D7D59FD3CFFA859FFFF7DA8FD20FFA8FFFF7DA8FD09FFA8FD4B%FFA87DFFFF7DA8FD3DFFA8FD3CFFA87DFFFF7DFD29FFA8FD14FFA8FD28FF%A8FD13FFA87DFFFF7D7DFD13A852FD12A8FF7D7DFD13A87D52AFFD11A8FF%52FD14A87DFD14A852FFFFA8FD7B7D53A8FD7FFFA8FFFF7D52FD13FF7D52%FD13FF52A8FD12FFA8527EFD12FFA852FD13FF527DFD13FF527D847D27AF%FD11FF7D527DFD12FF7D5284FD12FF7D527DFD12FFA852FD13FF527DFD13%FF527DFF7D7DFD12FFA87D7DFD13FFA8FD13FFA87DA8FD13FFA8FD13FF52%A8FD13FF7DA8FD7FFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-10-13T07:21:19+05:30</xap:CreateDate>
         <xap:ModifyDate>2010-10-13T07:21:19+05:30</xap:ModifyDate>
         <xap:MetadataDate>2010-10-13T07:21:19+05:30</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>176</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7nc+WfLet/mRq51nSrPU&#xA;/Q0fShB9ct4rj0+d1qXLh6itx5cRWnhiqZf8q0/Ln/qVdH/6QLX/AKp4q7/lWn5c/wDUq6P/ANIF&#xA;r/1TxV3/ACrT8uf+pV0f/pAtf+qeKu/5Vp+XP/Uq6P8A9IFr/wBU8VQlz+Uv5dzX9ndjy7pkS2nq&#xA;crdLG2EcvqLx/eD09+PVcVeOal5z8m6JDqV5d+TPLGrQWs97CbS0sobWSza1vpbaGK7lZbsGS5hh&#xA;Mkf7tKkUpuDiqe/l95h/LbzP5vm8r3Hkny/FcRrfut1bwWzqxs7swoixtApIeEhxIH3Ib4R2Veo/&#xA;8q0/Ln/qVdH/AOkC1/6p4q7/AJVp+XP/AFKuj/8ASBa/9U8VQ+oflR+Xd3AsS+XNLtys0E3qRWNs&#xA;rEQTJKUJ9P7MgTgw7qTiqI/5Vp+XP/Uq6P8A9IFr/wBU8Vd/yrT8uf8AqVdH/wCkC1/6p4q7/lWn&#xA;5c/9Sro//SBa/wDVPFXf8q0/Ln/qVdH/AOkC1/6p4qpXf5W/l1cWk1uPLOlQmaNoxNHYWodOQI5K&#xA;fT2IrUYqhtE/LD8vItNjhfy3pFw0LSRGd7K2dm9ORkBZjH9rb4vfFUd/yrT8uf8AqVdH/wCkC1/6&#xA;p4q7/lWn5c/9Sro//SBa/wDVPFXf8q0/Ln/qVdH/AOkC1/6p4q7/AJVp+XP/AFKuj/8ASBa/9U8V&#xA;Q+n/AJUfl3aQNE3lzS7gtNPN6ktjbMwE8zyhAfT+zGH4KOygYq8x8/6r5M8p+eG0s+TPL91pUFgl&#xA;5JbLp9p9dmeSO7IWE8w5/eW0anhbSABmZ2QAVVSy589eRCyw2n5eeXPV+tR2zTUt5Ymj+uLbyXcf&#xA;G0jLWLJXhdfzUqmKoO0/MnyTchriP8tfL31b0Vk9EiHmpSO8uLhhKlnIsqxxWQBCJ8LtTka7Ksk8&#xA;m+Zfy18za1o2nJ5A0K3Gqxsz8UtJZo2Rr5WZIhar6kCtp1Gl5rQyJ8O+KvPtI/MXyvZzjU9Z8gaO&#xA;IL3T0lu0ksfRtYL1JY+CxOsF2yRSWdzDK1I2JeRRUDfFWRWP5mfl7qF9qNtZflfo7ppVpcaleGVb&#xA;eKVbS1YI49I2RInqT+6Ygf5e+KvRfyzsPy487+W/01/gjRbEid4GgS2tbhaoFbaUQRK326HiCAQR&#xA;U4qyv/lWn5c/9Sro/wD0gWv/AFTxV3/KtPy5/wCpV0f/AKQLX/qniqW23ljy3on5kaQdG0qz0z19&#xA;G1YT/U7eK39Thdabx5+mq8uPI0r4nFUysP8AyY2uf9sfSP8AqK1PFWSYq7FXYq47DpX2xV4fp/5g&#xA;fm9YzW63GlX2pw3GoQR3VxPpVzSK3dx6wijghtJIzGj1qwmSq0Esldiqldfmv+cdi2jx6jo0FuNW&#xA;k9EyjR9SlaKQafFe+mII7lpJWZ5XioCKek7HuFCp1+X3nn83NU1Yad5h8uT2NuI7ya4vJrUxhKTS&#xA;/Vwk/NEcqAkQjEJZl/eF6HFUo07z5+cNnZaT/uPv9UW+NgmpXeoaPOs1tPIijUI1gtY7M+lCX5Ry&#xA;MjBqMvI7HFWUflD518/689zaebdHn09razs5ILmaxubNpZ2Vlug7SfunPIKw9MLQNSm2yr0rFUv0&#xA;m61CdGN4gUhEO0bxUc15pSQktx2+Ibb4qmGKuxV2KuxVLtHv7S4+tW8Ugea1nlE6hSvEtK5XqAD0&#xA;7YqmOKuxV2KuxVDWUt9J6v1qJY+LUjoeo7jqagfzbV8BiqB843Gr23lHW7nRldtYh0+6k01Y0Erm&#xA;5SFjCFjIbm3qAUWhrirynRfP35yQVgk0W41QCVvq8l1Y3UclypjRin1gW+mR2/osT8U1qvqfYStO&#xA;bKqdj+Yv54S6+sD6Hy0u5lsoIbo6PfwqEleVZ5fSklDxFduZmk4hVBA+MVVSnUfzE/Nvy7pLeaW8&#xA;tC51G4s4IdVmm0y/jYR2NlBcGWdlmEcQS41C4qfRRaRuK9OKrKdY88/mt/hTS9V0zR57u/OqPBcW&#xA;9vYTW31iy+qOyytb3XqzW6rOQKlvi41GzUxVJZvzT/O+w0+O3Xypc315FptrNJdy6XcuJLl7eCSQ&#xA;N9XkiqzSySxtGsS+lxDHkCQqqc3v5jfmzBIxh8vetDPcq1mRpeo8ltfrl5bmOQCQ/vWjt4Jg7+mi&#xA;rJuPs1Vev4q7FWN3/wD5MbQ/+2Pq/wD1FaZirrD/AMmNrn/bH0j/AKitTxVHax5t8qaJPHBrOtWG&#xA;mTzLziivLmG3d1rTkqyMpIrttiryj/lTvnhG1OXS7+102e9vL+8j1Czu2t5ZVuRdyWqyvaWVtcss&#xA;c08LMstzMp4niAKLiqFsPy5/Na68xX8VzrEo0vS9dtrm3mvdQ1CZJ9Oge3uooIoZUaJjGo3n5F/U&#xA;UqTSrYq7y5+XX5mt5WtV03zXa6gzRTBtRtdWvxC08l1dyXBDQoRK831iMNM/xxtH8INTiqtceVbj&#xA;TfK9uPNmpeXtSuLPX7a51SLV9QK2c8sWgpYtFPPPbyH6w7j6zwaI/DQ174qlNh+UXnAaToQ/xRp+&#xA;oaPpc6N6/wCkLlIZLxNWkkrF6aFUnlWUQmXkXDVQDepVa0r8ovzAh8wa4lj5vtzrtzZWMWoXkerX&#xA;0l9bTLZ8Hee34/vFmkLGEysPTX4k3FMVTRfy58+v51nv5vMFkNZuNPb1dLTVrwXJhbWfrZjjmEKT&#xA;w25tKW3qxoOLdFxVmP5b+R/PHl6e1n8wa/Lq8j213HqnqXd1cRyTvcxvZyQxTjhEEgEivw47kfa6&#xA;hVnYj1Gj1nhqf7s+k22/7X7z4tvlirjHqNEpPDUf3h9Jt9/2f3nw7fPFVaMSjl6jK1WJTipWi9ga&#xA;lqn32+WKrsVdirsVSDQCPXV1NRcPqLs/86pe/ujXuAr/AA+xwqn+BXYq7FUK0eqcjxuIAtfhBgck&#xA;D3PqjFWvS1b/AJaYP+RD/wDVbFUo87Wc135F8xWV1fWtqbvTru3W9nJtreH1oGjDzOzScVUtUt4Y&#xA;q8i8neSPNcwki8reb9LS1WQzpHpOpevHaeogjZzb2dtZ2lx67xMAGhjEdKryfkSqjrH8ofzWi19d&#xA;Rl8xcLSeWy+tWg1bU5mW3tnlMsfrMkcs4ZZSUV2VQzGuyjkqkXnD8t/zM0/yhDpVt5li/SP1KWIa&#xA;Qmp37veW9rptrE9vaWbLwmLtFcngIx/eIeW2yrL9S8geYpvKuj2+tHTL9rXVHnTTtZvrme3Ed3Zy&#xA;WVvALu4glmlkFxOJUDIDy+BSKKcVYnpnkXzJNqVho1p5503UDpN+Gns49ZnSWWWPU5L5hLZwJxFw&#xA;YlfkzFqFaADiXxVZL+VPn3RpNd1QecrPT7ia1sba91ubWb9JLe7itEWX6wHXjJ68sv7syvWNWDIK&#xA;0XFUyk/Kn80IL288xXmv2kXqz397eMurX9ugtrr6t6cAu1hV4Y7dbUH1FA5AKhHHoqz78r/LXm3S&#xA;nu7/AFnzF/iC01OGOS3nW5muIy/1m5kEsKyfu4ke2lgXjEeNVPsSqnV//wCTG0P/ALY+r/8AUVpm&#xA;KusP/Jja5/2x9I/6itTxVS8/+Rx5usIbQ3v1L0VvV5iP1a/XdOubDpyT7H1vn78abVqFWCX3/OO/&#xA;rXVqbXzALXT7NblYdO+oo8XGe5urhIa+qrCAC89OWJSFlVVrQheKqxv+cbrV41jfXAqy3aXF8qWM&#xA;JV4UgjhS3iErzeiITG/oMKmNXKivUqqdl/zje1podtpa6/FMbe2Nt9Zn04SPQzXMpWOtx+7ikF5x&#xA;mTfnwT4lpirIdE/KTVdG0XTrSy12BtR03UoNShu57F3hYW+kLpAjeBbpG+KNfU5CX7XamKsdtf8A&#xA;nGiC1XTI49eEkGmRpGiXFkJTKseoPfokh9YL6Z5hHVVHKla/s4qhrf8A5xbsrd7pYtbijhvbS3tZ&#xA;ZI9PVbqNobX0JJIJ/XPp/WX5PMOB5Ala98VTJf8AnHuQ6rPqs2t28t1dQNHdQnTj9VmlbVv0oTNE&#xA;blmkib+4aMvun7XbFWQflv8Ak/ZeR57W4t7/AOt3Edtd219OYBFJdtc3Mc8MszB35NAsbRrWuzHp&#xA;0xVnptIjX4pN6f7tk7f7LFXfVIv5pOob+9k6j/ZfhiqpHEsa8VLEE1+JmY/exOKrsVdiqhd3kVt6&#xA;YYM8kziOKJKFmJ60BI2UfET4YqxnQNOifStHa8/0yRriYAzKrBF4TfCgNaLVQdyT0qdhQoZBNaNA&#xA;8t3ZozTsvxW3PhHIRTehBVX4igIpX9ralAlFxSCSJJArKHUMFcFWFRWhB3BxVdiql9Wj8X61/vH7&#xA;f7LFXfVo/F+tf7x+/wDssVXxxLGKKWI/ymZj97E4q8suvyIgmi0vjrJhu9L0aLRIb1LekvppaX1s&#xA;7owlqnqG/VytesY3NahVLLf/AJxvgAt47zXI7uFJIproNp8cZlCXK3ElqojlWOOyeh426pRGPKpA&#xA;44qhF/5xibhpxl8zCafT57mUu+nxqk6TQwQpDMkcyc0/0cmaprKXckhmZiqnWn/kRLaeZV1n9OR+&#xA;kBpwNlDYiFP9xtxZ3CqpWcjhWyZYwVJRXpU03VXat+R17qr263WvxrbWD622nxxWTo4XX/WadZ3+&#xA;tH1PTeZeBQR7KQdzVVUgvf8AnFu0vNMms59ciMsiEQ3K6eqtFIfqa1QCf7Cx2RRF7CRviPdVGv8A&#xA;846SvDeW5121js7+P97Zw6YY4Ypktb21he2j+tFYkX9IGVlPItIvIMtdlVe1/wCcc9O/SOkz6jqc&#xA;WpWemRoktpNZAm54WEVkqyu0zAxxtAJok4/AzSbnlUKsu0zSpNI8zeT9JkuWvJNO8uahaPduCrTN&#xA;BLpcZkYEvQvxr9o/PFUwsP8AyY2uf9sfSP8AqK1PFWSYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqs&#xA;uJ4beCSeZgkMSl5HPQKoqTiqXXizrpep3M0jMZYJDFFuojjVG4ih/aNasT8ugGKrEUR20E3GnoX8&#xA;tEqGr6s8kFajp/e8qfRiqb4qgY4Taag7KyJaXnxFCQpFyKD4a9fUXcgdCtf2jiqOxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2Ksbv/wDyY2h/9sfV/wDqK0zFXWH/AJMbXP8Atj6R/wBRWp4qyTFXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq07oiM7sFRQSzE0AA3JJOKpYJp9SmLW/pnTo/7uSRRIJJ45OoSqkCJo9jU&#xA;VbcbLuqt1mFzaxQNLLIJ5I4Zmrw/dSSKklfTCD4g3GvUVqtMVQMFvSwkiSeWNo7+lQ3qBla+qprJ&#xA;zFRuD3rWuFU8a4mg3uEDRd54+ijxdSage4r70wKvubaG6gMUlShKsrKaEMjB0YHxVgCMVW2Nw9xa&#xA;xyyRmKU1WWI78XQlXAO1RyBoe43xVXxV2KuxV2KuxV2KuxV2KuxV2KuxVjd//wCTG0P/ALY+r/8A&#xA;UVpmKusP/Jja5/2x9I/6itTxVkmKuxV2KuxV2KuxV2KuxV2KuxV2KrZJEjQu5oo6nFUrZry/uVSi&#xA;fU1ZhOoepSgFFbgQ3q7gjsvXc0xVNIYooYkhiQRxRqEjRRRVVRQAAdgMVS+/Uy6jaIWPpiRVYClC&#xA;QrTUPuGhQ/L54qhJQP0ZfNsVdL6tAAoaKaQr0/a+I/dXCqe4FQ5tzCxktl6mskNaK3uoOyt+B7+I&#xA;VUYpolvBKJi0N9RI4iG2mjVi3X7JKLQqaUK+JOKo7FXYq7FXYq7FXYq7FXYq7FXYq7FWN3//AJMb&#xA;Q/8Atj6v/wBRWmYq6w/8mNrn/bH0j/qK1PFWSYq7FXYq7FXYq7FXYq7FXYq7FWpHSNGkchUQFmY9&#xA;ABuTiqUx/WdUmkZ1eCz4A21wjgMeYB5IKNUlT9v9novdsVTO3t4LaFYYEEcSCiqPvP0k7k4qqYql&#xA;tuVm1iVwTSBGJU/zSMIxT5fVm+hsVUmge40uWNWJLz3Udacf7yWWIVUdQpf6aVxVMrS4W5tYbhRR&#xA;Zo1kA60DgH+OKquKoDULdkilmgjDtTmYivMeom6SBe7KQOm5+dMVRFjdLd2kVwtB6igsqsrhW6Mn&#xA;JdiVaoOKq+KuxV2KuxV2KuxV2KuxV2KuxVjd/wD+TG0P/tj6v/1FaZirrD/yY2uf9sfSP+orU8VZ&#xA;JirsVdirsVdirsVdirsVdiqyaaGCJpZnWOJBVnYgAD3JxVLRatqxd7+MHTlf/RbQ1/eemx/fTUNG&#xA;VjuibilGNSQEVTXFXYq7FUt0H47Wa5qT9amZ6MakFAIjuNviMfLbYVpiq23kjbTrhVYtKk10yoaB&#xA;ucc7uNgexpTxFK9cVROkf8cqzHdYY1YeDKoDA+4IocVReKuxVK5P9xl+GiiY2d87vdMDVYpQoPMK&#xA;BsHCktvSu/U/EqmmKuxV2KuxV2KuxV2KuxV2KuxVjd//AOTG0P8A7Y+r/wDUVpmKusP/ACY2uf8A&#xA;bH0j/qK1PFWSYq7FXYq7FXYq7FXYq7FXEgCp2A6nFUnCNq90TMsb6VCySW4B5+swVviJU8CnxVC7&#xA;9AepoqqcYq7FXYqgtbhWfR723aUwCeF4fWU8SpkUoCG7bt1xVjtjBD5e8j231i+ejcZXkJIq9weZ&#xA;ReJVlUFuWx7eFRhQxfRb7UIr1NU4MljMXktUkKoZR6nOMfEYwi8pG+JSa9AvHbFWWeU7hBKomjnh&#xA;uZGnQRsSygLK43J4tQemaVQUbl/MMSrK8CXYqpXdv9YtpIebRF1IEkZ4up7Mp8Qd8VQVhdenLJbS&#xA;MCI2WNgFKCOQqCFAq1I5PtR/EevGtaDFUyxV2KuxV2KuxV2KuxV2KuxVjd//AOTG0P8A7Y+r/wDU&#xA;VpmKusP/ACY2uf8AbH0j/qK1PFWSYq7FXYq7FXYq7FXYq7FUpvpV1K7l0dFLWyIDqUoJAXlRlgBX&#xA;qzruw7KRX7QxVNIooooxHEixxr9lFAUD5AYquxV2KuxVJ/Ntq91oVzFHI8MvB5IriJuLxvGjOrCv&#xA;XdafTirErJRLYtoWpyqptA0ccLkj9wOPJFLiQ8Yjx5NINgAVah5YUN/Xna1TS4bGK4khupCno1aq&#xA;STSM7KD6tVZgGJPatFPHFWSeX4IINU1QSOBeyTCR4K70liidjSpJHIlRuaU2xSyDArsVdiqEv7ed&#xA;1D2/EuKLNE4HGWI1DITSoIBJX39icVWadfRSqiBy6OD6EjBgx4kho3DAESRkUZTv+NFUdirsVdir&#xA;sVdirsVdirsVY3f/APkxtD/7Y+r/APUVpmKusP8AyY2uf9sfSP8AqK1PFWSYq7FXYq7FXYq7FXYq&#xA;l+qXtyoFpYFPr81VjaQjim1eRHVqDeg/21UTZWcVpbrDHuRvJIQA0jn7Uj0AqzHcnFVfFXYq7FXY&#xA;qleqvFOFRWWRFdIZwrV4+tKkTKQOhKM4r1GKpZqljZWmpy6xfRRSSPRLZOSR+pIFYIvJyoHwFlbk&#xA;3xe+y4UMb/Ln1YdYvJ9UmjE15LL6IIEQeUsG5cGPL1WV26jp0rVqJVlEQH+OrgKAoa1jY7UDvFyE&#xA;hp3kRZ4hz/lbjilkeBXYq7FXYqgruxZ5BLE5VdzNAAvxkD4WUmnGRTSjVp2I6FVWtJ1AXUCq5P1h&#xA;BR+SlCxXZjxP2TX7S/s+4IJVR2KuxV2KuxV2KuxV2Ksbv/8AyY2h/wDbH1f/AKitMxV1h/5MbXP+&#xA;2PpH/UVqeKskxV2KuxV2KuxV2KoaW4LuYYWA4/3821I69t9i58O3U9gyqjpdr8Au5ofSuHUqgYlp&#xA;FjLcgHJJHNur8e9BvxBxVH4q7FXYq7FUPfi9MH+iECTkK1pXj7V2r8+2KpNJpMDH6uWK/WZo4J+F&#xA;QB6ET3ChD1oJD/DCrG7TyJNqUl4l4bmGO3rFaiVioYMWBVSCeIpRqoCtW/b4tVtDBLDy7P8AWprm&#xA;UzXK2Fy8E0LuUVWkmdgjBSCnGSNnbiPtdDxc0KvWrAapDqVpqWplON0stuisAksSMv1hfUNFHwiA&#xA;qV7HfucCWRwzRzRiSNuSN0I9jQg+BB6jAq/FXYq7FXYqgdU06W6VZLadre7i3icElD7MvT6eo+RI&#xA;KrVnqVbgWN4yJqAQOUWvFgRU8SwXlSh6f1AVR+KuxV2KuxV2KuxVjd//AOTG0P8A7Y+r/wDUVpmK&#xA;usP/ACY2uf8AbH0j/qK1PFWSYq7FXYq7FVssscSF5DxUUFfcmgAA6knYDFUPI0swYsxtrVQebH4X&#xA;Yb13/YWnf7X+rSpVQ0NvDfG2mj20yKksEAUpzlDkrIwNKqKB08T8XZcVTPFXYq7FXYq7FWmZUUsx&#xA;CqoqzHYADucVY/b6shvVe7RoBaxO7JL9r1LhxwAUgUYBJBtUBf2qYVU5W1KKa41Oyu5LssjNHprg&#xA;1XcpRowTVVddigB26tihhfl7QPMGrajdXwaWyaaSZboseBT1JGO4FORDD1ApAYbIaLirLo9P1GDS&#xA;Whv41nNtdRyQozVR+cnpmNi2xXg9eVBudxUGqrJrWKCKBVgAERHJepry3qSdyT4nAlVxV2KuxV2K&#xA;uxVD3tjb3kJjlFGp+7lWnND1DISDQggHFUAb+50t4YL8vcQOoX68FVVEhYgK3xH9mnXcnYciaBVN&#xA;Y5Y5FDxuHQ9GUgj7xiq7FXYq7FXYqxu//wDJjaH/ANsfV/8AqK0zFXWH/kxtc/7Y+kf9RWp4qyTF&#xA;XMwUFmICgVJPQDFVD69anaN/VJ3/AHQMnXpXjUCvvirXO+kJ4RrCtdmkPNun8iGnX/KxVQmm0+ye&#xA;P6xKZrsgmJT+8nbajGONBXp14LTxxVesNxdPHLccoYODBrFgh5FuSn1WUurDiRRRtXry2oqjMVdi&#xA;rsVdirsVdiqA1a+jgjERHqNJQGJaFnBNBGqnvIfh3oAKmopiqy30aNitzfBZb5n9SV1J4A/DSNa/&#xA;sLwWniRXucVRUen2kdybhECyU4gD7I2C1A/1VUfR88VW6dX6u9Qw/fz7Oan++f8ADw9sVVby3+s2&#xA;k9vy4etG0fMb05KRWn04qhNFuVktVjKiNk5ARgkgcDxkVa9o5OSfQOxGKphirsVdirsVdirsVcyh&#xA;gVYAqRQg9CMVSybS5YXuLiydjPM4kMbycRy6Gj8JG6fssGUdBxxVtdVkjnjguUCyyqpRDSN+TfsD&#xA;kzROR34SE+3fFUUL+2oPUJgJ7TApv4At8JPyOKogEEVG4PQ4q7FWN3//AJMbQ/8Atj6v/wBRWmYq&#xA;gJrbW5vzH1f9GX0NmF0fSfWE1ubjnW61KnGksPGm/jiqa/orzWXZm1a0Yliy/wCiXC0H7IIS9VT7&#xA;7b4q0ukeZRu99psjUYF20+dmNTUVZr1jTbpiq+Ww84yIF/TNnCRWrxae9Ttt/eXUg64qpnR/NbxN&#xA;HPrcEwNCD9UliIO42aC6ham/QnFURFp/mOKvpX1gpIReX1KYsQgp8TG7q3tX8cVVPq/mj/q4WXU/&#xA;8eUvSmw/3r64q76v5o/6uFj7/wChTf8AZXirhb+aNq6hYnxpZTD/ALG8Vd9W80U/46FjXiP+PKb7&#xA;Xc/719PbFWvq3mrf/cjY9RT/AEGbp3/4+8Vd9W81f9XGx6/8sM3T/pLxVa1p5qYUOqWaCvWOxkDU&#xA;8PjunH4YqstdE1GK6+tzXkM9zQ0LQPxQnasYMxIJXYlmY+BA2xVH+lq9P96bevGn9w/269f77pTt&#xA;+OKuMWr0alzbg0HGsDmhrvX99vtiqE02HVBbycJ7dFNzcEL6Mjbeu9an1hudziqLMWrdrmD7RP8A&#xA;cP8AZ7D++6+/4YqgJtF1Rrg3EF9FBJIxaZRbuUdgoVHp6wKuq7EqRyGzAjFVVbTzQqhf0laPRaFn&#xA;spKlvH4blR9FMVcbbzTQ01CxrTY/UpqV8f8AevFVxt/M1TS/sgKjjWylNBTev+lb74q76v5n/wCr&#xA;hZdd/wDQpenYf71dcVWi2807V1Cx9/8AQpv+yvFXC28099Qse/8Ax5Tde3/H3irvq3mqn/HRsa0/&#xA;5YZuvj/vXirZt/NFTTULGlRT/Qpunf8A4+8VaFt5p76hY9R/x5TdO/8Ax94qhE0LXY0KQX9nbIWD&#xA;cbe0niAIBFQou+Fd+60PcHFVJPL3mhSWOtW3qMjIZFsPTYFiPiBSdT26Ekd/DCqr+ifNwVOGsWau&#xA;q0LmzuWrv14tfMvTxGBUshttbh/MfSP0pfQ3vLSNWMPo2xtuH+labUGss3LtTp9OKo+w/wDJja5/&#xA;2x9I/wCorU8VZJirsVdirsVdirsVdirsVdirsVWTzJBBJPJXhErO9NzRRU4qp2l4LkS/uniaF/Td&#xA;H4E14q37DOOjeOKobSdVa/51jROKRv8ABJ6lPU5fC3wrxZeO4xVMMVdiqE0un1Z6cf8Aei5+xWn+&#xA;9D+Pfx98VdqGr6dpwQ3s3oq4YqxViKLTkSQCBTkOuKoqORJEWSNg8bgMjqagg7ggjFW8VdirsVdi&#xA;rsVS/VdYj0941cIeaSSfG/AkRcahBQ8mPPYbfPFUwxV2KuxV2KuxV2Ksbv8A/wAmNof/AGx9X/6i&#xA;tMxV1h/5MbXP+2PpH/UVqeKskxV2KuxV2KuxV2KuxV2KpJHqt9fgrbKIjEIpJBBJHJLxlWQcCJVV&#xA;VZWVeQJ8fpKov9IpYWFudSd/rAgDzssbSGsar6jEQqR1bsKeGBVCOwbTU1O8laO4SVXl9ER+nUBp&#xA;ZOLsWflUSca07fRiqI0aS1kgl+rwQwoslG+rENG54KeQIVKmhCnbtiqKu5zb2s04XmYo2fhWleIJ&#xA;pXfriqjpt8byOViqD05PTDRSeqjfCrVVqL/NTFUj1DVtVM12lvHccGMkVr/cLG3FRBVWB9UEXLru&#xA;e2FCL8v3gt9BM94SpW6ukcDnMyk3kiKlaMzEEha/wwJYtdeWIhp04e7kvLgRwejMsMgAkSSRD60U&#xA;s7tK07DiwC9sKGW6PFe2/l8WcfxTWcIt7SVozCX9OFQrGNyePxbeGBKN03676cv1rn/efufV9Lnw&#xA;4r19L4ftcsVUrrVJINQS0WJGDiI8jJxc+pIUbhHxPLgByO/TFUwxVJLXU9QvdUgMME0ViYo5ZBJ6&#xA;FOMiy0JozPXkidMKp3gV2KuxV2KuxV2KuxV2Ksbv/wDyY2h/9sfV/wDqK0zFXWH/AJMbXP8Atj6R&#xA;/wBRWp4qyTFXYq7FXYq7FXYq7FUu0bzH5e1tJZNF1S01NIGCztZzxXARjuAxjZuJPviqY4ql09z5&#xA;dvdJ/Sk8tnc6QsLXH16RopLYQceTSeqapw4ipatKYqqWOt6LfymGxv7a7mEUdyY4Jo5GEM45RS0U&#xA;k8JBurdD2xVG4q7FXYqoHT7A+pW2iPrby/AvxmvL4tt9998VQun2tvLpzW7KRCLifiq1j48LlyvH&#xA;jxI4lRSmKohdM08MjG3jaSOhSR1DuCGL15tVq8iTWvXfFUTirsVdirsVUre0tbZStvDHCp6iNQgN&#xA;PkBiqrirsVdirsVdirsVdirsVY3f/wDkxtD/AO2Pq/8A1FaZirrD/wAmNrn/AGx9I/6itTxVkmKu&#xA;xV2KuxV2KuxVp0DoyHowIPQ9fnUYq+f9Y/5xUu9Tito5PN3pi1hW2hH1GWTjGiKgCmW9kdKhTVFY&#xA;RivwooxVW1L/AJxtaCaKz0me2aw1K4n/AEhLJZoUtIzBqXpTLEZ0MkifX444ip+BkV6ECgVTzQ/y&#xA;Am0v9LIfMImh1PQJNAVRYojRmW1t7YztJ6rSSKPqodYiQFLNQjkxZVKZP+cYJDb3duvmuR0uXtlD&#xA;XFlHOyW1pBPaxQjnLxqlvOio/GqMgdaGnFVF+WP+ccZNF1KzvZfMKXn1G+Gowf6B6cglNxZzS/H9&#xA;YcAyR2Ppkqo/vG6j4cVev3llczyBor+e0UChSFYCCa9T6sUpr9OKqH6Jv/8Aq9Xn/AWf/ZPiqV65&#xA;5R1TUxAI/MN5bGJiWmVIVm4sKERyQrAVr/lclO1V2wqmflq0ks9IjtZLq4vXglnQ3V2yPPJxncAu&#xA;0axqf+B6e+BUzxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksbv8A/wAmNof/AGx9X/6itMxVSv7D&#xA;zba+bbzWNIs7C9tb6wsrR0u7ya0kjktJruQkCO1uwysLsdx0xVV+v/mN/wBWPR/+4vdf94zFXfX/&#xA;AMxv+rHo/wD3F7r/ALxmKu+v/mN/1Y9H/wC4vdf94zFXfX/zG/6sej/9xe6/7xmKoO6f80pdRsrm&#xA;LTdJht7b1frFqNWuiJua8Uqf0aKcDv0xVGfX/wAxv+rHo/8A3F7r/vGYq76/+Y3/AFY9H/7i91/3&#xA;jMVd9f8AzG/6sej/APcXuv8AvGYq76/+Y3/Vj0f/ALi91/3jMVQ2oy/mfc26R2+l6RayLPBK0q6t&#xA;dElIpkkkj/45o2lRCh+eKon6/wDmN/1Y9H/7i91/3jMVd9f/ADG/6sej/wDcXuv+8Zirvr/5jf8A&#xA;Vj0f/uL3X/eMxV31/wDMb/qx6P8A9xe6/wC8Ziqje3P5mT2c8MOkaRBNLG6RzjVrolGZSA4H6NH2&#xA;TviqlpJ/Mux0+G1l0nSbmVKmW4bV7oF3ZizNT9GmlS2Kov6/+Y3/AFY9H/7i91/3jMVd9f8AzG/6&#xA;sej/APcXuv8AvGYq76/+Y3/Vj0f/ALi91/3jMVd9f/Mb/qx6P/3F7r/vGYqhtOl/M+2t3juNL0i6&#xA;kaeeVZW1a6BCSzPJHH/xzTtEjhB8sVRP1/8AMb/qx6P/ANxe6/7xmKu+v/mN/wBWPR/+4vdf94zF&#xA;XfX/AMxv+rHo/wD3F7r/ALxmKu+v/mN/1Y9H/wC4vdf94zFUHav+aUWo3tzLpukzW9z6X1e1OrXQ&#xA;EPBeL0P6NNeZ36YqjPr/AOY3/Vj0f/uL3X/eMxV31/8AMb/qx6P/ANxe6/7xmKu+v/mN/wBWPR/+&#xA;4vdf94zFXfX/AMxv+rHo/wD3F7r/ALxmKqVhp/m2783WWsavZ2Fja2On3tmqWl5NdySSXk1pICRJ&#xA;aWgVVW0bueuKpXeeR/Md1+ZOk+Z7iawktdOMoM0SSw3P1dormOO3KP8AWeXFrhWaRJolbflE1I+C&#xA;rPcVdirsVdirz38yfI3mfzPeWKwjTLrTLeYSCO4a4tbqBOI5mGYLewtK7gcZfQRolqFNXLBV6Fir&#xA;sVdirsVY3598vaz5h8uajo9heQ20V9ZXVvIsizLI00kRW3ZbiGVPSRZN5AY5Oa/DSlaqsgt42jt4&#xA;o2oWRFUkdKgUxVUxV2KuxVA69YXGo6HqOn21w1pcXltNbw3afaieWMosg90JriqR/lx5WvfLeiT2&#xA;d3Fa2pmuWuIdPsGZ7S2Qxxp6cLPHCxDNG0rfAPic/PFWVYq7FXYq7FUh8ueXbnSdX8yXckvqQaxf&#xA;pe2qmSSV0UWkELqxkrx/exOVVSVC0Ap0CqfYq7FXYq7FWHaf5S1KH8z9S80TQWqWU9kLS1nhuJTc&#xA;vUQFxcQvEUoGh/d+nMFUVPAs7MFWY4q7FXYq7FWG+e/Jupa9rflnUbEWytot4txNcTyOsiRiaF5F&#xA;iRY5Vf1I4mU/FG32fj4c0dV//9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:67A863AB2CD8DF119141EA02D1783092</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:68A863AB2CD8DF119141EA02D1783092</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helve; Helvetica</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -190.203 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 190.203 li
278.935 190.203 li
278.935 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0.5 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
3.89355 0.25 mo
3.89355 3.3999 li
3.89355 179.3 mo
3.89355 176.149 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 45 /hyphen putdup 51 /three putdef/UniqueID 28352 def/FontBBox {-166 -225 1000 931} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 718 737 523 538 688 703] def/OtherBlues [270 281 405 409 -220 -207] def/BlueScale 0.0437917 def/StdHW [76] def/StdVW [88] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/hyphen <1C60D8A8C9B81F2C3AC7E044D0946E6D2305FBC1A5806554FDBB52A75CA669> |-/three <1C60D8A8C9B7EF32A47D2AAF8B27A6BD3F3BCF7FF319EB739C72B00D2CC4607F53D8DAA36825DF613C6C839053BC26A7859D8AA158786D28D1E4DE04046CE941E5159199A77FA8129F02A3ECB8D9E54C278D22D0348DFB3C3C73F55886BF824DB1B2BE764C084A332EAF6E03DAE2729DE4723D54D14DE5E36772632D9593B8015D82D91A7513CF83AED18BF899FB582C1516AE5C3CE963C7A9224066B2CB5D769E52069DB2172C52452A135E45CF579C1E7FB12BEA387FFB8E1E9EB90D4F6BF80D4DDA346E7141D8646431020D523BDB64> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/EGEGYB+Helvetica /Helvetica findfont ct_VMDictPut/EGEGYB+Helvetica*1 [45{/.notdef}rp /hyphen 5{/.notdef}rp /three 204{/.notdef}rp]EGEGYB+Helvetica nfEGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf0.78125 188.628 mo(-3)[2.33105 0 ]xsh49.0938 0.25 mo
49.0938 3.3999 li
49.0938 179.3 mo
49.0938 176.149 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginEGEGYB+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A77988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C312D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1E4FEB02B613916D7> |-systemdict /gcheck known {setglobal} if end {end} ifendEGEGYB+Helvetica /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/EGEGYB+Helvetica*1 [45{/.notdef}rp /hyphen 4{/.notdef}rp /two /three 204{/.notdef}rp]EGEGYB+Helvetica nfEGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf45.9766 188.628 mo(-2)[2.33105 0 ]xsh94.2939 0.25 mo
94.2939 3.3999 li
94.2939 179.3 mo
94.2939 176.149 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginEGEGYB+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF327C10274AD9026AD10E2766BF7084C2014D15DE02958A6977C33F9C9651D5788EA2FB530B3EE42DE5824448> |-systemdict /gcheck known {setglobal} if end {end} ifendEGEGYB+Helvetica /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/EGEGYB+Helvetica*1 [45{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 204{/.notdef}rp]EGEGYB+Helvetica nfEGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf91.1797 188.628 mo(-1)[2.33105 0 ]xsh139.494 0.25 mo
139.494 3.3999 li
139.494 179.3 mo
139.494 176.149 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginEGEGYB+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF19407412ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-systemdict /gcheck known {setglobal} if end {end} ifendEGEGYB+Helvetica /Encoding getdup 32 /space putdup 48 /zero putpop%ADOEndSubsetFont
/EGEGYB+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three 204{/.notdef}rp]EGEGYB+Helvetica nfEGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf136.57 188.628 mo( )sh138.523 188.628 mo(0)sh184.644 0.25 mo
184.644 3.3999 li
184.644 179.3 mo
184.644 176.149 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf181.719 188.628 mo( )sh183.664 188.628 mo(1)sh229.844 0.25 mo
229.844 3.3999 li
229.844 179.3 mo
229.844 176.149 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf226.922 188.628 mo( )sh228.867 188.628 mo(2)sh275.044 0.25 mo
275.044 3.3999 li
275.044 179.3 mo
275.044 176.149 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf272.117 188.628 mo( )sh274.07 188.628 mo(3)sh0.125 lw
[0.5 1 ] 0 dsh
3.89355 134.55 mo
275.044 134.55 li
@
0.5 lw
[] 0 dsh
3.89355 0.25 mo
3.89355 179.3 li
275.044 179.3 li
275.044 0.25 li
3.89355 0.25 li
3.89355 0.25 li
cp
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginEGEGYB+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/M <1C60D8A8C9B6B41CC7E91641C452E31A1FF57E5819E293AAC22FFE6A989DD096F29F83DBBFB131D21D2F3E6C6DAB9DE434C529570BC24A625218D657C1F03933B1EA3B0DCFDA8AB35AF4BBEE90CCC241F177D656ECD11D47536184> |-/S <1C60D8A8C9B64EDF7B9A268599F9CD8C4143A0D599CA838C6F6EFB82E6187B34759773BB4D8C1A41E190DEFABB354DFB531C99308891FC3B7E87957393F9CD35CA8C07371CAABAAF32C24CDAE22C826F234EC2B15BA06DFB54FFCB46EDDF1D277ED530855C8BB0880980568C5F76DE693CEE6004D84A502F3C6B0F55A55095F8FAF71FCF3869AA0D55975A515D287103786F2BEFCA3E30833F771676F4E4B0C078830B99B254F2B4> |-/a <1C60D8A8C9B7EF32A0B922DB529D708010F72F0E62F6CA36E98277AFD8C536E6814BFC8F2509E1B2B1B62A6BDA8D1A6ED67728D80620B28FE439D2F57DCEC5483105FEA93379701773DF23A415938C688874994BCC9880105CE27AC2270A13FA38E952045C5E8C52BEF83397E5FBEEFAB993BE33E385A5E36620F7427AB5E4423C6A4ED6DE24A89F54E52C8FAD8A45FAD4B8F6CFD50EB7D35BF120B079B932E0EE2F7685462C7EC6E9B818F0F9E1F7814D04F2B9AAFA6704B8B745452B73181F38CB34F1645F> |-/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C2021D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495ACA0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCDBE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553A431EECECF30F5581F5F0240E470E520EB9771> |-/l <1C60D8A8C9B88C082599D5E898B54D665A852C4BD97DFF418DFF9C25960C0EAF> |-/m <1C60D8A8C9B6B41C803D68C39EF50D06E406D806E0103B4C2937F43F706FE45E46BB4B168951587EB26A51BD9E5D6D15548973928DA7BD71E5C6A2EC754258679A8719AC099ECB167292DC3AC16D6A6399789AE1244C2D9A7EDD1242D52DA81BBE025DB4544A719A686DB3A0393D2301EEF9A4AA3D42067FE37BAF> |-/n <1C60D8A8C9B7EF327C10274A017D50E5277BF0D0EBCB370A96BE9DA563254EC441C4BC3817B6ABCAA45C3FADDF2A0C1F1BCD1456474D7370B95E3791CB0774B8A788FAD31DAB8E43BE1DDCC8C2722C438CA874C21003F548D691EAB87ADC2BE2D98ABE47C6EE8D76> |-/p <1C60D8A8C9B7EF321971A47DFE20E88A554AF6C7BF26D7DE21E7159091488A77474EFAE16E717C524A15C920EA73AA47F3FA5326288E9152C7B3C170946831BD532AD7339284A44181A5422DAA5A3944CCAFE4499DA2E6E45119A891F62D3E7DB19C997B84C7105E8154EEFB4DEC8858FC770AEE75D22C6FDC3AA98F517994> |-systemdict /gcheck known {setglobal} if end {end} ifendEGEGYB+Helvetica /Encoding getdup 77 /M putdup 83 /S putdup 97 /a putdup 101 /e putdup 108 /l putdup 109 /m putdup 110 /n putdup 112 /p putpop%ADOEndSubsetFont
/EGEGYB+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three 25{/.notdef}rp /M 5{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e 6{/.notdef}rp /l /m /n /.notdef /p 143{/.notdef}rp]EGEGYB+Helvetica nfEGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf69.1641 170.433 mo(Sample Mean)[4.66895 3.89209 5.83105 3.8916 1.5542 3.89209 1.9458 5.83105 3.89209 3.8916 0 ]xsh0.125 lw
[0.5 1 ] 0 dsh
141.494 179.3 mo
141.494 0.25 li
@
0.25 lw
[] 0 dsh
135.444 169.7 mo
141.494 168.1 li
135.444 166.5 li
116.894 168.1 mo
141.494 168.1 li
135.444 169.7 mo
141.494 168.1 li
135.444 166.5 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginEGEGYB+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F1E08EB12991814F2BEFDD99E857D46CC83B089892D70768EDFB737CEBE140DF668BA679C989F178F8C7B580D23B4B614D8D70F34E9A487B4AA37370316974673AB> |-/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B5837088353D9095E679DCF29A> |-systemdict /gcheck known {setglobal} if end {end} ifendEGEGYB+Helvetica /Encoding getdup 68 /D putdup 116 /t putpop%ADOEndSubsetFont
/EGEGYB+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three 16{/.notdef}rp /D 8{/.notdef}rp /M 5{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e 6{/.notdef}rp /l /m /n /.notdef /p 3{/.notdef}rp /t 139{/.notdef}rp]EGEGYB+Helvetica nfEGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf52.6484 9.2373 mo(Data)[5.05371 3.89209 1.94629 0 ]xsh43.2422 16.2373 mo(Sample Data)[4.66895 3.89209 5.83105 3.8916 1.5542 3.89209 1.9458 5.05371 3.89209 1.94629 0 ]xsh133.369 150.925 mo
133.369 154.075 li
136.519 154.075 li
136.519 150.925 li
133.369 150.925 li
133.369 150.925 li
cp
@
1 lc
134.944 152.5 mo
134.944 152.5 li
@
0 lc
192.019 154.075 mo
192.019 157.225 li
195.169 157.225 li
195.169 154.075 li
192.019 154.075 li
192.019 154.075 li
cp
@
1 lc
193.594 155.649 mo
193.594 155.649 li
@
0 lc
84.9189 150.524 mo
84.9189 153.675 li
88.0688 153.675 li
88.0688 150.524 li
84.9189 150.524 li
84.9189 150.524 li
cp
@
1 lc
86.4937 152.1 mo
86.4937 152.1 li
@
0 lc
113.869 144.325 mo
113.869 147.475 li
117.019 147.475 li
117.019 144.325 li
113.869 144.325 li
113.869 144.325 li
cp
@
1 lc
115.444 145.899 mo
115.444 145.899 li
@
0 lc
165.219 150.925 mo
165.219 154.075 li
168.369 154.075 li
168.369 150.925 li
165.219 150.925 li
165.219 150.925 li
cp
@
1 lc
166.794 152.5 mo
166.794 152.5 li
@
0 lc
137.569 154.024 mo
137.569 157.175 li
140.719 157.175 li
140.719 154.024 li
137.569 154.024 li
137.569 154.024 li
cp
@
1 lc
139.144 155.6 mo
139.144 155.6 li
@
0 lc
104.019 153.175 mo
104.019 156.325 li
107.169 156.325 li
107.169 153.175 li
104.019 153.175 li
104.019 153.175 li
cp
@
1 lc
105.594 154.75 mo
105.594 154.75 li
@
0 lc
152.869 146.524 mo
152.869 149.675 li
156.019 149.675 li
156.019 146.524 li
152.869 146.524 li
152.869 146.524 li
cp
@
1 lc
154.443 148.1 mo
154.443 148.1 li
@
0 lc
177.919 152.774 mo
177.919 155.925 li
181.068 155.925 li
181.068 152.774 li
177.919 152.774 li
177.919 152.774 li
cp
@
1 lc
179.494 154.35 mo
179.494 154.35 li
@
0 lc
213.869 144.825 mo
213.869 147.975 li
217.019 147.975 li
217.019 144.825 li
213.869 144.825 li
213.869 144.825 li
cp
@
1 lc
215.443 146.399 mo
215.443 146.399 li
@
0 lc
152.068 154.625 mo
152.068 157.774 li
155.219 157.774 li
155.219 154.625 li
152.068 154.625 li
152.068 154.625 li
cp
@
1 lc
153.644 156.2 mo
153.644 156.2 li
@
0 lc
154.619 147.725 mo
154.619 150.875 li
157.769 150.875 li
157.769 147.725 li
154.619 147.725 li
154.619 147.725 li
cp
@
1 lc
156.193 149.3 mo
156.193 149.3 li
@
0 lc
156.019 152.075 mo
156.019 155.225 li
159.169 155.225 li
159.169 152.075 li
156.019 152.075 li
156.019 152.075 li
cp
@
1 lc
157.594 153.649 mo
157.594 153.649 li
@
0 lc
138.469 150.274 mo
138.469 153.425 li
141.619 153.425 li
141.619 150.274 li
138.469 150.274 li
138.469 150.274 li
cp
@
1 lc
140.044 151.85 mo
140.044 151.85 li
@
0 lc
132.219 154.225 mo
132.219 157.375 li
135.369 157.375 li
135.369 154.225 li
132.219 154.225 li
132.219 154.225 li
cp
@
1 lc
133.794 155.8 mo
133.794 155.8 li
@
0 lc
154.769 148.925 mo
154.769 152.075 li
157.919 152.075 li
157.919 148.925 li
154.769 148.925 li
154.769 148.925 li
cp
@
1 lc
156.344 150.5 mo
156.344 150.5 li
@
0 lc
148.719 149.325 mo
148.719 152.475 li
151.869 152.475 li
151.869 149.325 li
148.719 149.325 li
148.719 149.325 li
cp
@
1 lc
150.294 150.899 mo
150.294 150.899 li
@
0 lc
79.5186 153.075 mo
79.5186 156.225 li
82.6689 156.225 li
82.6689 153.075 li
79.5186 153.075 li
79.5186 153.075 li
cp
@
1 lc
81.0938 154.649 mo
81.0938 154.649 li
@
0 lc
146.219 155.075 mo
146.219 158.225 li
149.369 158.225 li
149.369 155.075 li
146.219 155.075 li
146.219 155.075 li
cp
@
1 lc
147.794 156.649 mo
147.794 156.649 li
@
0 lc
104.569 145.625 mo
104.569 148.774 li
107.719 148.774 li
107.719 145.625 li
104.569 145.625 li
104.569 145.625 li
cp
@
1 lc
106.144 147.2 mo
106.144 147.2 li
@
0 lc
97.0186 149.225 mo
97.0186 152.375 li
100.169 152.375 li
100.169 149.225 li
97.0186 149.225 li
97.0186 149.225 li
cp
@
1 lc
98.5938 150.8 mo
98.5938 150.8 li
@
0 lc
195.119 151.274 mo
195.119 154.425 li
198.269 154.425 li
198.269 151.274 li
195.119 151.274 li
195.119 151.274 li
cp
@
1 lc
196.693 152.85 mo
196.693 152.85 li
@
0 lc
92.5186 154.725 mo
92.5186 157.875 li
95.6689 157.875 li
95.6689 154.725 li
92.5186 154.725 li
92.5186 154.725 li
cp
@
1 lc
94.0938 156.3 mo
94.0938 156.3 li
@
0 lc
121.569 152.975 mo
121.569 156.125 li
124.719 156.125 li
124.719 152.975 li
121.569 152.975 li
121.569 152.975 li
cp
@
1 lc
123.144 154.55 mo
123.144 154.55 li
@
0 lc
149.119 149.024 mo
149.119 152.175 li
152.269 152.175 li
152.269 149.024 li
149.119 149.024 li
149.119 149.024 li
cp
@
1 lc
150.693 150.6 mo
150.693 150.6 li
@
0 lc
96.2686 12.3247 mo
96.2686 15.4746 li
99.4189 15.4746 li
99.4189 12.3247 li
96.2686 12.3247 li
96.2686 12.3247 li
cp
@
1 lc
97.8438 13.8999 mo
97.8438 13.8999 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginEGEGYB+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/E <1C60D8A8C9B64EDF885E9C70E86F4D6078E7D1BF0D69911FD55CAA5C46B6C6C433175B8381217040BB42F142B1A0E1EA4F6BED24146D2DB65AFCA0> |-/b <1C60D8A8C9B7EF321971A47DFE20E8FAA3AECD4B63979F3BA5905BE4460C4EC35484A2DDEB8FB0C279CAEBAC46937B3C1D314F0CA9AAAD2428E1776BFE709A3690B134C3681F9C1058260E32A6FB6CF96E30645AB8747463E709006E87BE4044E02ACCC009C6EBFC0B2E8EBE6757939593099F73224798C4484DC245727ED201C4A4EB31B5D8FC091E99D86240A578386ECDBA2496554011C67D3AF284668A881E893817D96EF8797C86BEB27D87E41F1DB205D8E0A76EEB250779> |-/c <1C60D8A8C9B7A73DE7D498F17521D6359F9ADD96B62202C43AB7E2B6A506D4DE60506EB0B21A851A7E637BA285607D05D1170907CD76EA31977E70CEDA0DED90924EF61C48FC884B70C05F0A56FF474D664DA9646860BA> |-/i <1C60D8A8C9B88C082599D5E95652E4745C17562AE47DDBD30E7054F041D72A7354004D800853CB28271AB7834CF7A2CB132BAFF26EF4E9D89B> |-/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-/r <1C60D8A8C9B81F2C150546EE4CBAAF688B47B2BE559294D5CB0899F2E804995909AC00E005B47DD0AC10879B5BC7D5032F4A9752992A333ADEB05A77287D04AF74FB420D308AD8> |-/s <1C60D8A8C9B7A73DF2FC7D734CFF3CEE44DEE08B4814311F759A12C668E2414B1F185B71CDFB81A4EFE4B67531A5BC3DCC468E7336CC99F93A0F8C9CAAC21479B9DF30E1F20CC55E079066616501132E6501EACD2121153832E7EB63F4284AC03D21E5D5BD534A816A07833E9E45AAF0AF784FB128B27EB090C038A83361862615D53FB49FC431C156AA9A7FD4E2EF50395549EA0CB64112DC> |-/u <1C60D8A8C9B7EF325758E576B7BAA1EFA82EFF7976BE67CE506354F22E3D1B078EDAE7715C61BE16B3CD4B647E2C68818E308CF0BE659E73BA193580128E99771A6AFDBFEB4E9486BE6CBE5D0A068E2F3382B692BCB6E47C62554398C9E56946239346863C679F19> |-systemdict /gcheck known {setglobal} if end {end} ifendEGEGYB+Helvetica /Encoding getdup 69 /E putdup 98 /b putdup 99 /c putdup 105 /i putdup 111 /o putdup 114 /r putdup 115 /s putdup 117 /u putpop%ADOEndSubsetFont
/EGEGYB+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three 16{/.notdef}rp /D /E 7{/.notdef}rp /M 5{/.notdef}rp /S 13{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]EGEGYB+Helvetica nfEGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf17.9766 23.2373 mo(Empirical Distribution)[4.66895 5.83105 3.89209 1.55371 2.33105 1.55371 3.5 3.89209 1.55371 1.94629 5.05371 1.55371 3.5 1.94629 2.33105 1.55371 3.89209 3.89209 1.9458 1.55371 3.89209 0 ]xsh0 lc
[4 2 ] 0 dsh
269.894 134.399 mo
270.044 134.399 li
270.193 134.399 li
270.344 134.399 li
270.494 134.399 li
270.644 134.399 li
270.794 134.399 li
270.943 134.399 li
271.094 134.399 li
271.244 134.399 li
271.394 134.399 li
271.544 134.399 li
271.693 134.399 li
271.844 134.399 li
271.994 134.399 li
272.144 134.399 li
272.294 134.45 li
272.443 134.45 li
272.594 134.45 li
272.744 134.45 li
272.894 134.45 li
273.044 134.45 li
273.193 134.45 li
273.344 134.45 li
273.494 134.45 li
273.644 134.45 li
273.794 134.45 li
273.943 134.45 li
274.094 134.45 li
274.244 134.45 li
274.394 134.45 li
274.544 134.45 li
274.693 134.45 li
274.844 134.45 li
274.994 134.45 li
275.044 134.45 li
254.193 133.3 mo
254.394 133.3 li
254.544 133.35 li
254.693 133.35 li
254.844 133.35 li
254.994 133.399 li
255.144 133.399 li
255.294 133.45 li
255.443 133.45 li
255.594 133.45 li
255.744 133.5 li
255.894 133.5 li
256.044 133.5 li
256.193 133.55 li
256.344 133.55 li
256.494 133.55 li
256.644 133.6 li
256.794 133.6 li
256.943 133.6 li
257.094 133.649 li
257.244 133.649 li
257.394 133.649 li
257.544 133.7 li
257.693 133.7 li
257.844 133.7 li
257.994 133.75 li
258.144 133.75 li
258.294 133.75 li
258.443 133.75 li
258.594 133.8 li
258.744 133.8 li
258.894 133.8 li
259.044 133.85 li
259.193 133.85 li
259.344 133.85 li
259.494 133.85 li
259.644 133.899 li
259.794 133.899 li
259.943 133.899 li
260.094 133.899 li
260.244 133.95 li
260.394 133.95 li
260.544 133.95 li
260.693 133.95 li
260.844 133.95 li
260.994 134 li
261.144 134 li
261.294 134 li
261.443 134 li
261.594 134 li
261.744 134.05 li
261.894 134.05 li
262.044 134.05 li
262.193 134.05 li
262.344 134.05 li
262.494 134.1 li
262.644 134.1 li
262.794 134.1 li
262.943 134.1 li
263.094 134.1 li
263.244 134.15 li
263.394 134.15 li
263.544 134.15 li
263.693 134.15 li
263.844 134.15 li
263.994 134.15 li
264.144 134.15 li
264.294 134.2 li
264.443 134.2 li
264.594 134.2 li
264.744 134.2 li
264.894 134.2 li
265.044 134.2 li
265.244 134.2 li
265.394 134.25 li
265.544 134.25 li
265.693 134.25 li
265.844 134.25 li
265.994 134.25 li
266.144 134.25 li
266.294 134.25 li
266.443 134.25 li
266.594 134.3 li
266.744 134.3 li
266.894 134.3 li
267.044 134.3 li
267.193 134.3 li
267.344 134.3 li
267.494 134.3 li
267.644 134.3 li
267.794 134.3 li
267.943 134.3 li
268.094 134.35 li
268.244 134.35 li
268.394 134.35 li
268.544 134.35 li
268.693 134.35 li
268.844 134.35 li
268.994 134.35 li
269.144 134.35 li
269.294 134.35 li
269.443 134.35 li
269.594 134.35 li
269.744 134.35 li
269.894 134.4 li
238.544 129.05 mo
238.693 129.1 li
238.844 129.149 li
238.994 129.25 li
239.144 129.3 li
239.294 129.35 li
239.443 129.399 li
239.594 129.5 li
239.744 129.55 li
239.894 129.6 li
240.044 129.649 li
240.193 129.7 li
240.344 129.8 li
240.494 129.85 li
240.644 129.899 li
240.794 129.95 li
240.943 130 li
241.094 130.05 li
241.244 130.1 li
241.394 130.149 li
241.544 130.25 li
241.693 130.3 li
241.844 130.35 li
241.994 130.399 li
242.144 130.45 li
242.294 130.5 li
242.443 130.55 li
242.594 130.6 li
242.744 130.65 li
242.894 130.7 li
243.044 130.75 li
243.193 130.8 li
243.394 130.85 li
243.544 130.9 li
243.693 130.95 li
243.844 131 li
243.994 131.05 li
244.144 131.1 li
244.294 131.15 li
244.443 131.2 li
244.594 131.2 li
244.744 131.25 li
244.894 131.3 li
245.044 131.351 li
245.193 131.4 li
245.344 131.45 li
245.494 131.5 li
245.644 131.55 li
245.794 131.55 li
245.943 131.601 li
246.094 131.65 li
246.244 131.7 li
246.394 131.75 li
246.544 131.75 li
246.693 131.8 li
246.844 131.851 li
246.994 131.9 li
247.144 131.9 li
247.294 131.95 li
247.443 132 li
247.594 132.05 li
247.744 132.05 li
247.894 132.101 li
248.044 132.15 li
248.193 132.2 li
248.344 132.2 li
248.494 132.25 li
248.644 132.3 li
248.794 132.3 li
248.943 132.351 li
249.094 132.4 li
249.244 132.4 li
249.394 132.45 li
249.544 132.5 li
249.693 132.5 li
249.844 132.551 li
249.994 132.551 li
250.144 132.601 li
250.294 132.65 li
250.443 132.65 li
250.594 132.7 li
250.744 132.7 li
250.894 132.75 li
251.044 132.75 li
251.193 132.801 li
251.344 132.851 li
251.494 132.851 li
251.644 132.9 li
251.794 132.9 li
251.943 132.95 li
252.094 132.95 li
252.244 133 li
252.394 133 li
252.544 133.051 li
252.693 133.051 li
252.844 133.101 li
252.994 133.101 li
253.144 133.15 li
253.294 133.15 li
253.443 133.2 li
253.594 133.2 li
253.744 133.2 li
253.894 133.25 li
254.044 133.25 li
254.193 133.301 li
222.894 119.899 mo
223.044 120 li
223.193 120.1 li
223.344 120.2 li
223.494 120.35 li
223.644 120.45 li
223.794 120.55 li
223.943 120.649 li
224.094 120.75 li
224.244 120.85 li
224.394 120.949 li
224.544 121.05 li
224.693 121.149 li
224.844 121.3 li
224.994 121.399 li
225.144 121.5 li
225.294 121.6 li
225.443 121.699 li
225.594 121.8 li
225.744 121.899 li
225.894 122 li
226.044 122.1 li
226.193 122.199 li
226.344 122.3 li
226.494 122.399 li
226.644 122.5 li
226.794 122.6 li
226.943 122.699 li
227.094 122.8 li
227.244 122.899 li
227.394 122.999 li
227.544 123.1 li
227.693 123.199 li
227.844 123.3 li
227.994 123.399 li
228.144 123.499 li
228.294 123.6 li
228.443 123.699 li
228.594 123.749 li
228.744 123.85 li
228.894 123.949 li
229.044 124.05 li
229.193 124.149 li
229.344 124.249 li
229.494 124.35 li
229.644 124.399 li
229.794 124.499 li
229.943 124.6 li
230.094 124.699 li
230.244 124.8 li
230.394 124.899 li
230.544 124.949 li
230.693 125.05 li
230.844 125.149 li
230.994 125.249 li
231.144 125.3 li
231.294 125.399 li
231.443 125.499 li
231.594 125.6 li
231.744 125.649 li
231.894 125.749 li
232.044 125.85 li
232.193 125.899 li
232.344 125.999 li
232.544 126.1 li
232.693 126.199 li
232.844 126.249 li
232.994 126.35 li
233.144 126.399 li
233.294 126.499 li
233.443 126.6 li
233.594 126.649 li
233.744 126.749 li
233.894 126.799 li
234.044 126.899 li
234.193 126.999 li
234.344 127.049 li
234.494 127.149 li
234.644 127.199 li
234.794 127.299 li
234.943 127.35 li
235.094 127.449 li
235.244 127.499 li
235.394 127.6 li
235.544 127.649 li
235.693 127.749 li
235.844 127.799 li
235.994 127.899 li
236.144 127.949 li
236.294 128.049 li
236.443 128.1 li
236.594 128.149 li
236.744 128.249 li
236.894 128.299 li
237.044 128.399 li
237.193 128.449 li
237.344 128.499 li
237.494 128.6 li
237.644 128.649 li
237.794 128.699 li
237.943 128.799 li
238.094 128.85 li
238.244 128.899 li
238.394 128.999 li
238.544 129.049 li
207.193 107.7 mo
207.344 107.85 li
207.494 107.95 li
207.644 108.1 li
207.794 108.2 li
207.943 108.3 li
208.094 108.45 li
208.244 108.55 li
208.394 108.7 li
208.544 108.8 li
208.693 108.95 li
208.844 109.05 li
208.994 109.149 li
209.144 109.3 li
209.294 109.399 li
209.443 109.55 li
209.594 109.649 li
209.744 109.8 li
209.894 109.899 li
210.044 110 li
210.193 110.149 li
210.344 110.25 li
210.494 110.399 li
210.693 110.5 li
210.844 110.649 li
210.994 110.75 li
211.144 110.85 li
211.294 111 li
211.443 111.1 li
211.594 111.25 li
211.744 111.35 li
211.894 111.449 li
212.044 111.6 li
212.193 111.699 li
212.344 111.85 li
212.494 111.949 li
212.644 112.05 li
212.794 112.199 li
212.943 112.3 li
213.094 112.449 li
213.244 112.55 li
213.394 112.649 li
213.544 112.8 li
213.693 112.899 li
213.844 113 li
213.994 113.149 li
214.144 113.249 li
214.294 113.399 li
214.443 113.499 li
214.594 113.6 li
214.744 113.749 li
214.894 113.85 li
215.044 113.949 li
215.193 114.1 li
215.344 114.199 li
215.494 114.35 li
215.644 114.449 li
215.794 114.55 li
215.943 114.699 li
216.094 114.8 li
216.244 114.899 li
216.394 115.05 li
216.544 115.149 li
216.693 115.249 li
216.844 115.399 li
216.994 115.499 li
217.144 115.6 li
217.294 115.749 li
217.443 115.85 li
217.594 115.949 li
217.744 116.1 li
217.894 116.199 li
218.044 116.3 li
218.193 116.449 li
218.344 116.55 li
218.494 116.649 li
218.644 116.749 li
218.794 116.899 li
218.943 116.999 li
219.094 117.1 li
219.244 117.249 li
219.394 117.35 li
219.544 117.449 li
219.693 117.549 li
219.844 117.699 li
219.994 117.799 li
220.144 117.899 li
220.294 117.999 li
220.443 118.149 li
220.594 118.249 li
220.744 118.35 li
220.894 118.449 li
221.044 118.6 li
221.193 118.699 li
221.344 118.799 li
221.544 118.899 li
221.693 118.999 li
221.844 119.149 li
221.994 119.249 li
222.144 119.35 li
222.294 119.449 li
222.443 119.549 li
222.594 119.699 li
222.744 119.799 li
222.894 119.899 li
191.544 93.25 mo
191.693 93.4497 li
191.844 93.5996 li
191.994 93.75 li
192.144 93.9502 li
192.294 94.0996 li
192.443 94.25 li
192.594 94.4502 li
192.744 94.5996 li
192.894 94.75 li
193.044 94.8994 li
193.193 95.0996 li
193.344 95.25 li
193.494 95.3994 li
193.644 95.5498 li
193.794 95.7002 li
193.943 95.8994 li
194.094 96.0498 li
194.244 96.2002 li
194.394 96.3496 li
194.544 96.5 li
194.693 96.6494 li
194.844 96.7998 li
194.994 96.9502 li
195.144 97.0996 li
195.294 97.25 li
195.443 97.3994 li
195.594 97.5498 li
195.744 97.7002 li
195.894 97.8496 li
196.044 98 li
196.193 98.1494 li
196.344 98.2998 li
196.494 98.4502 li
196.644 98.5996 li
196.794 98.7002 li
196.943 98.8496 li
197.094 99 li
197.244 99.1494 li
197.394 99.2998 li
197.544 99.4502 li
197.693 99.5498 li
197.844 99.7002 li
197.994 99.8496 li
198.144 100 li
198.294 100.149 li
198.443 100.25 li
198.594 100.399 li
198.744 100.55 li
198.894 100.649 li
199.044 100.8 li
199.193 100.95 li
199.344 101.1 li
199.494 101.2 li
199.693 101.35 li
199.844 101.5 li
199.994 101.6 li
200.144 101.75 li
200.294 101.899 li
200.443 102 li
200.594 102.149 li
200.744 102.3 li
200.894 102.399 li
201.044 102.55 li
201.193 102.649 li
201.344 102.8 li
201.494 102.95 li
201.644 103.05 li
201.794 103.2 li
201.943 103.3 li
202.094 103.45 li
202.244 103.6 li
202.394 103.7 li
202.544 103.85 li
202.693 103.95 li
202.844 104.1 li
202.994 104.199 li
203.144 104.35 li
203.294 104.449 li
203.443 104.6 li
203.594 104.699 li
203.744 104.85 li
203.894 105 li
204.044 105.1 li
204.193 105.25 li
204.344 105.35 li
204.494 105.5 li
204.644 105.6 li
204.794 105.75 li
204.943 105.85 li
205.094 106 li
205.244 106.1 li
205.394 106.25 li
205.544 106.35 li
205.693 106.5 li
205.844 106.6 li
205.994 106.699 li
206.144 106.85 li
206.294 106.949 li
206.443 107.1 li
206.594 107.199 li
206.744 107.35 li
206.894 107.449 li
207.044 107.6 li
207.193 107.699 li
175.844 68.7998 mo
175.994 69.0996 li
176.144 69.3999 li
176.294 69.6997 li
176.443 70 li
176.594 70.2998 li
176.744 70.5996 li
176.894 70.8999 li
177.044 71.1997 li
177.193 71.5 li
177.344 71.75 li
177.494 72.0498 li
177.644 72.3496 li
177.844 72.6499 li
177.994 72.8999 li
178.144 73.1997 li
178.294 73.5 li
178.443 73.75 li
178.594 74.0498 li
178.744 74.3496 li
178.894 74.5996 li
179.044 74.8999 li
179.193 75.1499 li
179.344 75.4497 li
179.494 75.6997 li
179.644 76 li
179.794 76.25 li
179.943 76.5 li
180.094 76.7998 li
180.244 77.0498 li
180.394 77.2998 li
180.544 77.5996 li
180.693 77.8496 li
180.844 78.0996 li
180.994 78.3496 li
181.144 78.5996 li
181.294 78.8999 li
181.443 79.1499 li
181.594 79.3999 li
181.744 79.6499 li
181.894 79.8999 li
182.044 80.1499 li
182.193 80.3999 li
182.344 80.6499 li
182.494 80.8999 li
182.644 81.1499 li
182.794 81.3999 li
182.943 81.6001 li
183.094 81.8501 li
183.244 82.1001 li
183.394 82.3501 li
183.544 82.5498 li
183.693 82.7998 li
183.844 83.0498 li
183.994 83.25 li
184.144 83.5 li
184.294 83.75 li
184.443 83.9497 li
184.594 84.1997 li
184.744 84.3999 li
184.894 84.6499 li
185.044 84.8501 li
185.193 85.1001 li
185.344 85.2998 li
185.494 85.5 li
185.644 85.75 li
185.794 85.9497 li
185.943 86.1499 li
186.094 86.3999 li
186.244 86.6001 li
186.394 86.7998 li
186.544 87 li
186.693 87.25 li
186.844 87.4497 li
186.994 87.6499 li
187.144 87.8501 li
187.294 88.0498 li
187.443 88.25 li
187.594 88.4497 li
187.744 88.6499 li
187.894 88.8496 li
188.044 89.0498 li
188.193 89.25 li
188.344 89.4497 li
188.494 89.6499 li
188.644 89.7998 li
188.844 90 li
188.994 90.1997 li
189.144 90.3999 li
189.294 90.5996 li
189.443 90.75 li
189.594 90.9497 li
189.744 91.1499 li
189.894 91.2998 li
190.044 91.5 li
190.193 91.6997 li
190.344 91.8496 li
190.494 92.0498 li
190.644 92.1997 li
190.794 92.3999 li
190.943 92.5498 li
191.094 92.75 li
191.244 92.8999 li
191.394 93.0996 li
191.544 93.25 li
160.193 37.2998 mo
160.344 37.5498 li
160.494 37.7998 li
160.644 38.0498 li
160.794 38.2998 li
160.943 38.5498 li
161.094 38.8496 li
161.244 39.0996 li
161.394 39.3496 li
161.544 39.6499 li
161.693 39.8999 li
161.844 40.1499 li
161.994 40.4497 li
162.144 40.6997 li
162.294 41 li
162.443 41.25 li
162.594 41.5498 li
162.744 41.7998 li
162.894 42.0996 li
163.044 42.3999 li
163.193 42.6499 li
163.344 42.9497 li
163.494 43.25 li
163.644 43.5498 li
163.794 43.8496 li
163.943 44.0996 li
164.094 44.3999 li
164.244 44.6997 li
164.394 45 li
164.544 45.2998 li
164.693 45.5996 li
164.844 45.8999 li
164.994 46.1997 li
165.144 46.5 li
165.294 46.7998 li
165.443 47.0996 li
165.594 47.4497 li
165.744 47.75 li
165.894 48.0498 li
166.044 48.3496 li
166.193 48.6499 li
166.344 48.9497 li
166.494 49.2998 li
166.644 49.5996 li
166.844 49.8999 li
166.994 50.1997 li
167.144 50.5498 li
167.294 50.8496 li
167.443 51.1499 li
167.594 51.5 li
167.744 51.7998 li
167.894 52.0996 li
168.044 52.4497 li
168.193 52.75 li
168.344 53.0498 li
168.494 53.3999 li
168.644 53.6997 li
168.794 54.0498 li
168.943 54.3496 li
169.094 54.6499 li
169.244 55 li
169.394 55.2998 li
169.544 55.6499 li
169.693 55.9497 li
169.844 56.25 li
169.994 56.5996 li
170.144 56.8999 li
170.294 57.25 li
170.443 57.5498 li
170.594 57.8999 li
170.744 58.1997 li
170.894 58.5 li
171.044 58.8496 li
171.193 59.1499 li
171.344 59.5 li
171.494 59.7998 li
171.644 60.0996 li
171.794 60.4497 li
171.943 60.75 li
172.094 61.0498 li
172.244 61.3999 li
172.394 61.6997 li
172.544 62 li
172.693 62.3496 li
172.844 62.6499 li
172.994 62.9497 li
173.144 63.2998 li
173.294 63.5996 li
173.443 63.8999 li
173.594 64.1997 li
173.744 64.5498 li
173.894 64.8496 li
174.044 65.1499 li
174.193 65.4497 li
174.344 65.7998 li
174.494 66.0996 li
174.644 66.3999 li
174.794 66.6997 li
174.943 67 li
175.094 67.2998 li
175.244 67.5996 li
175.394 67.8999 li
175.544 68.1997 li
175.693 68.5 li
175.844 68.7998 li
144.494 27.1997 mo
144.644 27.0996 li
144.794 27.0498 li
144.994 27 li
145.144 26.9497 li
145.294 26.8999 li
145.443 26.8496 li
145.594 26.7998 li
145.744 26.75 li
145.894 26.6997 li
146.044 26.6499 li
146.193 26.6499 li
146.344 26.5996 li
146.494 26.5498 li
146.644 26.5498 li
146.794 26.5 li
146.943 26.5 li
147.094 26.5 li
147.244 26.5 li
147.394 26.4497 li
147.544 26.4497 li
147.693 26.4497 li
147.844 26.4497 li
147.994 26.4497 li
148.144 26.4497 li
148.294 26.5 li
148.443 26.5 li
148.594 26.5 li
148.744 26.5498 li
148.894 26.5498 li
149.044 26.5498 li
149.193 26.5996 li
149.344 26.6499 li
149.494 26.6499 li
149.644 26.6997 li
149.794 26.75 li
149.943 26.7998 li
150.094 26.8496 li
150.244 26.8999 li
150.394 26.9497 li
150.544 27 li
150.693 27.0996 li
150.844 27.1499 li
150.994 27.1997 li
151.144 27.2998 li
151.294 27.3496 li
151.443 27.4497 li
151.594 27.5498 li
151.744 27.5996 li
151.894 27.6997 li
152.044 27.7998 li
152.193 27.8999 li
152.344 28 li
152.494 28.0996 li
152.644 28.1997 li
152.794 28.2998 li
152.943 28.3999 li
153.094 28.5498 li
153.244 28.6499 li
153.394 28.75 li
153.544 28.8999 li
153.693 29 li
153.844 29.1499 li
153.994 29.2998 li
154.144 29.4497 li
154.294 29.5498 li
154.443 29.6997 li
154.594 29.8496 li
154.744 30 li
154.894 30.1499 li
155.044 30.2998 li
155.193 30.5 li
155.344 30.6499 li
155.494 30.7998 li
155.644 30.9497 li
155.794 31.1499 li
155.994 31.2998 li
156.144 31.5 li
156.294 31.6499 li
156.443 31.8496 li
156.594 32.0498 li
156.744 32.25 li
156.894 32.3999 li
157.044 32.5996 li
157.193 32.7998 li
157.344 33 li
157.494 33.1997 li
157.644 33.3999 li
157.794 33.6499 li
157.943 33.8496 li
158.094 34.0498 li
158.244 34.25 li
158.394 34.5 li
158.544 34.6997 li
158.693 34.9497 li
158.844 35.1499 li
158.994 35.3999 li
159.144 35.5996 li
159.294 35.8496 li
159.443 36.0996 li
159.594 36.3496 li
159.744 36.5498 li
159.894 36.7998 li
160.044 37.0498 li
160.193 37.2998 li
128.844 44.5 mo
128.994 44.2998 li
129.144 44.0996 li
129.294 43.8999 li
129.444 43.6499 li
129.594 43.4497 li
129.744 43.25 li
129.894 43.0498 li
130.044 42.7998 li
130.194 42.5996 li
130.344 42.3999 li
130.494 42.1997 li
130.644 41.9497 li
130.794 41.75 li
130.944 41.5498 li
131.094 41.3496 li
131.244 41.1499 li
131.394 40.8999 li
131.544 40.6997 li
131.694 40.5 li
131.844 40.2998 li
131.994 40.0996 li
132.144 39.8496 li
132.294 39.6499 li
132.444 39.4497 li
132.594 39.25 li
132.744 39.0498 li
132.894 38.8496 li
133.044 38.6499 li
133.194 38.4497 li
133.344 38.1997 li
133.494 38 li
133.644 37.7998 li
133.794 37.5996 li
133.944 37.3999 li
134.144 37.1997 li
134.294 37 li
134.444 36.7998 li
134.594 36.6001 li
134.744 36.3999 li
134.894 36.1997 li
135.044 36.0498 li
135.194 35.8501 li
135.344 35.6499 li
135.494 35.4497 li
135.644 35.25 li
135.794 35.0498 li
135.944 34.8999 li
136.094 34.7002 li
136.244 34.5 li
136.394 34.2998 li
136.544 34.1499 li
136.694 33.9502 li
136.844 33.75 li
136.994 33.6001 li
137.144 33.3999 li
137.294 33.25 li
137.444 33.0498 li
137.594 32.8999 li
137.744 32.7002 li
137.894 32.5498 li
138.044 32.3999 li
138.194 32.2002 li
138.344 32.0498 li
138.494 31.8999 li
138.644 31.75 li
138.794 31.5498 li
138.944 31.3999 li
139.094 31.25 li
139.244 31.1001 li
139.394 30.9502 li
139.544 30.7998 li
139.694 30.6499 li
139.844 30.5 li
139.994 30.3501 li
140.144 30.25 li
140.294 30.1001 li
140.444 29.9502 li
140.594 29.7998 li
140.744 29.7002 li
140.894 29.5498 li
141.044 29.4502 li
141.193 29.2998 li
141.344 29.2002 li
141.494 29.0498 li
141.644 28.9502 li
141.794 28.7998 li
141.943 28.7002 li
142.094 28.6001 li
142.244 28.5 li
142.394 28.3999 li
142.544 28.2998 li
142.693 28.1997 li
142.844 28.1001 li
142.994 28 li
143.144 27.8999 li
143.294 27.7998 li
143.443 27.6997 li
143.594 27.6499 li
143.744 27.5498 li
143.894 27.4497 li
144.044 27.3999 li
144.193 27.2998 li
144.344 27.25 li
144.494 27.1997 li
113.194 62.75 mo
113.344 62.5996 li
113.494 62.5 li
113.644 62.3496 li
113.794 62.1997 li
113.944 62.0996 li
114.094 61.9497 li
114.244 61.7998 li
114.394 61.6499 li
114.544 61.5498 li
114.694 61.3999 li
114.844 61.25 li
114.994 61.0996 li
115.144 60.9497 li
115.294 60.8496 li
115.444 60.6997 li
115.594 60.5498 li
115.744 60.3999 li
115.894 60.25 li
116.044 60.0996 li
116.194 59.9497 li
116.344 59.7998 li
116.494 59.6499 li
116.644 59.5 li
116.794 59.3496 li
116.944 59.1997 li
117.094 59.0498 li
117.244 58.8999 li
117.394 58.75 li
117.544 58.5996 li
117.694 58.4497 li
117.844 58.2998 li
117.994 58.1499 li
118.144 58 li
118.294 57.7998 li
118.444 57.6499 li
118.594 57.5 li
118.744 57.3496 li
118.894 57.1499 li
119.044 57 li
119.194 56.8496 li
119.344 56.6997 li
119.494 56.5 li
119.644 56.3496 li
119.794 56.1499 li
119.944 56 li
120.094 55.8496 li
120.244 55.6499 li
120.394 55.5 li
120.544 55.2998 li
120.694 55.1499 li
120.844 54.9497 li
120.994 54.7998 li
121.144 54.5996 li
121.294 54.4497 li
121.444 54.25 li
121.594 54.0498 li
121.744 53.8999 li
121.894 53.6997 li
122.044 53.5 li
122.194 53.3496 li
122.344 53.1499 li
122.494 52.9497 li
122.644 52.7998 li
122.794 52.5996 li
122.944 52.3999 li
123.144 52.1997 li
123.294 52 li
123.444 51.8496 li
123.594 51.6499 li
123.744 51.4497 li
123.894 51.25 li
124.044 51.0498 li
124.194 50.8496 li
124.344 50.6499 li
124.494 50.4497 li
124.644 50.25 li
124.794 50.0498 li
124.944 49.8999 li
125.094 49.6997 li
125.244 49.5 li
125.394 49.2998 li
125.544 49.0498 li
125.694 48.8501 li
125.844 48.6499 li
125.994 48.4497 li
126.144 48.25 li
126.294 48.0498 li
126.444 47.8501 li
126.594 47.6499 li
126.744 47.4502 li
126.894 47.25 li
127.044 47.0498 li
127.194 46.7998 li
127.344 46.6001 li
127.494 46.3999 li
127.644 46.2002 li
127.794 46 li
127.944 45.7998 li
128.094 45.5498 li
128.244 45.3501 li
128.394 45.1499 li
128.544 44.9502 li
128.694 44.7002 li
128.844 44.5 li
97.4937 75.4497 mo
97.6436 75.2998 li
97.7939 75.1997 li
97.9438 75.0498 li
98.0938 74.8999 li
98.2437 74.75 li
98.3936 74.6499 li
98.5439 74.5 li
98.6938 74.3496 li
98.8438 74.25 li
98.9937 74.0996 li
99.1436 73.9497 li
99.2939 73.8496 li
99.4438 73.6997 li
99.5938 73.5498 li
99.7437 73.4497 li
99.8936 73.2998 li
100.044 73.1997 li
100.194 73.0498 li
100.344 72.8999 li
100.494 72.7998 li
100.644 72.6499 li
100.794 72.5498 li
100.944 72.3999 li
101.094 72.2998 li
101.294 72.1499 li
101.444 72.0498 li
101.594 71.8999 li
101.744 71.7998 li
101.894 71.6997 li
102.044 71.5498 li
102.194 71.4497 li
102.344 71.2998 li
102.494 71.1997 li
102.644 71.0498 li
102.794 70.9497 li
102.944 70.8496 li
103.094 70.6997 li
103.244 70.5996 li
103.394 70.4995 li
103.544 70.3496 li
103.694 70.2495 li
103.844 70.1499 li
103.994 69.9995 li
104.144 69.8994 li
104.294 69.7998 li
104.444 69.6494 li
104.594 69.5498 li
104.744 69.4497 li
104.894 69.2998 li
105.044 69.1997 li
105.194 69.0996 li
105.344 68.9497 li
105.494 68.8496 li
105.644 68.7495 li
105.794 68.5996 li
105.944 68.4995 li
106.094 68.3994 li
106.244 68.2495 li
106.394 68.1494 li
106.544 68.0498 li
106.694 67.9497 li
106.844 67.7998 li
106.994 67.6997 li
107.144 67.5996 li
107.294 67.4497 li
107.444 67.3496 li
107.594 67.2495 li
107.744 67.0996 li
107.894 66.9995 li
108.044 66.8994 li
108.194 66.7495 li
108.344 66.6494 li
108.494 66.5498 li
108.644 66.4497 li
108.794 66.2998 li
108.944 66.1997 li
109.094 66.0498 li
109.244 65.9497 li
109.394 65.8496 li
109.544 65.6997 li
109.694 65.5996 li
109.844 65.4995 li
109.994 65.3496 li
110.144 65.2495 li
110.294 65.0996 li
110.444 64.9995 li
110.594 64.8994 li
110.744 64.7495 li
110.894 64.6494 li
111.044 64.4995 li
111.194 64.3994 li
111.344 64.2495 li
111.494 64.1494 li
111.644 63.9995 li
111.794 63.8994 li
111.944 63.7495 li
112.094 63.6494 li
112.294 63.4995 li
112.444 63.3994 li
112.594 63.2495 li
112.744 63.1494 li
112.894 62.9995 li
113.044 62.8496 li
113.194 62.7495 li
81.8438 94.3994 mo
81.9937 94.2002 li
82.1436 93.9502 li
82.2939 93.75 li
82.4438 93.5498 li
82.5938 93.2998 li
82.7437 93.0996 li
82.8936 92.8999 li
83.0439 92.6997 li
83.1938 92.4497 li
83.3438 92.25 li
83.4937 92.0498 li
83.6436 91.8496 li
83.7939 91.5996 li
83.9438 91.3999 li
84.0938 91.1997 li
84.2437 91 li
84.3936 90.7998 li
84.5439 90.5498 li
84.6938 90.3496 li
84.8438 90.1499 li
84.9937 89.9497 li
85.1436 89.75 li
85.2939 89.5498 li
85.4438 89.3496 li
85.5938 89.1499 li
85.7437 88.9497 li
85.8936 88.6997 li
86.0439 88.5 li
86.1938 88.2998 li
86.3438 88.0996 li
86.4937 87.8999 li
86.6436 87.6997 li
86.7939 87.5 li
86.9438 87.2998 li
87.0938 87.0996 li
87.2437 86.8999 li
87.3936 86.75 li
87.5439 86.5498 li
87.6938 86.3496 li
87.8438 86.1499 li
87.9937 85.9497 li
88.1436 85.75 li
88.2939 85.5498 li
88.4438 85.3501 li
88.5938 85.1997 li
88.7437 85 li
88.8936 84.7998 li
89.0439 84.6001 li
89.1938 84.4497 li
89.3438 84.25 li
89.4937 84.0498 li
89.6436 83.8501 li
89.7939 83.6997 li
89.9438 83.5 li
90.0938 83.3501 li
90.2939 83.1499 li
90.4438 82.9502 li
90.5938 82.7998 li
90.7437 82.6001 li
90.8936 82.4502 li
91.0439 82.25 li
91.1938 82.0498 li
91.3438 81.8999 li
91.4937 81.7002 li
91.6436 81.5498 li
91.7939 81.3999 li
91.9438 81.2002 li
92.0938 81.0498 li
92.2437 80.8501 li
92.3936 80.7002 li
92.5439 80.5498 li
92.6938 80.3501 li
92.8438 80.2002 li
92.9937 80.0498 li
93.1436 79.8501 li
93.2939 79.7002 li
93.4438 79.5498 li
93.5938 79.3501 li
93.7437 79.2002 li
93.8936 79.0498 li
94.0439 78.8999 li
94.1938 78.75 li
94.3438 78.6001 li
94.4937 78.3999 li
94.6436 78.25 li
94.7939 78.1001 li
94.9438 77.9502 li
95.0938 77.7998 li
95.2437 77.6499 li
95.3936 77.5 li
95.5439 77.3501 li
95.6938 77.2002 li
95.8438 77.0498 li
95.9937 76.8999 li
96.1436 76.75 li
96.2939 76.6001 li
96.4438 76.4502 li
96.5938 76.2998 li
96.7437 76.1499 li
96.8936 76 li
97.0439 75.8999 li
97.1938 75.75 li
97.3438 75.6001 li
97.4937 75.4502 li
66.1436 116.149 mo
66.2939 115.95 li
66.4438 115.8 li
66.5938 115.6 li
66.7437 115.399 li
66.8936 115.25 li
67.0439 115.05 li
67.1938 114.85 li
67.3438 114.7 li
67.4937 114.5 li
67.6436 114.3 li
67.7939 114.1 li
67.9438 113.949 li
68.0938 113.75 li
68.2437 113.55 li
68.4438 113.35 li
68.5938 113.149 li
68.7437 112.949 li
68.8936 112.75 li
69.0439 112.6 li
69.1938 112.399 li
69.3438 112.199 li
69.4937 112 li
69.6436 111.8 li
69.7939 111.6 li
69.9438 111.399 li
70.0938 111.199 li
70.2437 111 li
70.3936 110.8 li
70.5439 110.6 li
70.6938 110.399 li
70.8438 110.149 li
70.9937 109.949 li
71.1436 109.749 li
71.2939 109.55 li
71.4438 109.35 li
71.5938 109.149 li
71.7437 108.949 li
71.8936 108.749 li
72.0439 108.499 li
72.1938 108.3 li
72.3438 108.1 li
72.4937 107.899 li
72.6436 107.699 li
72.7939 107.449 li
72.9438 107.249 li
73.0938 107.05 li
73.2437 106.85 li
73.3936 106.6 li
73.5439 106.399 li
73.6938 106.199 li
73.8438 105.999 li
73.9937 105.749 li
74.1436 105.55 li
74.2939 105.35 li
74.4438 105.1 li
74.5938 104.899 li
74.7437 104.699 li
74.8936 104.449 li
75.0439 104.249 li
75.1938 104.05 li
75.3438 103.8 li
75.4937 103.6 li
75.6436 103.399 li
75.7939 103.149 li
75.9438 102.949 li
76.0938 102.749 li
76.2437 102.499 li
76.3936 102.3 li
76.5439 102.05 li
76.6938 101.85 li
76.8438 101.649 li
76.9937 101.399 li
77.1436 101.199 li
77.2939 100.949 li
77.4438 100.749 li
77.5938 100.55 li
77.7437 100.3 li
77.8936 100.1 li
78.0439 99.8496 li
78.1938 99.6494 li
78.3438 99.4492 li
78.4937 99.1992 li
78.6436 98.999 li
78.7939 98.749 li
78.9438 98.5498 li
79.0938 98.3496 li
79.2437 98.0996 li
79.4438 97.8994 li
79.5938 97.6494 li
79.7437 97.4492 li
79.8936 97.249 li
80.0439 96.999 li
80.1938 96.7998 li
80.3438 96.5996 li
80.4937 96.3496 li
80.6436 96.1494 li
80.7939 95.8994 li
80.9438 95.6992 li
81.0938 95.499 li
81.2437 95.249 li
81.3936 95.0488 li
81.5439 94.8496 li
81.6938 94.5996 li
81.8438 94.3994 li
50.4937 129.399 mo
50.6436 129.35 li
50.7939 129.25 li
50.9438 129.2 li
51.0938 129.1 li
51.2437 129.05 li
51.3936 128.95 li
51.5439 128.85 li
51.6938 128.8 li
51.8438 128.7 li
51.9937 128.6 li
52.1436 128.55 li
52.2939 128.45 li
52.4438 128.35 li
52.5938 128.25 li
52.7437 128.2 li
52.8936 128.1 li
53.0439 128 li
53.1938 127.899 li
53.3438 127.8 li
53.4937 127.7 li
53.6436 127.6 li
53.7939 127.55 li
53.9438 127.45 li
54.0938 127.35 li
54.2437 127.25 li
54.3936 127.149 li
54.5439 127.05 li
54.6938 126.95 li
54.8438 126.8 li
54.9937 126.7 li
55.1436 126.6 li
55.2939 126.5 li
55.4438 126.4 li
55.5938 126.3 li
55.7437 126.2 li
55.8936 126.05 li
56.0439 125.95 li
56.1938 125.85 li
56.3438 125.75 li
56.4937 125.6 li
56.6436 125.5 li
56.7939 125.4 li
56.9438 125.25 li
57.0938 125.15 li
57.2437 125.05 li
57.3936 124.9 li
57.5938 124.8 li
57.7437 124.65 li
57.8936 124.55 li
58.0439 124.4 li
58.1938 124.3 li
58.3438 124.15 li
58.4937 124.05 li
58.6436 123.9 li
58.7939 123.8 li
58.9438 123.65 li
59.0938 123.5 li
59.2437 123.4 li
59.3936 123.25 li
59.5439 123.101 li
59.6938 123 li
59.8438 122.851 li
59.9937 122.7 li
60.1436 122.55 li
60.2939 122.45 li
60.4438 122.3 li
60.5938 122.15 li
60.7437 122 li
60.8936 121.851 li
61.0439 121.7 li
61.1938 121.55 li
61.3438 121.4 li
61.4937 121.25 li
61.6436 121.101 li
61.7939 120.95 li
61.9438 120.8 li
62.0938 120.65 li
62.2437 120.5 li
62.3936 120.351 li
62.5439 120.2 li
62.6938 120.05 li
62.8438 119.9 li
62.9937 119.7 li
63.1436 119.55 li
63.2939 119.4 li
63.4438 119.25 li
63.5938 119.05 li
63.7437 118.9 li
63.8936 118.75 li
64.0439 118.601 li
64.1938 118.4 li
64.3438 118.25 li
64.4937 118.05 li
64.6436 117.9 li
64.7939 117.75 li
64.9438 117.55 li
65.0938 117.4 li
65.2437 117.2 li
65.3936 117.05 li
65.5439 116.85 li
65.6938 116.7 li
65.8438 116.5 li
65.9937 116.35 li
66.1436 116.15 li
34.7939 133.75 mo
34.9438 133.7 li
35.0938 133.7 li
35.2437 133.649 li
35.3936 133.649 li
35.5439 133.649 li
35.7437 133.6 li
35.8936 133.6 li
36.0439 133.6 li
36.1938 133.55 li
36.3438 133.55 li
36.4937 133.5 li
36.6436 133.5 li
36.7939 133.5 li
36.9438 133.45 li
37.0938 133.45 li
37.2437 133.399 li
37.3936 133.399 li
37.5439 133.35 li
37.6938 133.35 li
37.8438 133.35 li
37.9937 133.3 li
38.1436 133.3 li
38.2939 133.25 li
38.4438 133.25 li
38.5938 133.199 li
38.7437 133.199 li
38.8936 133.149 li
39.0439 133.149 li
39.1938 133.1 li
39.3438 133.05 li
39.4937 133.05 li
39.6436 133 li
39.7939 133 li
39.9438 132.949 li
40.0938 132.949 li
40.2437 132.899 li
40.3936 132.85 li
40.5439 132.85 li
40.6938 132.8 li
40.8438 132.75 li
40.9937 132.75 li
41.1436 132.699 li
41.2939 132.649 li
41.4438 132.649 li
41.5938 132.6 li
41.7437 132.55 li
41.8936 132.55 li
42.0439 132.5 li
42.1938 132.449 li
42.3438 132.399 li
42.4937 132.399 li
42.6436 132.35 li
42.7939 132.3 li
42.9438 132.249 li
43.0938 132.249 li
43.2437 132.199 li
43.3936 132.149 li
43.5439 132.1 li
43.6938 132.05 li
43.8438 131.999 li
43.9937 131.949 li
44.1436 131.949 li
44.2939 131.899 li
44.4438 131.85 li
44.5938 131.8 li
44.7437 131.749 li
44.8936 131.699 li
45.0439 131.649 li
45.1938 131.6 li
45.3438 131.55 li
45.4937 131.499 li
45.6436 131.449 li
45.7939 131.399 li
45.9438 131.35 li
46.0938 131.299 li
46.2437 131.249 li
46.3936 131.199 li
46.5938 131.149 li
46.7437 131.049 li
46.8936 130.999 li
47.0439 130.949 li
47.1938 130.899 li
47.3438 130.85 li
47.4937 130.799 li
47.6436 130.699 li
47.7939 130.649 li
47.9438 130.6 li
48.0938 130.549 li
48.2437 130.449 li
48.3936 130.399 li
48.5439 130.35 li
48.6938 130.299 li
48.8438 130.199 li
48.9937 130.149 li
49.1436 130.1 li
49.2939 129.999 li
49.4438 129.949 li
49.5938 129.85 li
49.7437 129.799 li
49.8936 129.699 li
50.0439 129.649 li
50.1938 129.6 li
50.3438 129.499 li
50.4937 129.399 li
19.1436 134.45 mo
19.2939 134.45 li
19.4438 134.45 li
19.5938 134.45 li
19.7437 134.45 li
19.8936 134.45 li
20.0439 134.45 li
20.1938 134.45 li
20.3438 134.45 li
20.4937 134.45 li
20.6436 134.45 li
20.7939 134.45 li
20.9438 134.45 li
21.0938 134.45 li
21.2437 134.45 li
21.3936 134.45 li
21.5439 134.45 li
21.6938 134.45 li
21.8438 134.399 li
21.9937 134.399 li
22.1436 134.399 li
22.2939 134.399 li
22.4438 134.399 li
22.5938 134.399 li
22.7437 134.399 li
22.8936 134.399 li
23.0439 134.399 li
23.1938 134.399 li
23.3438 134.399 li
23.4937 134.399 li
23.6436 134.399 li
23.7939 134.399 li
23.9438 134.399 li
24.0938 134.35 li
24.2437 134.35 li
24.3936 134.35 li
24.5439 134.35 li
24.7437 134.35 li
24.8936 134.35 li
25.0439 134.35 li
25.1938 134.35 li
25.3438 134.35 li
25.4937 134.35 li
25.6436 134.35 li
25.7939 134.3 li
25.9438 134.3 li
26.0938 134.3 li
26.2437 134.3 li
26.3936 134.3 li
26.5439 134.3 li
26.6938 134.3 li
26.8438 134.3 li
26.9937 134.3 li
27.1436 134.25 li
27.2939 134.25 li
27.4438 134.25 li
27.5938 134.25 li
27.7437 134.25 li
27.8936 134.25 li
28.0439 134.25 li
28.1938 134.25 li
28.3438 134.2 li
28.4937 134.2 li
28.6436 134.2 li
28.7939 134.2 li
28.9438 134.2 li
29.0938 134.2 li
29.2437 134.149 li
29.3936 134.149 li
29.5439 134.149 li
29.6938 134.149 li
29.8438 134.149 li
29.9937 134.149 li
30.1436 134.1 li
30.2939 134.1 li
30.4438 134.1 li
30.5938 134.1 li
30.7437 134.1 li
30.8936 134.05 li
31.0439 134.05 li
31.1938 134.05 li
31.3438 134.05 li
31.4937 134.05 li
31.6436 134 li
31.7939 134 li
31.9438 134 li
32.0938 134 li
32.2437 133.949 li
32.3936 133.949 li
32.5439 133.949 li
32.6938 133.949 li
32.8438 133.899 li
32.9937 133.899 li
33.1436 133.899 li
33.2939 133.899 li
33.4438 133.85 li
33.5938 133.85 li
33.7437 133.85 li
33.8936 133.8 li
34.0439 133.8 li
34.1938 133.8 li
34.3438 133.75 li
34.4937 133.75 li
34.6436 133.75 li
34.7939 133.75 li
3.89355 134.55 mo
3.94385 134.55 li
4.09375 134.55 li
4.24365 134.55 li
4.39355 134.55 li
4.54395 134.55 li
4.69385 134.55 li
4.84375 134.55 li
4.99365 134.55 li
5.14355 134.55 li
5.29395 134.55 li
5.44385 134.55 li
5.59375 134.55 li
5.74365 134.55 li
5.89355 134.55 li
6.04395 134.55 li
6.19385 134.55 li
6.34375 134.55 li
6.49365 134.55 li
6.64355 134.55 li
6.79395 134.55 li
6.94385 134.55 li
7.09375 134.55 li
7.24365 134.55 li
7.39355 134.55 li
7.54395 134.55 li
7.69385 134.55 li
7.84375 134.55 li
7.99365 134.55 li
8.14355 134.55 li
8.29395 134.55 li
8.44385 134.55 li
8.59375 134.55 li
8.74365 134.55 li
8.89355 134.55 li
9.04395 134.55 li
9.19385 134.55 li
9.34375 134.55 li
9.49365 134.55 li
9.64355 134.55 li
9.79395 134.55 li
9.94385 134.5 li
10.0938 134.5 li
10.2437 134.5 li
10.3936 134.5 li
10.5439 134.5 li
10.6938 134.5 li
10.8438 134.5 li
10.9937 134.5 li
11.1436 134.5 li
11.2939 134.5 li
11.4438 134.5 li
11.5938 134.5 li
11.7437 134.5 li
11.8936 134.5 li
12.0439 134.5 li
12.1938 134.5 li
12.3438 134.5 li
12.4937 134.5 li
12.6436 134.5 li
12.7939 134.5 li
12.9438 134.5 li
13.0938 134.5 li
13.2437 134.5 li
13.3936 134.5 li
13.5439 134.5 li
13.6938 134.5 li
13.8936 134.5 li
14.0439 134.5 li
14.1938 134.5 li
14.3438 134.5 li
14.4937 134.5 li
14.6436 134.5 li
14.7939 134.5 li
14.9438 134.5 li
15.0938 134.5 li
15.2437 134.5 li
15.3936 134.5 li
15.5439 134.5 li
15.6938 134.5 li
15.8438 134.5 li
15.9937 134.5 li
16.1436 134.5 li
16.2939 134.5 li
16.4438 134.5 li
16.5938 134.5 li
16.7437 134.5 li
16.8936 134.5 li
17.0439 134.5 li
17.1938 134.5 li
17.3438 134.5 li
17.4937 134.5 li
17.6436 134.5 li
17.7939 134.5 li
17.9438 134.5 li
18.0938 134.5 li
18.2437 134.5 li
18.3936 134.5 li
18.5439 134.45 li
18.6938 134.45 li
18.8438 134.45 li
18.9937 134.45 li
19.1436 134.45 li
87.8936 20.8999 mo
107.844 20.8999 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginEGEGYB+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/T <1C60D8A8C9B7D8BE41A64DAB684ED090D9F4D4439340AD4301BD70587A67BA95C799E46FC7C8D88E9FFD990A> |-/h <1C60D8A8C9B7EF327C10274A017D50D0B79D52072757441F46A9E30449754F52968402CD3736F71D6E09A15E2046342DF42A864D37373E0A213DE941C6F011296A017FBEA0AE0137A10664047E> |-systemdict /gcheck known {setglobal} if end {end} ifendEGEGYB+Helvetica /Encoding getdup 84 /T putdup 104 /h putpop%ADOEndSubsetFont
/EGEGYB+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three 16{/.notdef}rp /D /E 7{/.notdef}rp /M 5{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]EGEGYB+Helvetica nfEGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf12.1328 30.2295 mo(Theoretical Distribution)[4.27686 3.89209 3.89209 3.89209 2.33057 3.89209 1.94629 1.55371 3.5 3.89209 1.55371 1.94629 5.05371 1.55371 3.5 1.94629 2.33105 1.55371 3.89209 3.89209 1.9458 1.55371 3.89209 0 ]xsh0.125 lw
[0.5 1 ] 0 dsh
266.994 132.85 mo
267.094 132.899 li
267.193 132.899 li
267.244 132.899 li
267.344 132.899 li
267.443 132.899 li
267.544 132.95 li
267.644 132.95 li
267.744 132.95 li
267.794 132.95 li
267.894 132.95 li
267.994 132.95 li
268.094 133 li
268.193 133 li
268.244 133 li
268.344 133 li
268.443 133 li
268.544 133.05 li
268.644 133.05 li
268.693 133.05 li
268.794 133.05 li
268.894 133.05 li
268.994 133.05 li
269.094 133.1 li
269.144 133.1 li
269.244 133.1 li
269.344 133.1 li
269.443 133.1 li
269.544 133.1 li
269.644 133.149 li
269.693 133.149 li
269.794 133.149 li
269.894 133.149 li
269.994 133.149 li
270.094 133.149 li
270.144 133.149 li
270.244 133.2 li
270.344 133.2 li
270.443 133.2 li
270.544 133.2 li
270.594 133.2 li
270.693 133.2 li
270.794 133.25 li
270.894 133.25 li
270.994 133.25 li
271.044 133.25 li
271.144 133.25 li
271.244 133.25 li
271.344 133.25 li
271.443 133.3 li
271.494 133.3 li
271.594 133.3 li
271.693 133.3 li
271.794 133.3 li
271.894 133.3 li
271.994 133.3 li
272.044 133.35 li
272.144 133.35 li
272.244 133.35 li
272.344 133.35 li
272.443 133.35 li
272.494 133.35 li
272.594 133.35 li
272.693 133.399 li
272.794 133.399 li
272.894 133.399 li
272.943 133.399 li
273.044 133.399 li
273.144 133.399 li
273.244 133.399 li
273.344 133.45 li
273.394 133.45 li
273.494 133.45 li
273.594 133.45 li
273.693 133.45 li
273.794 133.45 li
273.844 133.45 li
273.943 133.45 li
274.044 133.5 li
274.144 133.5 li
274.244 133.5 li
274.344 133.5 li
274.394 133.5 li
274.494 133.5 li
274.594 133.5 li
274.693 133.5 li
274.794 133.55 li
274.844 133.55 li
274.943 133.55 li
275.044 133.55 li
257.594 131.6 mo
257.693 131.6 li
257.794 131.649 li
257.844 131.649 li
257.943 131.649 li
258.044 131.7 li
258.144 131.7 li
258.244 131.7 li
258.294 131.75 li
258.394 131.75 li
258.494 131.75 li
258.594 131.75 li
258.693 131.8 li
258.794 131.8 li
258.844 131.8 li
258.943 131.85 li
259.044 131.85 li
259.144 131.85 li
259.244 131.85 li
259.294 131.899 li
259.394 131.899 li
259.494 131.899 li
259.594 131.95 li
259.693 131.95 li
259.744 131.95 li
259.844 131.95 li
259.943 132 li
260.044 132 li
260.144 132 li
260.193 132 li
260.294 132.05 li
260.394 132.05 li
260.494 132.05 li
260.594 132.1 li
260.644 132.1 li
260.744 132.1 li
260.844 132.1 li
260.943 132.149 li
261.044 132.149 li
261.144 132.149 li
261.193 132.149 li
261.294 132.2 li
261.394 132.2 li
261.494 132.2 li
261.594 132.2 li
261.644 132.25 li
261.744 132.25 li
261.844 132.25 li
261.943 132.25 li
262.044 132.3 li
262.094 132.3 li
262.193 132.3 li
262.294 132.3 li
262.394 132.35 li
262.494 132.35 li
262.544 132.35 li
262.644 132.35 li
262.744 132.4 li
262.844 132.4 li
262.943 132.4 li
263.044 132.4 li
263.094 132.4 li
263.193 132.45 li
263.294 132.45 li
263.394 132.45 li
263.494 132.45 li
263.544 132.5 li
263.644 132.5 li
263.744 132.5 li
263.844 132.5 li
263.943 132.5 li
263.994 132.55 li
264.094 132.55 li
264.193 132.55 li
264.294 132.55 li
264.394 132.6 li
264.443 132.6 li
264.544 132.6 li
264.644 132.6 li
264.744 132.6 li
264.844 132.65 li
264.894 132.65 li
264.994 132.65 li
265.094 132.65 li
265.193 132.65 li
265.294 132.7 li
265.394 132.7 li
265.443 132.7 li
265.544 132.7 li
265.644 132.75 li
265.744 132.75 li
265.844 132.75 li
265.894 132.75 li
265.994 132.75 li
266.094 132.8 li
266.193 132.8 li
266.294 132.8 li
266.344 132.8 li
266.443 132.8 li
266.544 132.8 li
266.644 132.85 li
266.744 132.85 li
266.794 132.85 li
266.894 132.85 li
266.994 132.85 li
248.193 129.6 mo
248.294 129.6 li
248.394 129.649 li
248.443 129.649 li
248.544 129.7 li
248.644 129.7 li
248.744 129.75 li
248.844 129.75 li
248.894 129.8 li
248.994 129.8 li
249.094 129.85 li
249.193 129.85 li
249.294 129.85 li
249.344 129.899 li
249.443 129.899 li
249.544 129.95 li
249.644 129.95 li
249.744 130 li
249.794 130 li
249.894 130.05 li
249.994 130.05 li
250.094 130.05 li
250.193 130.1 li
250.294 130.1 li
250.344 130.149 li
250.443 130.149 li
250.544 130.2 li
250.644 130.2 li
250.744 130.2 li
250.794 130.25 li
250.894 130.25 li
250.994 130.3 li
251.094 130.3 li
251.193 130.35 li
251.244 130.35 li
251.344 130.35 li
251.443 130.4 li
251.544 130.4 li
251.644 130.45 li
251.693 130.45 li
251.794 130.45 li
251.894 130.5 li
251.994 130.5 li
252.094 130.55 li
252.193 130.55 li
252.244 130.55 li
252.344 130.6 li
252.443 130.6 li
252.544 130.65 li
252.644 130.65 li
252.693 130.65 li
252.794 130.7 li
252.894 130.7 li
252.994 130.75 li
253.094 130.75 li
253.144 130.75 li
253.244 130.8 li
253.344 130.8 li
253.443 130.8 li
253.544 130.85 li
253.594 130.85 li
253.693 130.9 li
253.794 130.9 li
253.894 130.9 li
253.994 130.95 li
254.044 130.95 li
254.144 130.95 li
254.244 131 li
254.344 131 li
254.443 131.05 li
254.544 131.05 li
254.594 131.05 li
254.693 131.1 li
254.794 131.1 li
254.894 131.1 li
254.994 131.15 li
255.044 131.15 li
255.144 131.15 li
255.244 131.2 li
255.344 131.2 li
255.443 131.2 li
255.494 131.25 li
255.594 131.25 li
255.693 131.25 li
255.794 131.3 li
255.894 131.3 li
255.943 131.3 li
256.044 131.351 li
256.144 131.351 li
256.244 131.351 li
256.344 131.4 li
256.394 131.4 li
256.494 131.4 li
256.594 131.45 li
256.693 131.45 li
256.794 131.45 li
256.894 131.5 li
256.943 131.5 li
257.044 131.5 li
257.144 131.55 li
257.244 131.55 li
257.344 131.55 li
257.394 131.55 li
257.494 131.601 li
257.594 131.601 li
238.794 126.55 mo
238.894 126.6 li
238.994 126.649 li
239.044 126.649 li
239.144 126.7 li
239.244 126.75 li
239.344 126.75 li
239.443 126.8 li
239.494 126.85 li
239.594 126.85 li
239.693 126.899 li
239.794 126.95 li
239.894 126.95 li
239.943 127 li
240.044 127.05 li
240.144 127.05 li
240.244 127.1 li
240.344 127.149 li
240.394 127.149 li
240.494 127.2 li
240.594 127.25 li
240.693 127.25 li
240.794 127.3 li
240.844 127.35 li
240.943 127.35 li
241.044 127.4 li
241.144 127.45 li
241.244 127.45 li
241.344 127.5 li
241.394 127.55 li
241.494 127.55 li
241.594 127.6 li
241.693 127.6 li
241.794 127.65 li
241.844 127.7 li
241.943 127.7 li
242.044 127.75 li
242.144 127.75 li
242.244 127.8 li
242.294 127.85 li
242.394 127.85 li
242.494 127.9 li
242.594 127.95 li
242.693 127.95 li
242.744 128 li
242.844 128 li
242.943 128.05 li
243.044 128.1 li
243.144 128.1 li
243.193 128.15 li
243.294 128.15 li
243.394 128.2 li
243.494 128.2 li
243.594 128.25 li
243.693 128.3 li
243.744 128.3 li
243.844 128.351 li
243.943 128.351 li
244.044 128.4 li
244.144 128.4 li
244.193 128.45 li
244.294 128.5 li
244.394 128.5 li
244.494 128.55 li
244.594 128.55 li
244.644 128.601 li
244.744 128.601 li
244.844 128.65 li
244.943 128.65 li
245.044 128.7 li
245.094 128.75 li
245.193 128.75 li
245.294 128.8 li
245.394 128.8 li
245.494 128.851 li
245.594 128.851 li
245.644 128.9 li
245.744 128.9 li
245.844 128.95 li
245.943 128.95 li
246.044 129 li
246.094 129 li
246.193 129.05 li
246.294 129.05 li
246.394 129.101 li
246.494 129.15 li
246.544 129.15 li
246.644 129.2 li
246.744 129.2 li
246.844 129.25 li
246.943 129.25 li
246.994 129.301 li
247.094 129.301 li
247.193 129.351 li
247.294 129.351 li
247.394 129.4 li
247.443 129.4 li
247.544 129.45 li
247.644 129.45 li
247.744 129.45 li
247.844 129.5 li
247.943 129.5 li
247.994 129.551 li
248.094 129.551 li
248.193 129.601 li
229.394 122.2 mo
229.494 122.25 li
229.544 122.3 li
229.644 122.35 li
229.744 122.399 li
229.844 122.45 li
229.943 122.5 li
229.994 122.55 li
230.094 122.6 li
230.193 122.649 li
230.294 122.7 li
230.394 122.75 li
230.494 122.8 li
230.544 122.85 li
230.644 122.899 li
230.744 122.899 li
230.844 122.95 li
230.943 123 li
230.994 123.05 li
231.094 123.1 li
231.193 123.15 li
231.294 123.2 li
231.394 123.25 li
231.443 123.3 li
231.544 123.35 li
231.644 123.4 li
231.744 123.45 li
231.844 123.5 li
231.894 123.5 li
231.994 123.55 li
232.094 123.6 li
232.193 123.65 li
232.294 123.7 li
232.344 123.75 li
232.443 123.8 li
232.544 123.851 li
232.644 123.9 li
232.744 123.9 li
232.844 123.95 li
232.894 124 li
232.994 124.05 li
233.094 124.101 li
233.193 124.15 li
233.294 124.2 li
233.344 124.2 li
233.443 124.25 li
233.544 124.3 li
233.644 124.351 li
233.744 124.4 li
233.794 124.45 li
233.894 124.5 li
233.994 124.5 li
234.094 124.55 li
234.193 124.601 li
234.244 124.65 li
234.344 124.7 li
234.443 124.75 li
234.544 124.75 li
234.644 124.8 li
234.744 124.851 li
234.794 124.9 li
234.894 124.95 li
234.994 124.95 li
235.094 125 li
235.193 125.051 li
235.244 125.101 li
235.344 125.15 li
235.443 125.15 li
235.544 125.2 li
235.644 125.25 li
235.693 125.301 li
235.794 125.351 li
235.894 125.351 li
235.994 125.4 li
236.094 125.45 li
236.144 125.5 li
236.244 125.551 li
236.344 125.551 li
236.443 125.601 li
236.544 125.65 li
236.594 125.7 li
236.693 125.7 li
236.794 125.75 li
236.894 125.801 li
236.994 125.851 li
237.094 125.851 li
237.144 125.9 li
237.244 125.95 li
237.344 126.001 li
237.443 126.001 li
237.544 126.051 li
237.594 126.101 li
237.693 126.15 li
237.794 126.15 li
237.894 126.2 li
237.994 126.251 li
238.044 126.251 li
238.144 126.301 li
238.244 126.351 li
238.344 126.4 li
238.443 126.4 li
238.494 126.45 li
238.594 126.501 li
238.693 126.501 li
238.794 126.551 li
219.994 116.3 mo
220.094 116.35 li
220.144 116.399 li
220.244 116.45 li
220.344 116.55 li
220.443 116.6 li
220.544 116.649 li
220.594 116.75 li
220.693 116.8 li
220.794 116.85 li
220.894 116.899 li
220.994 117 li
221.044 117.05 li
221.144 117.1 li
221.244 117.149 li
221.344 117.25 li
221.443 117.3 li
221.544 117.35 li
221.594 117.399 li
221.693 117.5 li
221.794 117.55 li
221.894 117.6 li
221.994 117.649 li
222.044 117.75 li
222.144 117.8 li
222.244 117.85 li
222.344 117.899 li
222.443 118 li
222.494 118.05 li
222.594 118.1 li
222.693 118.15 li
222.794 118.2 li
222.894 118.3 li
222.943 118.35 li
223.044 118.4 li
223.144 118.45 li
223.244 118.5 li
223.344 118.6 li
223.394 118.65 li
223.494 118.7 li
223.594 118.75 li
223.693 118.8 li
223.794 118.85 li
223.894 118.95 li
223.943 119 li
224.044 119.05 li
224.144 119.1 li
224.244 119.15 li
224.344 119.2 li
224.394 119.3 li
224.494 119.35 li
224.594 119.4 li
224.693 119.45 li
224.794 119.5 li
224.844 119.55 li
224.943 119.601 li
225.044 119.65 li
225.144 119.75 li
225.244 119.8 li
225.294 119.851 li
225.394 119.9 li
225.494 119.95 li
225.594 120 li
225.693 120.05 li
225.744 120.101 li
225.844 120.15 li
225.943 120.25 li
226.044 120.3 li
226.144 120.351 li
226.244 120.4 li
226.294 120.45 li
226.394 120.5 li
226.494 120.55 li
226.594 120.601 li
226.693 120.65 li
226.744 120.7 li
226.844 120.75 li
226.943 120.8 li
227.044 120.9 li
227.144 120.95 li
227.193 121 li
227.294 121.05 li
227.394 121.101 li
227.494 121.15 li
227.594 121.2 li
227.644 121.25 li
227.744 121.301 li
227.844 121.351 li
227.943 121.4 li
228.044 121.45 li
228.144 121.5 li
228.193 121.551 li
228.294 121.601 li
228.394 121.65 li
228.494 121.7 li
228.594 121.75 li
228.644 121.801 li
228.744 121.851 li
228.844 121.9 li
228.943 121.95 li
229.044 122 li
229.094 122.051 li
229.193 122.101 li
229.294 122.15 li
229.394 122.2 li
210.594 108.649 mo
210.693 108.75 li
210.744 108.8 li
210.844 108.899 li
210.943 108.95 li
211.044 109.05 li
211.144 109.149 li
211.193 109.2 li
211.294 109.3 li
211.394 109.35 li
211.494 109.45 li
211.594 109.55 li
211.644 109.6 li
211.744 109.7 li
211.844 109.75 li
211.943 109.85 li
212.044 109.95 li
212.094 110 li
212.193 110.1 li
212.294 110.149 li
212.394 110.25 li
212.494 110.3 li
212.544 110.399 li
212.644 110.5 li
212.744 110.55 li
212.844 110.649 li
212.943 110.7 li
213.044 110.8 li
213.094 110.85 li
213.193 110.95 li
213.294 111 li
213.394 111.1 li
213.494 111.2 li
213.544 111.25 li
213.644 111.35 li
213.744 111.399 li
213.844 111.5 li
213.943 111.55 li
213.994 111.649 li
214.094 111.7 li
214.193 111.8 li
214.294 111.85 li
214.394 111.95 li
214.443 112 li
214.544 112.1 li
214.644 112.149 li
214.744 112.25 li
214.844 112.3 li
214.943 112.399 li
214.994 112.45 li
215.094 112.55 li
215.193 112.6 li
215.294 112.7 li
215.394 112.75 li
215.443 112.8 li
215.544 112.899 li
215.644 112.95 li
215.744 113.05 li
215.844 113.1 li
215.894 113.2 li
215.994 113.25 li
216.094 113.35 li
216.193 113.399 li
216.294 113.45 li
216.344 113.55 li
216.443 113.6 li
216.544 113.7 li
216.644 113.75 li
216.744 113.85 li
216.794 113.899 li
216.894 113.95 li
216.994 114.05 li
217.094 114.1 li
217.193 114.2 li
217.294 114.25 li
217.344 114.3 li
217.443 114.399 li
217.544 114.45 li
217.644 114.55 li
217.744 114.6 li
217.794 114.649 li
217.894 114.75 li
217.994 114.8 li
218.094 114.85 li
218.193 114.95 li
218.244 115 li
218.344 115.1 li
218.443 115.149 li
218.544 115.2 li
218.644 115.3 li
218.693 115.35 li
218.794 115.399 li
218.894 115.5 li
218.994 115.55 li
219.094 115.6 li
219.144 115.7 li
219.244 115.75 li
219.344 115.8 li
219.443 115.899 li
219.544 115.95 li
219.644 116 li
219.693 116.1 li
219.794 116.149 li
219.894 116.2 li
219.994 116.3 li
201.193 99.3994 mo
201.244 99.5 li
201.344 99.5996 li
201.443 99.6494 li
201.544 99.75 li
201.644 99.8496 li
201.693 99.9502 li
201.794 100.05 li
201.894 100.149 li
201.994 100.25 li
202.094 100.35 li
202.193 100.45 li
202.244 100.55 li
202.344 100.6 li
202.443 100.699 li
202.544 100.8 li
202.644 100.899 li
202.693 101 li
202.794 101.1 li
202.894 101.199 li
202.994 101.3 li
203.094 101.399 li
203.144 101.449 li
203.244 101.55 li
203.344 101.649 li
203.443 101.75 li
203.544 101.85 li
203.594 101.949 li
203.693 102.05 li
203.794 102.1 li
203.894 102.199 li
203.994 102.3 li
204.094 102.399 li
204.144 102.499 li
204.244 102.6 li
204.344 102.649 li
204.443 102.749 li
204.544 102.85 li
204.594 102.949 li
204.693 103.05 li
204.794 103.149 li
204.894 103.199 li
204.994 103.3 li
205.044 103.399 li
205.144 103.499 li
205.244 103.6 li
205.344 103.649 li
205.443 103.749 li
205.494 103.85 li
205.594 103.949 li
205.693 104.05 li
205.794 104.1 li
205.894 104.199 li
205.943 104.3 li
206.044 104.399 li
206.144 104.449 li
206.244 104.55 li
206.344 104.649 li
206.443 104.749 li
206.494 104.85 li
206.594 104.899 li
206.693 104.999 li
206.794 105.1 li
206.894 105.199 li
206.943 105.249 li
207.044 105.35 li
207.144 105.449 li
207.244 105.55 li
207.344 105.6 li
207.394 105.699 li
207.494 105.8 li
207.594 105.899 li
207.693 105.949 li
207.794 106.05 li
207.844 106.149 li
207.943 106.199 li
208.044 106.3 li
208.144 106.399 li
208.244 106.499 li
208.294 106.549 li
208.394 106.649 li
208.494 106.749 li
208.594 106.799 li
208.693 106.899 li
208.794 106.999 li
208.844 107.049 li
208.943 107.149 li
209.044 107.249 li
209.144 107.299 li
209.244 107.399 li
209.294 107.499 li
209.394 107.549 li
209.494 107.649 li
209.594 107.749 li
209.693 107.799 li
209.744 107.899 li
209.844 107.999 li
209.943 108.049 li
210.044 108.149 li
210.144 108.249 li
210.193 108.299 li
210.294 108.399 li
210.394 108.499 li
210.494 108.549 li
210.594 108.649 li
191.794 88.8496 mo
191.844 88.9497 li
191.943 89.0498 li
192.044 89.1499 li
192.144 89.25 li
192.244 89.3496 li
192.294 89.4497 li
192.394 89.5996 li
192.494 89.6997 li
192.594 89.7998 li
192.693 89.8999 li
192.744 90 li
192.844 90.0996 li
192.943 90.1997 li
193.044 90.2998 li
193.144 90.3999 li
193.244 90.5 li
193.294 90.6499 li
193.394 90.75 li
193.494 90.8496 li
193.594 90.9497 li
193.693 91.0498 li
193.744 91.1499 li
193.844 91.25 li
193.943 91.3501 li
194.044 91.4497 li
194.144 91.5498 li
194.193 91.6499 li
194.294 91.75 li
194.394 91.8999 li
194.494 92 li
194.594 92.1001 li
194.644 92.1997 li
194.744 92.2998 li
194.844 92.3999 li
194.943 92.5 li
195.044 92.6001 li
195.094 92.7002 li
195.193 92.7998 li
195.294 92.8999 li
195.394 93 li
195.494 93.1001 li
195.594 93.2002 li
195.644 93.2998 li
195.744 93.3999 li
195.844 93.5498 li
195.943 93.6499 li
196.044 93.75 li
196.094 93.8496 li
196.193 93.9502 li
196.294 94.0498 li
196.394 94.1494 li
196.494 94.25 li
196.544 94.3496 li
196.644 94.4502 li
196.744 94.5498 li
196.844 94.6494 li
196.943 94.75 li
196.994 94.8496 li
197.094 94.9502 li
197.193 95.0498 li
197.294 95.1494 li
197.394 95.25 li
197.494 95.3496 li
197.544 95.4502 li
197.644 95.5498 li
197.744 95.6494 li
197.844 95.75 li
197.943 95.8496 li
197.994 95.9502 li
198.094 96.0498 li
198.193 96.1494 li
198.294 96.25 li
198.394 96.3496 li
198.443 96.4492 li
198.544 96.5498 li
198.644 96.6494 li
198.744 96.75 li
198.844 96.8496 li
198.894 96.9492 li
198.994 97.0498 li
199.094 97.1494 li
199.193 97.25 li
199.294 97.3496 li
199.344 97.4492 li
199.443 97.5498 li
199.544 97.6494 li
199.644 97.749 li
199.744 97.8496 li
199.844 97.9492 li
199.894 98.0498 li
199.994 98.1494 li
200.094 98.249 li
200.193 98.2998 li
200.294 98.3994 li
200.344 98.499 li
200.443 98.5996 li
200.544 98.6992 li
200.644 98.7998 li
200.744 98.8994 li
200.794 98.999 li
200.894 99.0996 li
200.994 99.1992 li
201.094 99.2998 li
201.193 99.3994 li
182.394 77.6499 mo
182.443 77.75 li
182.544 77.8496 li
182.644 77.9497 li
182.744 78.0498 li
182.844 78.1997 li
182.894 78.2998 li
182.994 78.3999 li
183.094 78.5 li
183.193 78.5996 li
183.294 78.6997 li
183.344 78.8496 li
183.443 78.9497 li
183.544 79.0498 li
183.644 79.1499 li
183.744 79.25 li
183.794 79.3496 li
183.894 79.5 li
183.994 79.5996 li
184.094 79.6997 li
184.193 79.7998 li
184.244 79.8999 li
184.344 80 li
184.443 80.1499 li
184.544 80.25 li
184.644 80.3496 li
184.744 80.4497 li
184.794 80.5498 li
184.894 80.6499 li
184.994 80.7998 li
185.094 80.8999 li
185.193 81 li
185.244 81.1001 li
185.344 81.1997 li
185.443 81.2998 li
185.544 81.4497 li
185.644 81.5498 li
185.693 81.6499 li
185.794 81.75 li
185.894 81.8501 li
185.994 81.9502 li
186.094 82.1001 li
186.144 82.2002 li
186.244 82.2998 li
186.344 82.3999 li
186.443 82.5 li
186.544 82.6001 li
186.644 82.75 li
186.693 82.8501 li
186.794 82.9502 li
186.894 83.0498 li
186.994 83.1499 li
187.094 83.25 li
187.144 83.3999 li
187.244 83.5 li
187.344 83.6001 li
187.443 83.7002 li
187.544 83.7998 li
187.594 83.8999 li
187.693 84 li
187.794 84.1499 li
187.894 84.25 li
187.994 84.3501 li
188.044 84.4502 li
188.144 84.5498 li
188.244 84.6499 li
188.344 84.7998 li
188.443 84.8999 li
188.494 85 li
188.594 85.1001 li
188.693 85.2002 li
188.794 85.2998 li
188.894 85.3999 li
188.994 85.5503 li
189.044 85.6499 li
189.144 85.75 li
189.244 85.8501 li
189.344 85.9502 li
189.443 86.0503 li
189.494 86.1499 li
189.594 86.3003 li
189.693 86.3999 li
189.794 86.5 li
189.894 86.6001 li
189.943 86.7002 li
190.044 86.8003 li
190.144 86.9004 li
190.243 87.0503 li
190.344 87.1504 li
190.394 87.25 li
190.493 87.3501 li
190.594 87.4502 li
190.693 87.5503 li
190.794 87.6504 li
190.894 87.8003 li
190.943 87.9004 li
191.044 88 li
191.144 88.1001 li
191.243 88.2002 li
191.344 88.3003 li
191.394 88.4004 li
191.493 88.5 li
191.594 88.6504 li
191.693 88.75 li
191.794 88.8501 li
172.943 66.6997 mo
173.044 66.7998 li
173.144 66.8999 li
173.244 67 li
173.344 67.0996 li
173.443 67.1997 li
173.494 67.2998 li
173.594 67.3999 li
173.693 67.5 li
173.794 67.5996 li
173.894 67.6997 li
173.943 67.7998 li
174.044 67.8999 li
174.144 68 li
174.244 68.0996 li
174.344 68.1997 li
174.394 68.2998 li
174.494 68.4497 li
174.594 68.5498 li
174.693 68.6499 li
174.794 68.75 li
174.844 68.8496 li
174.943 68.9497 li
175.044 69.0498 li
175.144 69.1499 li
175.244 69.25 li
175.294 69.3501 li
175.394 69.4497 li
175.494 69.5498 li
175.594 69.6499 li
175.693 69.75 li
175.794 69.8501 li
175.844 69.9497 li
175.943 70.1001 li
176.044 70.2002 li
176.144 70.2998 li
176.244 70.3999 li
176.294 70.5 li
176.394 70.6001 li
176.494 70.7002 li
176.594 70.7998 li
176.693 70.8999 li
176.744 71 li
176.844 71.1001 li
176.943 71.25 li
177.044 71.3501 li
177.144 71.4502 li
177.193 71.5498 li
177.294 71.6499 li
177.394 71.75 li
177.494 71.8501 li
177.594 71.9502 li
177.644 72.0498 li
177.744 72.2002 li
177.844 72.2998 li
177.943 72.3999 li
178.044 72.5 li
178.144 72.6001 li
178.193 72.7002 li
178.294 72.7998 li
178.394 72.8999 li
178.494 73.0498 li
178.594 73.1499 li
178.644 73.25 li
178.744 73.3501 li
178.844 73.4502 li
178.943 73.5498 li
179.044 73.6499 li
179.094 73.75 li
179.193 73.8999 li
179.294 74 li
179.394 74.1001 li
179.494 74.2002 li
179.544 74.3003 li
179.644 74.3999 li
179.744 74.5 li
179.844 74.6499 li
179.943 74.75 li
180.044 74.8501 li
180.094 74.9502 li
180.193 75.0503 li
180.294 75.1504 li
180.394 75.25 li
180.493 75.4004 li
180.544 75.5 li
180.644 75.6001 li
180.743 75.7002 li
180.844 75.8003 li
180.943 75.9004 li
180.993 76 li
181.094 76.1504 li
181.193 76.25 li
181.294 76.3501 li
181.394 76.4502 li
181.443 76.5503 li
181.544 76.6504 li
181.644 76.8003 li
181.743 76.9004 li
181.844 77 li
181.894 77.1001 li
181.993 77.2002 li
182.094 77.3003 li
182.193 77.4004 li
182.294 77.5503 li
182.394 77.6504 li
163.544 57.0996 mo
163.644 57.1499 li
163.744 57.25 li
163.844 57.3496 li
163.943 57.3999 li
163.994 57.5 li
164.094 57.5996 li
164.193 57.6499 li
164.294 57.75 li
164.394 57.8496 li
164.443 57.8999 li
164.544 58 li
164.644 58.0996 li
164.744 58.1499 li
164.844 58.25 li
164.943 58.3496 li
164.994 58.4497 li
165.094 58.5 li
165.193 58.5996 li
165.294 58.6997 li
165.394 58.7998 li
165.443 58.8496 li
165.544 58.9497 li
165.644 59.0498 li
165.744 59.0996 li
165.844 59.1997 li
165.894 59.2998 li
165.994 59.3999 li
166.094 59.5 li
166.193 59.5498 li
166.294 59.6499 li
166.344 59.75 li
166.443 59.8496 li
166.544 59.8999 li
166.644 60 li
166.744 60.0996 li
166.844 60.1997 li
166.894 60.2998 li
166.994 60.3496 li
167.094 60.4497 li
167.193 60.5498 li
167.294 60.6499 li
167.344 60.75 li
167.443 60.8496 li
167.544 60.8999 li
167.644 61 li
167.744 61.1001 li
167.794 61.1997 li
167.894 61.2998 li
167.994 61.3999 li
168.094 61.4497 li
168.193 61.5498 li
168.244 61.6499 li
168.344 61.75 li
168.443 61.8501 li
168.544 61.9497 li
168.644 62.0498 li
168.693 62.1001 li
168.794 62.1997 li
168.894 62.2998 li
168.994 62.3999 li
169.094 62.5 li
169.193 62.6001 li
169.244 62.7002 li
169.344 62.7998 li
169.443 62.8999 li
169.544 62.9502 li
169.644 63.0498 li
169.693 63.1499 li
169.794 63.25 li
169.894 63.3501 li
169.994 63.4502 li
170.094 63.5498 li
170.144 63.6499 li
170.244 63.75 li
170.344 63.8501 li
170.443 63.9502 li
170.544 64.0498 li
170.594 64.1499 li
170.693 64.2002 li
170.794 64.2998 li
170.894 64.3999 li
170.993 64.5 li
171.044 64.6001 li
171.144 64.7002 li
171.243 64.7998 li
171.344 64.8999 li
171.443 65 li
171.544 65.1001 li
171.594 65.2002 li
171.693 65.2998 li
171.794 65.3999 li
171.894 65.5 li
171.993 65.6001 li
172.044 65.7002 li
172.144 65.8003 li
172.243 65.8999 li
172.344 66 li
172.443 66.1001 li
172.493 66.2002 li
172.594 66.3003 li
172.693 66.3999 li
172.794 66.5 li
172.894 66.6001 li
172.943 66.7002 li
154.144 49.8496 mo
154.244 49.8999 li
154.344 49.9497 li
154.443 50 li
154.544 50.0498 li
154.594 50.0996 li
154.693 50.1997 li
154.794 50.25 li
154.894 50.2998 li
154.994 50.3496 li
155.044 50.3999 li
155.144 50.4497 li
155.244 50.5498 li
155.344 50.5996 li
155.443 50.6499 li
155.494 50.6997 li
155.594 50.7495 li
155.693 50.8496 li
155.794 50.8999 li
155.894 50.9497 li
155.994 50.9995 li
156.044 51.0498 li
156.144 51.1499 li
156.244 51.1997 li
156.344 51.2495 li
156.443 51.2998 li
156.494 51.3999 li
156.594 51.4497 li
156.693 51.4995 li
156.794 51.5498 li
156.894 51.6499 li
156.943 51.6997 li
157.044 51.7495 li
157.144 51.7998 li
157.244 51.8994 li
157.344 51.9497 li
157.394 51.9995 li
157.494 52.0996 li
157.594 52.1494 li
157.693 52.1997 li
157.794 52.2998 li
157.844 52.3496 li
157.943 52.3994 li
158.044 52.4995 li
158.144 52.5498 li
158.244 52.5996 li
158.344 52.6997 li
158.394 52.7495 li
158.494 52.8496 li
158.594 52.8994 li
158.693 52.9497 li
158.794 53.0498 li
158.844 53.0996 li
158.943 53.1494 li
159.044 53.2495 li
159.144 53.2998 li
159.244 53.3994 li
159.294 53.4497 li
159.394 53.5498 li
159.494 53.5996 li
159.594 53.6494 li
159.693 53.7495 li
159.744 53.7998 li
159.844 53.8994 li
159.943 53.9497 li
160.044 54.0498 li
160.144 54.0996 li
160.193 54.1997 li
160.294 54.2495 li
160.394 54.3496 li
160.494 54.3994 li
160.594 54.4995 li
160.693 54.5498 li
160.744 54.6494 li
160.844 54.6997 li
160.943 54.7998 li
161.044 54.8496 li
161.144 54.9497 li
161.193 54.9995 li
161.294 55.0996 li
161.394 55.1494 li
161.493 55.2495 li
161.594 55.2998 li
161.644 55.3994 li
161.743 55.4497 li
161.844 55.5498 li
161.943 55.6494 li
162.044 55.6997 li
162.094 55.7998 li
162.193 55.8496 li
162.294 55.9497 li
162.394 55.9995 li
162.493 56.0996 li
162.594 56.1997 li
162.644 56.2495 li
162.743 56.3496 li
162.844 56.4497 li
162.943 56.4995 li
163.044 56.5996 li
163.094 56.6494 li
163.193 56.7495 li
163.294 56.8496 li
163.394 56.8994 li
163.493 56.9995 li
163.544 57.0996 li
144.744 45.8496 mo
144.844 45.8999 li
144.943 45.8999 li
145.044 45.8999 li
145.144 45.9497 li
145.193 45.9497 li
145.294 46 li
145.394 46 li
145.494 46.0498 li
145.594 46.0498 li
145.644 46.0996 li
145.744 46.0996 li
145.844 46.1499 li
145.943 46.1499 li
146.044 46.1997 li
146.094 46.1997 li
146.193 46.25 li
146.294 46.25 li
146.394 46.2998 li
146.494 46.2998 li
146.544 46.3496 li
146.644 46.3496 li
146.744 46.3999 li
146.844 46.4497 li
146.943 46.4497 li
146.994 46.4995 li
147.094 46.4995 li
147.193 46.5498 li
147.294 46.5996 li
147.394 46.5996 li
147.494 46.6499 li
147.544 46.6499 li
147.644 46.6997 li
147.744 46.7495 li
147.844 46.7495 li
147.943 46.7998 li
147.994 46.8496 li
148.094 46.8496 li
148.193 46.8994 li
148.294 46.9497 li
148.394 46.9497 li
148.443 46.9995 li
148.544 47.0498 li
148.644 47.0498 li
148.744 47.0996 li
148.844 47.1494 li
148.894 47.1997 li
148.994 47.1997 li
149.094 47.2495 li
149.193 47.2998 li
149.294 47.3496 li
149.394 47.3496 li
149.443 47.3994 li
149.544 47.4497 li
149.644 47.4995 li
149.744 47.4995 li
149.844 47.5498 li
149.894 47.5996 li
149.994 47.6494 li
150.094 47.6997 li
150.193 47.6997 li
150.294 47.7495 li
150.344 47.7998 li
150.443 47.8496 li
150.544 47.8994 li
150.644 47.9497 li
150.744 47.9995 li
150.794 47.9995 li
150.894 48.0498 li
150.994 48.0996 li
151.094 48.1494 li
151.193 48.1997 li
151.244 48.2495 li
151.344 48.2993 li
151.443 48.3496 li
151.544 48.3994 li
151.644 48.3994 li
151.744 48.4497 li
151.794 48.4995 li
151.894 48.5493 li
151.994 48.5996 li
152.094 48.6494 li
152.193 48.6997 li
152.243 48.7495 li
152.344 48.7993 li
152.443 48.8496 li
152.544 48.8994 li
152.644 48.9492 li
152.693 48.9995 li
152.794 49.0493 li
152.894 49.0996 li
152.993 49.1494 li
153.094 49.1992 li
153.144 49.2495 li
153.243 49.2993 li
153.344 49.3496 li
153.443 49.3994 li
153.544 49.4492 li
153.594 49.4995 li
153.693 49.5493 li
153.794 49.6494 li
153.894 49.6992 li
153.993 49.7495 li
154.094 49.7993 li
154.144 49.8496 li
135.344 45.5996 mo
135.444 45.5996 li
135.544 45.5996 li
135.644 45.5498 li
135.694 45.5498 li
135.794 45.5498 li
135.894 45.5498 li
135.994 45.5 li
136.094 45.5 li
136.144 45.5 li
136.244 45.4497 li
136.344 45.4497 li
136.444 45.4497 li
136.544 45.4497 li
136.644 45.4497 li
136.694 45.3999 li
136.794 45.3999 li
136.894 45.3999 li
136.994 45.3999 li
137.094 45.3496 li
137.144 45.3496 li
137.244 45.3496 li
137.344 45.3496 li
137.444 45.3496 li
137.544 45.3496 li
137.594 45.2998 li
137.694 45.2998 li
137.794 45.2998 li
137.894 45.2998 li
137.994 45.2998 li
138.044 45.2998 li
138.144 45.2998 li
138.244 45.2998 li
138.344 45.2998 li
138.444 45.25 li
138.544 45.25 li
138.594 45.25 li
138.694 45.25 li
138.794 45.25 li
138.894 45.25 li
138.994 45.25 li
139.044 45.25 li
139.144 45.25 li
139.244 45.25 li
139.344 45.25 li
139.444 45.25 li
139.494 45.25 li
139.594 45.25 li
139.694 45.25 li
139.793 45.25 li
139.894 45.25 li
139.944 45.25 li
140.043 45.25 li
140.144 45.25 li
140.244 45.25 li
140.344 45.25 li
140.394 45.25 li
140.494 45.25 li
140.594 45.2998 li
140.694 45.2998 li
140.793 45.2998 li
140.894 45.2998 li
140.944 45.2998 li
141.043 45.2998 li
141.144 45.2998 li
141.244 45.2998 li
141.344 45.2998 li
141.394 45.3496 li
141.494 45.3496 li
141.594 45.3496 li
141.693 45.3496 li
141.793 45.3496 li
141.844 45.3496 li
141.943 45.3999 li
142.043 45.3999 li
142.144 45.3999 li
142.244 45.3999 li
142.293 45.4497 li
142.394 45.4497 li
142.494 45.4497 li
142.594 45.4497 li
142.693 45.4497 li
142.794 45.5 li
142.844 45.5 li
142.943 45.5 li
143.044 45.5498 li
143.144 45.5498 li
143.243 45.5498 li
143.294 45.5498 li
143.394 45.5996 li
143.493 45.5996 li
143.594 45.5996 li
143.693 45.6499 li
143.743 45.6499 li
143.844 45.6499 li
143.943 45.6997 li
144.044 45.6997 li
144.144 45.6997 li
144.193 45.75 li
144.294 45.75 li
144.394 45.7998 li
144.493 45.7998 li
144.594 45.7998 li
144.644 45.8496 li
144.743 45.8496 li
125.944 49.1499 mo
126.044 49.0996 li
126.144 49.0498 li
126.244 49 li
126.294 48.9497 li
126.394 48.8999 li
126.494 48.8496 li
126.594 48.7998 li
126.694 48.75 li
126.744 48.6997 li
126.844 48.6499 li
126.944 48.5996 li
127.044 48.5498 li
127.144 48.5 li
127.194 48.4497 li
127.294 48.3999 li
127.394 48.3999 li
127.494 48.3496 li
127.594 48.2998 li
127.694 48.25 li
127.744 48.1997 li
127.844 48.1499 li
127.944 48.0996 li
128.044 48.0498 li
128.144 48 li
128.194 48 li
128.294 47.9497 li
128.394 47.8999 li
128.494 47.8501 li
128.594 47.7998 li
128.644 47.75 li
128.744 47.6997 li
128.844 47.6997 li
128.944 47.6499 li
129.044 47.6001 li
129.094 47.5498 li
129.194 47.5 li
129.294 47.5 li
129.394 47.4502 li
129.494 47.3999 li
129.544 47.3501 li
129.644 47.3501 li
129.744 47.2998 li
129.844 47.25 li
129.944 47.2002 li
130.044 47.2002 li
130.094 47.1499 li
130.194 47.1001 li
130.294 47.0498 li
130.394 47.0498 li
130.494 47 li
130.544 46.9502 li
130.644 46.9502 li
130.744 46.8999 li
130.844 46.8501 li
130.944 46.8501 li
130.994 46.7998 li
131.094 46.75 li
131.194 46.75 li
131.294 46.7002 li
131.394 46.6499 li
131.444 46.6499 li
131.544 46.6001 li
131.644 46.6001 li
131.744 46.5498 li
131.844 46.5 li
131.944 46.5 li
131.994 46.4502 li
132.094 46.4502 li
132.194 46.3999 li
132.294 46.3501 li
132.394 46.3501 li
132.444 46.2998 li
132.544 46.2998 li
132.644 46.25 li
132.744 46.25 li
132.844 46.2002 li
132.894 46.2002 li
132.994 46.1499 li
133.094 46.1499 li
133.194 46.1001 li
133.294 46.1001 li
133.344 46.0503 li
133.444 46.0503 li
133.544 46 li
133.644 46 li
133.744 45.9502 li
133.794 45.9502 li
133.894 45.8999 li
133.994 45.8999 li
134.094 45.8999 li
134.194 45.8501 li
134.294 45.8501 li
134.344 45.8003 li
134.444 45.8003 li
134.544 45.8003 li
134.644 45.75 li
134.744 45.75 li
134.794 45.7002 li
134.894 45.7002 li
134.994 45.7002 li
135.094 45.6499 li
135.194 45.6499 li
135.244 45.6499 li
135.344 45.6001 li
116.544 56 mo
116.644 55.9497 li
116.744 55.8496 li
116.844 55.7998 li
116.894 55.6997 li
116.994 55.6499 li
117.094 55.5498 li
117.194 55.4497 li
117.294 55.3999 li
117.344 55.2998 li
117.444 55.25 li
117.544 55.1499 li
117.644 55.0996 li
117.744 55 li
117.794 54.9497 li
117.894 54.8496 li
117.994 54.7998 li
118.094 54.6997 li
118.194 54.6499 li
118.244 54.5498 li
118.344 54.5 li
118.444 54.3999 li
118.544 54.3496 li
118.644 54.25 li
118.744 54.1997 li
118.794 54.0996 li
118.894 54.0498 li
118.994 53.9497 li
119.094 53.8999 li
119.194 53.7998 li
119.244 53.75 li
119.344 53.6499 li
119.444 53.5996 li
119.544 53.5498 li
119.644 53.4497 li
119.694 53.3999 li
119.794 53.2998 li
119.894 53.25 li
119.994 53.1499 li
120.094 53.0996 li
120.144 53.0498 li
120.244 52.9497 li
120.344 52.8999 li
120.444 52.8496 li
120.544 52.75 li
120.594 52.6997 li
120.694 52.5996 li
120.794 52.5498 li
120.894 52.5 li
120.994 52.3999 li
121.094 52.3496 li
121.144 52.2998 li
121.244 52.1997 li
121.344 52.1499 li
121.444 52.0996 li
121.544 52 li
121.594 51.9497 li
121.694 51.8999 li
121.794 51.7998 li
121.894 51.75 li
121.994 51.6997 li
122.044 51.6499 li
122.144 51.5498 li
122.244 51.5 li
122.344 51.4497 li
122.444 51.3999 li
122.494 51.2998 li
122.594 51.25 li
122.694 51.1997 li
122.794 51.1499 li
122.894 51.0498 li
122.944 51 li
123.044 50.9497 li
123.144 50.8999 li
123.244 50.8496 li
123.344 50.75 li
123.444 50.6997 li
123.494 50.6499 li
123.594 50.5996 li
123.694 50.5498 li
123.794 50.4497 li
123.894 50.3999 li
123.944 50.3496 li
124.044 50.2998 li
124.144 50.25 li
124.244 50.1997 li
124.344 50.1001 li
124.394 50.0498 li
124.494 50 li
124.594 49.9497 li
124.694 49.8999 li
124.794 49.8501 li
124.844 49.7998 li
124.944 49.75 li
125.044 49.6997 li
125.144 49.6499 li
125.244 49.5498 li
125.344 49.5 li
125.394 49.4502 li
125.494 49.3999 li
125.594 49.3501 li
125.694 49.2998 li
125.794 49.25 li
125.844 49.2002 li
125.944 49.1499 li
107.144 65.3999 mo
107.244 65.2998 li
107.344 65.1997 li
107.394 65.0996 li
107.494 65 li
107.594 64.8999 li
107.694 64.7998 li
107.794 64.6997 li
107.894 64.5996 li
107.944 64.5 li
108.044 64.3999 li
108.144 64.2998 li
108.244 64.1997 li
108.344 64.1499 li
108.394 64.0498 li
108.494 63.9497 li
108.594 63.8496 li
108.694 63.7495 li
108.794 63.6499 li
108.844 63.5498 li
108.944 63.4497 li
109.044 63.3496 li
109.144 63.2495 li
109.244 63.1494 li
109.294 63.0498 li
109.394 62.9497 li
109.494 62.8994 li
109.594 62.7998 li
109.694 62.6997 li
109.744 62.5996 li
109.844 62.4995 li
109.944 62.3994 li
110.044 62.2998 li
110.144 62.1997 li
110.244 62.0996 li
110.294 62.0498 li
110.394 61.9497 li
110.494 61.8496 li
110.594 61.7495 li
110.694 61.6494 li
110.744 61.5498 li
110.844 61.4497 li
110.944 61.3994 li
111.044 61.2998 li
111.144 61.1997 li
111.194 61.0996 li
111.294 60.9995 li
111.394 60.8994 li
111.494 60.8496 li
111.594 60.7495 li
111.644 60.6494 li
111.744 60.5498 li
111.844 60.4497 li
111.944 60.3496 li
112.044 60.2998 li
112.094 60.1997 li
112.194 60.0996 li
112.294 59.9995 li
112.394 59.8994 li
112.494 59.8496 li
112.594 59.7495 li
112.644 59.6494 li
112.744 59.5498 li
112.844 59.4995 li
112.944 59.3994 li
113.044 59.2998 li
113.094 59.1997 li
113.194 59.0996 li
113.294 59.0498 li
113.394 58.9497 li
113.494 58.8496 li
113.544 58.7993 li
113.644 58.6997 li
113.744 58.5996 li
113.844 58.4995 li
113.944 58.4497 li
113.994 58.3496 li
114.094 58.2495 li
114.194 58.1494 li
114.294 58.0996 li
114.394 57.9995 li
114.494 57.8994 li
114.544 57.8496 li
114.644 57.7495 li
114.744 57.6494 li
114.844 57.5996 li
114.944 57.4995 li
114.994 57.3994 li
115.094 57.3496 li
115.194 57.2495 li
115.294 57.1494 li
115.394 57.0996 li
115.444 56.9995 li
115.544 56.8994 li
115.644 56.8496 li
115.744 56.7495 li
115.844 56.6494 li
115.894 56.5996 li
115.994 56.4995 li
116.094 56.4492 li
116.194 56.3496 li
116.294 56.2495 li
116.344 56.1992 li
116.444 56.0996 li
116.544 55.9995 li
97.7437 76.25 mo
97.8438 76.1499 li
97.9438 76 li
97.9937 75.8999 li
98.0938 75.7998 li
98.1938 75.6997 li
98.2939 75.5996 li
98.3936 75.5 li
98.4438 75.3999 li
98.5439 75.25 li
98.6436 75.1499 li
98.7437 75.0498 li
98.8438 74.9497 li
98.8936 74.8496 li
98.9937 74.7495 li
99.0938 74.6499 li
99.1938 74.4995 li
99.2939 74.3999 li
99.3936 74.2998 li
99.4438 74.1997 li
99.5439 74.0996 li
99.6436 73.9995 li
99.7437 73.8999 li
99.8438 73.7495 li
99.8936 73.6494 li
99.9937 73.5498 li
100.094 73.4497 li
100.194 73.3496 li
100.294 73.2495 li
100.344 73.1494 li
100.444 73.0498 li
100.544 72.8994 li
100.644 72.7998 li
100.744 72.6997 li
100.794 72.5996 li
100.894 72.4995 li
100.994 72.3994 li
101.094 72.2998 li
101.194 72.1997 li
101.294 72.0498 li
101.344 71.9497 li
101.444 71.8496 li
101.544 71.7495 li
101.644 71.6494 li
101.744 71.5498 li
101.794 71.4497 li
101.894 71.3496 li
101.994 71.2495 li
102.094 71.0996 li
102.194 70.9995 li
102.244 70.8994 li
102.344 70.7998 li
102.444 70.6997 li
102.544 70.5996 li
102.644 70.4995 li
102.694 70.3994 li
102.794 70.2998 li
102.894 70.1997 li
102.994 70.0996 li
103.094 69.9497 li
103.144 69.8496 li
103.244 69.7495 li
103.344 69.6494 li
103.444 69.5493 li
103.544 69.4497 li
103.644 69.3496 li
103.694 69.2495 li
103.794 69.1494 li
103.894 69.0493 li
103.994 68.9492 li
104.094 68.8496 li
104.144 68.7495 li
104.244 68.6494 li
104.344 68.5493 li
104.444 68.4492 li
104.544 68.2993 li
104.594 68.1992 li
104.694 68.0996 li
104.794 67.9995 li
104.894 67.8994 li
104.994 67.7993 li
105.044 67.6992 li
105.144 67.5996 li
105.244 67.4995 li
105.344 67.3994 li
105.444 67.2993 li
105.494 67.1992 li
105.594 67.0996 li
105.694 66.9995 li
105.794 66.8994 li
105.894 66.7993 li
105.994 66.6992 li
106.044 66.5996 li
106.144 66.4995 li
106.244 66.3994 li
106.344 66.2993 li
106.444 66.1992 li
106.494 66.0996 li
106.594 65.9995 li
106.694 65.8994 li
106.794 65.7993 li
106.894 65.6992 li
106.944 65.5991 li
107.044 65.4995 li
107.144 65.3994 li
88.3438 87.4497 mo
88.4438 87.3496 li
88.5439 87.25 li
88.5938 87.1499 li
88.6938 87.0498 li
88.7939 86.8999 li
88.8936 86.7998 li
88.9937 86.6997 li
89.0439 86.5996 li
89.1436 86.5 li
89.2437 86.3999 li
89.3438 86.2998 li
89.4438 86.1499 li
89.4937 86.0498 li
89.5938 85.9497 li
89.6938 85.8496 li
89.7939 85.7495 li
89.894 85.6499 li
89.9438 85.5498 li
90.0439 85.3999 li
90.144 85.2998 li
90.2437 85.1997 li
90.3438 85.0996 li
90.4438 84.9995 li
90.4937 84.8994 li
90.5938 84.7998 li
90.6938 84.6494 li
90.7939 84.5498 li
90.894 84.4497 li
90.9438 84.3496 li
91.0439 84.2495 li
91.144 84.1494 li
91.2437 83.9995 li
91.3438 83.8994 li
91.394 83.7998 li
91.4937 83.6997 li
91.5938 83.5996 li
91.6938 83.4995 li
91.7939 83.3994 li
91.8438 83.2495 li
91.9438 83.1494 li
92.0439 83.0498 li
92.144 82.9497 li
92.2441 82.8496 li
92.2939 82.7495 li
92.394 82.5996 li
92.4941 82.4995 li
92.5938 82.3994 li
92.6938 82.2998 li
92.7939 82.1997 li
92.8438 82.0996 li
92.9438 81.9497 li
93.0439 81.8496 li
93.144 81.7495 li
93.2441 81.6494 li
93.2939 81.5498 li
93.394 81.4497 li
93.4941 81.2998 li
93.5938 81.1997 li
93.6938 81.0996 li
93.7441 80.9995 li
93.8438 80.8994 li
93.9438 80.7993 li
94.0439 80.6494 li
94.144 80.5493 li
94.1938 80.4497 li
94.2939 80.3496 li
94.394 80.2495 li
94.4941 80.1494 li
94.5938 79.9995 li
94.6938 79.8994 li
94.7441 79.7993 li
94.8438 79.6992 li
94.9438 79.5996 li
95.0439 79.4995 li
95.144 79.3496 li
95.1938 79.2495 li
95.2939 79.1494 li
95.394 79.0493 li
95.4941 78.9492 li
95.5938 78.8496 li
95.644 78.6992 li
95.7441 78.5996 li
95.8438 78.4995 li
95.9438 78.3994 li
96.0439 78.2993 li
96.0938 78.1992 li
96.1938 78.0493 li
96.2939 77.9492 li
96.394 77.8496 li
96.4941 77.7495 li
96.5439 77.6494 li
96.644 77.5493 li
96.7441 77.3994 li
96.8442 77.2993 li
96.9438 77.1992 li
97.0439 77.0996 li
97.0942 76.9995 li
97.1938 76.8994 li
97.2939 76.7993 li
97.394 76.6494 li
97.4941 76.5493 li
97.5439 76.4492 li
97.644 76.3496 li
97.7441 76.2495 li
78.9438 98.1494 mo
79.0439 98.0498 li
79.0938 97.9502 li
79.1938 97.8496 li
79.2939 97.75 li
79.3936 97.6494 li
79.4937 97.5498 li
79.5938 97.4502 li
79.6436 97.3496 li
79.7437 97.25 li
79.8438 97.1494 li
79.9438 97.0498 li
80.0439 96.9502 li
80.0938 96.8496 li
80.1938 96.75 li
80.2939 96.6494 li
80.3936 96.5498 li
80.4937 96.4502 li
80.5439 96.3496 li
80.6436 96.25 li
80.7437 96.1504 li
80.8438 96.0498 li
80.9438 95.9502 li
80.9937 95.8496 li
81.0938 95.75 li
81.1938 95.6504 li
81.2939 95.5498 li
81.394 95.4502 li
81.4438 95.3496 li
81.5439 95.25 li
81.644 95.1504 li
81.7437 95.0498 li
81.8438 94.9502 li
81.9438 94.8506 li
81.9937 94.75 li
82.0938 94.6504 li
82.1938 94.5498 li
82.2939 94.4502 li
82.394 94.3506 li
82.4438 94.25 li
82.5439 94.1504 li
82.644 94.0498 li
82.7437 93.9502 li
82.8438 93.8506 li
82.894 93.75 li
82.9937 93.6504 li
83.0938 93.5503 li
83.1938 93.4004 li
83.2939 93.3003 li
83.3438 93.2002 li
83.4438 93.1001 li
83.5439 93 li
83.644 92.9004 li
83.7441 92.8003 li
83.8438 92.7002 li
83.894 92.6001 li
83.9941 92.5 li
84.0938 92.4004 li
84.1938 92.3003 li
84.2939 92.2002 li
84.3438 92.1001 li
84.4438 92 li
84.5439 91.9004 li
84.644 91.75 li
84.7441 91.6504 li
84.7939 91.5503 li
84.894 91.4502 li
84.9941 91.3501 li
85.0938 91.25 li
85.1938 91.1504 li
85.2441 91.0503 li
85.3438 90.9502 li
85.4438 90.8501 li
85.5439 90.75 li
85.644 90.6504 li
85.6938 90.5 li
85.7939 90.4004 li
85.894 90.3003 li
85.9941 90.2002 li
86.0938 90.1001 li
86.1938 90 li
86.2441 89.8999 li
86.3438 89.8003 li
86.4438 89.7002 li
86.5439 89.6001 li
86.644 89.4502 li
86.6938 89.3501 li
86.7939 89.25 li
86.894 89.1499 li
86.9941 89.0498 li
87.0942 88.9502 li
87.144 88.8501 li
87.2441 88.75 li
87.3442 88.6499 li
87.4438 88.5 li
87.5439 88.3999 li
87.5942 88.2998 li
87.6938 88.2002 li
87.7939 88.1001 li
87.894 88 li
87.9941 87.8999 li
88.0439 87.7998 li
88.144 87.6499 li
88.2441 87.5498 li
88.3442 87.4502 li
69.5439 107.55 mo
69.6436 107.5 li
69.6938 107.399 li
69.7939 107.3 li
69.8936 107.25 li
69.9937 107.149 li
70.0938 107.05 li
70.1436 107 li
70.2437 106.899 li
70.3438 106.8 li
70.4438 106.75 li
70.5439 106.649 li
70.6436 106.55 li
70.6938 106.5 li
70.7939 106.399 li
70.8936 106.3 li
70.9937 106.2 li
71.0938 106.149 li
71.1436 106.05 li
71.2437 105.95 li
71.3438 105.899 li
71.4438 105.8 li
71.5439 105.7 li
71.5938 105.6 li
71.6938 105.55 li
71.7939 105.45 li
71.894 105.35 li
71.9937 105.25 li
72.0439 105.2 li
72.144 105.1 li
72.2437 105 li
72.3438 104.899 li
72.4438 104.85 li
72.4937 104.75 li
72.5938 104.65 li
72.6938 104.55 li
72.7939 104.45 li
72.894 104.4 li
72.9937 104.3 li
73.0439 104.2 li
73.144 104.1 li
73.2437 104.05 li
73.3438 103.95 li
73.4438 103.85 li
73.4937 103.75 li
73.5938 103.65 li
73.6938 103.6 li
73.7939 103.5 li
73.894 103.4 li
73.9438 103.3 li
74.0439 103.2 li
74.144 103.15 li
74.2441 103.05 li
74.3438 102.95 li
74.394 102.85 li
74.4941 102.75 li
74.5938 102.65 li
74.6938 102.6 li
74.7939 102.5 li
74.8438 102.4 li
74.9438 102.3 li
75.0439 102.2 li
75.144 102.101 li
75.2441 102.05 li
75.3438 101.95 li
75.394 101.851 li
75.4941 101.75 li
75.5938 101.65 li
75.6938 101.55 li
75.7939 101.45 li
75.8438 101.4 li
75.9438 101.3 li
76.0439 101.2 li
76.144 101.101 li
76.2441 101 li
76.2939 100.9 li
76.394 100.8 li
76.4941 100.7 li
76.5938 100.601 li
76.6938 100.55 li
76.7441 100.45 li
76.8438 100.351 li
76.9438 100.25 li
77.0439 100.15 li
77.144 100.05 li
77.2441 99.9502 li
77.2939 99.8506 li
77.394 99.75 li
77.4941 99.6504 li
77.5942 99.6006 li
77.6938 99.5 li
77.7441 99.4004 li
77.8442 99.2998 li
77.9438 99.2002 li
78.0439 99.1006 li
78.144 99 li
78.1938 98.9004 li
78.2939 98.8008 li
78.394 98.7002 li
78.4941 98.6006 li
78.5942 98.5 li
78.644 98.4004 li
78.7441 98.3008 li
78.8442 98.25 li
78.9438 98.1504 li
60.1436 115.399 mo
60.2437 115.35 li
60.2939 115.3 li
60.3936 115.2 li
60.4937 115.149 li
60.5938 115.1 li
60.6938 115 li
60.7437 114.95 li
60.8438 114.85 li
60.9438 114.8 li
61.0439 114.75 li
61.1436 114.649 li
61.1938 114.6 li
61.2939 114.55 li
61.3936 114.45 li
61.4937 114.399 li
61.5938 114.3 li
61.6436 114.25 li
61.7437 114.2 li
61.8438 114.1 li
61.9438 114.05 li
62.0439 113.95 li
62.144 113.899 li
62.1938 113.85 li
62.2939 113.75 li
62.394 113.7 li
62.4937 113.6 li
62.5938 113.55 li
62.644 113.45 li
62.7437 113.399 li
62.8438 113.35 li
62.9438 113.25 li
63.0439 113.199 li
63.0938 113.1 li
63.1938 113.05 li
63.2939 112.95 li
63.394 112.899 li
63.4937 112.8 li
63.5439 112.75 li
63.644 112.699 li
63.7437 112.6 li
63.8438 112.55 li
63.9438 112.449 li
63.9937 112.399 li
64.0938 112.3 li
64.1938 112.25 li
64.2939 112.149 li
64.394 112.1 li
64.4941 112 li
64.5439 111.949 li
64.644 111.85 li
64.7441 111.8 li
64.8438 111.699 li
64.9438 111.649 li
64.9941 111.55 li
65.0938 111.5 li
65.1938 111.399 li
65.2939 111.35 li
65.394 111.25 li
65.4438 111.199 li
65.5439 111.1 li
65.644 111 li
65.7441 110.949 li
65.8438 110.85 li
65.894 110.8 li
65.9941 110.7 li
66.0938 110.649 li
66.1938 110.55 li
66.2939 110.5 li
66.394 110.399 li
66.4438 110.3 li
66.5439 110.25 li
66.644 110.149 li
66.7441 110.1 li
66.8438 110 li
66.894 109.95 li
66.9941 109.85 li
67.0938 109.75 li
67.1938 109.7 li
67.2939 109.6 li
67.3438 109.55 li
67.4438 109.45 li
67.5439 109.35 li
67.644 109.3 li
67.7441 109.2 li
67.7939 109.149 li
67.894 109.05 li
67.9941 108.95 li
68.0942 108.899 li
68.1938 108.8 li
68.2441 108.75 li
68.3442 108.649 li
68.4438 108.55 li
68.5439 108.5 li
68.644 108.399 li
68.7441 108.3 li
68.7939 108.25 li
68.894 108.149 li
68.9941 108.05 li
69.0942 108 li
69.1938 107.899 li
69.2441 107.8 li
69.3442 107.75 li
69.4438 107.649 li
69.5439 107.55 li
50.7437 121.55 mo
50.7939 121.5 li
50.8936 121.45 li
50.9937 121.399 li
51.0938 121.35 li
51.1938 121.3 li
51.2939 121.25 li
51.3438 121.2 li
51.4438 121.149 li
51.5439 121.1 li
51.6436 121.05 li
51.7437 121 li
51.7939 120.949 li
51.8936 120.899 li
51.9937 120.8 li
52.0938 120.75 li
52.1938 120.699 li
52.2437 120.649 li
52.3438 120.6 li
52.4438 120.55 li
52.5439 120.5 li
52.644 120.449 li
52.6938 120.399 li
52.7939 120.35 li
52.894 120.3 li
52.9937 120.25 li
53.0938 120.149 li
53.1938 120.1 li
53.2437 120.05 li
53.3438 119.999 li
53.4438 119.949 li
53.5439 119.899 li
53.644 119.85 li
53.6938 119.8 li
53.7939 119.749 li
53.894 119.649 li
53.9937 119.6 li
54.0938 119.55 li
54.144 119.499 li
54.2437 119.449 li
54.3438 119.399 li
54.4438 119.35 li
54.5439 119.3 li
54.5938 119.199 li
54.6938 119.149 li
54.7939 119.1 li
54.894 119.05 li
54.9937 118.999 li
55.0439 118.949 li
55.144 118.85 li
55.2441 118.8 li
55.3438 118.749 li
55.4438 118.699 li
55.5439 118.649 li
55.5938 118.6 li
55.6938 118.499 li
55.7939 118.449 li
55.894 118.399 li
55.9941 118.35 li
56.0439 118.3 li
56.144 118.199 li
56.2441 118.149 li
56.3438 118.1 li
56.4438 118.049 li
56.4941 117.999 li
56.5938 117.899 li
56.6938 117.85 li
56.7939 117.799 li
56.894 117.749 li
56.9438 117.649 li
57.0439 117.6 li
57.144 117.549 li
57.2441 117.499 li
57.3438 117.399 li
57.394 117.35 li
57.4941 117.299 li
57.5938 117.249 li
57.6938 117.149 li
57.7939 117.1 li
57.894 117.049 li
57.9438 116.999 li
58.0439 116.899 li
58.144 116.85 li
58.2441 116.799 li
58.3438 116.749 li
58.394 116.649 li
58.4941 116.6 li
58.5942 116.549 li
58.6938 116.449 li
58.7939 116.399 li
58.8442 116.35 li
58.9438 116.299 li
59.0439 116.199 li
59.144 116.149 li
59.2441 116.1 li
59.2939 115.999 li
59.394 115.949 li
59.4941 115.899 li
59.5942 115.799 li
59.6938 115.749 li
59.7939 115.699 li
59.8442 115.599 li
59.9438 115.549 li
60.0439 115.499 li
60.144 115.399 li
41.3438 126.1 mo
41.3936 126.05 li
41.4937 126 li
41.5938 126 li
41.6938 125.95 li
41.7939 125.899 li
41.8438 125.85 li
41.9438 125.85 li
42.0439 125.8 li
42.1436 125.75 li
42.2437 125.7 li
42.3438 125.7 li
42.3936 125.649 li
42.4937 125.6 li
42.5938 125.55 li
42.6938 125.55 li
42.7939 125.5 li
42.8438 125.449 li
42.9438 125.399 li
43.0439 125.35 li
43.1436 125.35 li
43.2437 125.3 li
43.2939 125.25 li
43.3936 125.199 li
43.4937 125.149 li
43.5938 125.149 li
43.6938 125.1 li
43.7437 125.05 li
43.8438 125 li
43.9438 124.949 li
44.0439 124.949 li
44.144 124.899 li
44.1938 124.85 li
44.2939 124.8 li
44.394 124.749 li
44.4937 124.749 li
44.5938 124.699 li
44.6938 124.649 li
44.7437 124.6 li
44.8438 124.55 li
44.9438 124.499 li
45.0439 124.499 li
45.144 124.449 li
45.1938 124.399 li
45.2939 124.35 li
45.394 124.3 li
45.4937 124.249 li
45.5938 124.199 li
45.644 124.199 li
45.7437 124.149 li
45.8438 124.1 li
45.9438 124.05 li
46.0439 123.999 li
46.0938 123.949 li
46.1938 123.899 li
46.2939 123.899 li
46.394 123.85 li
46.4941 123.8 li
46.5938 123.749 li
46.644 123.699 li
46.7441 123.649 li
46.8438 123.6 li
46.9438 123.549 li
47.0439 123.499 li
47.0938 123.499 li
47.1938 123.449 li
47.2939 123.399 li
47.394 123.35 li
47.4941 123.299 li
47.5439 123.249 li
47.644 123.199 li
47.7441 123.149 li
47.8438 123.1 li
47.9438 123.049 li
47.9941 122.999 li
48.0938 122.949 li
48.1938 122.899 li
48.2939 122.899 li
48.394 122.85 li
48.4438 122.799 li
48.5439 122.749 li
48.644 122.699 li
48.7441 122.649 li
48.8438 122.599 li
48.9438 122.549 li
48.9941 122.499 li
49.0938 122.449 li
49.1938 122.399 li
49.2939 122.349 li
49.394 122.299 li
49.4438 122.249 li
49.5439 122.199 li
49.644 122.149 li
49.7441 122.099 li
49.8442 122.049 li
49.894 121.999 li
49.9941 121.949 li
50.0942 121.899 li
50.1938 121.849 li
50.2939 121.799 li
50.3442 121.749 li
50.4438 121.699 li
50.5439 121.648 li
50.644 121.599 li
50.7441 121.549 li
31.9438 129.3 mo
31.9937 129.25 li
32.0938 129.25 li
32.1938 129.2 li
32.2939 129.2 li
32.3936 129.149 li
32.4438 129.149 li
32.5439 129.1 li
32.6436 129.05 li
32.7437 129.05 li
32.8438 129 li
32.8936 129 li
32.9937 128.95 li
33.0938 128.95 li
33.1938 128.899 li
33.2939 128.899 li
33.3438 128.85 li
33.4438 128.85 li
33.5439 128.8 li
33.6436 128.8 li
33.7437 128.75 li
33.8438 128.75 li
33.894 128.699 li
33.9937 128.649 li
34.0938 128.649 li
34.1938 128.6 li
34.2939 128.6 li
34.3438 128.55 li
34.4438 128.55 li
34.5439 128.5 li
34.644 128.5 li
34.7437 128.449 li
34.7939 128.399 li
34.894 128.399 li
34.9937 128.35 li
35.0938 128.35 li
35.1938 128.3 li
35.2437 128.3 li
35.3438 128.25 li
35.4438 128.199 li
35.5439 128.199 li
35.644 128.149 li
35.7437 128.149 li
35.7939 128.1 li
35.894 128.1 li
35.9937 128.05 li
36.0938 128 li
36.1938 128 li
36.2437 127.949 li
36.3438 127.949 li
36.4438 127.899 li
36.5439 127.85 li
36.644 127.85 li
36.6938 127.8 li
36.7939 127.749 li
36.894 127.749 li
36.9941 127.699 li
37.0938 127.699 li
37.144 127.649 li
37.2441 127.6 li
37.3438 127.6 li
37.4438 127.55 li
37.5439 127.55 li
37.5938 127.499 li
37.6938 127.449 li
37.7939 127.449 li
37.894 127.399 li
37.9941 127.35 li
38.0938 127.35 li
38.144 127.3 li
38.2441 127.249 li
38.3438 127.249 li
38.4438 127.199 li
38.5439 127.149 li
38.5938 127.149 li
38.6938 127.1 li
38.7939 127.05 li
38.894 127.05 li
38.9941 126.999 li
39.0439 126.949 li
39.144 126.949 li
39.2441 126.899 li
39.3438 126.85 li
39.4438 126.85 li
39.4941 126.799 li
39.5938 126.749 li
39.6938 126.749 li
39.7939 126.699 li
39.894 126.649 li
39.9438 126.649 li
40.0439 126.6 li
40.144 126.549 li
40.2441 126.499 li
40.3442 126.499 li
40.4438 126.449 li
40.4941 126.399 li
40.5942 126.399 li
40.6938 126.35 li
40.7939 126.299 li
40.894 126.249 li
40.9438 126.249 li
41.0439 126.199 li
41.144 126.149 li
41.2441 126.149 li
41.3442 126.1 li
22.5439 131.399 mo
22.5938 131.399 li
22.6938 131.35 li
22.7939 131.35 li
22.8936 131.35 li
22.9937 131.3 li
23.0439 131.3 li
23.1436 131.3 li
23.2437 131.25 li
23.3438 131.25 li
23.4438 131.25 li
23.4937 131.2 li
23.5938 131.2 li
23.6938 131.2 li
23.7939 131.149 li
23.8936 131.149 li
23.9438 131.149 li
24.0439 131.1 li
24.1436 131.1 li
24.2437 131.1 li
24.3438 131.05 li
24.3936 131.05 li
24.4937 131.05 li
24.5938 131 li
24.6938 131 li
24.7939 130.95 li
24.894 130.95 li
24.9438 130.95 li
25.0439 130.899 li
25.144 130.899 li
25.2437 130.899 li
25.3438 130.85 li
25.394 130.85 li
25.4937 130.8 li
25.5938 130.8 li
25.6938 130.8 li
25.7939 130.75 li
25.8438 130.75 li
25.9438 130.75 li
26.0439 130.699 li
26.144 130.699 li
26.2437 130.649 li
26.2939 130.649 li
26.394 130.649 li
26.4937 130.6 li
26.5938 130.6 li
26.6938 130.55 li
26.7437 130.55 li
26.8438 130.55 li
26.9438 130.5 li
27.0439 130.5 li
27.144 130.449 li
27.2441 130.449 li
27.2939 130.449 li
27.394 130.399 li
27.4941 130.399 li
27.5938 130.35 li
27.6938 130.35 li
27.7441 130.35 li
27.8438 130.3 li
27.9438 130.3 li
28.0439 130.25 li
28.144 130.25 li
28.1938 130.199 li
28.2939 130.199 li
28.394 130.199 li
28.4941 130.149 li
28.5938 130.149 li
28.644 130.1 li
28.7441 130.1 li
28.8438 130.05 li
28.9438 130.05 li
29.0439 130.05 li
29.144 129.999 li
29.1938 129.999 li
29.2939 129.949 li
29.394 129.949 li
29.4941 129.899 li
29.5938 129.899 li
29.644 129.85 li
29.7441 129.85 li
29.8438 129.85 li
29.9438 129.8 li
30.0439 129.8 li
30.0938 129.749 li
30.1938 129.749 li
30.2939 129.699 li
30.394 129.699 li
30.4941 129.649 li
30.5439 129.649 li
30.644 129.6 li
30.7441 129.6 li
30.8442 129.55 li
30.9438 129.55 li
30.9941 129.499 li
31.0942 129.499 li
31.1938 129.449 li
31.2939 129.449 li
31.394 129.449 li
31.4941 129.399 li
31.5439 129.399 li
31.644 129.35 li
31.7441 129.35 li
31.8442 129.3 li
31.9438 129.3 li
13.0938 132.75 mo
13.1938 132.75 li
13.2939 132.75 li
13.3936 132.7 li
13.4937 132.7 li
13.5439 132.7 li
13.6436 132.7 li
13.7437 132.649 li
13.8438 132.649 li
13.9438 132.649 li
14.0439 132.649 li
14.0938 132.649 li
14.1938 132.6 li
14.2939 132.6 li
14.3936 132.6 li
14.4937 132.6 li
14.5439 132.6 li
14.6436 132.55 li
14.7437 132.55 li
14.8438 132.55 li
14.9438 132.55 li
14.9937 132.5 li
15.0938 132.5 li
15.1938 132.5 li
15.2939 132.5 li
15.394 132.5 li
15.4438 132.45 li
15.5439 132.45 li
15.644 132.45 li
15.7437 132.45 li
15.8438 132.399 li
15.894 132.399 li
15.9937 132.399 li
16.0938 132.399 li
16.1938 132.399 li
16.2939 132.35 li
16.394 132.35 li
16.4438 132.35 li
16.5439 132.35 li
16.644 132.3 li
16.7437 132.3 li
16.8438 132.3 li
16.894 132.3 li
16.9937 132.25 li
17.0938 132.25 li
17.1938 132.25 li
17.2939 132.25 li
17.3438 132.199 li
17.4438 132.199 li
17.5439 132.199 li
17.644 132.199 li
17.7441 132.149 li
17.7939 132.149 li
17.894 132.149 li
17.9941 132.149 li
18.0938 132.1 li
18.1938 132.1 li
18.2939 132.1 li
18.3438 132.1 li
18.4438 132.05 li
18.5439 132.05 li
18.644 132.05 li
18.7441 132 li
18.7939 132 li
18.894 132 li
18.9941 132 li
19.0938 131.949 li
19.1938 131.949 li
19.2441 131.949 li
19.3438 131.949 li
19.4438 131.899 li
19.5439 131.899 li
19.644 131.899 li
19.6938 131.85 li
19.7939 131.85 li
19.894 131.85 li
19.9941 131.85 li
20.0938 131.8 li
20.144 131.8 li
20.2441 131.8 li
20.3438 131.75 li
20.4438 131.75 li
20.5439 131.75 li
20.644 131.75 li
20.6938 131.699 li
20.7939 131.699 li
20.894 131.699 li
20.9941 131.649 li
21.0942 131.649 li
21.144 131.649 li
21.2441 131.6 li
21.3442 131.6 li
21.4438 131.6 li
21.5439 131.55 li
21.5942 131.55 li
21.6938 131.55 li
21.7939 131.55 li
21.894 131.5 li
21.9941 131.5 li
22.0439 131.5 li
22.144 131.449 li
22.2441 131.449 li
22.3442 131.449 li
22.4438 131.399 li
22.5439 131.399 li
3.89355 133.55 mo
3.99365 133.55 li
4.09375 133.55 li
4.14355 133.55 li
4.24365 133.5 li
4.34375 133.5 li
4.44385 133.5 li
4.54395 133.5 li
4.59375 133.5 li
4.69385 133.5 li
4.79346 133.5 li
4.89355 133.5 li
4.99365 133.45 li
5.09375 133.45 li
5.14355 133.45 li
5.24365 133.45 li
5.34375 133.45 li
5.44385 133.45 li
5.54346 133.45 li
5.59375 133.45 li
5.69385 133.399 li
5.79346 133.399 li
5.89355 133.399 li
5.99365 133.399 li
6.04346 133.399 li
6.14355 133.399 li
6.24365 133.399 li
6.34375 133.35 li
6.44336 133.35 li
6.49365 133.35 li
6.59375 133.35 li
6.69336 133.35 li
6.79346 133.35 li
6.89355 133.35 li
6.94336 133.3 li
7.04346 133.3 li
7.14355 133.3 li
7.24365 133.3 li
7.34375 133.3 li
7.44336 133.3 li
7.49365 133.3 li
7.59375 133.25 li
7.69336 133.25 li
7.79346 133.25 li
7.89355 133.25 li
7.94336 133.25 li
8.04346 133.25 li
8.14355 133.25 li
8.24365 133.2 li
8.34375 133.2 li
8.39355 133.2 li
8.49365 133.2 li
8.59375 133.2 li
8.69336 133.2 li
8.79346 133.149 li
8.84375 133.149 li
8.94336 133.149 li
9.04346 133.149 li
9.14355 133.149 li
9.24365 133.149 li
9.29346 133.149 li
9.39355 133.1 li
9.49365 133.1 li
9.59375 133.1 li
9.69336 133.1 li
9.79346 133.1 li
9.84375 133.1 li
9.94336 133.05 li
10.0435 133.05 li
10.1436 133.05 li
10.2437 133.05 li
10.2935 133.05 li
10.3936 133.05 li
10.4937 133 li
10.5938 133 li
10.6934 133 li
10.7437 133 li
10.8438 133 li
10.9434 132.949 li
11.0435 132.949 li
11.1436 132.949 li
11.1934 132.949 li
11.2935 132.949 li
11.3936 132.949 li
11.4937 132.899 li
11.5938 132.899 li
11.6938 132.899 li
11.7437 132.899 li
11.8438 132.899 li
11.9438 132.85 li
12.0435 132.85 li
12.1436 132.85 li
12.1938 132.85 li
12.2935 132.85 li
12.3936 132.8 li
12.4937 132.8 li
12.5938 132.8 li
12.6436 132.8 li
12.7437 132.8 li
12.8438 132.8 li
12.9438 132.75 li
13.0435 132.75 li
13.0938 132.75 li
87.8936 27.8999 mo
107.844 27.8999 li
@
0.5 lw
[] 0 dsh
3.89355 0.25 mo
3.89355 3.3999 li
3.89355 179.3 mo
3.89355 176.149 li
3.89355 0.25 mo
3.89355 179.3 li
275.044 179.3 li
275.044 0.25 li
3.89355 0.25 li
3.89355 0.25 li
cp
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf0 188.628 mo(   )[1.9458 1.94629 0 ]xsh5.83594 188.628 mo( )sh49.0938 0.25 mo
49.0938 3.3999 li
49.0938 179.3 mo
49.0938 176.149 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf45.1953 188.628 mo(   )[1.9458 1.94629 0 ]xsh51.0313 188.628 mo( )sh94.2939 0.25 mo
94.2939 3.3999 li
94.2939 179.3 mo
94.2939 176.149 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf90.3984 188.628 mo(   )[1.9458 1.94629 0 ]xsh96.2344 188.628 mo( )sh139.494 0.25 mo
139.494 3.3999 li
139.494 179.3 mo
139.494 176.149 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf135.594 188.628 mo(   )[1.9458 1.94629 0 ]xsh141.43 188.628 mo( )sh184.644 0.25 mo
184.644 3.3999 li
184.644 179.3 mo
184.644 176.149 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf180.742 188.628 mo(   )[1.94629 1.94531 0 ]xsh186.586 188.628 mo( )sh229.844 0.25 mo
229.844 3.3999 li
229.844 179.3 mo
229.844 176.149 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf225.953 188.628 mo(   )[1.94629 1.94531 0 ]xsh231.789 188.628 mo( )sh275.044 0.25 mo
275.044 3.3999 li
275.044 179.3 mo
275.044 176.149 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf271.141 188.628 mo(   )[1.94629 1.94531 0 ]xsh276.984 188.628 mo( )sh0.125 lw
[0.5 1 ] 0 dsh
3.89355 134.55 mo
275.044 134.55 li
@
0.5 lw
[] 0 dsh
3.89355 0.25 mo
3.89355 179.3 li
275.044 179.3 li
275.044 0.25 li
3.89355 0.25 li
3.89355 0.25 li
cp
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf69.1641 170.433 mo(Sample Mean)[4.66895 3.89209 5.83105 3.8916 1.5542 3.89209 1.9458 5.83105 3.89209 3.8916 0 ]xsh0.125 lw
[0.5 1 ] 0 dsh
141.494 179.3 mo
141.494 0.25 li
@
0.25 lw
[] 0 dsh
135.444 169.7 mo
141.494 168.1 li
135.444 166.5 li
116.894 168.1 mo
141.494 168.1 li
135.444 169.7 mo
141.494 168.1 li
135.444 166.5 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginEGEGYB+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B64EDF8861093A50D70CE704C3B99B255E57C25F5628D6A25DCF329FDC490B240CA8E3263684788E9E559211DF7A652BCEA6E7473D115402933A862D3C0BED9681856F5ACE8B339645A6A4CED62CD1A26855F2D51956984EE13F47812E810D9E8C98922B6C1937C1681825270D4D77D4BBDEECB712B7702AEEC61BE96AFEBE20DFCCFCC19F8646EA0A427DFBAA43CEB1ACB616853A6CD4C3E4CEE20B743FFD4303148B5B4D479ED1038084D37CCEE34880877DCE43721DF888> |-systemdict /gcheck known {setglobal} if end {end} ifendEGEGYB+Helvetica /Encoding getdup 66 /B putpop%ADOEndSubsetFont
/EGEGYB+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three 14{/.notdef}rp /B /.notdef /D /E 7{/.notdef}rp /M 5{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]EGEGYB+Helvetica nfEGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf194.492 9.2373 mo(Bootstrap Means)[4.66895 3.8916 3.89258 1.94629 3.5 1.94531 2.33105 3.89258 3.8916 1.94629 5.83105 3.8916 3.8916 3.89258 0 ]xsh199.438 16.2373 mo(Bootstrap Means)[4.66895 3.8916 3.89258 1.94629 3.5 1.94531 2.33105 3.89258 3.8916 1.94629 5.83105 3.8916 3.8916 3.89258 0 ]xsh152.329 118.5 mo
152.329 117.63 151.623 116.925 150.754 116.925 cv
149.885 116.925 149.179 117.63 149.179 118.5 cv
149.179 119.369 149.885 120.075 150.754 120.075 cv
151.623 120.075 152.329 119.369 152.329 118.5 cv
@
1 lc
150.744 118.6 mo
150.744 118.6 li
@
0 lc
133.729 92.6997 mo
133.729 91.8306 133.023 91.125 132.154 91.125 cv
131.284 91.125 130.579 91.8306 130.579 92.6997 cv
130.579 93.5693 131.284 94.2744 132.154 94.2744 cv
133.023 94.2744 133.729 93.5693 133.729 92.6997 cv
@
1 lc
132.094 92.6997 mo
132.094 92.6997 li
@
0 lc
142.369 100.5 mo
142.369 99.6299 141.663 98.9248 140.794 98.9248 cv
139.924 98.9248 139.219 99.6299 139.219 100.5 cv
139.219 101.369 139.924 102.075 140.794 102.075 cv
141.663 102.075 142.369 101.369 142.369 100.5 cv
@
1 lc
140.744 100.55 mo
140.744 100.55 li
@
0 lc
153.528 103.38 mo
153.528 102.511 152.823 101.805 151.954 101.805 cv
151.084 101.805 150.379 102.511 150.379 103.38 cv
150.379 104.249 151.084 104.955 151.954 104.955 cv
152.823 104.955 153.528 104.249 153.528 103.38 cv
@
1 lc
151.943 103.45 mo
151.943 103.45 li
@
0 lc
132.529 106.74 mo
132.529 105.87 131.823 105.165 130.954 105.165 cv
130.084 105.165 129.379 105.87 129.379 106.74 cv
129.379 107.609 130.084 108.314 130.954 108.314 cv
131.823 108.314 132.529 107.609 132.529 106.74 cv
@
1 lc
130.994 106.649 mo
130.994 106.649 li
@
0 lc
143.809 114.42 mo
143.809 113.551 143.104 112.845 142.234 112.845 cv
141.364 112.845 140.659 113.551 140.659 114.42 cv
140.659 115.289 141.364 115.995 142.234 115.995 cv
143.104 115.995 143.809 115.289 143.809 114.42 cv
@
1 lc
142.294 114.5 mo
142.294 114.5 li
@
0 lc
147.648 87.8999 mo
147.648 87.0303 146.943 86.3247 146.074 86.3247 cv
145.204 86.3247 144.499 87.0303 144.499 87.8999 cv
144.499 88.769 145.204 89.4746 146.074 89.4746 cv
146.943 89.4746 147.648 88.769 147.648 87.8999 cv
@
1 lc
146.144 87.8999 mo
146.144 87.8999 li
@
0 lc
133.129 81.2998 mo
133.129 80.4302 132.423 79.7246 131.554 79.7246 cv
130.685 79.7246 129.979 80.4302 129.979 81.2998 cv
129.979 82.1689 130.685 82.875 131.554 82.875 cv
132.423 82.875 133.129 82.1689 133.129 81.2998 cv
@
1 lc
131.544 81.2998 mo
131.544 81.2998 li
@
0 lc
137.209 97.1396 mo
137.209 96.2705 136.503 95.5645 135.634 95.5645 cv
134.764 95.5645 134.059 96.2705 134.059 97.1396 cv
134.059 98.0088 134.764 98.7148 135.634 98.7148 cv
136.503 98.7148 137.209 98.0088 137.209 97.1396 cv
@
1 lc
135.644 97.2002 mo
135.644 97.2002 li
@
0 lc
147.769 106.5 mo
147.769 105.63 147.063 104.925 146.193 104.925 cv
145.324 104.925 144.619 105.63 144.619 106.5 cv
144.619 107.369 145.324 108.075 146.193 108.075 cv
147.063 108.075 147.769 107.369 147.769 106.5 cv
@
1 lc
146.193 106.55 mo
146.193 106.55 li
@
0 lc
151.009 115.38 mo
151.009 114.511 150.303 113.805 149.434 113.805 cv
148.564 113.805 147.858 114.511 147.858 115.38 cv
147.858 116.249 148.564 116.955 149.434 116.955 cv
150.303 116.955 151.009 116.249 151.009 115.38 cv
@
1 lc
149.443 115.45 mo
149.443 115.45 li
@
0 lc
154.608 85.6196 mo
154.608 84.7505 153.903 84.0449 153.034 84.0449 cv
152.164 84.0449 151.459 84.7505 151.459 85.6196 cv
151.459 86.4893 152.164 87.1948 153.034 87.1948 cv
153.903 87.1948 154.608 86.4893 154.608 85.6196 cv
@
1 lc
152.943 85.6499 mo
152.943 85.6499 li
@
0 lc
142.369 106.5 mo
142.369 105.63 141.663 104.925 140.794 104.925 cv
139.924 104.925 139.219 105.63 139.219 106.5 cv
139.219 107.369 139.924 108.075 140.794 108.075 cv
141.663 108.075 142.369 107.369 142.369 106.5 cv
@
1 lc
140.894 106.399 mo
140.894 106.399 li
@
0 lc
148.369 93.0596 mo
148.369 92.1904 147.663 91.4849 146.794 91.4849 cv
145.925 91.4849 145.219 92.1904 145.219 93.0596 cv
145.219 93.9287 145.925 94.6348 146.794 94.6348 cv
147.663 94.6348 148.369 93.9287 148.369 93.0596 cv
@
1 lc
146.844 93.1499 mo
146.844 93.1499 li
@
0 lc
151.009 84.4199 mo
151.009 83.5503 150.303 82.8447 149.434 82.8447 cv
148.564 82.8447 147.858 83.5503 147.858 84.4199 cv
147.858 85.2891 148.564 85.9946 149.434 85.9946 cv
150.303 85.9946 151.009 85.2891 151.009 84.4199 cv
@
1 lc
149.443 84.3496 mo
149.443 84.3496 li
@
0 lc
143.809 112.26 mo
143.809 111.391 143.104 110.685 142.234 110.685 cv
141.364 110.685 140.659 111.391 140.659 112.26 cv
140.659 113.129 141.364 113.835 142.234 113.835 cv
143.104 113.835 143.809 113.129 143.809 112.26 cv
@
1 lc
142.244 112.35 mo
142.244 112.35 li
@
0 lc
145.249 116.34 mo
145.249 115.471 144.543 114.765 143.674 114.765 cv
142.805 114.765 142.099 115.471 142.099 116.34 cv
142.099 117.209 142.805 117.915 143.674 117.915 cv
144.543 117.915 145.249 117.209 145.249 116.34 cv
@
1 lc
143.744 116.399 mo
143.744 116.399 li
@
0 lc
145.488 81.7798 mo
145.488 80.9102 144.783 80.2046 143.914 80.2046 cv
143.044 80.2046 142.339 80.9102 142.339 81.7798 cv
142.339 82.6494 143.044 83.355 143.914 83.355 cv
144.783 83.355 145.488 82.6494 145.488 81.7798 cv
@
1 lc
143.943 81.8496 mo
143.943 81.8496 li
@
0 lc
141.169 108.42 mo
141.169 107.551 140.463 106.845 139.594 106.845 cv
138.724 106.845 138.019 107.551 138.019 108.42 cv
138.019 109.289 138.724 109.995 139.594 109.995 cv
140.463 109.995 141.169 109.289 141.169 108.42 cv
@
1 lc
139.494 108.399 mo
139.494 108.399 li
@
0 lc
148.849 111.3 mo
148.849 110.431 148.144 109.725 147.273 109.725 cv
146.404 109.725 145.699 110.431 145.699 111.3 cv
145.699 112.169 146.404 112.875 147.273 112.875 cv
148.144 112.875 148.849 112.169 148.849 111.3 cv
@
1 lc
147.193 111.399 mo
147.193 111.399 li
@
0 lc
147.409 105.899 mo
147.409 105.03 146.703 104.325 145.834 104.325 cv
144.965 104.325 144.259 105.03 144.259 105.899 cv
144.259 106.77 144.965 107.475 145.834 107.475 cv
146.703 107.475 147.409 106.77 147.409 105.899 cv
@
1 lc
145.894 105.899 mo
145.894 105.899 li
@
0 lc
142.369 117.3 mo
142.369 116.431 141.663 115.725 140.794 115.725 cv
139.924 115.725 139.219 116.431 139.219 117.3 cv
139.219 118.169 139.924 118.875 140.794 118.875 cv
141.663 118.875 142.369 118.169 142.369 117.3 cv
@
1 lc
140.694 117.35 mo
140.694 117.35 li
@
0 lc
139.249 105.3 mo
139.249 104.431 138.543 103.725 137.674 103.725 cv
136.804 103.725 136.099 104.431 136.099 105.3 cv
136.099 106.169 136.804 106.875 137.674 106.875 cv
138.543 106.875 139.249 106.169 139.249 105.3 cv
@
1 lc
137.644 105.35 mo
137.644 105.35 li
@
0 lc
144.528 82.2598 mo
144.528 81.3906 143.823 80.6846 142.954 80.6846 cv
142.084 80.6846 141.379 81.3906 141.379 82.2598 cv
141.379 83.1294 142.084 83.835 142.954 83.835 cv
143.823 83.835 144.528 83.1294 144.528 82.2598 cv
@
1 lc
142.894 82.1997 mo
142.894 82.1997 li
@
0 lc
148.369 110.58 mo
148.369 109.71 147.663 109.005 146.794 109.005 cv
145.925 109.005 145.219 109.71 145.219 110.58 cv
145.219 111.449 145.925 112.155 146.794 112.155 cv
147.663 112.155 148.369 111.449 148.369 110.58 cv
@
1 lc
146.844 110.6 mo
146.844 110.6 li
@
0 lc
144.769 84.6597 mo
144.769 83.7905 144.063 83.085 143.193 83.085 cv
142.324 83.085 141.619 83.7905 141.619 84.6597 cv
141.619 85.5293 142.324 86.2349 143.193 86.2349 cv
144.063 86.2349 144.769 85.5293 144.769 84.6597 cv
@
1 lc
143.144 84.6997 mo
143.144 84.6997 li
@
0 lc
143.568 110.819 mo
143.568 109.95 142.863 109.245 141.994 109.245 cv
141.125 109.245 140.419 109.95 140.419 110.819 cv
140.419 111.689 141.125 112.395 141.994 112.395 cv
142.863 112.395 143.568 111.689 143.568 110.819 cv
@
1 lc
141.994 110.75 mo
141.994 110.75 li
@
0 lc
147.648 86.0996 mo
147.648 85.2305 146.943 84.5249 146.074 84.5249 cv
145.204 84.5249 144.499 85.2305 144.499 86.0996 cv
144.499 86.9692 145.204 87.6748 146.074 87.6748 cv
146.943 87.6748 147.648 86.9692 147.648 86.0996 cv
@
1 lc
146.094 86.0996 mo
146.094 86.0996 li
@
0 lc
144.769 106.74 mo
144.769 105.87 144.063 105.165 143.193 105.165 cv
142.324 105.165 141.619 105.87 141.619 106.74 cv
141.619 107.609 142.324 108.314 143.193 108.314 cv
144.063 108.314 144.769 107.609 144.769 106.74 cv
@
1 lc
143.294 106.75 mo
143.294 106.75 li
@
0 lc
140.329 86.5796 mo
140.329 85.7104 139.623 85.0049 138.754 85.0049 cv
137.884 85.0049 137.179 85.7104 137.179 86.5796 cv
137.179 87.4492 137.884 88.1548 138.754 88.1548 cv
139.623 88.1548 140.329 87.4492 140.329 86.5796 cv
@
1 lc
138.744 86.5498 mo
138.744 86.5498 li
@
0 lc
134.809 110.34 mo
134.809 109.471 134.103 108.765 133.234 108.765 cv
132.364 108.765 131.659 109.471 131.659 110.34 cv
131.659 111.209 132.364 111.915 133.234 111.915 cv
134.103 111.915 134.809 111.209 134.809 110.34 cv
@
1 lc
133.244 110.3 mo
133.244 110.3 li
@
0 lc
136.369 122.939 mo
136.369 122.07 135.663 121.365 134.794 121.365 cv
133.924 121.365 133.219 122.07 133.219 122.939 cv
133.219 123.81 133.924 124.515 134.794 124.515 cv
135.663 124.515 136.369 123.81 136.369 122.939 cv
@
1 lc
134.894 122.95 mo
134.894 122.95 li
@
0 lc
143.089 99.2998 mo
143.089 98.4307 142.383 97.7246 141.514 97.7246 cv
140.645 97.7246 139.939 98.4307 139.939 99.2998 cv
139.939 100.169 140.645 100.875 141.514 100.875 cv
142.383 100.875 143.089 100.169 143.089 99.2998 cv
@
1 lc
141.443 99.25 mo
141.443 99.25 li
@
0 lc
144.769 100.5 mo
144.769 99.6299 144.063 98.9248 143.193 98.9248 cv
142.324 98.9248 141.619 99.6299 141.619 100.5 cv
141.619 101.369 142.324 102.075 143.193 102.075 cv
144.063 102.075 144.769 101.369 144.769 100.5 cv
@
1 lc
143.244 100.55 mo
143.244 100.55 li
@
0 lc
150.528 116.819 mo
150.528 115.95 149.823 115.245 148.954 115.245 cv
148.084 115.245 147.379 115.95 147.379 116.819 cv
147.379 117.689 148.084 118.395 148.954 118.395 cv
149.823 118.395 150.528 117.689 150.528 116.819 cv
@
1 lc
148.994 116.85 mo
148.994 116.85 li
@
0 lc
139.249 95.7002 mo
139.249 94.8301 138.543 94.125 137.674 94.125 cv
136.804 94.125 136.099 94.8301 136.099 95.7002 cv
136.099 96.5693 136.804 97.2744 137.674 97.2744 cv
138.543 97.2744 139.249 96.5693 139.249 95.7002 cv
@
1 lc
137.644 95.75 mo
137.644 95.75 li
@
0 lc
140.329 85.3799 mo
140.329 84.5103 139.623 83.8047 138.754 83.8047 cv
137.884 83.8047 137.179 84.5103 137.179 85.3799 cv
137.179 86.249 137.884 86.9546 138.754 86.9546 cv
139.623 86.9546 140.329 86.249 140.329 85.3799 cv
@
1 lc
138.744 85.3999 mo
138.744 85.3999 li
@
0 lc
138.769 88.2598 mo
138.769 87.3906 138.063 86.6846 137.194 86.6846 cv
136.324 86.6846 135.619 87.3906 135.619 88.2598 cv
135.619 89.1294 136.324 89.835 137.194 89.835 cv
138.063 89.835 138.769 89.1294 138.769 88.2598 cv
@
1 lc
137.144 88.2998 mo
137.144 88.2998 li
@
0 lc
144.528 114.66 mo
144.528 113.79 143.823 113.085 142.954 113.085 cv
142.084 113.085 141.379 113.79 141.379 114.66 cv
141.379 115.529 142.084 116.234 142.954 116.234 cv
143.823 116.234 144.528 115.529 144.528 114.66 cv
@
1 lc
142.994 114.649 mo
142.994 114.649 li
@
0 lc
135.409 116.1 mo
135.409 115.23 134.703 114.524 133.834 114.524 cv
132.964 114.524 132.259 115.23 132.259 116.1 cv
132.259 116.969 132.964 117.675 133.834 117.675 cv
134.703 117.675 135.409 116.969 135.409 116.1 cv
@
1 lc
133.744 116.1 mo
133.744 116.1 li
@
0 lc
133.729 106.5 mo
133.729 105.63 133.023 104.925 132.154 104.925 cv
131.284 104.925 130.579 105.63 130.579 106.5 cv
130.579 107.369 131.284 108.075 132.154 108.075 cv
133.023 108.075 133.729 107.369 133.729 106.5 cv
@
1 lc
132.144 106.55 mo
132.144 106.55 li
@
0 lc
145.129 108.66 mo
145.129 107.79 144.423 107.085 143.554 107.085 cv
142.685 107.085 141.979 107.79 141.979 108.66 cv
141.979 109.529 142.685 110.234 143.554 110.234 cv
144.423 110.234 145.129 109.529 145.129 108.66 cv
@
1 lc
143.544 108.6 mo
143.544 108.6 li
@
0 lc
143.329 98.0996 mo
143.329 97.2305 142.623 96.5244 141.754 96.5244 cv
140.884 96.5244 140.179 97.2305 140.179 98.0996 cv
140.179 98.9688 140.884 99.6748 141.754 99.6748 cv
142.623 99.6748 143.329 98.9688 143.329 98.0996 cv
@
1 lc
141.693 98.0996 mo
141.693 98.0996 li
@
0 lc
143.329 79.3799 mo
143.329 78.5103 142.623 77.8047 141.754 77.8047 cv
140.884 77.8047 140.179 78.5103 140.179 79.3799 cv
140.179 80.249 140.884 80.9546 141.754 80.9546 cv
142.623 80.9546 143.329 80.249 143.329 79.3799 cv
@
1 lc
141.744 79.3496 mo
141.744 79.3496 li
@
0 lc
145.729 107.34 mo
145.729 106.471 145.023 105.765 144.153 105.765 cv
143.284 105.765 142.578 106.471 142.578 107.34 cv
142.578 108.209 143.284 108.915 144.153 108.915 cv
145.023 108.915 145.729 108.209 145.729 107.34 cv
@
1 lc
144.094 107.35 mo
144.094 107.35 li
@
0 lc
143.329 120.42 mo
143.329 119.551 142.623 118.845 141.754 118.845 cv
140.884 118.845 140.179 119.551 140.179 120.42 cv
140.179 121.289 140.884 121.995 141.754 121.995 cv
142.623 121.995 143.329 121.289 143.329 120.42 cv
@
1 lc
141.844 120.45 mo
141.844 120.45 li
@
0 lc
142.129 101.46 mo
142.129 100.591 141.424 99.8848 140.554 99.8848 cv
139.685 99.8848 138.979 100.591 138.979 101.46 cv
138.979 102.329 139.685 103.035 140.554 103.035 cv
141.424 103.035 142.129 102.329 142.129 101.46 cv
@
1 lc
140.494 101.45 mo
140.494 101.45 li
@
0 lc
147.648 116.58 mo
147.648 115.71 146.943 115.005 146.074 115.005 cv
145.204 115.005 144.499 115.71 144.499 116.58 cv
144.499 117.449 145.204 118.155 146.074 118.155 cv
146.943 118.155 147.648 117.449 147.648 116.58 cv
@
1 lc
145.994 116.55 mo
145.994 116.55 li
@
0 lc
150.769 108.899 mo
150.769 108.03 150.063 107.325 149.193 107.325 cv
148.324 107.325 147.619 108.03 147.619 108.899 cv
147.619 109.77 148.324 110.475 149.193 110.475 cv
150.063 110.475 150.769 109.77 150.769 108.899 cv
@
1 lc
149.193 109 mo
149.193 109 li
@
0 lc
132.529 120.899 mo
132.529 120.03 131.823 119.325 130.954 119.325 cv
130.084 119.325 129.379 120.03 129.379 120.899 cv
129.379 121.77 130.084 122.475 130.954 122.475 cv
131.823 122.475 132.529 121.77 132.529 120.899 cv
@
1 lc
130.894 120.899 mo
130.894 120.899 li
@
0 lc
141.889 106.02 mo
141.889 105.15 141.184 104.444 140.314 104.444 cv
139.444 104.444 138.739 105.15 138.739 106.02 cv
138.739 106.89 139.444 107.595 140.314 107.595 cv
141.184 107.595 141.889 106.89 141.889 106.02 cv
@
1 lc
140.244 105.95 mo
140.244 105.95 li
@
0 lc
137.329 106.74 mo
137.329 105.87 136.623 105.165 135.754 105.165 cv
134.884 105.165 134.179 105.87 134.179 106.74 cv
134.179 107.609 134.884 108.314 135.754 108.314 cv
136.623 108.314 137.329 107.609 137.329 106.74 cv
@
1 lc
135.794 106.75 mo
135.794 106.75 li
@
0 lc
154.129 96.2998 mo
154.129 95.4307 153.423 94.7246 152.554 94.7246 cv
151.685 94.7246 150.979 95.4307 150.979 96.2998 cv
150.979 97.1689 151.685 97.875 152.554 97.875 cv
153.423 97.875 154.129 97.1689 154.129 96.2998 cv
@
1 lc
152.494 96.2998 mo
152.494 96.2998 li
@
0 lc
159.169 113.46 mo
159.169 112.591 158.463 111.885 157.594 111.885 cv
156.725 111.885 156.019 112.591 156.019 113.46 cv
156.019 114.329 156.725 115.035 157.594 115.035 cv
158.463 115.035 159.169 114.329 159.169 113.46 cv
@
1 lc
157.544 113.399 mo
157.544 113.399 li
@
0 lc
139.969 81.2998 mo
139.969 80.4302 139.263 79.7246 138.394 79.7246 cv
137.524 79.7246 136.819 80.4302 136.819 81.2998 cv
136.819 82.1689 137.524 82.875 138.394 82.875 cv
139.263 82.875 139.969 82.1689 139.969 81.2998 cv
@
1 lc
138.494 81.2998 mo
138.494 81.2998 li
@
0 lc
143.089 110.819 mo
143.089 109.95 142.383 109.245 141.514 109.245 cv
140.645 109.245 139.939 109.95 139.939 110.819 cv
139.939 111.689 140.645 112.395 141.514 112.395 cv
142.383 112.395 143.089 111.689 143.089 110.819 cv
@
1 lc
141.443 110.899 mo
141.443 110.899 li
@
0 lc
145.009 103.14 mo
145.009 102.271 144.303 101.564 143.434 101.564 cv
142.564 101.564 141.859 102.271 141.859 103.14 cv
141.859 104.009 142.564 104.715 143.434 104.715 cv
144.303 104.715 145.009 104.009 145.009 103.14 cv
@
1 lc
143.394 103.05 mo
143.394 103.05 li
@
0 lc
146.449 79.7397 mo
146.449 78.8701 145.743 78.165 144.874 78.165 cv
144.004 78.165 143.299 78.8701 143.299 79.7397 cv
143.299 80.6094 144.004 81.3149 144.874 81.3149 cv
145.743 81.3149 146.449 80.6094 146.449 79.7397 cv
@
1 lc
144.794 79.75 mo
144.794 79.75 li
@
0 lc
154.369 99.7803 mo
154.369 98.9102 153.663 98.2051 152.794 98.2051 cv
151.925 98.2051 151.219 98.9102 151.219 99.7803 cv
151.219 100.649 151.925 101.354 152.794 101.354 cv
153.663 101.354 154.369 100.649 154.369 99.7803 cv
@
1 lc
152.744 99.8496 mo
152.744 99.8496 li
@
0 lc
153.648 80.5796 mo
153.648 79.7104 152.943 79.0049 152.074 79.0049 cv
151.204 79.0049 150.499 79.7104 150.499 80.5796 cv
150.499 81.4492 151.204 82.1548 152.074 82.1548 cv
152.943 82.1548 153.648 81.4492 153.648 80.5796 cv
@
1 lc
152.094 80.5498 mo
152.094 80.5498 li
@
0 lc
136.849 116.34 mo
136.849 115.471 136.143 114.765 135.274 114.765 cv
134.404 114.765 133.699 115.471 133.699 116.34 cv
133.699 117.209 134.404 117.915 135.274 117.915 cv
136.143 117.915 136.849 117.209 136.849 116.34 cv
@
1 lc
135.344 116.3 mo
135.344 116.3 li
@
0 lc
132.529 89.6997 mo
132.529 88.8306 131.823 88.125 130.954 88.125 cv
130.084 88.125 129.379 88.8306 129.379 89.6997 cv
129.379 90.5693 130.084 91.2749 130.954 91.2749 cv
131.823 91.2749 132.529 90.5693 132.529 89.6997 cv
@
1 lc
130.994 89.7998 mo
130.994 89.7998 li
@
0 lc
145.488 95.9395 mo
145.488 95.0703 144.783 94.3652 143.914 94.3652 cv
143.044 94.3652 142.339 95.0703 142.339 95.9395 cv
142.339 96.8096 143.044 97.5146 143.914 97.5146 cv
144.783 97.5146 145.488 96.8096 145.488 95.9395 cv
@
1 lc
143.994 95.8496 mo
143.994 95.8496 li
@
0 lc
141.408 87.7798 mo
141.408 86.9102 140.703 86.2046 139.834 86.2046 cv
138.964 86.2046 138.259 86.9102 138.259 87.7798 cv
138.259 88.6494 138.964 89.355 139.834 89.355 cv
140.703 89.355 141.408 88.6494 141.408 87.7798 cv
@
1 lc
139.744 87.75 mo
139.744 87.75 li
@
0 lc
135.889 106.979 mo
135.889 106.11 135.183 105.405 134.314 105.405 cv
133.444 105.405 132.739 106.11 132.739 106.979 cv
132.739 107.85 133.444 108.555 134.314 108.555 cv
135.183 108.555 135.889 107.85 135.889 106.979 cv
@
1 lc
134.244 106.95 mo
134.244 106.95 li
@
0 lc
133.249 79.8599 mo
133.249 78.9902 132.543 78.2847 131.674 78.2847 cv
130.804 78.2847 130.099 78.9902 130.099 79.8599 cv
130.099 80.729 130.804 81.4346 131.674 81.4346 cv
132.543 81.4346 133.249 80.729 133.249 79.8599 cv
@
1 lc
131.694 79.7998 mo
131.694 79.7998 li
@
0 lc
143.568 92.0996 mo
143.568 91.2305 142.863 90.5249 141.994 90.5249 cv
141.125 90.5249 140.419 91.2305 140.419 92.0996 cv
140.419 92.9692 141.125 93.6748 141.994 93.6748 cv
142.863 93.6748 143.568 92.9692 143.568 92.0996 cv
@
1 lc
141.994 92.1997 mo
141.994 92.1997 li
@
0 lc
143.809 105.78 mo
143.809 104.91 143.104 104.205 142.234 104.205 cv
141.364 104.205 140.659 104.91 140.659 105.78 cv
140.659 106.649 141.364 107.354 142.234 107.354 cv
143.104 107.354 143.809 106.649 143.809 105.78 cv
@
1 lc
142.244 105.8 mo
142.244 105.8 li
@
0 lc
148.608 91.3799 mo
148.608 90.5103 147.903 89.8047 147.034 89.8047 cv
146.164 89.8047 145.459 90.5103 145.459 91.3799 cv
145.459 92.249 146.164 92.9546 147.034 92.9546 cv
147.903 92.9546 148.608 92.249 148.608 91.3799 cv
@
1 lc
147.044 91.2998 mo
147.044 91.2998 li
@
0 lc
146.688 105.78 mo
146.688 104.91 145.983 104.205 145.113 104.205 cv
144.244 104.205 143.539 104.91 143.539 105.78 cv
143.539 106.649 144.244 107.354 145.113 107.354 cv
145.983 107.354 146.688 106.649 146.688 105.78 cv
@
1 lc
145.144 105.75 mo
145.144 105.75 li
@
0 lc
135.649 94.7402 mo
135.649 93.8701 134.943 93.165 134.074 93.165 cv
133.204 93.165 132.499 93.8701 132.499 94.7402 cv
132.499 95.6094 133.204 96.3145 134.074 96.3145 cv
134.943 96.3145 135.649 95.6094 135.649 94.7402 cv
@
1 lc
134.044 94.7998 mo
134.044 94.7998 li
@
0 lc
147.409 105.3 mo
147.409 104.431 146.703 103.725 145.834 103.725 cv
144.965 103.725 144.259 104.431 144.259 105.3 cv
144.259 106.169 144.965 106.875 145.834 106.875 cv
146.703 106.875 147.409 106.169 147.409 105.3 cv
@
1 lc
145.794 105.3 mo
145.794 105.3 li
@
0 lc
133.249 90.1797 mo
133.249 89.3105 132.543 88.605 131.674 88.605 cv
130.804 88.605 130.099 89.3105 130.099 90.1797 cv
130.099 91.0493 130.804 91.7549 131.674 91.7549 cv
132.543 91.7549 133.249 91.0493 133.249 90.1797 cv
@
1 lc
131.744 90.0996 mo
131.744 90.0996 li
@
0 lc
146.449 117.899 mo
146.449 117.03 145.743 116.325 144.874 116.325 cv
144.004 116.325 143.299 117.03 143.299 117.899 cv
143.299 118.77 144.004 119.475 144.874 119.475 cv
145.743 119.475 146.449 118.77 146.449 117.899 cv
@
1 lc
144.943 117.899 mo
144.943 117.899 li
@
0 lc
138.049 105.78 mo
138.049 104.91 137.343 104.205 136.474 104.205 cv
135.604 104.205 134.899 104.91 134.899 105.78 cv
134.899 106.649 135.604 107.354 136.474 107.354 cv
137.343 107.354 138.049 106.649 138.049 105.78 cv
@
1 lc
136.544 105.75 mo
136.544 105.75 li
@
0 lc
140.209 118.979 mo
140.209 118.11 139.503 117.405 138.634 117.405 cv
137.764 117.405 137.059 118.11 137.059 118.979 cv
137.059 119.85 137.764 120.555 138.634 120.555 cv
139.503 120.555 140.209 119.85 140.209 118.979 cv
@
1 lc
138.594 118.95 mo
138.594 118.95 li
@
0 lc
129.649 122.819 mo
129.649 121.95 128.943 121.245 128.074 121.245 cv
127.204 121.245 126.499 121.95 126.499 122.819 cv
126.499 123.689 127.204 124.395 128.074 124.395 cv
128.943 124.395 129.649 123.689 129.649 122.819 cv
@
1 lc
127.994 122.85 mo
127.994 122.85 li
@
0 lc
135.649 91.7397 mo
135.649 90.8706 134.943 90.165 134.074 90.165 cv
133.204 90.165 132.499 90.8706 132.499 91.7397 cv
132.499 92.6094 133.204 93.3149 134.074 93.3149 cv
134.943 93.3149 135.649 92.6094 135.649 91.7397 cv
@
1 lc
133.994 91.75 mo
133.994 91.75 li
@
0 lc
139.969 91.1396 mo
139.969 90.2705 139.263 89.5649 138.394 89.5649 cv
137.524 89.5649 136.819 90.2705 136.819 91.1396 cv
136.819 92.0093 137.524 92.7148 138.394 92.7148 cv
139.263 92.7148 139.969 92.0093 139.969 91.1396 cv
@
1 lc
138.494 91.1499 mo
138.494 91.1499 li
@
0 lc
131.329 88.2598 mo
131.329 87.3906 130.623 86.6846 129.754 86.6846 cv
128.884 86.6846 128.179 87.3906 128.179 88.2598 cv
128.179 89.1294 128.884 89.835 129.754 89.835 cv
130.623 89.835 131.329 89.1294 131.329 88.2598 cv
@
1 lc
129.794 88.3496 mo
129.794 88.3496 li
@
0 lc
132.769 80.8198 mo
132.769 79.9502 132.063 79.2446 131.194 79.2446 cv
130.324 79.2446 129.619 79.9502 129.619 80.8198 cv
129.619 81.689 130.324 82.3945 131.194 82.3945 cv
132.063 82.3945 132.769 81.689 132.769 80.8198 cv
@
1 lc
131.294 80.8496 mo
131.294 80.8496 li
@
0 lc
126.049 119.46 mo
126.049 118.591 125.343 117.885 124.474 117.885 cv
123.604 117.885 122.899 118.591 122.899 119.46 cv
122.899 120.329 123.604 121.035 124.474 121.035 cv
125.343 121.035 126.049 120.329 126.049 119.46 cv
@
1 lc
124.394 119.399 mo
124.394 119.399 li
@
0 lc
144.528 98.0996 mo
144.528 97.2305 143.823 96.5244 142.954 96.5244 cv
142.084 96.5244 141.379 97.2305 141.379 98.0996 cv
141.379 98.9688 142.084 99.6748 142.954 99.6748 cv
143.823 99.6748 144.528 98.9688 144.528 98.0996 cv
@
1 lc
143.044 98.0996 mo
143.044 98.0996 li
@
0 lc
135.649 100.02 mo
135.649 99.1504 134.943 98.4443 134.074 98.4443 cv
133.204 98.4443 132.499 99.1504 132.499 100.02 cv
132.499 100.89 133.204 101.595 134.074 101.595 cv
134.943 101.595 135.649 100.89 135.649 100.02 cv
@
1 lc
134.044 99.9502 mo
134.044 99.9502 li
@
0 lc
125.809 105.54 mo
125.809 104.67 125.103 103.965 124.234 103.965 cv
123.364 103.965 122.659 104.67 122.659 105.54 cv
122.659 106.409 123.364 107.115 124.234 107.115 cv
125.103 107.115 125.809 106.409 125.809 105.54 cv
@
1 lc
124.194 105.5 mo
124.194 105.5 li
@
0 lc
146.688 93.2998 mo
146.688 92.4302 145.983 91.7246 145.113 91.7246 cv
144.244 91.7246 143.539 92.4302 143.539 93.2998 cv
143.539 94.1689 144.244 94.875 145.113 94.875 cv
145.983 94.875 146.688 94.1689 146.688 93.2998 cv
@
1 lc
145.144 93.25 mo
145.144 93.25 li
@
0 lc
122.449 108.899 mo
122.449 108.03 121.743 107.325 120.874 107.325 cv
120.004 107.325 119.299 108.03 119.299 108.899 cv
119.299 109.77 120.004 110.475 120.874 110.475 cv
121.743 110.475 122.449 109.77 122.449 108.899 cv
@
1 lc
120.894 108.85 mo
120.894 108.85 li
@
0 lc
143.329 95.46 mo
143.329 94.5908 142.623 93.8848 141.754 93.8848 cv
140.884 93.8848 140.179 94.5908 140.179 95.46 cv
140.179 96.3291 140.884 97.0352 141.754 97.0352 cv
142.623 97.0352 143.329 96.3291 143.329 95.46 cv
@
1 lc
141.693 95.5 mo
141.693 95.5 li
@
0 lc
147.409 114.42 mo
147.409 113.551 146.703 112.845 145.834 112.845 cv
144.965 112.845 144.259 113.551 144.259 114.42 cv
144.259 115.289 144.965 115.995 145.834 115.995 cv
146.703 115.995 147.409 115.289 147.409 114.42 cv
@
1 lc
145.744 114.45 mo
145.744 114.45 li
@
0 lc
142.849 84.1797 mo
142.849 83.3105 142.143 82.605 141.273 82.605 cv
140.404 82.605 139.699 83.3105 139.699 84.1797 cv
139.699 85.0493 140.404 85.7549 141.273 85.7549 cv
142.143 85.7549 142.849 85.0493 142.849 84.1797 cv
@
1 lc
141.344 84.1499 mo
141.344 84.1499 li
@
0 lc
146.929 109.62 mo
146.929 108.75 146.223 108.045 145.354 108.045 cv
144.484 108.045 143.778 108.75 143.778 109.62 cv
143.778 110.489 144.484 111.194 145.354 111.194 cv
146.223 111.194 146.929 110.489 146.929 109.62 cv
@
1 lc
145.344 109.649 mo
145.344 109.649 li
@
0 lc
136.129 95.9395 mo
136.129 95.0703 135.423 94.3652 134.554 94.3652 cv
133.685 94.3652 132.979 95.0703 132.979 95.9395 cv
132.979 96.8096 133.685 97.5146 134.554 97.5146 cv
135.423 97.5146 136.129 96.8096 136.129 95.9395 cv
@
1 lc
134.544 96 mo
134.544 96 li
@
0 lc
141.408 118.979 mo
141.408 118.11 140.703 117.405 139.834 117.405 cv
138.964 117.405 138.259 118.11 138.259 118.979 cv
138.259 119.85 138.964 120.555 139.834 120.555 cv
140.703 120.555 141.408 119.85 141.408 118.979 cv
@
1 lc
139.894 119 mo
139.894 119 li
@
0 lc
152.929 88.98 mo
152.929 88.1104 152.223 87.4048 151.354 87.4048 cv
150.484 87.4048 149.778 88.1104 149.778 88.98 cv
149.778 89.8491 150.484 90.5547 151.354 90.5547 cv
152.223 90.5547 152.929 89.8491 152.929 88.98 cv
@
1 lc
151.344 89.0498 mo
151.344 89.0498 li
@
0 lc
134.929 110.34 mo
134.929 109.471 134.223 108.765 133.354 108.765 cv
132.484 108.765 131.779 109.471 131.779 110.34 cv
131.779 111.209 132.484 111.915 133.354 111.915 cv
134.223 111.915 134.929 111.209 134.929 110.34 cv
@
1 lc
133.444 110.3 mo
133.444 110.3 li
@
0 lc
141.889 107.22 mo
141.889 106.351 141.184 105.645 140.314 105.645 cv
139.444 105.645 138.739 106.351 138.739 107.22 cv
138.739 108.089 139.444 108.795 140.314 108.795 cv
141.184 108.795 141.889 108.089 141.889 107.22 cv
@
1 lc
140.394 107.25 mo
140.394 107.25 li
@
0 lc
152.449 108.18 mo
152.449 107.311 151.743 106.604 150.874 106.604 cv
150.004 106.604 149.299 107.311 149.299 108.18 cv
149.299 109.049 150.004 109.755 150.874 109.755 cv
151.743 109.755 152.449 109.049 152.449 108.18 cv
@
1 lc
150.794 108.2 mo
150.794 108.2 li
@
0 lc
147.648 83.2197 mo
147.648 82.3506 146.943 81.6445 146.074 81.6445 cv
145.204 81.6445 144.499 82.3506 144.499 83.2197 cv
144.499 84.0894 145.204 84.7949 146.074 84.7949 cv
146.943 84.7949 147.648 84.0894 147.648 83.2197 cv
@
1 lc
146.094 83.1997 mo
146.094 83.1997 li
@
0 lc
144.169 118.5 mo
144.169 117.63 143.463 116.925 142.594 116.925 cv
141.725 116.925 141.019 117.63 141.019 118.5 cv
141.019 119.369 141.725 120.075 142.594 120.075 cv
143.463 120.075 144.169 119.369 144.169 118.5 cv
@
1 lc
142.594 118.5 mo
142.594 118.5 li
@
0 lc
139.969 103.14 mo
139.969 102.271 139.263 101.564 138.394 101.564 cv
137.524 101.564 136.819 102.271 136.819 103.14 cv
136.819 104.009 137.524 104.715 138.394 104.715 cv
139.263 104.715 139.969 104.009 139.969 103.14 cv
@
1 lc
138.394 103.05 mo
138.394 103.05 li
@
0 lc
186.769 13.8599 mo
186.769 12.9902 186.063 12.2847 185.193 12.2847 cv
184.324 12.2847 183.619 12.9902 183.619 13.8599 cv
183.619 14.729 184.324 15.4346 185.193 15.4346 cv
186.063 15.4346 186.769 14.729 186.769 13.8599 cv
@
1 lc
185.294 13.8999 mo
185.294 13.8999 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf199.438 23.2373 mo(Bootstrap Distribution)[4.66895 3.8916 3.89258 1.94629 3.5 1.94531 2.33105 3.89258 3.8916 1.94629 5.05371 1.55371 3.5 1.94629 2.33105 1.55371 3.8916 3.89258 1.94531 1.55371 3.89258 0 ]xsh0 lc
269.894 134.55 mo
270.044 134.55 li
270.193 134.55 li
270.344 134.55 li
270.494 134.55 li
270.644 134.55 li
270.794 134.55 li
270.943 134.55 li
271.094 134.55 li
271.244 134.55 li
271.394 134.55 li
271.544 134.55 li
271.693 134.55 li
271.844 134.55 li
271.994 134.55 li
272.144 134.55 li
272.294 134.55 li
272.443 134.55 li
272.594 134.55 li
272.744 134.55 li
272.894 134.55 li
273.044 134.55 li
273.193 134.55 li
273.344 134.55 li
273.494 134.55 li
273.644 134.55 li
273.794 134.55 li
273.943 134.55 li
274.094 134.55 li
274.244 134.55 li
274.394 134.55 li
274.544 134.55 li
274.693 134.55 li
274.844 134.55 li
274.994 134.55 li
275.044 134.55 li
254.193 134.55 mo
254.394 134.55 li
254.544 134.55 li
254.693 134.55 li
254.844 134.55 li
254.994 134.55 li
255.144 134.55 li
255.294 134.55 li
255.443 134.55 li
255.594 134.55 li
255.744 134.55 li
255.894 134.55 li
256.044 134.55 li
256.193 134.55 li
256.344 134.55 li
256.494 134.55 li
256.644 134.55 li
256.794 134.55 li
256.943 134.55 li
257.094 134.55 li
257.244 134.55 li
257.394 134.55 li
257.544 134.55 li
257.693 134.55 li
257.844 134.55 li
257.994 134.55 li
258.144 134.55 li
258.294 134.55 li
258.443 134.55 li
258.594 134.55 li
258.744 134.55 li
258.894 134.55 li
259.044 134.55 li
259.193 134.55 li
259.344 134.55 li
259.494 134.55 li
259.644 134.55 li
259.794 134.55 li
259.943 134.55 li
260.094 134.55 li
260.244 134.55 li
260.394 134.55 li
260.544 134.55 li
260.693 134.55 li
260.844 134.55 li
260.994 134.55 li
261.144 134.55 li
261.294 134.55 li
261.443 134.55 li
261.594 134.55 li
261.744 134.55 li
261.894 134.55 li
262.044 134.55 li
262.193 134.55 li
262.344 134.55 li
262.494 134.55 li
262.644 134.55 li
262.794 134.55 li
262.943 134.55 li
263.094 134.55 li
263.244 134.55 li
263.394 134.55 li
263.544 134.55 li
263.693 134.55 li
263.844 134.55 li
263.994 134.55 li
264.144 134.55 li
264.294 134.55 li
264.443 134.55 li
264.594 134.55 li
264.744 134.55 li
264.894 134.55 li
265.044 134.55 li
265.244 134.55 li
265.394 134.55 li
265.544 134.55 li
265.693 134.55 li
265.844 134.55 li
265.994 134.55 li
266.144 134.55 li
266.294 134.55 li
266.443 134.55 li
266.594 134.55 li
266.744 134.55 li
266.894 134.55 li
267.044 134.55 li
267.193 134.55 li
267.344 134.55 li
267.494 134.55 li
267.644 134.55 li
267.794 134.55 li
267.943 134.55 li
268.094 134.55 li
268.244 134.55 li
268.394 134.55 li
268.544 134.55 li
268.693 134.55 li
268.844 134.55 li
268.994 134.55 li
269.144 134.55 li
269.294 134.55 li
269.443 134.55 li
269.594 134.55 li
269.744 134.55 li
269.894 134.55 li
238.544 134.55 mo
238.693 134.55 li
238.844 134.55 li
238.994 134.55 li
239.144 134.55 li
239.294 134.55 li
239.443 134.55 li
239.594 134.55 li
239.744 134.55 li
239.894 134.55 li
240.044 134.55 li
240.193 134.55 li
240.344 134.55 li
240.494 134.55 li
240.644 134.55 li
240.794 134.55 li
240.943 134.55 li
241.094 134.55 li
241.244 134.55 li
241.394 134.55 li
241.544 134.55 li
241.693 134.55 li
241.844 134.55 li
241.994 134.55 li
242.144 134.55 li
242.294 134.55 li
242.443 134.55 li
242.594 134.55 li
242.744 134.55 li
242.894 134.55 li
243.044 134.55 li
243.193 134.55 li
243.394 134.55 li
243.544 134.55 li
243.693 134.55 li
243.844 134.55 li
243.994 134.55 li
244.144 134.55 li
244.294 134.55 li
244.443 134.55 li
244.594 134.55 li
244.744 134.55 li
244.894 134.55 li
245.044 134.55 li
245.193 134.55 li
245.344 134.55 li
245.494 134.55 li
245.644 134.55 li
245.794 134.55 li
245.943 134.55 li
246.094 134.55 li
246.244 134.55 li
246.394 134.55 li
246.544 134.55 li
246.693 134.55 li
246.844 134.55 li
246.994 134.55 li
247.144 134.55 li
247.294 134.55 li
247.443 134.55 li
247.594 134.55 li
247.744 134.55 li
247.894 134.55 li
248.044 134.55 li
248.193 134.55 li
248.344 134.55 li
248.494 134.55 li
248.644 134.55 li
248.794 134.55 li
248.943 134.55 li
249.094 134.55 li
249.244 134.55 li
249.394 134.55 li
249.544 134.55 li
249.693 134.55 li
249.844 134.55 li
249.994 134.55 li
250.144 134.55 li
250.294 134.55 li
250.443 134.55 li
250.594 134.55 li
250.744 134.55 li
250.894 134.55 li
251.044 134.55 li
251.193 134.55 li
251.344 134.55 li
251.494 134.55 li
251.644 134.55 li
251.794 134.55 li
251.943 134.55 li
252.094 134.55 li
252.244 134.55 li
252.394 134.55 li
252.544 134.55 li
252.693 134.55 li
252.844 134.55 li
252.994 134.55 li
253.144 134.55 li
253.294 134.55 li
253.443 134.55 li
253.594 134.55 li
253.744 134.55 li
253.894 134.55 li
254.044 134.55 li
254.193 134.55 li
222.894 134.55 mo
223.044 134.55 li
223.193 134.55 li
223.344 134.55 li
223.494 134.55 li
223.644 134.55 li
223.794 134.55 li
223.943 134.55 li
224.094 134.55 li
224.244 134.55 li
224.394 134.55 li
224.544 134.55 li
224.693 134.55 li
224.844 134.55 li
224.994 134.55 li
225.144 134.55 li
225.294 134.55 li
225.443 134.55 li
225.594 134.55 li
225.744 134.55 li
225.894 134.55 li
226.044 134.55 li
226.193 134.55 li
226.344 134.55 li
226.494 134.55 li
226.644 134.55 li
226.794 134.55 li
226.943 134.55 li
227.094 134.55 li
227.244 134.55 li
227.394 134.55 li
227.544 134.55 li
227.693 134.55 li
227.844 134.55 li
227.994 134.55 li
228.144 134.55 li
228.294 134.55 li
228.443 134.55 li
228.594 134.55 li
228.744 134.55 li
228.894 134.55 li
229.044 134.55 li
229.193 134.55 li
229.344 134.55 li
229.494 134.55 li
229.644 134.55 li
229.794 134.55 li
229.943 134.55 li
230.094 134.55 li
230.244 134.55 li
230.394 134.55 li
230.544 134.55 li
230.693 134.55 li
230.844 134.55 li
230.994 134.55 li
231.144 134.55 li
231.294 134.55 li
231.443 134.55 li
231.594 134.55 li
231.744 134.55 li
231.894 134.55 li
232.044 134.55 li
232.193 134.55 li
232.344 134.55 li
232.544 134.55 li
232.693 134.55 li
232.844 134.55 li
232.994 134.55 li
233.144 134.55 li
233.294 134.55 li
233.443 134.55 li
233.594 134.55 li
233.744 134.55 li
233.894 134.55 li
234.044 134.55 li
234.193 134.55 li
234.344 134.55 li
234.494 134.55 li
234.644 134.55 li
234.794 134.55 li
234.943 134.55 li
235.094 134.55 li
235.244 134.55 li
235.394 134.55 li
235.544 134.55 li
235.693 134.55 li
235.844 134.55 li
235.994 134.55 li
236.144 134.55 li
236.294 134.55 li
236.443 134.55 li
236.594 134.55 li
236.744 134.55 li
236.894 134.55 li
237.044 134.55 li
237.193 134.55 li
237.344 134.55 li
237.494 134.55 li
237.644 134.55 li
237.794 134.55 li
237.943 134.55 li
238.094 134.55 li
238.244 134.55 li
238.394 134.55 li
238.544 134.55 li
207.193 134.55 mo
207.344 134.55 li
207.494 134.55 li
207.644 134.55 li
207.794 134.55 li
207.943 134.55 li
208.094 134.55 li
208.244 134.55 li
208.394 134.55 li
208.544 134.55 li
208.693 134.55 li
208.844 134.55 li
208.994 134.55 li
209.144 134.55 li
209.294 134.55 li
209.443 134.55 li
209.594 134.55 li
209.744 134.55 li
209.894 134.55 li
210.044 134.55 li
210.193 134.55 li
210.344 134.55 li
210.494 134.55 li
210.693 134.55 li
210.844 134.55 li
210.994 134.55 li
211.144 134.55 li
211.294 134.55 li
211.443 134.55 li
211.594 134.55 li
211.744 134.55 li
211.894 134.55 li
212.044 134.55 li
212.193 134.55 li
212.344 134.55 li
212.494 134.55 li
212.644 134.55 li
212.794 134.55 li
212.943 134.55 li
213.094 134.55 li
213.244 134.55 li
213.394 134.55 li
213.544 134.55 li
213.693 134.55 li
213.844 134.55 li
213.994 134.55 li
214.144 134.55 li
214.294 134.55 li
214.443 134.55 li
214.594 134.55 li
214.744 134.55 li
214.894 134.55 li
215.044 134.55 li
215.193 134.55 li
215.344 134.55 li
215.494 134.55 li
215.644 134.55 li
215.794 134.55 li
215.943 134.55 li
216.094 134.55 li
216.244 134.55 li
216.394 134.55 li
216.544 134.55 li
216.693 134.55 li
216.844 134.55 li
216.994 134.55 li
217.144 134.55 li
217.294 134.55 li
217.443 134.55 li
217.594 134.55 li
217.744 134.55 li
217.894 134.55 li
218.044 134.55 li
218.193 134.55 li
218.344 134.55 li
218.494 134.55 li
218.644 134.55 li
218.794 134.55 li
218.943 134.55 li
219.094 134.55 li
219.244 134.55 li
219.394 134.55 li
219.544 134.55 li
219.693 134.55 li
219.844 134.55 li
219.994 134.55 li
220.144 134.55 li
220.294 134.55 li
220.443 134.55 li
220.594 134.55 li
220.744 134.55 li
220.894 134.55 li
221.044 134.55 li
221.193 134.55 li
221.344 134.55 li
221.544 134.55 li
221.693 134.55 li
221.844 134.55 li
221.994 134.55 li
222.144 134.55 li
222.294 134.55 li
222.443 134.55 li
222.594 134.55 li
222.744 134.55 li
222.894 134.55 li
191.544 134.55 mo
191.693 134.55 li
191.844 134.55 li
191.994 134.55 li
192.144 134.55 li
192.294 134.55 li
192.443 134.55 li
192.594 134.55 li
192.744 134.55 li
192.894 134.55 li
193.044 134.55 li
193.193 134.55 li
193.344 134.55 li
193.494 134.55 li
193.644 134.55 li
193.794 134.55 li
193.943 134.55 li
194.094 134.55 li
194.244 134.55 li
194.394 134.55 li
194.544 134.55 li
194.693 134.55 li
194.844 134.55 li
194.994 134.55 li
195.144 134.55 li
195.294 134.55 li
195.443 134.55 li
195.594 134.55 li
195.744 134.55 li
195.894 134.55 li
196.044 134.55 li
196.193 134.55 li
196.344 134.55 li
196.494 134.55 li
196.644 134.55 li
196.794 134.55 li
196.943 134.55 li
197.094 134.55 li
197.244 134.55 li
197.394 134.55 li
197.544 134.55 li
197.693 134.55 li
197.844 134.55 li
197.994 134.55 li
198.144 134.55 li
198.294 134.55 li
198.443 134.55 li
198.594 134.55 li
198.744 134.55 li
198.894 134.55 li
199.044 134.55 li
199.193 134.55 li
199.344 134.55 li
199.494 134.55 li
199.693 134.55 li
199.844 134.55 li
199.994 134.55 li
200.144 134.55 li
200.294 134.55 li
200.443 134.55 li
200.594 134.55 li
200.744 134.55 li
200.894 134.55 li
201.044 134.55 li
201.193 134.55 li
201.344 134.55 li
201.494 134.55 li
201.644 134.55 li
201.794 134.55 li
201.943 134.55 li
202.094 134.55 li
202.244 134.55 li
202.394 134.55 li
202.544 134.55 li
202.693 134.55 li
202.844 134.55 li
202.994 134.55 li
203.144 134.55 li
203.294 134.55 li
203.443 134.55 li
203.594 134.55 li
203.744 134.55 li
203.894 134.55 li
204.044 134.55 li
204.193 134.55 li
204.344 134.55 li
204.494 134.55 li
204.644 134.55 li
204.794 134.55 li
204.943 134.55 li
205.094 134.55 li
205.244 134.55 li
205.394 134.55 li
205.544 134.55 li
205.693 134.55 li
205.844 134.55 li
205.994 134.55 li
206.144 134.55 li
206.294 134.55 li
206.443 134.55 li
206.594 134.55 li
206.744 134.55 li
206.894 134.55 li
207.044 134.55 li
207.193 134.55 li
175.844 134.55 mo
175.994 134.55 li
176.144 134.55 li
176.294 134.55 li
176.443 134.55 li
176.594 134.55 li
176.744 134.55 li
176.894 134.55 li
177.044 134.55 li
177.193 134.55 li
177.344 134.55 li
177.494 134.55 li
177.644 134.55 li
177.844 134.55 li
177.994 134.55 li
178.144 134.55 li
178.294 134.55 li
178.443 134.55 li
178.594 134.55 li
178.744 134.55 li
178.894 134.55 li
179.044 134.55 li
179.193 134.55 li
179.344 134.55 li
179.494 134.55 li
179.644 134.55 li
179.794 134.55 li
179.943 134.55 li
180.094 134.55 li
180.244 134.55 li
180.394 134.55 li
180.544 134.55 li
180.693 134.55 li
180.844 134.55 li
180.994 134.55 li
181.144 134.55 li
181.294 134.55 li
181.443 134.55 li
181.594 134.55 li
181.744 134.55 li
181.894 134.55 li
182.044 134.55 li
182.193 134.55 li
182.344 134.55 li
182.494 134.55 li
182.644 134.55 li
182.794 134.55 li
182.943 134.55 li
183.094 134.55 li
183.244 134.55 li
183.394 134.55 li
183.544 134.55 li
183.693 134.55 li
183.844 134.55 li
183.994 134.55 li
184.144 134.55 li
184.294 134.55 li
184.443 134.55 li
184.594 134.55 li
184.744 134.55 li
184.894 134.55 li
185.044 134.55 li
185.193 134.55 li
185.344 134.55 li
185.494 134.55 li
185.644 134.55 li
185.794 134.55 li
185.943 134.55 li
186.094 134.55 li
186.244 134.55 li
186.394 134.55 li
186.544 134.55 li
186.693 134.55 li
186.844 134.55 li
186.994 134.55 li
187.144 134.55 li
187.294 134.55 li
187.443 134.55 li
187.594 134.55 li
187.744 134.55 li
187.894 134.55 li
188.044 134.55 li
188.193 134.55 li
188.344 134.55 li
188.494 134.55 li
188.644 134.55 li
188.844 134.55 li
188.994 134.55 li
189.144 134.55 li
189.294 134.55 li
189.443 134.55 li
189.594 134.55 li
189.744 134.55 li
189.894 134.55 li
190.044 134.55 li
190.193 134.55 li
190.344 134.55 li
190.494 134.55 li
190.644 134.55 li
190.794 134.55 li
190.943 134.55 li
191.094 134.55 li
191.244 134.55 li
191.394 134.55 li
191.544 134.55 li
160.193 132.2 mo
160.344 132.35 li
160.494 132.5 li
160.644 132.6 li
160.794 132.75 li
160.943 132.899 li
161.094 133 li
161.244 133.1 li
161.394 133.2 li
161.544 133.3 li
161.693 133.399 li
161.844 133.5 li
161.994 133.6 li
162.144 133.649 li
162.294 133.75 li
162.443 133.8 li
162.594 133.85 li
162.744 133.95 li
162.894 134 li
163.044 134.05 li
163.193 134.1 li
163.344 134.149 li
163.494 134.149 li
163.644 134.2 li
163.794 134.25 li
163.943 134.3 li
164.094 134.3 li
164.244 134.35 li
164.394 134.35 li
164.544 134.399 li
164.693 134.399 li
164.844 134.399 li
164.994 134.45 li
165.144 134.45 li
165.294 134.45 li
165.443 134.45 li
165.594 134.45 li
165.744 134.5 li
165.894 134.5 li
166.044 134.5 li
166.193 134.5 li
166.344 134.5 li
166.494 134.5 li
166.644 134.5 li
166.844 134.5 li
166.994 134.5 li
167.144 134.5 li
167.294 134.55 li
167.443 134.55 li
167.594 134.55 li
167.744 134.55 li
167.894 134.55 li
168.044 134.55 li
168.193 134.55 li
168.344 134.55 li
168.494 134.55 li
168.644 134.55 li
168.794 134.55 li
168.943 134.55 li
169.094 134.55 li
169.244 134.55 li
169.394 134.55 li
169.544 134.55 li
169.693 134.55 li
169.844 134.55 li
169.994 134.55 li
170.144 134.55 li
170.294 134.55 li
170.443 134.55 li
170.594 134.55 li
170.744 134.55 li
170.894 134.55 li
171.044 134.55 li
171.193 134.55 li
171.344 134.55 li
171.494 134.55 li
171.644 134.55 li
171.794 134.55 li
171.943 134.55 li
172.094 134.55 li
172.244 134.55 li
172.394 134.55 li
172.544 134.55 li
172.693 134.55 li
172.844 134.55 li
172.994 134.55 li
173.144 134.55 li
173.294 134.55 li
173.443 134.55 li
173.594 134.55 li
173.744 134.55 li
173.894 134.55 li
174.044 134.55 li
174.193 134.55 li
174.344 134.55 li
174.494 134.55 li
174.644 134.55 li
174.794 134.55 li
174.943 134.55 li
175.094 134.55 li
175.244 134.55 li
175.394 134.55 li
175.544 134.55 li
175.693 134.55 li
175.844 134.55 li
144.494 23.6499 mo
144.644 24.9497 li
144.794 26.2998 li
144.994 27.75 li
145.144 29.2998 li
145.294 30.8496 li
145.443 32.5 li
145.594 34.1499 li
145.744 35.8999 li
145.894 37.6997 li
146.044 39.5 li
146.193 41.2998 li
146.344 43.1997 li
146.494 45.0498 li
146.644 46.9497 li
146.794 48.8496 li
146.943 50.75 li
147.094 52.5996 li
147.244 54.5 li
147.394 56.3496 li
147.544 58.1997 li
147.693 60.0498 li
147.844 61.8496 li
147.994 63.6499 li
148.144 65.3999 li
148.294 67.0996 li
148.443 68.75 li
148.594 70.3999 li
148.744 72 li
148.894 73.5996 li
149.044 75.0996 li
149.193 76.5996 li
149.344 78.0498 li
149.494 79.4497 li
149.644 80.8496 li
149.794 82.1997 li
149.943 83.5 li
150.094 84.75 li
150.244 86 li
150.394 87.1997 li
150.544 88.3999 li
150.693 89.5996 li
150.844 90.75 li
150.994 91.8496 li
151.144 92.9497 li
151.294 94.0498 li
151.443 95.1494 li
151.594 96.2002 li
151.744 97.25 li
151.894 98.2998 li
152.044 99.3496 li
152.193 100.399 li
152.344 101.399 li
152.494 102.45 li
152.644 103.45 li
152.794 104.45 li
152.943 105.45 li
153.094 106.45 li
153.244 107.45 li
153.394 108.45 li
153.544 109.399 li
153.693 110.35 li
153.844 111.3 li
153.994 112.25 li
154.144 113.149 li
154.294 114.05 li
154.443 114.899 li
154.594 115.8 li
154.744 116.649 li
154.894 117.45 li
155.044 118.25 li
155.193 119.05 li
155.344 119.8 li
155.494 120.5 li
155.644 121.2 li
155.794 121.899 li
155.994 122.55 li
156.144 123.149 li
156.294 123.75 li
156.443 124.3 li
156.594 124.85 li
156.744 125.399 li
156.894 125.899 li
157.044 126.35 li
157.193 126.8 li
157.344 127.2 li
157.494 127.6 li
157.644 128 li
157.794 128.35 li
157.943 128.7 li
158.094 129.05 li
158.244 129.35 li
158.394 129.649 li
158.544 129.899 li
158.693 130.2 li
158.844 130.45 li
158.994 130.649 li
159.144 130.899 li
159.294 131.1 li
159.443 131.3 li
159.594 131.5 li
159.744 131.7 li
159.894 131.85 li
160.044 132.05 li
160.193 132.2 li
128.844 104.899 mo
128.994 103.649 li
129.144 102.45 li
129.294 101.2 li
129.444 99.8994 li
129.594 98.6494 li
129.744 97.3496 li
129.894 96.0498 li
130.044 94.75 li
130.194 93.4497 li
130.344 92.1997 li
130.494 90.8999 li
130.644 89.6499 li
130.794 88.3999 li
130.944 87.1997 li
131.094 86 li
131.244 84.7998 li
131.394 83.6499 li
131.544 82.5498 li
131.694 81.5 li
131.844 80.4497 li
131.994 79.4497 li
132.144 78.5 li
132.294 77.5996 li
132.444 76.6997 li
132.594 75.8496 li
132.744 75.0498 li
132.894 74.2998 li
133.044 73.5996 li
133.194 72.8999 li
133.344 72.25 li
133.494 71.6499 li
133.644 71.0498 li
133.794 70.4497 li
133.944 69.8999 li
134.144 69.3999 li
134.294 68.8496 li
134.444 68.3496 li
134.594 67.8496 li
134.744 67.3496 li
134.894 66.8496 li
135.044 66.2998 li
135.194 65.7998 li
135.344 65.25 li
135.494 64.6499 li
135.644 64.0498 li
135.794 63.4497 li
135.944 62.7998 li
136.094 62.0996 li
136.244 61.3496 li
136.394 60.5498 li
136.544 59.75 li
136.694 58.8496 li
136.844 57.9497 li
136.994 56.9497 li
137.144 55.9497 li
137.294 54.8999 li
137.444 53.75 li
137.594 52.5996 li
137.744 51.3999 li
137.894 50.1499 li
138.044 48.8496 li
138.194 47.5 li
138.344 46.0996 li
138.494 44.6997 li
138.644 43.2998 li
138.794 41.8496 li
138.944 40.3496 li
139.094 38.8999 li
139.244 37.3999 li
139.394 35.8999 li
139.544 34.3999 li
139.694 32.9497 li
139.844 31.5 li
139.994 30.0996 li
140.144 28.6997 li
140.294 27.3496 li
140.444 26.0498 li
140.594 24.75 li
140.744 23.5498 li
140.894 22.4497 li
141.044 21.3999 li
141.193 20.3999 li
141.344 19.5 li
141.494 18.6499 li
141.644 17.8999 li
141.794 17.2998 li
141.943 16.75 li
142.094 16.2998 li
142.244 15.9497 li
142.394 15.75 li
142.544 15.5996 li
142.693 15.5996 li
142.844 15.6997 li
142.994 15.8999 li
143.144 16.1997 li
143.294 16.5996 li
143.443 17.1499 li
143.594 17.7998 li
143.744 18.5 li
143.894 19.3496 li
144.044 20.2998 li
144.193 21.2998 li
144.344 22.4497 li
144.494 23.6499 li
113.194 134.45 mo
113.344 134.45 li
113.494 134.399 li
113.644 134.399 li
113.794 134.399 li
113.944 134.35 li
114.094 134.35 li
114.244 134.3 li
114.394 134.3 li
114.544 134.25 li
114.694 134.2 li
114.844 134.2 li
114.994 134.149 li
115.144 134.1 li
115.294 134.05 li
115.444 134 li
115.594 133.949 li
115.744 133.85 li
115.894 133.8 li
116.044 133.75 li
116.194 133.649 li
116.344 133.55 li
116.494 133.5 li
116.644 133.399 li
116.794 133.3 li
116.944 133.2 li
117.094 133.05 li
117.244 132.95 li
117.394 132.85 li
117.544 132.7 li
117.694 132.55 li
117.844 132.45 li
117.994 132.3 li
118.144 132.149 li
118.294 132 li
118.444 131.8 li
118.594 131.649 li
118.744 131.5 li
118.894 131.3 li
119.044 131.1 li
119.194 130.95 li
119.344 130.75 li
119.494 130.55 li
119.644 130.35 li
119.794 130.199 li
119.944 130 li
120.094 129.8 li
120.244 129.6 li
120.394 129.399 li
120.544 129.199 li
120.694 129 li
120.844 128.8 li
120.994 128.6 li
121.144 128.399 li
121.294 128.199 li
121.444 128 li
121.594 127.8 li
121.744 127.649 li
121.894 127.449 li
122.044 127.25 li
122.194 127.05 li
122.344 126.899 li
122.494 126.699 li
122.644 126.55 li
122.794 126.35 li
122.944 126.199 li
123.144 125.999 li
123.294 125.8 li
123.444 125.649 li
123.594 125.449 li
123.744 125.249 li
123.894 125.05 li
124.044 124.85 li
124.194 124.649 li
124.344 124.449 li
124.494 124.199 li
124.644 123.949 li
124.794 123.699 li
124.944 123.449 li
125.094 123.149 li
125.244 122.8 li
125.394 122.499 li
125.544 122.1 li
125.694 121.699 li
125.844 121.3 li
125.994 120.85 li
126.144 120.35 li
126.294 119.85 li
126.444 119.3 li
126.594 118.699 li
126.744 118.05 li
126.894 117.35 li
127.044 116.649 li
127.194 115.899 li
127.344 115.1 li
127.494 114.249 li
127.644 113.35 li
127.794 112.449 li
127.944 111.449 li
128.094 110.449 li
128.244 109.399 li
128.394 108.3 li
128.544 107.199 li
128.694 106.05 li
128.844 104.899 li
97.4937 134.55 mo
97.6436 134.55 li
97.7939 134.55 li
97.9438 134.55 li
98.0938 134.55 li
98.2437 134.55 li
98.3936 134.55 li
98.5439 134.55 li
98.6938 134.55 li
98.8438 134.55 li
98.9937 134.55 li
99.1436 134.55 li
99.2939 134.55 li
99.4438 134.55 li
99.5938 134.55 li
99.7437 134.55 li
99.8936 134.55 li
100.044 134.55 li
100.194 134.55 li
100.344 134.55 li
100.494 134.55 li
100.644 134.55 li
100.794 134.55 li
100.944 134.55 li
101.094 134.55 li
101.294 134.55 li
101.444 134.55 li
101.594 134.55 li
101.744 134.55 li
101.894 134.55 li
102.044 134.55 li
102.194 134.55 li
102.344 134.55 li
102.494 134.55 li
102.644 134.55 li
102.794 134.55 li
102.944 134.55 li
103.094 134.55 li
103.244 134.55 li
103.394 134.55 li
103.544 134.55 li
103.694 134.55 li
103.844 134.55 li
103.994 134.55 li
104.144 134.55 li
104.294 134.55 li
104.444 134.55 li
104.594 134.55 li
104.744 134.55 li
104.894 134.55 li
105.044 134.55 li
105.194 134.55 li
105.344 134.55 li
105.494 134.55 li
105.644 134.55 li
105.794 134.55 li
105.944 134.55 li
106.094 134.55 li
106.244 134.55 li
106.394 134.55 li
106.544 134.55 li
106.694 134.55 li
106.844 134.55 li
106.994 134.55 li
107.144 134.55 li
107.294 134.55 li
107.444 134.55 li
107.594 134.55 li
107.744 134.55 li
107.894 134.55 li
108.044 134.55 li
108.194 134.55 li
108.344 134.55 li
108.494 134.55 li
108.644 134.55 li
108.794 134.55 li
108.944 134.55 li
109.094 134.55 li
109.244 134.55 li
109.394 134.55 li
109.544 134.55 li
109.694 134.55 li
109.844 134.55 li
109.994 134.55 li
110.144 134.55 li
110.294 134.55 li
110.444 134.55 li
110.594 134.55 li
110.744 134.55 li
110.894 134.55 li
111.044 134.55 li
111.194 134.55 li
111.344 134.5 li
111.494 134.5 li
111.644 134.5 li
111.794 134.5 li
111.944 134.5 li
112.094 134.5 li
112.294 134.5 li
112.444 134.5 li
112.594 134.5 li
112.744 134.5 li
112.894 134.45 li
113.044 134.45 li
113.194 134.45 li
81.8438 134.55 mo
81.9937 134.55 li
82.1436 134.55 li
82.2939 134.55 li
82.4438 134.55 li
82.5938 134.55 li
82.7437 134.55 li
82.8936 134.55 li
83.0439 134.55 li
83.1938 134.55 li
83.3438 134.55 li
83.4937 134.55 li
83.6436 134.55 li
83.7939 134.55 li
83.9438 134.55 li
84.0938 134.55 li
84.2437 134.55 li
84.3936 134.55 li
84.5439 134.55 li
84.6938 134.55 li
84.8438 134.55 li
84.9937 134.55 li
85.1436 134.55 li
85.2939 134.55 li
85.4438 134.55 li
85.5938 134.55 li
85.7437 134.55 li
85.8936 134.55 li
86.0439 134.55 li
86.1938 134.55 li
86.3438 134.55 li
86.4937 134.55 li
86.6436 134.55 li
86.7939 134.55 li
86.9438 134.55 li
87.0938 134.55 li
87.2437 134.55 li
87.3936 134.55 li
87.5439 134.55 li
87.6938 134.55 li
87.8438 134.55 li
87.9937 134.55 li
88.1436 134.55 li
88.2939 134.55 li
88.4438 134.55 li
88.5938 134.55 li
88.7437 134.55 li
88.8936 134.55 li
89.0439 134.55 li
89.1938 134.55 li
89.3438 134.55 li
89.4937 134.55 li
89.6436 134.55 li
89.7939 134.55 li
89.9438 134.55 li
90.0938 134.55 li
90.2939 134.55 li
90.4438 134.55 li
90.5938 134.55 li
90.7437 134.55 li
90.8936 134.55 li
91.0439 134.55 li
91.1938 134.55 li
91.3438 134.55 li
91.4937 134.55 li
91.6436 134.55 li
91.7939 134.55 li
91.9438 134.55 li
92.0938 134.55 li
92.2437 134.55 li
92.3936 134.55 li
92.5439 134.55 li
92.6938 134.55 li
92.8438 134.55 li
92.9937 134.55 li
93.1436 134.55 li
93.2939 134.55 li
93.4438 134.55 li
93.5938 134.55 li
93.7437 134.55 li
93.8936 134.55 li
94.0439 134.55 li
94.1938 134.55 li
94.3438 134.55 li
94.4937 134.55 li
94.6436 134.55 li
94.7939 134.55 li
94.9438 134.55 li
95.0938 134.55 li
95.2437 134.55 li
95.3936 134.55 li
95.5439 134.55 li
95.6938 134.55 li
95.8438 134.55 li
95.9937 134.55 li
96.1436 134.55 li
96.2939 134.55 li
96.4438 134.55 li
96.5938 134.55 li
96.7437 134.55 li
96.8936 134.55 li
97.0439 134.55 li
97.1938 134.55 li
97.3438 134.55 li
97.4937 134.55 li
66.1436 134.55 mo
66.2939 134.55 li
66.4438 134.55 li
66.5938 134.55 li
66.7437 134.55 li
66.8936 134.55 li
67.0439 134.55 li
67.1938 134.55 li
67.3438 134.55 li
67.4937 134.55 li
67.6436 134.55 li
67.7939 134.55 li
67.9438 134.55 li
68.0938 134.55 li
68.2437 134.55 li
68.4438 134.55 li
68.5938 134.55 li
68.7437 134.55 li
68.8936 134.55 li
69.0439 134.55 li
69.1938 134.55 li
69.3438 134.55 li
69.4937 134.55 li
69.6436 134.55 li
69.7939 134.55 li
69.9438 134.55 li
70.0938 134.55 li
70.2437 134.55 li
70.3936 134.55 li
70.5439 134.55 li
70.6938 134.55 li
70.8438 134.55 li
70.9937 134.55 li
71.1436 134.55 li
71.2939 134.55 li
71.4438 134.55 li
71.5938 134.55 li
71.7437 134.55 li
71.8936 134.55 li
72.0439 134.55 li
72.1938 134.55 li
72.3438 134.55 li
72.4937 134.55 li
72.6436 134.55 li
72.7939 134.55 li
72.9438 134.55 li
73.0938 134.55 li
73.2437 134.55 li
73.3936 134.55 li
73.5439 134.55 li
73.6938 134.55 li
73.8438 134.55 li
73.9937 134.55 li
74.1436 134.55 li
74.2939 134.55 li
74.4438 134.55 li
74.5938 134.55 li
74.7437 134.55 li
74.8936 134.55 li
75.0439 134.55 li
75.1938 134.55 li
75.3438 134.55 li
75.4937 134.55 li
75.6436 134.55 li
75.7939 134.55 li
75.9438 134.55 li
76.0938 134.55 li
76.2437 134.55 li
76.3936 134.55 li
76.5439 134.55 li
76.6938 134.55 li
76.8438 134.55 li
76.9937 134.55 li
77.1436 134.55 li
77.2939 134.55 li
77.4438 134.55 li
77.5938 134.55 li
77.7437 134.55 li
77.8936 134.55 li
78.0439 134.55 li
78.1938 134.55 li
78.3438 134.55 li
78.4937 134.55 li
78.6436 134.55 li
78.7939 134.55 li
78.9438 134.55 li
79.0938 134.55 li
79.2437 134.55 li
79.4438 134.55 li
79.5938 134.55 li
79.7437 134.55 li
79.8936 134.55 li
80.0439 134.55 li
80.1938 134.55 li
80.3438 134.55 li
80.4937 134.55 li
80.6436 134.55 li
80.7939 134.55 li
80.9438 134.55 li
81.0938 134.55 li
81.2437 134.55 li
81.3936 134.55 li
81.5439 134.55 li
81.6938 134.55 li
81.8438 134.55 li
50.4937 134.55 mo
50.6436 134.55 li
50.7939 134.55 li
50.9438 134.55 li
51.0938 134.55 li
51.2437 134.55 li
51.3936 134.55 li
51.5439 134.55 li
51.6938 134.55 li
51.8438 134.55 li
51.9937 134.55 li
52.1436 134.55 li
52.2939 134.55 li
52.4438 134.55 li
52.5938 134.55 li
52.7437 134.55 li
52.8936 134.55 li
53.0439 134.55 li
53.1938 134.55 li
53.3438 134.55 li
53.4937 134.55 li
53.6436 134.55 li
53.7939 134.55 li
53.9438 134.55 li
54.0938 134.55 li
54.2437 134.55 li
54.3936 134.55 li
54.5439 134.55 li
54.6938 134.55 li
54.8438 134.55 li
54.9937 134.55 li
55.1436 134.55 li
55.2939 134.55 li
55.4438 134.55 li
55.5938 134.55 li
55.7437 134.55 li
55.8936 134.55 li
56.0439 134.55 li
56.1938 134.55 li
56.3438 134.55 li
56.4937 134.55 li
56.6436 134.55 li
56.7939 134.55 li
56.9438 134.55 li
57.0938 134.55 li
57.2437 134.55 li
57.3936 134.55 li
57.5938 134.55 li
57.7437 134.55 li
57.8936 134.55 li
58.0439 134.55 li
58.1938 134.55 li
58.3438 134.55 li
58.4937 134.55 li
58.6436 134.55 li
58.7939 134.55 li
58.9438 134.55 li
59.0938 134.55 li
59.2437 134.55 li
59.3936 134.55 li
59.5439 134.55 li
59.6938 134.55 li
59.8438 134.55 li
59.9937 134.55 li
60.1436 134.55 li
60.2939 134.55 li
60.4438 134.55 li
60.5938 134.55 li
60.7437 134.55 li
60.8936 134.55 li
61.0439 134.55 li
61.1938 134.55 li
61.3438 134.55 li
61.4937 134.55 li
61.6436 134.55 li
61.7939 134.55 li
61.9438 134.55 li
62.0938 134.55 li
62.2437 134.55 li
62.3936 134.55 li
62.5439 134.55 li
62.6938 134.55 li
62.8438 134.55 li
62.9937 134.55 li
63.1436 134.55 li
63.2939 134.55 li
63.4438 134.55 li
63.5938 134.55 li
63.7437 134.55 li
63.8936 134.55 li
64.0439 134.55 li
64.1938 134.55 li
64.3438 134.55 li
64.4937 134.55 li
64.6436 134.55 li
64.7939 134.55 li
64.9438 134.55 li
65.0938 134.55 li
65.2437 134.55 li
65.3936 134.55 li
65.5439 134.55 li
65.6938 134.55 li
65.8438 134.55 li
65.9937 134.55 li
66.1436 134.55 li
34.7939 134.55 mo
34.9438 134.55 li
35.0938 134.55 li
35.2437 134.55 li
35.3936 134.55 li
35.5439 134.55 li
35.7437 134.55 li
35.8936 134.55 li
36.0439 134.55 li
36.1938 134.55 li
36.3438 134.55 li
36.4937 134.55 li
36.6436 134.55 li
36.7939 134.55 li
36.9438 134.55 li
37.0938 134.55 li
37.2437 134.55 li
37.3936 134.55 li
37.5439 134.55 li
37.6938 134.55 li
37.8438 134.55 li
37.9937 134.55 li
38.1436 134.55 li
38.2939 134.55 li
38.4438 134.55 li
38.5938 134.55 li
38.7437 134.55 li
38.8936 134.55 li
39.0439 134.55 li
39.1938 134.55 li
39.3438 134.55 li
39.4937 134.55 li
39.6436 134.55 li
39.7939 134.55 li
39.9438 134.55 li
40.0938 134.55 li
40.2437 134.55 li
40.3936 134.55 li
40.5439 134.55 li
40.6938 134.55 li
40.8438 134.55 li
40.9937 134.55 li
41.1436 134.55 li
41.2939 134.55 li
41.4438 134.55 li
41.5938 134.55 li
41.7437 134.55 li
41.8936 134.55 li
42.0439 134.55 li
42.1938 134.55 li
42.3438 134.55 li
42.4937 134.55 li
42.6436 134.55 li
42.7939 134.55 li
42.9438 134.55 li
43.0938 134.55 li
43.2437 134.55 li
43.3936 134.55 li
43.5439 134.55 li
43.6938 134.55 li
43.8438 134.55 li
43.9937 134.55 li
44.1436 134.55 li
44.2939 134.55 li
44.4438 134.55 li
44.5938 134.55 li
44.7437 134.55 li
44.8936 134.55 li
45.0439 134.55 li
45.1938 134.55 li
45.3438 134.55 li
45.4937 134.55 li
45.6436 134.55 li
45.7939 134.55 li
45.9438 134.55 li
46.0938 134.55 li
46.2437 134.55 li
46.3936 134.55 li
46.5938 134.55 li
46.7437 134.55 li
46.8936 134.55 li
47.0439 134.55 li
47.1938 134.55 li
47.3438 134.55 li
47.4937 134.55 li
47.6436 134.55 li
47.7939 134.55 li
47.9438 134.55 li
48.0938 134.55 li
48.2437 134.55 li
48.3936 134.55 li
48.5439 134.55 li
48.6938 134.55 li
48.8438 134.55 li
48.9937 134.55 li
49.1436 134.55 li
49.2939 134.55 li
49.4438 134.55 li
49.5938 134.55 li
49.7437 134.55 li
49.8936 134.55 li
50.0439 134.55 li
50.1938 134.55 li
50.3438 134.55 li
50.4937 134.55 li
19.1436 134.55 mo
19.2939 134.55 li
19.4438 134.55 li
19.5938 134.55 li
19.7437 134.55 li
19.8936 134.55 li
20.0439 134.55 li
20.1938 134.55 li
20.3438 134.55 li
20.4937 134.55 li
20.6436 134.55 li
20.7939 134.55 li
20.9438 134.55 li
21.0938 134.55 li
21.2437 134.55 li
21.3936 134.55 li
21.5439 134.55 li
21.6938 134.55 li
21.8438 134.55 li
21.9937 134.55 li
22.1436 134.55 li
22.2939 134.55 li
22.4438 134.55 li
22.5938 134.55 li
22.7437 134.55 li
22.8936 134.55 li
23.0439 134.55 li
23.1938 134.55 li
23.3438 134.55 li
23.4937 134.55 li
23.6436 134.55 li
23.7939 134.55 li
23.9438 134.55 li
24.0938 134.55 li
24.2437 134.55 li
24.3936 134.55 li
24.5439 134.55 li
24.7437 134.55 li
24.8936 134.55 li
25.0439 134.55 li
25.1938 134.55 li
25.3438 134.55 li
25.4937 134.55 li
25.6436 134.55 li
25.7939 134.55 li
25.9438 134.55 li
26.0938 134.55 li
26.2437 134.55 li
26.3936 134.55 li
26.5439 134.55 li
26.6938 134.55 li
26.8438 134.55 li
26.9937 134.55 li
27.1436 134.55 li
27.2939 134.55 li
27.4438 134.55 li
27.5938 134.55 li
27.7437 134.55 li
27.8936 134.55 li
28.0439 134.55 li
28.1938 134.55 li
28.3438 134.55 li
28.4937 134.55 li
28.6436 134.55 li
28.7939 134.55 li
28.9438 134.55 li
29.0938 134.55 li
29.2437 134.55 li
29.3936 134.55 li
29.5439 134.55 li
29.6938 134.55 li
29.8438 134.55 li
29.9937 134.55 li
30.1436 134.55 li
30.2939 134.55 li
30.4438 134.55 li
30.5938 134.55 li
30.7437 134.55 li
30.8936 134.55 li
31.0439 134.55 li
31.1938 134.55 li
31.3438 134.55 li
31.4937 134.55 li
31.6436 134.55 li
31.7939 134.55 li
31.9438 134.55 li
32.0938 134.55 li
32.2437 134.55 li
32.3936 134.55 li
32.5439 134.55 li
32.6938 134.55 li
32.8438 134.55 li
32.9937 134.55 li
33.1436 134.55 li
33.2939 134.55 li
33.4438 134.55 li
33.5938 134.55 li
33.7437 134.55 li
33.8936 134.55 li
34.0439 134.55 li
34.1938 134.55 li
34.3438 134.55 li
34.4937 134.55 li
34.6436 134.55 li
34.7939 134.55 li
3.89355 134.55 mo
3.94385 134.55 li
4.09375 134.55 li
4.24365 134.55 li
4.39355 134.55 li
4.54395 134.55 li
4.69385 134.55 li
4.84375 134.55 li
4.99365 134.55 li
5.14355 134.55 li
5.29395 134.55 li
5.44385 134.55 li
5.59375 134.55 li
5.74365 134.55 li
5.89355 134.55 li
6.04395 134.55 li
6.19385 134.55 li
6.34375 134.55 li
6.49365 134.55 li
6.64355 134.55 li
6.79395 134.55 li
6.94385 134.55 li
7.09375 134.55 li
7.24365 134.55 li
7.39355 134.55 li
7.54395 134.55 li
7.69385 134.55 li
7.84375 134.55 li
7.99365 134.55 li
8.14355 134.55 li
8.29395 134.55 li
8.44385 134.55 li
8.59375 134.55 li
8.74365 134.55 li
8.89355 134.55 li
9.04395 134.55 li
9.19385 134.55 li
9.34375 134.55 li
9.49365 134.55 li
9.64355 134.55 li
9.79395 134.55 li
9.94385 134.55 li
10.0938 134.55 li
10.2437 134.55 li
10.3936 134.55 li
10.5439 134.55 li
10.6938 134.55 li
10.8438 134.55 li
10.9937 134.55 li
11.1436 134.55 li
11.2939 134.55 li
11.4438 134.55 li
11.5938 134.55 li
11.7437 134.55 li
11.8936 134.55 li
12.0439 134.55 li
12.1938 134.55 li
12.3438 134.55 li
12.4937 134.55 li
12.6436 134.55 li
12.7939 134.55 li
12.9438 134.55 li
13.0938 134.55 li
13.2437 134.55 li
13.3936 134.55 li
13.5439 134.55 li
13.6938 134.55 li
13.8936 134.55 li
14.0439 134.55 li
14.1938 134.55 li
14.3438 134.55 li
14.4937 134.55 li
14.6436 134.55 li
14.7939 134.55 li
14.9438 134.55 li
15.0938 134.55 li
15.2437 134.55 li
15.3936 134.55 li
15.5439 134.55 li
15.6938 134.55 li
15.8438 134.55 li
15.9937 134.55 li
16.1436 134.55 li
16.2939 134.55 li
16.4438 134.55 li
16.5938 134.55 li
16.7437 134.55 li
16.8936 134.55 li
17.0439 134.55 li
17.1938 134.55 li
17.3438 134.55 li
17.4937 134.55 li
17.6436 134.55 li
17.7939 134.55 li
17.9438 134.55 li
18.0938 134.55 li
18.2437 134.55 li
18.3936 134.55 li
18.5439 134.55 li
18.6938 134.55 li
18.8438 134.55 li
18.9937 134.55 li
19.1436 134.55 li
175.294 20.8999 mo
195.244 20.8999 li
@
EGEGYB+Helvetica*1 [7 0 0 -7 0 0 ]msf199.438 30.2295 mo(Theoretical Distribution)[4.27734 3.8916 3.8916 3.89258 2.33105 3.8916 1.94629 1.55371 3.5 3.8916 1.55469 1.94531 5.05371 1.55469 3.5 1.94531 2.33105 1.55371 3.89258 3.8916 1.94629 1.55371 3.89258 0 ]xsh0.125 lw
[0.5 1 ] 0 dsh
266.994 134.55 mo
267.094 134.55 li
267.193 134.55 li
267.244 134.55 li
267.344 134.55 li
267.443 134.55 li
267.544 134.55 li
267.644 134.55 li
267.744 134.55 li
267.794 134.55 li
267.894 134.55 li
267.994 134.55 li
268.094 134.55 li
268.193 134.55 li
268.244 134.55 li
268.344 134.55 li
268.443 134.55 li
268.544 134.55 li
268.644 134.55 li
268.693 134.55 li
268.794 134.55 li
268.894 134.55 li
268.994 134.55 li
269.094 134.55 li
269.144 134.55 li
269.244 134.55 li
269.344 134.55 li
269.443 134.55 li
269.544 134.55 li
269.644 134.55 li
269.693 134.55 li
269.794 134.55 li
269.894 134.55 li
269.994 134.55 li
270.094 134.55 li
270.144 134.55 li
270.244 134.55 li
270.344 134.55 li
270.443 134.55 li
270.544 134.55 li
270.594 134.55 li
270.693 134.55 li
270.794 134.55 li
270.894 134.55 li
270.994 134.55 li
271.044 134.55 li
271.144 134.55 li
271.244 134.55 li
271.344 134.55 li
271.443 134.55 li
271.494 134.55 li
271.594 134.55 li
271.693 134.55 li
271.794 134.55 li
271.894 134.55 li
271.994 134.55 li
272.044 134.55 li
272.144 134.55 li
272.244 134.55 li
272.344 134.55 li
272.443 134.55 li
272.494 134.55 li
272.594 134.55 li
272.693 134.55 li
272.794 134.55 li
272.894 134.55 li
272.943 134.55 li
273.044 134.55 li
273.144 134.55 li
273.244 134.55 li
273.344 134.55 li
273.394 134.55 li
273.494 134.55 li
273.594 134.55 li
273.693 134.55 li
273.794 134.55 li
273.844 134.55 li
273.943 134.55 li
274.044 134.55 li
274.144 134.55 li
274.244 134.55 li
274.344 134.55 li
274.394 134.55 li
274.494 134.55 li
274.594 134.55 li
274.693 134.55 li
274.794 134.55 li
274.844 134.55 li
274.943 134.55 li
275.044 134.55 li
257.594 134.55 mo
257.693 134.55 li
257.794 134.55 li
257.844 134.55 li
257.943 134.55 li
258.044 134.55 li
258.144 134.55 li
258.244 134.55 li
258.294 134.55 li
258.394 134.55 li
258.494 134.55 li
258.594 134.55 li
258.693 134.55 li
258.794 134.55 li
258.844 134.55 li
258.943 134.55 li
259.044 134.55 li
259.144 134.55 li
259.244 134.55 li
259.294 134.55 li
259.394 134.55 li
259.494 134.55 li
259.594 134.55 li
259.693 134.55 li
259.744 134.55 li
259.844 134.55 li
259.943 134.55 li
260.044 134.55 li
260.144 134.55 li
260.193 134.55 li
260.294 134.55 li
260.394 134.55 li
260.494 134.55 li
260.594 134.55 li
260.644 134.55 li
260.744 134.55 li
260.844 134.55 li
260.943 134.55 li
261.044 134.55 li
261.144 134.55 li
261.193 134.55 li
261.294 134.55 li
261.394 134.55 li
261.494 134.55 li
261.594 134.55 li
261.644 134.55 li
261.744 134.55 li
261.844 134.55 li
261.943 134.55 li
262.044 134.55 li
262.094 134.55 li
262.193 134.55 li
262.294 134.55 li
262.394 134.55 li
262.494 134.55 li
262.544 134.55 li
262.644 134.55 li
262.744 134.55 li
262.844 134.55 li
262.943 134.55 li
263.044 134.55 li
263.094 134.55 li
263.193 134.55 li
263.294 134.55 li
263.394 134.55 li
263.494 134.55 li
263.544 134.55 li
263.644 134.55 li
263.744 134.55 li
263.844 134.55 li
263.943 134.55 li
263.994 134.55 li
264.094 134.55 li
264.193 134.55 li
264.294 134.55 li
264.394 134.55 li
264.443 134.55 li
264.544 134.55 li
264.644 134.55 li
264.744 134.55 li
264.844 134.55 li
264.894 134.55 li
264.994 134.55 li
265.094 134.55 li
265.193 134.55 li
265.294 134.55 li
265.394 134.55 li
265.443 134.55 li
265.544 134.55 li
265.644 134.55 li
265.744 134.55 li
265.844 134.55 li
265.894 134.55 li
265.994 134.55 li
266.094 134.55 li
266.193 134.55 li
266.294 134.55 li
266.344 134.55 li
266.443 134.55 li
266.544 134.55 li
266.644 134.55 li
266.744 134.55 li
266.794 134.55 li
266.894 134.55 li
266.994 134.55 li
248.193 134.55 mo
248.294 134.55 li
248.394 134.55 li
248.443 134.55 li
248.544 134.55 li
248.644 134.55 li
248.744 134.55 li
248.844 134.55 li
248.894 134.55 li
248.994 134.55 li
249.094 134.55 li
249.193 134.55 li
249.294 134.55 li
249.344 134.55 li
249.443 134.55 li
249.544 134.55 li
249.644 134.55 li
249.744 134.55 li
249.794 134.55 li
249.894 134.55 li
249.994 134.55 li
250.094 134.55 li
250.193 134.55 li
250.294 134.55 li
250.344 134.55 li
250.443 134.55 li
250.544 134.55 li
250.644 134.55 li
250.744 134.55 li
250.794 134.55 li
250.894 134.55 li
250.994 134.55 li
251.094 134.55 li
251.193 134.55 li
251.244 134.55 li
251.344 134.55 li
251.443 134.55 li
251.544 134.55 li
251.644 134.55 li
251.693 134.55 li
251.794 134.55 li
251.894 134.55 li
251.994 134.55 li
252.094 134.55 li
252.193 134.55 li
252.244 134.55 li
252.344 134.55 li
252.443 134.55 li
252.544 134.55 li
252.644 134.55 li
252.693 134.55 li
252.794 134.55 li
252.894 134.55 li
252.994 134.55 li
253.094 134.55 li
253.144 134.55 li
253.244 134.55 li
253.344 134.55 li
253.443 134.55 li
253.544 134.55 li
253.594 134.55 li
253.693 134.55 li
253.794 134.55 li
253.894 134.55 li
253.994 134.55 li
254.044 134.55 li
254.144 134.55 li
254.244 134.55 li
254.344 134.55 li
254.443 134.55 li
254.544 134.55 li
254.594 134.55 li
254.693 134.55 li
254.794 134.55 li
254.894 134.55 li
254.994 134.55 li
255.044 134.55 li
255.144 134.55 li
255.244 134.55 li
255.344 134.55 li
255.443 134.55 li
255.494 134.55 li
255.594 134.55 li
255.693 134.55 li
255.794 134.55 li
255.894 134.55 li
255.943 134.55 li
256.044 134.55 li
256.144 134.55 li
256.244 134.55 li
256.344 134.55 li
256.394 134.55 li
256.494 134.55 li
256.594 134.55 li
256.693 134.55 li
256.794 134.55 li
256.894 134.55 li
256.943 134.55 li
257.044 134.55 li
257.144 134.55 li
257.244 134.55 li
257.344 134.55 li
257.394 134.55 li
257.494 134.55 li
257.594 134.55 li
238.794 134.55 mo
238.894 134.55 li
238.994 134.55 li
239.044 134.55 li
239.144 134.55 li
239.244 134.55 li
239.344 134.55 li
239.443 134.55 li
239.494 134.55 li
239.594 134.55 li
239.693 134.55 li
239.794 134.55 li
239.894 134.55 li
239.943 134.55 li
240.044 134.55 li
240.144 134.55 li
240.244 134.55 li
240.344 134.55 li
240.394 134.55 li
240.494 134.55 li
240.594 134.55 li
240.693 134.55 li
240.794 134.55 li
240.844 134.55 li
240.943 134.55 li
241.044 134.55 li
241.144 134.55 li
241.244 134.55 li
241.344 134.55 li
241.394 134.55 li
241.494 134.55 li
241.594 134.55 li
241.693 134.55 li
241.794 134.55 li
241.844 134.55 li
241.943 134.55 li
242.044 134.55 li
242.144 134.55 li
242.244 134.55 li
242.294 134.55 li
242.394 134.55 li
242.494 134.55 li
242.594 134.55 li
242.693 134.55 li
242.744 134.55 li
242.844 134.55 li
242.943 134.55 li
243.044 134.55 li
243.144 134.55 li
243.193 134.55 li
243.294 134.55 li
243.394 134.55 li
243.494 134.55 li
243.594 134.55 li
243.693 134.55 li
243.744 134.55 li
243.844 134.55 li
243.943 134.55 li
244.044 134.55 li
244.144 134.55 li
244.193 134.55 li
244.294 134.55 li
244.394 134.55 li
244.494 134.55 li
244.594 134.55 li
244.644 134.55 li
244.744 134.55 li
244.844 134.55 li
244.943 134.55 li
245.044 134.55 li
245.094 134.55 li
245.193 134.55 li
245.294 134.55 li
245.394 134.55 li
245.494 134.55 li
245.594 134.55 li
245.644 134.55 li
245.744 134.55 li
245.844 134.55 li
245.943 134.55 li
246.044 134.55 li
246.094 134.55 li
246.193 134.55 li
246.294 134.55 li
246.394 134.55 li
246.494 134.55 li
246.544 134.55 li
246.644 134.55 li
246.744 134.55 li
246.844 134.55 li
246.943 134.55 li
246.994 134.55 li
247.094 134.55 li
247.193 134.55 li
247.294 134.55 li
247.394 134.55 li
247.443 134.55 li
247.544 134.55 li
247.644 134.55 li
247.744 134.55 li
247.844 134.55 li
247.943 134.55 li
247.994 134.55 li
248.094 134.55 li
248.193 134.55 li
229.394 134.55 mo
229.494 134.55 li
229.544 134.55 li
229.644 134.55 li
229.744 134.55 li
229.844 134.55 li
229.943 134.55 li
229.994 134.55 li
230.094 134.55 li
230.193 134.55 li
230.294 134.55 li
230.394 134.55 li
230.494 134.55 li
230.544 134.55 li
230.644 134.55 li
230.744 134.55 li
230.844 134.55 li
230.943 134.55 li
230.994 134.55 li
231.094 134.55 li
231.193 134.55 li
231.294 134.55 li
231.394 134.55 li
231.443 134.55 li
231.544 134.55 li
231.644 134.55 li
231.744 134.55 li
231.844 134.55 li
231.894 134.55 li
231.994 134.55 li
232.094 134.55 li
232.193 134.55 li
232.294 134.55 li
232.344 134.55 li
232.443 134.55 li
232.544 134.55 li
232.644 134.55 li
232.744 134.55 li
232.844 134.55 li
232.894 134.55 li
232.994 134.55 li
233.094 134.55 li
233.193 134.55 li
233.294 134.55 li
233.344 134.55 li
233.443 134.55 li
233.544 134.55 li
233.644 134.55 li
233.744 134.55 li
233.794 134.55 li
233.894 134.55 li
233.994 134.55 li
234.094 134.55 li
234.193 134.55 li
234.244 134.55 li
234.344 134.55 li
234.443 134.55 li
234.544 134.55 li
234.644 134.55 li
234.744 134.55 li
234.794 134.55 li
234.894 134.55 li
234.994 134.55 li
235.094 134.55 li
235.193 134.55 li
235.244 134.55 li
235.344 134.55 li
235.443 134.55 li
235.544 134.55 li
235.644 134.55 li
235.693 134.55 li
235.794 134.55 li
235.894 134.55 li
235.994 134.55 li
236.094 134.55 li
236.144 134.55 li
236.244 134.55 li
236.344 134.55 li
236.443 134.55 li
236.544 134.55 li
236.594 134.55 li
236.693 134.55 li
236.794 134.55 li
236.894 134.55 li
236.994 134.55 li
237.094 134.55 li
237.144 134.55 li
237.244 134.55 li
237.344 134.55 li
237.443 134.55 li
237.544 134.55 li
237.594 134.55 li
237.693 134.55 li
237.794 134.55 li
237.894 134.55 li
237.994 134.55 li
238.044 134.55 li
238.144 134.55 li
238.244 134.55 li
238.344 134.55 li
238.443 134.55 li
238.494 134.55 li
238.594 134.55 li
238.693 134.55 li
238.794 134.55 li
219.994 134.55 mo
220.094 134.55 li
220.144 134.55 li
220.244 134.55 li
220.344 134.55 li
220.443 134.55 li
220.544 134.55 li
220.594 134.55 li
220.693 134.55 li
220.794 134.55 li
220.894 134.55 li
220.994 134.55 li
221.044 134.55 li
221.144 134.55 li
221.244 134.55 li
221.344 134.55 li
221.443 134.55 li
221.544 134.55 li
221.594 134.55 li
221.693 134.55 li
221.794 134.55 li
221.894 134.55 li
221.994 134.55 li
222.044 134.55 li
222.144 134.55 li
222.244 134.55 li
222.344 134.55 li
222.443 134.55 li
222.494 134.55 li
222.594 134.55 li
222.693 134.55 li
222.794 134.55 li
222.894 134.55 li
222.943 134.55 li
223.044 134.55 li
223.144 134.55 li
223.244 134.55 li
223.344 134.55 li
223.394 134.55 li
223.494 134.55 li
223.594 134.55 li
223.693 134.55 li
223.794 134.55 li
223.894 134.55 li
223.943 134.55 li
224.044 134.55 li
224.144 134.55 li
224.244 134.55 li
224.344 134.55 li
224.394 134.55 li
224.494 134.55 li
224.594 134.55 li
224.693 134.55 li
224.794 134.55 li
224.844 134.55 li
224.943 134.55 li
225.044 134.55 li
225.144 134.55 li
225.244 134.55 li
225.294 134.55 li
225.394 134.55 li
225.494 134.55 li
225.594 134.55 li
225.693 134.55 li
225.744 134.55 li
225.844 134.55 li
225.943 134.55 li
226.044 134.55 li
226.144 134.55 li
226.244 134.55 li
226.294 134.55 li
226.394 134.55 li
226.494 134.55 li
226.594 134.55 li
226.693 134.55 li
226.744 134.55 li
226.844 134.55 li
226.943 134.55 li
227.044 134.55 li
227.144 134.55 li
227.193 134.55 li
227.294 134.55 li
227.394 134.55 li
227.494 134.55 li
227.594 134.55 li
227.644 134.55 li
227.744 134.55 li
227.844 134.55 li
227.943 134.55 li
228.044 134.55 li
228.144 134.55 li
228.193 134.55 li
228.294 134.55 li
228.394 134.55 li
228.494 134.55 li
228.594 134.55 li
228.644 134.55 li
228.744 134.55 li
228.844 134.55 li
228.943 134.55 li
229.044 134.55 li
229.094 134.55 li
229.193 134.55 li
229.294 134.55 li
229.394 134.55 li
210.594 134.55 mo
210.693 134.55 li
210.744 134.55 li
210.844 134.55 li
210.943 134.55 li
211.044 134.55 li
211.144 134.55 li
211.193 134.55 li
211.294 134.55 li
211.394 134.55 li
211.494 134.55 li
211.594 134.55 li
211.644 134.55 li
211.744 134.55 li
211.844 134.55 li
211.943 134.55 li
212.044 134.55 li
212.094 134.55 li
212.193 134.55 li
212.294 134.55 li
212.394 134.55 li
212.494 134.55 li
212.544 134.55 li
212.644 134.55 li
212.744 134.55 li
212.844 134.55 li
212.943 134.55 li
213.044 134.55 li
213.094 134.55 li
213.193 134.55 li
213.294 134.55 li
213.394 134.55 li
213.494 134.55 li
213.544 134.55 li
213.644 134.55 li
213.744 134.55 li
213.844 134.55 li
213.943 134.55 li
213.994 134.55 li
214.094 134.55 li
214.193 134.55 li
214.294 134.55 li
214.394 134.55 li
214.443 134.55 li
214.544 134.55 li
214.644 134.55 li
214.744 134.55 li
214.844 134.55 li
214.943 134.55 li
214.994 134.55 li
215.094 134.55 li
215.193 134.55 li
215.294 134.55 li
215.394 134.55 li
215.443 134.55 li
215.544 134.55 li
215.644 134.55 li
215.744 134.55 li
215.844 134.55 li
215.894 134.55 li
215.994 134.55 li
216.094 134.55 li
216.193 134.55 li
216.294 134.55 li
216.344 134.55 li
216.443 134.55 li
216.544 134.55 li
216.644 134.55 li
216.744 134.55 li
216.794 134.55 li
216.894 134.55 li
216.994 134.55 li
217.094 134.55 li
217.193 134.55 li
217.294 134.55 li
217.344 134.55 li
217.443 134.55 li
217.544 134.55 li
217.644 134.55 li
217.744 134.55 li
217.794 134.55 li
217.894 134.55 li
217.994 134.55 li
218.094 134.55 li
218.193 134.55 li
218.244 134.55 li
218.344 134.55 li
218.443 134.55 li
218.544 134.55 li
218.644 134.55 li
218.693 134.55 li
218.794 134.55 li
218.894 134.55 li
218.994 134.55 li
219.094 134.55 li
219.144 134.55 li
219.244 134.55 li
219.344 134.55 li
219.443 134.55 li
219.544 134.55 li
219.644 134.55 li
219.693 134.55 li
219.794 134.55 li
219.894 134.55 li
219.994 134.55 li
201.193 134.55 mo
201.244 134.55 li
201.344 134.55 li
201.443 134.55 li
201.544 134.55 li
201.644 134.55 li
201.693 134.55 li
201.794 134.55 li
201.894 134.55 li
201.994 134.55 li
202.094 134.55 li
202.193 134.55 li
202.244 134.55 li
202.344 134.55 li
202.443 134.55 li
202.544 134.55 li
202.644 134.55 li
202.693 134.55 li
202.794 134.55 li
202.894 134.55 li
202.994 134.55 li
203.094 134.55 li
203.144 134.55 li
203.244 134.55 li
203.344 134.55 li
203.443 134.55 li
203.544 134.55 li
203.594 134.55 li
203.693 134.55 li
203.794 134.55 li
203.894 134.55 li
203.994 134.55 li
204.094 134.55 li
204.144 134.55 li
204.244 134.55 li
204.344 134.55 li
204.443 134.55 li
204.544 134.55 li
204.594 134.55 li
204.693 134.55 li
204.794 134.55 li
204.894 134.55 li
204.994 134.55 li
205.044 134.55 li
205.144 134.55 li
205.244 134.55 li
205.344 134.55 li
205.443 134.55 li
205.494 134.55 li
205.594 134.55 li
205.693 134.55 li
205.794 134.55 li
205.894 134.55 li
205.943 134.55 li
206.044 134.55 li
206.144 134.55 li
206.244 134.55 li
206.344 134.55 li
206.443 134.55 li
206.494 134.55 li
206.594 134.55 li
206.693 134.55 li
206.794 134.55 li
206.894 134.55 li
206.943 134.55 li
207.044 134.55 li
207.144 134.55 li
207.244 134.55 li
207.344 134.55 li
207.394 134.55 li
207.494 134.55 li
207.594 134.55 li
207.693 134.55 li
207.794 134.55 li
207.844 134.55 li
207.943 134.55 li
208.044 134.55 li
208.144 134.55 li
208.244 134.55 li
208.294 134.55 li
208.394 134.55 li
208.494 134.55 li
208.594 134.55 li
208.693 134.55 li
208.794 134.55 li
208.844 134.55 li
208.943 134.55 li
209.044 134.55 li
209.144 134.55 li
209.244 134.55 li
209.294 134.55 li
209.394 134.55 li
209.494 134.55 li
209.594 134.55 li
209.693 134.55 li
209.744 134.55 li
209.844 134.55 li
209.943 134.55 li
210.044 134.55 li
210.144 134.55 li
210.193 134.55 li
210.294 134.55 li
210.394 134.55 li
210.494 134.55 li
210.594 134.55 li
191.794 134.55 mo
191.844 134.55 li
191.943 134.55 li
192.044 134.55 li
192.144 134.55 li
192.244 134.55 li
192.294 134.55 li
192.394 134.55 li
192.494 134.55 li
192.594 134.55 li
192.693 134.55 li
192.744 134.55 li
192.844 134.55 li
192.943 134.55 li
193.044 134.55 li
193.144 134.55 li
193.244 134.55 li
193.294 134.55 li
193.394 134.55 li
193.494 134.55 li
193.594 134.55 li
193.693 134.55 li
193.744 134.55 li
193.844 134.55 li
193.943 134.55 li
194.044 134.55 li
194.144 134.55 li
194.193 134.55 li
194.294 134.55 li
194.394 134.55 li
194.494 134.55 li
194.594 134.55 li
194.644 134.55 li
194.744 134.55 li
194.844 134.55 li
194.943 134.55 li
195.044 134.55 li
195.094 134.55 li
195.193 134.55 li
195.294 134.55 li
195.394 134.55 li
195.494 134.55 li
195.594 134.55 li
195.644 134.55 li
195.744 134.55 li
195.844 134.55 li
195.943 134.55 li
196.044 134.55 li
196.094 134.55 li
196.193 134.55 li
196.294 134.55 li
196.394 134.55 li
196.494 134.55 li
196.544 134.55 li
196.644 134.55 li
196.744 134.55 li
196.844 134.55 li
196.943 134.55 li
196.994 134.55 li
197.094 134.55 li
197.193 134.55 li
197.294 134.55 li
197.394 134.55 li
197.494 134.55 li
197.544 134.55 li
197.644 134.55 li
197.744 134.55 li
197.844 134.55 li
197.943 134.55 li
197.994 134.55 li
198.094 134.55 li
198.193 134.55 li
198.294 134.55 li
198.394 134.55 li
198.443 134.55 li
198.544 134.55 li
198.644 134.55 li
198.744 134.55 li
198.844 134.55 li
198.894 134.55 li
198.994 134.55 li
199.094 134.55 li
199.193 134.55 li
199.294 134.55 li
199.344 134.55 li
199.443 134.55 li
199.544 134.55 li
199.644 134.55 li
199.744 134.55 li
199.844 134.55 li
199.894 134.55 li
199.994 134.55 li
200.094 134.55 li
200.193 134.55 li
200.294 134.55 li
200.344 134.55 li
200.443 134.55 li
200.544 134.55 li
200.644 134.55 li
200.744 134.55 li
200.794 134.55 li
200.894 134.55 li
200.994 134.55 li
201.094 134.55 li
201.193 134.55 li
182.394 134.55 mo
182.443 134.55 li
182.544 134.55 li
182.644 134.55 li
182.744 134.55 li
182.844 134.55 li
182.894 134.55 li
182.994 134.55 li
183.094 134.55 li
183.193 134.55 li
183.294 134.55 li
183.344 134.55 li
183.443 134.55 li
183.544 134.55 li
183.644 134.55 li
183.744 134.55 li
183.794 134.55 li
183.894 134.55 li
183.994 134.55 li
184.094 134.55 li
184.193 134.55 li
184.244 134.55 li
184.344 134.55 li
184.443 134.55 li
184.544 134.55 li
184.644 134.55 li
184.744 134.55 li
184.794 134.55 li
184.894 134.55 li
184.994 134.55 li
185.094 134.55 li
185.193 134.55 li
185.244 134.55 li
185.344 134.55 li
185.443 134.55 li
185.544 134.55 li
185.644 134.55 li
185.693 134.55 li
185.794 134.55 li
185.894 134.55 li
185.994 134.55 li
186.094 134.55 li
186.144 134.55 li
186.244 134.55 li
186.344 134.55 li
186.443 134.55 li
186.544 134.55 li
186.644 134.55 li
186.693 134.55 li
186.794 134.55 li
186.894 134.55 li
186.994 134.55 li
187.094 134.55 li
187.144 134.55 li
187.244 134.55 li
187.344 134.55 li
187.443 134.55 li
187.544 134.55 li
187.594 134.55 li
187.693 134.55 li
187.794 134.55 li
187.894 134.55 li
187.994 134.55 li
188.044 134.55 li
188.144 134.55 li
188.244 134.55 li
188.344 134.55 li
188.443 134.55 li
188.494 134.55 li
188.594 134.55 li
188.693 134.55 li
188.794 134.55 li
188.894 134.55 li
188.994 134.55 li
189.044 134.55 li
189.144 134.55 li
189.244 134.55 li
189.344 134.55 li
189.443 134.55 li
189.494 134.55 li
189.594 134.55 li
189.693 134.55 li
189.794 134.55 li
189.894 134.55 li
189.943 134.55 li
190.044 134.55 li
190.144 134.55 li
190.243 134.55 li
190.344 134.55 li
190.394 134.55 li
190.493 134.55 li
190.594 134.55 li
190.693 134.55 li
190.794 134.55 li
190.894 134.55 li
190.943 134.55 li
191.044 134.55 li
191.144 134.55 li
191.243 134.55 li
191.344 134.55 li
191.394 134.55 li
191.493 134.55 li
191.594 134.55 li
191.693 134.55 li
191.794 134.55 li
172.943 134.45 mo
173.044 134.45 li
173.144 134.45 li
173.244 134.45 li
173.344 134.45 li
173.443 134.45 li
173.494 134.45 li
173.594 134.45 li
173.693 134.45 li
173.794 134.45 li
173.894 134.45 li
173.943 134.5 li
174.044 134.5 li
174.144 134.5 li
174.244 134.5 li
174.344 134.5 li
174.394 134.5 li
174.494 134.5 li
174.594 134.5 li
174.693 134.5 li
174.794 134.5 li
174.844 134.5 li
174.943 134.5 li
175.044 134.5 li
175.144 134.5 li
175.244 134.5 li
175.294 134.5 li
175.394 134.5 li
175.494 134.5 li
175.594 134.5 li
175.693 134.5 li
175.794 134.5 li
175.844 134.5 li
175.943 134.5 li
176.044 134.5 li
176.144 134.5 li
176.244 134.5 li
176.294 134.5 li
176.394 134.5 li
176.494 134.5 li
176.594 134.5 li
176.693 134.5 li
176.744 134.5 li
176.844 134.5 li
176.943 134.5 li
177.044 134.5 li
177.144 134.5 li
177.193 134.5 li
177.294 134.5 li
177.394 134.5 li
177.494 134.5 li
177.594 134.55 li
177.644 134.55 li
177.744 134.55 li
177.844 134.55 li
177.943 134.55 li
178.044 134.55 li
178.144 134.55 li
178.193 134.55 li
178.294 134.55 li
178.394 134.55 li
178.494 134.55 li
178.594 134.55 li
178.644 134.55 li
178.744 134.55 li
178.844 134.55 li
178.943 134.55 li
179.044 134.55 li
179.094 134.55 li
179.193 134.55 li
179.294 134.55 li
179.394 134.55 li
179.494 134.55 li
179.544 134.55 li
179.644 134.55 li
179.744 134.55 li
179.844 134.55 li
179.943 134.55 li
180.044 134.55 li
180.094 134.55 li
180.193 134.55 li
180.294 134.55 li
180.394 134.55 li
180.493 134.55 li
180.544 134.55 li
180.644 134.55 li
180.743 134.55 li
180.844 134.55 li
180.943 134.55 li
180.993 134.55 li
181.094 134.55 li
181.193 134.55 li
181.294 134.55 li
181.394 134.55 li
181.443 134.55 li
181.544 134.55 li
181.644 134.55 li
181.743 134.55 li
181.844 134.55 li
181.894 134.55 li
181.993 134.55 li
182.094 134.55 li
182.193 134.55 li
182.294 134.55 li
182.394 134.55 li
163.544 132 mo
163.644 132.05 li
163.744 132.1 li
163.844 132.2 li
163.943 132.25 li
163.994 132.3 li
164.094 132.35 li
164.193 132.399 li
164.294 132.5 li
164.394 132.55 li
164.443 132.6 li
164.544 132.649 li
164.644 132.7 li
164.744 132.75 li
164.844 132.8 li
164.943 132.85 li
164.994 132.899 li
165.094 132.95 li
165.193 133 li
165.294 133.05 li
165.394 133.05 li
165.443 133.1 li
165.544 133.15 li
165.644 133.2 li
165.744 133.25 li
165.844 133.25 li
165.894 133.3 li
165.994 133.35 li
166.094 133.35 li
166.193 133.4 li
166.294 133.45 li
166.344 133.45 li
166.443 133.5 li
166.544 133.55 li
166.644 133.55 li
166.744 133.6 li
166.844 133.6 li
166.894 133.65 li
166.994 133.65 li
167.094 133.7 li
167.193 133.75 li
167.294 133.75 li
167.344 133.75 li
167.443 133.8 li
167.544 133.8 li
167.644 133.851 li
167.744 133.851 li
167.794 133.9 li
167.894 133.9 li
167.994 133.9 li
168.094 133.95 li
168.193 133.95 li
168.244 134 li
168.344 134 li
168.443 134 li
168.544 134.05 li
168.644 134.05 li
168.693 134.05 li
168.794 134.101 li
168.894 134.101 li
168.994 134.101 li
169.094 134.101 li
169.193 134.15 li
169.244 134.15 li
169.344 134.15 li
169.443 134.15 li
169.544 134.2 li
169.644 134.2 li
169.693 134.2 li
169.794 134.2 li
169.894 134.25 li
169.994 134.25 li
170.094 134.25 li
170.144 134.25 li
170.244 134.25 li
170.344 134.3 li
170.443 134.3 li
170.544 134.3 li
170.594 134.3 li
170.693 134.3 li
170.794 134.3 li
170.894 134.351 li
170.993 134.351 li
171.044 134.351 li
171.144 134.351 li
171.243 134.351 li
171.344 134.351 li
171.443 134.351 li
171.544 134.351 li
171.594 134.4 li
171.693 134.4 li
171.794 134.4 li
171.894 134.4 li
171.993 134.4 li
172.044 134.4 li
172.144 134.4 li
172.243 134.4 li
172.344 134.4 li
172.443 134.4 li
172.493 134.45 li
172.594 134.45 li
172.693 134.45 li
172.794 134.45 li
172.894 134.45 li
172.943 134.45 li
154.144 110.7 mo
154.244 111.1 li
154.344 111.5 li
154.443 111.85 li
154.544 112.25 li
154.594 112.6 li
154.693 112.95 li
154.794 113.35 li
154.894 113.7 li
154.994 114.05 li
155.044 114.399 li
155.144 114.75 li
155.244 115.1 li
155.344 115.399 li
155.443 115.75 li
155.494 116.1 li
155.594 116.399 li
155.693 116.75 li
155.794 117.05 li
155.894 117.35 li
155.994 117.649 li
156.044 118 li
156.144 118.3 li
156.244 118.6 li
156.344 118.85 li
156.443 119.149 li
156.494 119.45 li
156.594 119.75 li
156.693 120 li
156.794 120.3 li
156.894 120.55 li
156.943 120.8 li
157.044 121.1 li
157.144 121.35 li
157.244 121.6 li
157.344 121.85 li
157.394 122.1 li
157.494 122.35 li
157.594 122.6 li
157.693 122.85 li
157.794 123.05 li
157.844 123.3 li
157.943 123.5 li
158.044 123.75 li
158.144 123.95 li
158.244 124.2 li
158.344 124.399 li
158.394 124.6 li
158.494 124.8 li
158.594 125 li
158.693 125.2 li
158.794 125.399 li
158.844 125.6 li
158.943 125.8 li
159.044 126 li
159.144 126.149 li
159.244 126.35 li
159.294 126.5 li
159.394 126.7 li
159.494 126.85 li
159.594 127.05 li
159.693 127.2 li
159.744 127.35 li
159.844 127.55 li
159.943 127.7 li
160.044 127.85 li
160.144 128 li
160.193 128.149 li
160.294 128.3 li
160.394 128.399 li
160.494 128.55 li
160.594 128.7 li
160.693 128.85 li
160.744 128.95 li
160.844 129.1 li
160.943 129.25 li
161.044 129.35 li
161.144 129.45 li
161.193 129.6 li
161.294 129.7 li
161.394 129.85 li
161.493 129.95 li
161.594 130.05 li
161.644 130.149 li
161.743 130.25 li
161.844 130.35 li
161.943 130.45 li
162.044 130.55 li
162.094 130.649 li
162.193 130.75 li
162.294 130.85 li
162.394 130.95 li
162.493 131.05 li
162.594 131.149 li
162.644 131.2 li
162.743 131.3 li
162.844 131.399 li
162.943 131.45 li
163.044 131.55 li
163.094 131.6 li
163.193 131.7 li
163.294 131.75 li
163.394 131.85 li
163.493 131.899 li
163.544 132 li
144.744 59.2998 mo
144.844 59.75 li
144.943 60.1997 li
145.044 60.6499 li
145.144 61.0996 li
145.193 61.5498 li
145.294 62.0498 li
145.394 62.5 li
145.494 62.9497 li
145.594 63.4497 li
145.644 63.9497 li
145.744 64.3999 li
145.844 64.8999 li
145.943 65.3999 li
146.044 65.8999 li
146.094 66.3999 li
146.193 66.8999 li
146.294 67.3999 li
146.394 67.8999 li
146.494 68.4497 li
146.544 68.9497 li
146.644 69.4497 li
146.744 69.9497 li
146.844 70.4995 li
146.943 70.9995 li
146.994 71.5498 li
147.094 72.0498 li
147.193 72.5996 li
147.294 73.1499 li
147.394 73.6499 li
147.494 74.1997 li
147.544 74.75 li
147.644 75.2495 li
147.744 75.7998 li
147.844 76.3496 li
147.943 76.8999 li
147.994 77.3999 li
148.094 77.9497 li
148.193 78.5 li
148.294 79.0498 li
148.394 79.5996 li
148.443 80.1499 li
148.544 80.6499 li
148.644 81.1997 li
148.744 81.75 li
148.844 82.2998 li
148.894 82.8496 li
148.994 83.3999 li
149.094 83.8999 li
149.193 84.4497 li
149.294 85 li
149.394 85.5498 li
149.443 86.0498 li
149.544 86.5996 li
149.644 87.1499 li
149.744 87.6499 li
149.844 88.1997 li
149.894 88.75 li
149.994 89.25 li
150.094 89.7998 li
150.193 90.2998 li
150.294 90.8496 li
150.344 91.3496 li
150.443 91.8999 li
150.544 92.3999 li
150.644 92.8999 li
150.744 93.3999 li
150.794 93.9502 li
150.894 94.4502 li
150.994 94.9502 li
151.094 95.4502 li
151.193 95.9502 li
151.244 96.4502 li
151.344 96.9502 li
151.443 97.4502 li
151.544 97.9502 li
151.644 98.3994 li
151.744 98.8994 li
151.794 99.3994 li
151.894 99.8496 li
151.994 100.35 li
152.094 100.8 li
152.193 101.3 li
152.243 101.75 li
152.344 102.2 li
152.443 102.649 li
152.544 103.149 li
152.644 103.6 li
152.693 104.05 li
152.794 104.45 li
152.894 104.899 li
152.993 105.35 li
153.094 105.8 li
153.144 106.2 li
153.243 106.649 li
153.344 107.05 li
153.443 107.5 li
153.544 107.899 li
153.594 108.3 li
153.693 108.75 li
153.794 109.149 li
153.894 109.55 li
153.993 109.95 li
154.094 110.3 li
154.144 110.7 li
135.344 54.0498 mo
135.444 53.6499 li
135.544 53.2998 li
135.644 52.9497 li
135.694 52.5996 li
135.794 52.2998 li
135.894 51.9497 li
135.994 51.6499 li
136.094 51.2998 li
136.144 51 li
136.244 50.6997 li
136.344 50.3999 li
136.444 50.0996 li
136.544 49.8496 li
136.644 49.5498 li
136.694 49.2998 li
136.794 49.0498 li
136.894 48.7998 li
136.994 48.5498 li
137.094 48.3496 li
137.144 48.0996 li
137.244 47.8999 li
137.344 47.6997 li
137.444 47.5 li
137.544 47.2998 li
137.594 47.0996 li
137.694 46.9497 li
137.794 46.75 li
137.894 46.5996 li
137.994 46.4497 li
138.044 46.2998 li
138.144 46.1997 li
138.244 46.0498 li
138.344 45.9497 li
138.444 45.8496 li
138.544 45.75 li
138.594 45.6499 li
138.694 45.5498 li
138.794 45.5 li
138.894 45.4497 li
138.994 45.3999 li
139.044 45.3496 li
139.144 45.2998 li
139.244 45.2998 li
139.344 45.25 li
139.444 45.25 li
139.494 45.25 li
139.594 45.25 li
139.694 45.2998 li
139.793 45.2998 li
139.894 45.3496 li
139.944 45.3999 li
140.043 45.4497 li
140.144 45.5 li
140.244 45.5498 li
140.344 45.6499 li
140.394 45.75 li
140.494 45.8496 li
140.594 45.9497 li
140.694 46.0498 li
140.793 46.1997 li
140.894 46.2998 li
140.944 46.4497 li
141.043 46.5996 li
141.144 46.75 li
141.244 46.9497 li
141.344 47.0996 li
141.394 47.2998 li
141.494 47.5 li
141.594 47.6997 li
141.693 47.8999 li
141.793 48.0996 li
141.844 48.3496 li
141.943 48.5498 li
142.043 48.7998 li
142.144 49.0498 li
142.244 49.2998 li
142.293 49.5498 li
142.394 49.8496 li
142.494 50.0996 li
142.594 50.3999 li
142.693 50.6997 li
142.794 51 li
142.844 51.2998 li
142.943 51.6499 li
143.044 51.9497 li
143.144 52.2998 li
143.243 52.5996 li
143.294 52.9497 li
143.394 53.2998 li
143.493 53.6499 li
143.594 54.0498 li
143.693 54.3999 li
143.743 54.7998 li
143.844 55.1499 li
143.943 55.5498 li
144.044 55.9497 li
144.144 56.3496 li
144.193 56.75 li
144.294 57.1499 li
144.394 57.5996 li
144.493 58 li
144.594 58.4497 li
144.644 58.8496 li
144.743 59.2998 li
125.944 105.35 mo
126.044 104.899 li
126.144 104.45 li
126.244 104.05 li
126.294 103.6 li
126.394 103.149 li
126.494 102.649 li
126.594 102.2 li
126.694 101.75 li
126.744 101.3 li
126.844 100.8 li
126.944 100.35 li
127.044 99.8496 li
127.144 99.3994 li
127.194 98.8994 li
127.294 98.3994 li
127.394 97.9502 li
127.494 97.4502 li
127.594 96.9502 li
127.694 96.4502 li
127.744 95.9502 li
127.844 95.4492 li
127.944 94.9492 li
128.044 94.4492 li
128.144 93.9492 li
128.194 93.3994 li
128.294 92.8994 li
128.394 92.3994 li
128.494 91.8994 li
128.594 91.3496 li
128.644 90.8496 li
128.744 90.2998 li
128.844 89.7998 li
128.944 89.2495 li
129.044 88.7495 li
129.094 88.1997 li
129.194 87.6494 li
129.294 87.1494 li
129.394 86.5996 li
129.494 86.0498 li
129.544 85.5498 li
129.644 84.9995 li
129.744 84.4497 li
129.844 83.8994 li
129.944 83.3994 li
130.044 82.8496 li
130.094 82.2998 li
130.194 81.7495 li
130.294 81.1997 li
130.394 80.6494 li
130.494 80.1494 li
130.544 79.5996 li
130.644 79.0498 li
130.744 78.4995 li
130.844 77.9497 li
130.944 77.3994 li
130.994 76.8994 li
131.094 76.3496 li
131.194 75.7998 li
131.294 75.2495 li
131.394 74.7495 li
131.444 74.1997 li
131.544 73.6494 li
131.644 73.1494 li
131.744 72.5996 li
131.844 72.0498 li
131.944 71.5498 li
131.994 70.9995 li
132.094 70.4995 li
132.194 69.9497 li
132.294 69.4497 li
132.394 68.9497 li
132.444 68.4497 li
132.544 67.8994 li
132.644 67.3994 li
132.744 66.8994 li
132.844 66.3994 li
132.894 65.8994 li
132.994 65.3994 li
133.094 64.8994 li
133.194 64.3994 li
133.294 63.9497 li
133.344 63.4497 li
133.444 62.9497 li
133.544 62.4995 li
133.644 62.0498 li
133.744 61.5498 li
133.794 61.0996 li
133.894 60.6494 li
133.994 60.1997 li
134.094 59.7495 li
134.194 59.2998 li
134.294 58.8496 li
134.344 58.4497 li
134.444 57.9995 li
134.544 57.5996 li
134.644 57.1494 li
134.744 56.7495 li
134.794 56.3496 li
134.894 55.9497 li
134.994 55.5498 li
135.094 55.1494 li
135.194 54.7998 li
135.244 54.3994 li
135.344 54.0498 li
116.544 130.95 mo
116.644 130.85 li
116.744 130.75 li
116.844 130.649 li
116.894 130.55 li
116.994 130.45 li
117.094 130.35 li
117.194 130.25 li
117.294 130.149 li
117.344 130.05 li
117.444 129.95 li
117.544 129.85 li
117.644 129.7 li
117.744 129.6 li
117.794 129.45 li
117.894 129.35 li
117.994 129.25 li
118.094 129.1 li
118.194 128.95 li
118.244 128.85 li
118.344 128.7 li
118.444 128.55 li
118.544 128.4 li
118.644 128.3 li
118.744 128.15 li
118.794 128 li
118.894 127.85 li
118.994 127.7 li
119.094 127.55 li
119.194 127.35 li
119.244 127.2 li
119.344 127.05 li
119.444 126.85 li
119.544 126.7 li
119.644 126.5 li
119.694 126.35 li
119.794 126.149 li
119.894 126 li
119.994 125.8 li
120.094 125.6 li
120.144 125.399 li
120.244 125.2 li
120.344 125 li
120.444 124.8 li
120.544 124.6 li
120.594 124.399 li
120.694 124.2 li
120.794 123.95 li
120.894 123.75 li
120.994 123.5 li
121.094 123.3 li
121.144 123.05 li
121.244 122.85 li
121.344 122.6 li
121.444 122.35 li
121.544 122.1 li
121.594 121.85 li
121.694 121.6 li
121.794 121.35 li
121.894 121.1 li
121.994 120.8 li
122.044 120.55 li
122.144 120.3 li
122.244 120 li
122.344 119.75 li
122.444 119.45 li
122.494 119.149 li
122.594 118.85 li
122.694 118.6 li
122.794 118.3 li
122.894 118 li
122.944 117.649 li
123.044 117.35 li
123.144 117.05 li
123.244 116.75 li
123.344 116.399 li
123.444 116.1 li
123.494 115.75 li
123.594 115.399 li
123.694 115.1 li
123.794 114.75 li
123.894 114.399 li
123.944 114.05 li
124.044 113.7 li
124.144 113.35 li
124.244 112.95 li
124.344 112.6 li
124.394 112.25 li
124.494 111.85 li
124.594 111.5 li
124.694 111.1 li
124.794 110.7 li
124.844 110.3 li
124.944 109.95 li
125.044 109.55 li
125.144 109.149 li
125.244 108.75 li
125.344 108.3 li
125.394 107.899 li
125.494 107.5 li
125.594 107.05 li
125.694 106.649 li
125.794 106.2 li
125.844 105.8 li
125.944 105.35 li
107.144 134.399 mo
107.244 134.399 li
107.344 134.399 li
107.394 134.35 li
107.494 134.35 li
107.594 134.35 li
107.694 134.35 li
107.794 134.35 li
107.894 134.35 li
107.944 134.35 li
108.044 134.35 li
108.144 134.3 li
108.244 134.3 li
108.344 134.3 li
108.394 134.3 li
108.494 134.3 li
108.594 134.3 li
108.694 134.25 li
108.794 134.25 li
108.844 134.25 li
108.944 134.25 li
109.044 134.25 li
109.144 134.2 li
109.244 134.2 li
109.294 134.2 li
109.394 134.2 li
109.494 134.149 li
109.594 134.149 li
109.694 134.149 li
109.744 134.149 li
109.844 134.1 li
109.944 134.1 li
110.044 134.1 li
110.144 134.1 li
110.244 134.05 li
110.294 134.05 li
110.394 134.05 li
110.494 134 li
110.594 134 li
110.694 134 li
110.744 133.95 li
110.844 133.95 li
110.944 133.899 li
111.044 133.899 li
111.144 133.899 li
111.194 133.85 li
111.294 133.85 li
111.394 133.8 li
111.494 133.8 li
111.594 133.75 li
111.644 133.75 li
111.744 133.75 li
111.844 133.699 li
111.944 133.649 li
112.044 133.649 li
112.094 133.6 li
112.194 133.6 li
112.294 133.55 li
112.394 133.55 li
112.494 133.5 li
112.594 133.449 li
112.644 133.449 li
112.744 133.399 li
112.844 133.35 li
112.944 133.35 li
113.044 133.3 li
113.094 133.25 li
113.194 133.25 li
113.294 133.199 li
113.394 133.149 li
113.494 133.1 li
113.544 133.05 li
113.644 133.05 li
113.744 132.999 li
113.844 132.949 li
113.944 132.899 li
113.994 132.85 li
114.094 132.8 li
114.194 132.749 li
114.294 132.699 li
114.394 132.649 li
114.494 132.6 li
114.544 132.55 li
114.644 132.499 li
114.744 132.399 li
114.844 132.35 li
114.944 132.3 li
114.994 132.249 li
115.094 132.199 li
115.194 132.1 li
115.294 132.05 li
115.394 131.999 li
115.444 131.899 li
115.544 131.85 li
115.644 131.749 li
115.744 131.699 li
115.844 131.6 li
115.894 131.55 li
115.994 131.449 li
116.094 131.399 li
116.194 131.3 li
116.294 131.199 li
116.344 131.149 li
116.444 131.05 li
116.544 130.949 li
97.7437 134.55 mo
97.8438 134.55 li
97.9438 134.55 li
97.9937 134.55 li
98.0938 134.55 li
98.1938 134.55 li
98.2939 134.55 li
98.3936 134.55 li
98.4438 134.55 li
98.5439 134.55 li
98.6436 134.55 li
98.7437 134.55 li
98.8438 134.55 li
98.8936 134.55 li
98.9937 134.55 li
99.0938 134.55 li
99.1938 134.55 li
99.2939 134.55 li
99.3936 134.55 li
99.4438 134.55 li
99.5439 134.55 li
99.6436 134.55 li
99.7437 134.55 li
99.8438 134.55 li
99.8936 134.55 li
99.9937 134.55 li
100.094 134.55 li
100.194 134.55 li
100.294 134.55 li
100.344 134.55 li
100.444 134.55 li
100.544 134.55 li
100.644 134.55 li
100.744 134.55 li
100.794 134.55 li
100.894 134.55 li
100.994 134.55 li
101.094 134.55 li
101.194 134.55 li
101.294 134.55 li
101.344 134.55 li
101.444 134.5 li
101.544 134.5 li
101.644 134.5 li
101.744 134.5 li
101.794 134.5 li
101.894 134.5 li
101.994 134.5 li
102.094 134.5 li
102.194 134.5 li
102.244 134.5 li
102.344 134.5 li
102.444 134.5 li
102.544 134.5 li
102.644 134.5 li
102.694 134.5 li
102.794 134.5 li
102.894 134.5 li
102.994 134.5 li
103.094 134.5 li
103.144 134.5 li
103.244 134.5 li
103.344 134.5 li
103.444 134.5 li
103.544 134.5 li
103.644 134.5 li
103.694 134.5 li
103.794 134.5 li
103.894 134.5 li
103.994 134.5 li
104.094 134.5 li
104.144 134.5 li
104.244 134.5 li
104.344 134.5 li
104.444 134.5 li
104.544 134.5 li
104.594 134.5 li
104.694 134.5 li
104.794 134.5 li
104.894 134.5 li
104.994 134.5 li
105.044 134.45 li
105.144 134.45 li
105.244 134.45 li
105.344 134.45 li
105.444 134.45 li
105.494 134.45 li
105.594 134.45 li
105.694 134.45 li
105.794 134.45 li
105.894 134.45 li
105.994 134.45 li
106.044 134.45 li
106.144 134.45 li
106.244 134.45 li
106.344 134.45 li
106.444 134.45 li
106.494 134.399 li
106.594 134.399 li
106.694 134.399 li
106.794 134.399 li
106.894 134.399 li
106.944 134.399 li
107.044 134.399 li
107.144 134.399 li
88.3438 134.55 mo
88.4438 134.55 li
88.5439 134.55 li
88.5938 134.55 li
88.6938 134.55 li
88.7939 134.55 li
88.8936 134.55 li
88.9937 134.55 li
89.0439 134.55 li
89.1436 134.55 li
89.2437 134.55 li
89.3438 134.55 li
89.4438 134.55 li
89.4937 134.55 li
89.5938 134.55 li
89.6938 134.55 li
89.7939 134.55 li
89.894 134.55 li
89.9438 134.55 li
90.0439 134.55 li
90.144 134.55 li
90.2437 134.55 li
90.3438 134.55 li
90.4438 134.55 li
90.4937 134.55 li
90.5938 134.55 li
90.6938 134.55 li
90.7939 134.55 li
90.894 134.55 li
90.9438 134.55 li
91.0439 134.55 li
91.144 134.55 li
91.2437 134.55 li
91.3438 134.55 li
91.394 134.55 li
91.4937 134.55 li
91.5938 134.55 li
91.6938 134.55 li
91.7939 134.55 li
91.8438 134.55 li
91.9438 134.55 li
92.0439 134.55 li
92.144 134.55 li
92.2441 134.55 li
92.2939 134.55 li
92.394 134.55 li
92.4941 134.55 li
92.5938 134.55 li
92.6938 134.55 li
92.7939 134.55 li
92.8438 134.55 li
92.9438 134.55 li
93.0439 134.55 li
93.144 134.55 li
93.2441 134.55 li
93.2939 134.55 li
93.394 134.55 li
93.4941 134.55 li
93.5938 134.55 li
93.6938 134.55 li
93.7441 134.55 li
93.8438 134.55 li
93.9438 134.55 li
94.0439 134.55 li
94.144 134.55 li
94.1938 134.55 li
94.2939 134.55 li
94.394 134.55 li
94.4941 134.55 li
94.5938 134.55 li
94.6938 134.55 li
94.7441 134.55 li
94.8438 134.55 li
94.9438 134.55 li
95.0439 134.55 li
95.144 134.55 li
95.1938 134.55 li
95.2939 134.55 li
95.394 134.55 li
95.4941 134.55 li
95.5938 134.55 li
95.644 134.55 li
95.7441 134.55 li
95.8438 134.55 li
95.9438 134.55 li
96.0439 134.55 li
96.0938 134.55 li
96.1938 134.55 li
96.2939 134.55 li
96.394 134.55 li
96.4941 134.55 li
96.5439 134.55 li
96.644 134.55 li
96.7441 134.55 li
96.8442 134.55 li
96.9438 134.55 li
97.0439 134.55 li
97.0942 134.55 li
97.1938 134.55 li
97.2939 134.55 li
97.394 134.55 li
97.4941 134.55 li
97.5439 134.55 li
97.644 134.55 li
97.7441 134.55 li
78.9438 134.55 mo
79.0439 134.55 li
79.0938 134.55 li
79.1938 134.55 li
79.2939 134.55 li
79.3936 134.55 li
79.4937 134.55 li
79.5938 134.55 li
79.6436 134.55 li
79.7437 134.55 li
79.8438 134.55 li
79.9438 134.55 li
80.0439 134.55 li
80.0938 134.55 li
80.1938 134.55 li
80.2939 134.55 li
80.3936 134.55 li
80.4937 134.55 li
80.5439 134.55 li
80.6436 134.55 li
80.7437 134.55 li
80.8438 134.55 li
80.9438 134.55 li
80.9937 134.55 li
81.0938 134.55 li
81.1938 134.55 li
81.2939 134.55 li
81.394 134.55 li
81.4438 134.55 li
81.5439 134.55 li
81.644 134.55 li
81.7437 134.55 li
81.8438 134.55 li
81.9438 134.55 li
81.9937 134.55 li
82.0938 134.55 li
82.1938 134.55 li
82.2939 134.55 li
82.394 134.55 li
82.4438 134.55 li
82.5439 134.55 li
82.644 134.55 li
82.7437 134.55 li
82.8438 134.55 li
82.894 134.55 li
82.9937 134.55 li
83.0938 134.55 li
83.1938 134.55 li
83.2939 134.55 li
83.3438 134.55 li
83.4438 134.55 li
83.5439 134.55 li
83.644 134.55 li
83.7441 134.55 li
83.8438 134.55 li
83.894 134.55 li
83.9941 134.55 li
84.0938 134.55 li
84.1938 134.55 li
84.2939 134.55 li
84.3438 134.55 li
84.4438 134.55 li
84.5439 134.55 li
84.644 134.55 li
84.7441 134.55 li
84.7939 134.55 li
84.894 134.55 li
84.9941 134.55 li
85.0938 134.55 li
85.1938 134.55 li
85.2441 134.55 li
85.3438 134.55 li
85.4438 134.55 li
85.5439 134.55 li
85.644 134.55 li
85.6938 134.55 li
85.7939 134.55 li
85.894 134.55 li
85.9941 134.55 li
86.0938 134.55 li
86.1938 134.55 li
86.2441 134.55 li
86.3438 134.55 li
86.4438 134.55 li
86.5439 134.55 li
86.644 134.55 li
86.6938 134.55 li
86.7939 134.55 li
86.894 134.55 li
86.9941 134.55 li
87.0942 134.55 li
87.144 134.55 li
87.2441 134.55 li
87.3442 134.55 li
87.4438 134.55 li
87.5439 134.55 li
87.5942 134.55 li
87.6938 134.55 li
87.7939 134.55 li
87.894 134.55 li
87.9941 134.55 li
88.0439 134.55 li
88.144 134.55 li
88.2441 134.55 li
88.3442 134.55 li
69.5439 134.55 mo
69.6436 134.55 li
69.6938 134.55 li
69.7939 134.55 li
69.8936 134.55 li
69.9937 134.55 li
70.0938 134.55 li
70.1436 134.55 li
70.2437 134.55 li
70.3438 134.55 li
70.4438 134.55 li
70.5439 134.55 li
70.6436 134.55 li
70.6938 134.55 li
70.7939 134.55 li
70.8936 134.55 li
70.9937 134.55 li
71.0938 134.55 li
71.1436 134.55 li
71.2437 134.55 li
71.3438 134.55 li
71.4438 134.55 li
71.5439 134.55 li
71.5938 134.55 li
71.6938 134.55 li
71.7939 134.55 li
71.894 134.55 li
71.9937 134.55 li
72.0439 134.55 li
72.144 134.55 li
72.2437 134.55 li
72.3438 134.55 li
72.4438 134.55 li
72.4937 134.55 li
72.5938 134.55 li
72.6938 134.55 li
72.7939 134.55 li
72.894 134.55 li
72.9937 134.55 li
73.0439 134.55 li
73.144 134.55 li
73.2437 134.55 li
73.3438 134.55 li
73.4438 134.55 li
73.4937 134.55 li
73.5938 134.55 li
73.6938 134.55 li
73.7939 134.55 li
73.894 134.55 li
73.9438 134.55 li
74.0439 134.55 li
74.144 134.55 li
74.2441 134.55 li
74.3438 134.55 li
74.394 134.55 li
74.4941 134.55 li
74.5938 134.55 li
74.6938 134.55 li
74.7939 134.55 li
74.8438 134.55 li
74.9438 134.55 li
75.0439 134.55 li
75.144 134.55 li
75.2441 134.55 li
75.3438 134.55 li
75.394 134.55 li
75.4941 134.55 li
75.5938 134.55 li
75.6938 134.55 li
75.7939 134.55 li
75.8438 134.55 li
75.9438 134.55 li
76.0439 134.55 li
76.144 134.55 li
76.2441 134.55 li
76.2939 134.55 li
76.394 134.55 li
76.4941 134.55 li
76.5938 134.55 li
76.6938 134.55 li
76.7441 134.55 li
76.8438 134.55 li
76.9438 134.55 li
77.0439 134.55 li
77.144 134.55 li
77.2441 134.55 li
77.2939 134.55 li
77.394 134.55 li
77.4941 134.55 li
77.5942 134.55 li
77.6938 134.55 li
77.7441 134.55 li
77.8442 134.55 li
77.9438 134.55 li
78.0439 134.55 li
78.144 134.55 li
78.1938 134.55 li
78.2939 134.55 li
78.394 134.55 li
78.4941 134.55 li
78.5942 134.55 li
78.644 134.55 li
78.7441 134.55 li
78.8442 134.55 li
78.9438 134.55 li
60.1436 134.55 mo
60.2437 134.55 li
60.2939 134.55 li
60.3936 134.55 li
60.4937 134.55 li
60.5938 134.55 li
60.6938 134.55 li
60.7437 134.55 li
60.8438 134.55 li
60.9438 134.55 li
61.0439 134.55 li
61.1436 134.55 li
61.1938 134.55 li
61.2939 134.55 li
61.3936 134.55 li
61.4937 134.55 li
61.5938 134.55 li
61.6436 134.55 li
61.7437 134.55 li
61.8438 134.55 li
61.9438 134.55 li
62.0439 134.55 li
62.144 134.55 li
62.1938 134.55 li
62.2939 134.55 li
62.394 134.55 li
62.4937 134.55 li
62.5938 134.55 li
62.644 134.55 li
62.7437 134.55 li
62.8438 134.55 li
62.9438 134.55 li
63.0439 134.55 li
63.0938 134.55 li
63.1938 134.55 li
63.2939 134.55 li
63.394 134.55 li
63.4937 134.55 li
63.5439 134.55 li
63.644 134.55 li
63.7437 134.55 li
63.8438 134.55 li
63.9438 134.55 li
63.9937 134.55 li
64.0938 134.55 li
64.1938 134.55 li
64.2939 134.55 li
64.394 134.55 li
64.4941 134.55 li
64.5439 134.55 li
64.644 134.55 li
64.7441 134.55 li
64.8438 134.55 li
64.9438 134.55 li
64.9941 134.55 li
65.0938 134.55 li
65.1938 134.55 li
65.2939 134.55 li
65.394 134.55 li
65.4438 134.55 li
65.5439 134.55 li
65.644 134.55 li
65.7441 134.55 li
65.8438 134.55 li
65.894 134.55 li
65.9941 134.55 li
66.0938 134.55 li
66.1938 134.55 li
66.2939 134.55 li
66.394 134.55 li
66.4438 134.55 li
66.5439 134.55 li
66.644 134.55 li
66.7441 134.55 li
66.8438 134.55 li
66.894 134.55 li
66.9941 134.55 li
67.0938 134.55 li
67.1938 134.55 li
67.2939 134.55 li
67.3438 134.55 li
67.4438 134.55 li
67.5439 134.55 li
67.644 134.55 li
67.7441 134.55 li
67.7939 134.55 li
67.894 134.55 li
67.9941 134.55 li
68.0942 134.55 li
68.1938 134.55 li
68.2441 134.55 li
68.3442 134.55 li
68.4438 134.55 li
68.5439 134.55 li
68.644 134.55 li
68.7441 134.55 li
68.7939 134.55 li
68.894 134.55 li
68.9941 134.55 li
69.0942 134.55 li
69.1938 134.55 li
69.2441 134.55 li
69.3442 134.55 li
69.4438 134.55 li
69.5439 134.55 li
50.7437 134.55 mo
50.7939 134.55 li
50.8936 134.55 li
50.9937 134.55 li
51.0938 134.55 li
51.1938 134.55 li
51.2939 134.55 li
51.3438 134.55 li
51.4438 134.55 li
51.5439 134.55 li
51.6436 134.55 li
51.7437 134.55 li
51.7939 134.55 li
51.8936 134.55 li
51.9937 134.55 li
52.0938 134.55 li
52.1938 134.55 li
52.2437 134.55 li
52.3438 134.55 li
52.4438 134.55 li
52.5439 134.55 li
52.644 134.55 li
52.6938 134.55 li
52.7939 134.55 li
52.894 134.55 li
52.9937 134.55 li
53.0938 134.55 li
53.1938 134.55 li
53.2437 134.55 li
53.3438 134.55 li
53.4438 134.55 li
53.5439 134.55 li
53.644 134.55 li
53.6938 134.55 li
53.7939 134.55 li
53.894 134.55 li
53.9937 134.55 li
54.0938 134.55 li
54.144 134.55 li
54.2437 134.55 li
54.3438 134.55 li
54.4438 134.55 li
54.5439 134.55 li
54.5938 134.55 li
54.6938 134.55 li
54.7939 134.55 li
54.894 134.55 li
54.9937 134.55 li
55.0439 134.55 li
55.144 134.55 li
55.2441 134.55 li
55.3438 134.55 li
55.4438 134.55 li
55.5439 134.55 li
55.5938 134.55 li
55.6938 134.55 li
55.7939 134.55 li
55.894 134.55 li
55.9941 134.55 li
56.0439 134.55 li
56.144 134.55 li
56.2441 134.55 li
56.3438 134.55 li
56.4438 134.55 li
56.4941 134.55 li
56.5938 134.55 li
56.6938 134.55 li
56.7939 134.55 li
56.894 134.55 li
56.9438 134.55 li
57.0439 134.55 li
57.144 134.55 li
57.2441 134.55 li
57.3438 134.55 li
57.394 134.55 li
57.4941 134.55 li
57.5938 134.55 li
57.6938 134.55 li
57.7939 134.55 li
57.894 134.55 li
57.9438 134.55 li
58.0439 134.55 li
58.144 134.55 li
58.2441 134.55 li
58.3438 134.55 li
58.394 134.55 li
58.4941 134.55 li
58.5942 134.55 li
58.6938 134.55 li
58.7939 134.55 li
58.8442 134.55 li
58.9438 134.55 li
59.0439 134.55 li
59.144 134.55 li
59.2441 134.55 li
59.2939 134.55 li
59.394 134.55 li
59.4941 134.55 li
59.5942 134.55 li
59.6938 134.55 li
59.7939 134.55 li
59.8442 134.55 li
59.9438 134.55 li
60.0439 134.55 li
60.144 134.55 li
41.3438 134.55 mo
41.3936 134.55 li
41.4937 134.55 li
41.5938 134.55 li
41.6938 134.55 li
41.7939 134.55 li
41.8438 134.55 li
41.9438 134.55 li
42.0439 134.55 li
42.1436 134.55 li
42.2437 134.55 li
42.3438 134.55 li
42.3936 134.55 li
42.4937 134.55 li
42.5938 134.55 li
42.6938 134.55 li
42.7939 134.55 li
42.8438 134.55 li
42.9438 134.55 li
43.0439 134.55 li
43.1436 134.55 li
43.2437 134.55 li
43.2939 134.55 li
43.3936 134.55 li
43.4937 134.55 li
43.5938 134.55 li
43.6938 134.55 li
43.7437 134.55 li
43.8438 134.55 li
43.9438 134.55 li
44.0439 134.55 li
44.144 134.55 li
44.1938 134.55 li
44.2939 134.55 li
44.394 134.55 li
44.4937 134.55 li
44.5938 134.55 li
44.6938 134.55 li
44.7437 134.55 li
44.8438 134.55 li
44.9438 134.55 li
45.0439 134.55 li
45.144 134.55 li
45.1938 134.55 li
45.2939 134.55 li
45.394 134.55 li
45.4937 134.55 li
45.5938 134.55 li
45.644 134.55 li
45.7437 134.55 li
45.8438 134.55 li
45.9438 134.55 li
46.0439 134.55 li
46.0938 134.55 li
46.1938 134.55 li
46.2939 134.55 li
46.394 134.55 li
46.4941 134.55 li
46.5938 134.55 li
46.644 134.55 li
46.7441 134.55 li
46.8438 134.55 li
46.9438 134.55 li
47.0439 134.55 li
47.0938 134.55 li
47.1938 134.55 li
47.2939 134.55 li
47.394 134.55 li
47.4941 134.55 li
47.5439 134.55 li
47.644 134.55 li
47.7441 134.55 li
47.8438 134.55 li
47.9438 134.55 li
47.9941 134.55 li
48.0938 134.55 li
48.1938 134.55 li
48.2939 134.55 li
48.394 134.55 li
48.4438 134.55 li
48.5439 134.55 li
48.644 134.55 li
48.7441 134.55 li
48.8438 134.55 li
48.9438 134.55 li
48.9941 134.55 li
49.0938 134.55 li
49.1938 134.55 li
49.2939 134.55 li
49.394 134.55 li
49.4438 134.55 li
49.5439 134.55 li
49.644 134.55 li
49.7441 134.55 li
49.8442 134.55 li
49.894 134.55 li
49.9941 134.55 li
50.0942 134.55 li
50.1938 134.55 li
50.2939 134.55 li
50.3442 134.55 li
50.4438 134.55 li
50.5439 134.55 li
50.644 134.55 li
50.7441 134.55 li
31.9438 134.55 mo
31.9937 134.55 li
32.0938 134.55 li
32.1938 134.55 li
32.2939 134.55 li
32.3936 134.55 li
32.4438 134.55 li
32.5439 134.55 li
32.6436 134.55 li
32.7437 134.55 li
32.8438 134.55 li
32.8936 134.55 li
32.9937 134.55 li
33.0938 134.55 li
33.1938 134.55 li
33.2939 134.55 li
33.3438 134.55 li
33.4438 134.55 li
33.5439 134.55 li
33.6436 134.55 li
33.7437 134.55 li
33.8438 134.55 li
33.894 134.55 li
33.9937 134.55 li
34.0938 134.55 li
34.1938 134.55 li
34.2939 134.55 li
34.3438 134.55 li
34.4438 134.55 li
34.5439 134.55 li
34.644 134.55 li
34.7437 134.55 li
34.7939 134.55 li
34.894 134.55 li
34.9937 134.55 li
35.0938 134.55 li
35.1938 134.55 li
35.2437 134.55 li
35.3438 134.55 li
35.4438 134.55 li
35.5439 134.55 li
35.644 134.55 li
35.7437 134.55 li
35.7939 134.55 li
35.894 134.55 li
35.9937 134.55 li
36.0938 134.55 li
36.1938 134.55 li
36.2437 134.55 li
36.3438 134.55 li
36.4438 134.55 li
36.5439 134.55 li
36.644 134.55 li
36.6938 134.55 li
36.7939 134.55 li
36.894 134.55 li
36.9941 134.55 li
37.0938 134.55 li
37.144 134.55 li
37.2441 134.55 li
37.3438 134.55 li
37.4438 134.55 li
37.5439 134.55 li
37.5938 134.55 li
37.6938 134.55 li
37.7939 134.55 li
37.894 134.55 li
37.9941 134.55 li
38.0938 134.55 li
38.144 134.55 li
38.2441 134.55 li
38.3438 134.55 li
38.4438 134.55 li
38.5439 134.55 li
38.5938 134.55 li
38.6938 134.55 li
38.7939 134.55 li
38.894 134.55 li
38.9941 134.55 li
39.0439 134.55 li
39.144 134.55 li
39.2441 134.55 li
39.3438 134.55 li
39.4438 134.55 li
39.4941 134.55 li
39.5938 134.55 li
39.6938 134.55 li
39.7939 134.55 li
39.894 134.55 li
39.9438 134.55 li
40.0439 134.55 li
40.144 134.55 li
40.2441 134.55 li
40.3442 134.55 li
40.4438 134.55 li
40.4941 134.55 li
40.5942 134.55 li
40.6938 134.55 li
40.7939 134.55 li
40.894 134.55 li
40.9438 134.55 li
41.0439 134.55 li
41.144 134.55 li
41.2441 134.55 li
41.3442 134.55 li
22.5439 134.55 mo
22.5938 134.55 li
22.6938 134.55 li
22.7939 134.55 li
22.8936 134.55 li
22.9937 134.55 li
23.0439 134.55 li
23.1436 134.55 li
23.2437 134.55 li
23.3438 134.55 li
23.4438 134.55 li
23.4937 134.55 li
23.5938 134.55 li
23.6938 134.55 li
23.7939 134.55 li
23.8936 134.55 li
23.9438 134.55 li
24.0439 134.55 li
24.1436 134.55 li
24.2437 134.55 li
24.3438 134.55 li
24.3936 134.55 li
24.4937 134.55 li
24.5938 134.55 li
24.6938 134.55 li
24.7939 134.55 li
24.894 134.55 li
24.9438 134.55 li
25.0439 134.55 li
25.144 134.55 li
25.2437 134.55 li
25.3438 134.55 li
25.394 134.55 li
25.4937 134.55 li
25.5938 134.55 li
25.6938 134.55 li
25.7939 134.55 li
25.8438 134.55 li
25.9438 134.55 li
26.0439 134.55 li
26.144 134.55 li
26.2437 134.55 li
26.2939 134.55 li
26.394 134.55 li
26.4937 134.55 li
26.5938 134.55 li
26.6938 134.55 li
26.7437 134.55 li
26.8438 134.55 li
26.9438 134.55 li
27.0439 134.55 li
27.144 134.55 li
27.2441 134.55 li
27.2939 134.55 li
27.394 134.55 li
27.4941 134.55 li
27.5938 134.55 li
27.6938 134.55 li
27.7441 134.55 li
27.8438 134.55 li
27.9438 134.55 li
28.0439 134.55 li
28.144 134.55 li
28.1938 134.55 li
28.2939 134.55 li
28.394 134.55 li
28.4941 134.55 li
28.5938 134.55 li
28.644 134.55 li
28.7441 134.55 li
28.8438 134.55 li
28.9438 134.55 li
29.0439 134.55 li
29.144 134.55 li
29.1938 134.55 li
29.2939 134.55 li
29.394 134.55 li
29.4941 134.55 li
29.5938 134.55 li
29.644 134.55 li
29.7441 134.55 li
29.8438 134.55 li
29.9438 134.55 li
30.0439 134.55 li
30.0938 134.55 li
30.1938 134.55 li
30.2939 134.55 li
30.394 134.55 li
30.4941 134.55 li
30.5439 134.55 li
30.644 134.55 li
30.7441 134.55 li
30.8442 134.55 li
30.9438 134.55 li
30.9941 134.55 li
31.0942 134.55 li
31.1938 134.55 li
31.2939 134.55 li
31.394 134.55 li
31.4941 134.55 li
31.5439 134.55 li
31.644 134.55 li
31.7441 134.55 li
31.8442 134.55 li
31.9438 134.55 li
13.0938 134.55 mo
13.1938 134.55 li
13.2939 134.55 li
13.3936 134.55 li
13.4937 134.55 li
13.5439 134.55 li
13.6436 134.55 li
13.7437 134.55 li
13.8438 134.55 li
13.9438 134.55 li
14.0439 134.55 li
14.0938 134.55 li
14.1938 134.55 li
14.2939 134.55 li
14.3936 134.55 li
14.4937 134.55 li
14.5439 134.55 li
14.6436 134.55 li
14.7437 134.55 li
14.8438 134.55 li
14.9438 134.55 li
14.9937 134.55 li
15.0938 134.55 li
15.1938 134.55 li
15.2939 134.55 li
15.394 134.55 li
15.4438 134.55 li
15.5439 134.55 li
15.644 134.55 li
15.7437 134.55 li
15.8438 134.55 li
15.894 134.55 li
15.9937 134.55 li
16.0938 134.55 li
16.1938 134.55 li
16.2939 134.55 li
16.394 134.55 li
16.4438 134.55 li
16.5439 134.55 li
16.644 134.55 li
16.7437 134.55 li
16.8438 134.55 li
16.894 134.55 li
16.9937 134.55 li
17.0938 134.55 li
17.1938 134.55 li
17.2939 134.55 li
17.3438 134.55 li
17.4438 134.55 li
17.5439 134.55 li
17.644 134.55 li
17.7441 134.55 li
17.7939 134.55 li
17.894 134.55 li
17.9941 134.55 li
18.0938 134.55 li
18.1938 134.55 li
18.2939 134.55 li
18.3438 134.55 li
18.4438 134.55 li
18.5439 134.55 li
18.644 134.55 li
18.7441 134.55 li
18.7939 134.55 li
18.894 134.55 li
18.9941 134.55 li
19.0938 134.55 li
19.1938 134.55 li
19.2441 134.55 li
19.3438 134.55 li
19.4438 134.55 li
19.5439 134.55 li
19.644 134.55 li
19.6938 134.55 li
19.7939 134.55 li
19.894 134.55 li
19.9941 134.55 li
20.0938 134.55 li
20.144 134.55 li
20.2441 134.55 li
20.3438 134.55 li
20.4438 134.55 li
20.5439 134.55 li
20.644 134.55 li
20.6938 134.55 li
20.7939 134.55 li
20.894 134.55 li
20.9941 134.55 li
21.0942 134.55 li
21.144 134.55 li
21.2441 134.55 li
21.3442 134.55 li
21.4438 134.55 li
21.5439 134.55 li
21.5942 134.55 li
21.6938 134.55 li
21.7939 134.55 li
21.894 134.55 li
21.9941 134.55 li
22.0439 134.55 li
22.144 134.55 li
22.2441 134.55 li
22.3442 134.55 li
22.4438 134.55 li
22.5439 134.55 li
3.89355 134.55 mo
3.99365 134.55 li
4.09375 134.55 li
4.14355 134.55 li
4.24365 134.55 li
4.34375 134.55 li
4.44385 134.55 li
4.54395 134.55 li
4.59375 134.55 li
4.69385 134.55 li
4.79346 134.55 li
4.89355 134.55 li
4.99365 134.55 li
5.09375 134.55 li
5.14355 134.55 li
5.24365 134.55 li
5.34375 134.55 li
5.44385 134.55 li
5.54346 134.55 li
5.59375 134.55 li
5.69385 134.55 li
5.79346 134.55 li
5.89355 134.55 li
5.99365 134.55 li
6.04346 134.55 li
6.14355 134.55 li
6.24365 134.55 li
6.34375 134.55 li
6.44336 134.55 li
6.49365 134.55 li
6.59375 134.55 li
6.69336 134.55 li
6.79346 134.55 li
6.89355 134.55 li
6.94336 134.55 li
7.04346 134.55 li
7.14355 134.55 li
7.24365 134.55 li
7.34375 134.55 li
7.44336 134.55 li
7.49365 134.55 li
7.59375 134.55 li
7.69336 134.55 li
7.79346 134.55 li
7.89355 134.55 li
7.94336 134.55 li
8.04346 134.55 li
8.14355 134.55 li
8.24365 134.55 li
8.34375 134.55 li
8.39355 134.55 li
8.49365 134.55 li
8.59375 134.55 li
8.69336 134.55 li
8.79346 134.55 li
8.84375 134.55 li
8.94336 134.55 li
9.04346 134.55 li
9.14355 134.55 li
9.24365 134.55 li
9.29346 134.55 li
9.39355 134.55 li
9.49365 134.55 li
9.59375 134.55 li
9.69336 134.55 li
9.79346 134.55 li
9.84375 134.55 li
9.94336 134.55 li
10.0435 134.55 li
10.1436 134.55 li
10.2437 134.55 li
10.2935 134.55 li
10.3936 134.55 li
10.4937 134.55 li
10.5938 134.55 li
10.6934 134.55 li
10.7437 134.55 li
10.8438 134.55 li
10.9434 134.55 li
11.0435 134.55 li
11.1436 134.55 li
11.1934 134.55 li
11.2935 134.55 li
11.3936 134.55 li
11.4937 134.55 li
11.5938 134.55 li
11.6938 134.55 li
11.7437 134.55 li
11.8438 134.55 li
11.9438 134.55 li
12.0435 134.55 li
12.1436 134.55 li
12.1938 134.55 li
12.2935 134.55 li
12.3936 134.55 li
12.4937 134.55 li
12.5938 134.55 li
12.6436 134.55 li
12.7437 134.55 li
12.8438 134.55 li
12.9438 134.55 li
13.0435 134.55 li
13.0938 134.55 li
175.294 27.8999 mo
195.244 27.8999 li
@
0.5 lw
[] 0 dsh
3.89355 0.25 mo
3.89355 179.3 li
275.044 179.3 li
275.044 0.25 li
3.89355 0.25 li
3.89355 0.25 li
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/EGEGYB+Helvetica*1 uf/EGEGYB+Helvetica uf/Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.1%%For: (Santosh Kumar) ()%%Title: (bootstrap.eps)%%CreationDate: 10/13/10 7:21 AM%AI9_DataStream%Gb".!kB\nodK#/r)rMdQ2E$s5A7K+)fJr&16JKL,R4rF=qm!>QX/&eZ#^F%hp2f)9#")%c:f<RY8eq:'dWdM3og^+#n_Z>[Rn@t:%Ct>(H,e]$cj73!cr<m%G<%"!WVP%BBQK8c/Z$'^6>muG7r+nF^$F<l\4;^k,3H&WYmX?[DCZEe^4`1OX^P$mIgK#"o/gccJ?g-aT%'V!4r>(7[E`m\@Cm`i`gGfFd-V+#m\4';tR_DLFME;20fMYk,Z[6K>7(OmfnS"oCZd1agPLkK)ULl,hAOFG1+0893AbnG6DU+qpo%muN\haa':V)GQG`IoGT*JnOTi-CMuK03O%SVH@cpnO!$7cfW^M]K[H##>)C+_Jh8DcNO_CSk6na?9Xj3:\hV)'2=V)3TEgfhIJP'%9rAZ#9Eq]i='t_uc?n@7p.+`Em#t-;XPY=C.Sf/nrVo5@:U-EKS`RrAMo@rK?B=p_=SsR??995&KRrn(^KVYa!<ru3O-Mn3;W4W=%r=J+)>DrdpQt+F2@2Mmq<h\(C8!jnh63jD%@<=B@_5!!aBqj#E!3DEOjV(cR[A9-^i?"/@(]>J)Z-*'=$#"jtS46.mL)0)sgAgAt%Ep*t<K(Wim-SJkro4H&KSj4j%pchFO-Y#QnS^3"P3+fOmb/\Na$kk_:,TU-<U.mO\pCXK/0&oC$Sj>^mU#d=qg@I4S6R'^I/c3#d%oZnNN'ncMU4FF#(n<qP<B=U^.niZj3Gpqd".-5_P>-#KojK2AgC8Fht/!Y]iW>*iSV.qmAAi:$>Z<=,i7K;<5C_gbsZVV%D_'d_^%Q_@Hj$u_HT:f8o5SQZIpCUI+KhQGD%]N-9GO:d]HP4=VT8L_;DbB_t)LJOiPF+R2d"`pCo-"SbTpk1[^,PZq;;b3!o@8?:u^L0P#%#qZ`KOd9EFn-S]@^[Ms""FUnrP5_-jbR6V.:9=`Hkk`*9$&f0)$'aA3]Lc^17Sh$!`^Y90Ojc1^298"\"nR@BBSif5R5HE<.gCKs%(<hiB0S'RV(Zkspn-`huefR)taPdGQ67nQHI$.JT]7dtboFF+54TH_)qhM<l)'=Dje08k,E$7"bUPFtqEKP]AbB1Eg%JgV#_!L:1%K\=2rACdOjjp.MTMsPAL++X`D(I"N&bg,7H4.G4>JK3p*lu'Cil!C'q%7X*9$J>e$0Bei;\<G;PW0;Z:ggK2b7HiOJfV')JS[;/K%-fsD2)*,N,ZCAt)'A/B^CA8n(^G<6]G<C>3XYOKc36?N>lu'E'jo#F&bBo%S]"H0"b47U/LaXP-D&F76XE;+^?d^QPP@YX0&,m3A%aGU!WNg.V7ahL5qr0IAGIia(p8Y4"QahMqdr0IAGJ!g`@S]T6m1ZH/YOd*q:ahL`1r0IAGIia*96Cu8JahMSUr0IAGIuO#\cuW;N%pa#/tIa_Zb0:EuL-mt1c>.Tm@ega>prh_48TCLeaQfLuV2#R(B9kn]L/^V9%2RI(%;]HIR#JX@VIaug"9\/u%W!RN<=,Ikp+70U2%(]@.$_DA%rHO?)dC:-`%WeL9^CPq#F2_]nuMsrXl"8tuW1)OMaj3mFU0;?;jPCh]Oru"^@6t\KGLAse]q&Q=XO&G<nM-EQ7HF4+#%_M[<8%+O7aE[bjbWtmM<([</2H9j,pdT+^Z]T$*h,8Y!`5VjeiUbh$%Zu..fk9NRKS%sl`1:/F43e`h#o$UmP@OX'InfEN&:KA._%K-&qeDBjiYP(biY,39P0_N;%])+lRsB3L"Ta`f?hNs/ot")(8A.DLXacc@]g`7`WG"NBPS,oG39/R2udkZa29!X]/f2u!Th7@[Ap%#X\;*-]Td4B?WXpjF8q'$!nUk<.J)64Mr\M)Ad+AN!#&%$i?FEc6T&IEJ-IH"06ufeAsGOpXp0b0fD[/Jhm79Q->Du,+"I*cl2;&%Ngroa4kp$("R:*Jkc[[3]Ii*&=AF'^%?Ff3:D(?1#XTUGIPV^BK&J9Z-2UNY)g+pn96e!sMLS<O5,"3,%<K*in/(d?L1_65K4eJb%E0B1Vr5AIT91D[jP87jMffegHVAD+8O2u07$oN`dNU/=p?0mKnTa#pD(h"tW^=,%2\108@fo/$_^bI01qN4jtZlSoepru\6-<+'@%p)Ma/FJ\'I6DSu8fElYlj)rKW$7f$A)Pu;@>u4lHFct/adOO06=`(IU)-CNXgCpqHrt]TCVG&iK7FE[+P-tZC(8%FCTAlFI=M\@M%cSGkojY.^PIkfJBD6)g9Lh5X8,4qDn;L-:qR$%BXN&YRNR3bW@p1;?lMtfiJVkj;b."P'[ckGY3'QHftB1`Tq`Abp(b;>7r:KXpS%n6&m<Zc;l.)@=aU>0P.$'q^'bMM]M:2+I-O\\;e]4;k]0m>P:O0e;e4+>)&`'D=F(Mi9s52cs>rUdQ-3MB7WQP<C&>:T6f8rf9QU%P?3BLFT!IRH6g3ppH<e+]pI5ePBRbJOPu:sIFC,8*C].:rOX7j`p]+:e$\28R\$@>&C+-91_!KE($fC1A(?S?pS?qtaIB28T2`4p%R2t7raGApib5L;l.*B6&f+ClWWWoqqlJJ*AGITEq$h6n:eIIf-!.DJ\L*X-\H%HCb'rCmt9]U;C-<HGo<fqa&.jhu9VQ3:'.sdH;%VDCr/[kVE,Y=2a#)<j:!]e7`]T$b8(Y9B64:dabXO\ZhL\+4AVho85eKCG(hS"OeYN1"qI=a@[&[H/f2ACXMO&qj_3,58&T"6BSE%Gs>`*LmLn[GnqU\Ubo;Ob4:J#;ec+Q?Nb_,fCpk<Sii9SUleTE+i6\gImVVjgd4?'/Wtc5Na;l.\Q@<@E+pXB8i6rYNN<0M:=<g?%/a4Z=a%>;_d^>lU#?_o]Oi1to1R.N,els%)UMYdh%WDRC2aEXeQL7`CSn`I'iqf[R.@D'V<@'a@JKGnl9'R&`%P+(NnouRl7t0J]%OHfJGX.c^p9B'&=%R=r6Q-uuqn$M^]8!ud%&+rBe<#P:<W;sFQ,&,-#iU7D]&g_42S4&+OHX4&&A1T-$]I&p+=M;)3<C04aGD[7@%9@Tjmj^QUr%@rXD/($ekcXf,2-uhg6a0$7X>"uD]7&ATH<@Tq"mFDQ=E;qDV,@X5:h'O1aQ;W%WQAXE3<u+.TV&LRRBeJ5,A3SA/%P,`!Z?BTJ7"\iG`PX1h5Z49$SkkQ^"h5lVXd$$_?DQsr@1nYJo9YC`jA>QPE3#\Y@oe#GgU`CiA3N&N#oK87+KMGo,2l,6V'%S`@%V&W##29">@H(*1J1fb,+On6Y/qkiBuH30q]-_>ijhT%^c8h^kVLD'GbM-8!a;L+PqF'4s<s!tPeDr\:+Ug,naGbuC!<ABdh4UmXN%;pUS&XX$]o8-rR9YA)rIs'J_)X_E6bhc?j@Q"72?Dp!"aqK2KsQ+ti`6JdX53!*F(o;+2?;4h>2Ip=aXLQgjr3DGO^3^'qtnj%5D%,rQG)?IiMGdm^.7$EgM,_1AV4hK4Oo;PIV/]Y)iqUSpd'PF?mIP<C4-5`4"C,#])j0n>!Pd0h><Smo!W(9)X.B;hm\VGpMd9r1]Z%P`o$:WDoe;Z%d=`8"Lpo-`)L);[F@7<A7.iJ*B"5)TeAi8pY$9p1\`Q-k.*]^D^60TVd*+h/Z\K.Uu`djj;,.AA3b2,kX,dG,t<V%"t_lL9Sf!eC2Ad%XqnAr<"G^bIqpfVJp-gM,T\+!oY?VR4UYFOXt"37V%j*c.SY(&gdd/Fean4;Di,p!P(=<_K$dQ3Oa'7X$rrpf%7#R*LKfIgr7emIb&&:iB"NPJPKZN=%.!20-FGWO/kZ^b&40HnnDjYb,W?.ND\So\B:ek7HVtUPf%CgU7?**"o=fNu!n%a.k[;tQq%qR24ZSEQF'>'-@DRM%+@GM7c[2,]mGO`g:t7m4)N+Q(?%+W.f7W-uY<F?CCiO>?&^0"D\YMi$WE_e8!oMt(&>og^)+_4+0<5Gmh_%"L-C3(OLR=MFqLNiY3-Jb?^gn*t6lnC:h*F$h9F+J'\kgVmMm?IP&7\-<8d0[<T=<T6;$gpOVgX]Ih_Yn$d;s?.uf=ht4hjnuA@-%<KLPSPNMb<:1$kr0@^s!jur5hWB2GLa,7H<WU?,^AO3=K8C`E!eIu:\FaNM:%q-CFT`GKe]Sk\gT?W)S!+mr!\mX8+mjnYF@32&J%VZ;:iB,nT>Cl`n5!J8`6><8J/HL^EJo$=]CnMuZVVsU'0Ceqh+A.2@[Z-dgQ'AhcgCA`03B[8k*d\Fol0cTgV$b6oKqi<Fg%i<s?%*aLr*G<G9+$`L'(8:^0Hp8kkC^^jVBNLl'As"&g@9X6VVcR:FDh&WkXpab'(rGHt4?BF#i+,nV,lA+o75YE[;a7FlO5*pa28-ji6%If_Eu:"ikr?6kG+'K;NVV]$Yp*Z=XtOQ++gs1oWlJJ^=<IulSY0DRVRf^&RfLCGF.9nN2So^.(\-7`8*9ZMCR(fR5Mj'T;V:].ne%-7j$Fe8p"hqAK$8KAa/'nZ:32$.8hD%od]N3F9qV(@f>$MCi"3HnUYR;3_>e-(nt8k=t&]D+^(^Us^]kFK0#8cMNjU\0a)9Q-EQt%U)pDcCt=XthBiUbCj2e]hkpOTf'["#+=Kr<g(XKkN'>tE`Gj11bRknV8&BJ_gICXWY,^,V/U@,;2-UKCSG*.$'!"/hVQ-EZ(ec?!%hH.gr;.8;U(mc>bjU/pEmco?[KP2HE``qeh42TN4'>a:]VH=Fc]kj-u,?P49MtR/L8B(J$GD$@qIhW_(o>_RWJJ?hBU@?(<Alq;T%K]r#VHdM)n^W4_iL=hA<5+.FXM_61UIFR6r#T@GAPDu1EKo`[o_e,*PK_9jP?8e:5[jUBn^Vs&\1\$>VR('aKRh0cn_Qa%R7N[5K%9/'1fJG/EsjZgZ.GjlV!ImrBb1A)oDi@BNE)-RTUbk%>uTHs,T2HZWHqK0B;1e7"E:B3c%He+d<H:n?n=0nQ$Hq&R2aW'GXX8eMO%T#KF^8^OcVX!sE>IX"XM?\gJ3Qc04#\'%3i0%`+)f`bm'WOF]ibW`^Aj7,AQT=RQ3VYCumL&1h050iX*UXKg+[([omK!qT:FT/K0%"k>O"!>YU'>;*J5.>*]DIb1M#K6!q=;Wa^[g7USDjS/1?qU`Ql`0fAQ%HZEEG]F"QV`PGBs$83Td(ZoFn33ER'k"pTX/!F__0D[k%V"=d18`&4qFCNcW//+bF4bOsqT4K^:LD-nDpKi<W-NY@Wr3M,n?96`YKD)6,p#>.4P<aTDr^HHQ9p3RRWR3!<I3n-97]gB6QBZn/%q"u4%m61!7&RoPF%rVpeBf&:b`D>2T_&Mp_0De+)J8$Im4[oC#Gc9FWj1Y<prA[2P^<iYTGSAqDn)H4am@gG%(V&<B3pOgLG!0/"%m,-2tK0Ht?rm,\UpbU_Qs%Ko$5LXKGcZGY]mag6%j84&?Q2Poe/&hEZa2S$Na2S">D4UMZPVVoE-tV\i:s.:[Tp2N@6RbqlPk);p%[3:4<e8<oocM^eQ2Iu0`])=Ea.fF"Y<;Op;WUugV;X$D5V:'jJ8u;OrPtM'LfsT&=P[2K19A-_3%3bXZj8(Qr1@o-,A`h<8b06KO%PaVP4V0k[,gP`oGfqr9M+7/2!-X6VlnMj[8EFS$.FjuUT:U^,#Zh?YOcNQGbZ]:5XC'-$&BP/AlfS-Z7kH#s%:V1VA3,>5MPebjE%%p)k&6cUsXLo<P3RK&oS(cA+7B[XCM<Z2R%gml.!l#3p6i)_"-q6d.#OPb9&Xcma#0J)#P#6#YR7]8<#T$O>5c=/EMJnSqnWl=50%rSM<u%IGZ\F[,bUhGb>S3h/.c7$*O'iFDit.!)(=YW\GgrmdUcFqIb\cJdVU?1kDp?pX+qo9i1`&].(:9cV8Kp$7)A3f)2j%KJ:%%GJAj''?JOhOZtq2:*3!7@3*Q$D2q7tIY&qU5<i`H2(eicOC0X`iFr5hG%VpWg%`"VqS.^I\\B,Z3`Q'q3uY!J?-MHkiLcrW^UF_p%ZSjL!E98;XF1NBA*A>cAr^B3MrrSM3hZ*1#5)oRr)U&Eamf,="B!Y0i@h>+O^C]*$o=9;W@$p(eM.t4!98"HXT$<N!G-k]XoL,K?%Il=Y/a2r/sq;\eQB1TBrS([_;hj]*VR?:VA%rX@E]JL[69W'\<,As/#]['0j4=;r6^[j*<q(^"'*&"0p!JdKKj$u<pT`4QpL;LUZ%6_)N'j2eA_Nm4/oH>p1%'UA43O2jSj^DM:YTTYu&\fUOVkY9c7Z,s:X8\ouFrk2e)7UbRFRgLr[mZdr.#q\EIidI.C:8$V=0>TaL%9:/I>W?Ub<`oMjD@La17hRW.Mgq)b<TKhsia2"5Em02PFn]5.nZh\_@9i6aY(i_8e[ARlG[ZCD6FQ_\`\'lD*7pSF<!UHT?p%At[%gN13c!AdenY)5;316_nWRp#3b0`1KKi3rO_L\5;;Ks5CmH\A2>1^EISZ##&m4JQZhF>9D\$J*J"P"@hdbrP*,:Zn9gHeLj&*2&_*%B`)tIEJeN&BmV\+[*]r_re#sPms/RErt?A1#mSjfpIR!RA^'I\MXG>^\nQ=['d0r;Q"mV)KfGiSq$QL`Dme2h[laOSJ,YM9C31EZ%0W3GBI4X(oK(j(DThD:H[Wq&4S@!W+bt]+aBA].4bpMJ]VH/&j(O("jY$>nnO,3iLT:f=^-/)13HAd^W=P>M+%A*5fg(T,LZi4nu%BZn#D22*/i*6k?BT([i/I_+D2a`ss<AsGN>`\P6sp.#tCa"qNTC-fZMUl4i=M)ch_\8E1?8Qd;c(J8/"QF@4#8jF-++`sERU^JYO%-ai8JWXg$L$t9P2CXCIX2QXB6G%ifS'bqki[Xc_U]ef;=2lsGpp#^uMb^lFjHRdIl9-l/i_MV<6$nP<4*a7j.P.0f@C:!^alGdC!%.mE>pB<h3MW(U2`E=\j*/![:]$lBOo0%Fjg2*[Q@@Qi-`hWBEG2?E.+iAImSI)\6nB@7`nik`_+TI)hBN=uJ_oELeY/#97+R7q+=%#l>VE0.:Hjk@9WT6==]SRT!?#9d_se\qJh(#bA\E([D!4r;Jknk'#9=2:Ze&r>Kkk9P=<b;-S1[)cjmMgC^u5gPY%cr]kF!Y<D4D%kJR#3\gj[8eajurg>0S%efBe_Kq?1*A2.&^.8fXG"K&Z,471#,;o!i$5XEA57&iGke,N>gD;&1gcqq/^Y_^XV)W@>PM1%FdpQt^.%-6L.o(h15l$g8"Kn-]AMjOJAC%U-/`IkIjQN(Y)WHDl]t)JHNFIPr5C"<g<coKK^_2H=#^g/Q$B6)Ql:=TB7>6m*.h#b)P#_*MXh%6o_-G+;,0!/'13%Zo\!=cIAV4:g"^EK=Zq;4/f8)DRq]N+3e</_.<C+*a'ZSA/59ECC9L!Q:j>u+mK;!dg/rR*7;?dInsNP/TJTX%J5OQ%-Y*M5'<.'c=L>"s"@)JnnX6St?IfDAKJa=oZ.[@6kO(#n"lSh<+"Q%m<ufON*V'8V)"#_,M?,KYW2i>mN9*<U4V56=Na9Z;%[mC>iJk2F!H(P/)\#3k76180N%J'\N:n1.JEEBrioLB[0-60+16\[WGY9G.qCO5D!-so#N>"bj>%NoX"Oj'E+o8g@9mJd>_@S)a1%q_E)$_,[FIYSg4[W!JY0KMVu5j,Wg>*:Bi3)'78tqO=+,dgu=3'%QeNTij+Q2=%[U!c?,hT#GtJ.SU-'Ik3K:Y1"E9X?_[.bkhK6%Bk)IZc+k+:V@GdVm#K%64T^Rs9W5=58IXq/(*,Fd,@!UcGp*#2$nUXeV[m7!AX/DIJWBTAXQBuT"l`'Ceo_0JS1<p::6sA#.A,uK%"<t&m_@o7fAHJA[iW9_Z=)%*Hc3M9_=roN\8_8PA_A-Yu;o]W!$VQ'.!e\nd.ZLU0NWST=Ok0)TLhieN<(cIX\q<n`U/B;&<$[22%^PuW<HmE.:">Q@$Jpgb&$WNUDpErLL(g3B":^uDT9P4EK4LM<unp,S"#g1&)#Mb,0!3(R$+WO&_%2a<^5`nc"eHU^]'Ok_]c-nFD%*1e[Q!2,7:j^p<4X9c%AT[iO\ngtk7giVOL4FA+U(I%"EI,bk8o,KCuS4haY_(K*)R[5Mmg%oo&o4"n/H"ZR>V,AqYGEMao"Wg$8%^<#j#]uTRLG@P:"#ZiPR_?Y?.'ApD4i3&6WEpu1Gj(?>F+I2C`iUguZ04joPl6/$4a@G-&j7FqLo]/oInLBd$e,B!=5.LFRPhqGH%MoEbnIJ3G[$g^TbZIrG]/*4e"1E.g@7q)`$ehT&6R9]^c,+i3O(r+rEH0mbh\Y*YAq>uXZ"<Q@=pf>r^hVXgt`Epomp*YFJ<OalW%SWLkblb;c)/.oFCd?N"fSr.bZqq9!?QY'tght%>rQ.t!LW+[["ij2=L.r7+Md*MQ=l##<Zkc@sol#_,m1OU0PNgP(NP(6W]Co6X8%it'E;!V@:g_/ei2bB'4<QU;!k/t%DQ>.Puhe&;%@Eb*bcbOkW'o?sG`]f2!:q%K2NEjpp$?W%DIAt:h<#G(XBEMn*>j)">Lr_2_o%bsg%Iq;0DGY5ENXe7j0:S&h(@RbHQ0GrSA6GFH$knG&DT.<TAbf8\KcAo#?RSf)[neD@eHdn[B_`-kYR'Odi<gE':s:[a8D>l2(o%b#]TJH8./*K(jP'QkMPEgY'uUWQ3=\DrRD!>I5\<<V<@U:7j$q(r/H9W[=;No@S38\C4%0;!o%"Mn7Zm$+%6XenK@)P%!g<4$BQt%2LeV_A"ud^rn6G0<&:"ZUVMlA#NJPm_>E`ii;1Brdu@Nm.<gYmZ?B6/c:]LTVDeCp9X8'Sl2<,2)dckgFc,=e;;^*^D@)re7WW/+%kF!:<R;PNC0l]pg:Z"#EdVK&!3sUlcF;f`oVO;5[F\"5E4jeH,C7[PGS_cj=R[L%:Z.O\+V]J'klU-MC%F<M5>@"/ONCB^ehp!!]%H9)TUVO\dIIO5Z^WQ233CZ7(m>df(s`gn1@0<JE[i%s`lWnD;/FmAMWDD.&L=)Z(Y:-;RE)s/G^ghA:MH.@6Nm2C.oo<L<mS\g5b%TBf3:Gb(4EHHb/6$RM!3X5Vfcbd=J9'_R'iI>D.AQid%uj/Q*7l1?FD4La4b`gr]+pV1eK'?"/ncLp;\ma\\nYtt^RR!!`!]N&/N%9rFp+&Qc0hNP#"3e#:a[oH_!sG1to-)Pd[P6WK_"g>84KeL+(/]&:bnPmhdSdEV?+0C\R2]fSKMmS1):9l>>#&Nfs:L,>Ith]Ff6%EMm(+So*I^TbihV>VO]la#\;\eW[k6-p;:eF"MX;eZThSZk00*<1P@#GC&4Y!HW\^!PamM+/qi*&DkU#4@5rcIA\Oo`nl-=JN>sd%Bfbp,V:/5Fe(f3WGD^_ZkP@'mX+$7-$eMMH)Sh.uI!q%Fn]!EBcH=:-DEd]4\P^DCFKpi#0toT:(mcV%#\j!rJm%=PD2.)b8L`XO%Wqk*n0#]nT_[S`p0s(PL_rZ1Gs%m*,(PRNFBp!-&N`)<DH1`9%bd$UpA+k)23UJ^XbXu61bOYD_V">8'o($DAB3$'`Xq$HoAu/)]%g@l7:/k(0dFQ#m57#2^WWWmNcmFrk(CCr.L\@%feBYgdW`S>?BMjdN]@ZMn\D5pbtHi&bIfM"N!Q$tI6G7Pj\d\eqejn\4*@TK(3%?ESKtZdJs<2>*Cq.=IbmZ-Z@26;1J;%^=VFmb$Ufc6ccLI]8a#?F!)a)i(:%l]0Y^Dm"$LFt^qnIiWAFQR6'/=1e;(K5i>!4%!,\%'0O2q<<,TGJVLbKk_h;.p.;5Oq]q+Bq!s9Z0B:JKn0smj50cTQ)3d@@o=MmJ`S9Kfke]YC_h+@'RT5u5P"+_78f#liJb:,'k<%eZ%<?ZctH)TP+<?A19(ja3Ob,&4L>V=!V_W\t^M>5eoIfQ8&8UlVh2u+Inmr4(3UrU5q4W-B)j>qa[)=8P4q/1c&*CO/io9'Bk)=R$:%Jd;H;W^tdaSZ.G<FG&?$4,[!FkO_l!mOPnDIYRcGhq5Hf`;Q6PV]3$MgpC"AP-.F?MDITP.:S63qo<Q[:>[T`X[f^tF2,2t]d\.e%S`R^EWDd+*i5FGaCR93J+/lue&Q!Y>\D36/73([RNK#CLWpUSi2Npmu1l5au-f[r8pPLgSgr5Qd^dHDS;_1"tFpaC"c_sddNSb,@%F%'a>q42f/^lOk7(\j+oq:sTIoj"u+S%4@-4oQero:3^E]8.DM;D[jmE`Oi<7d:S#_6m/r[A58q"mXYS85e>j/;q-TI8RlZ+!E6N%Z80EAY`W]Z,(2R'oa=lG!FVHHn`_VfJgN)a$Fp&@m4f"[GkoMbV:Gp`5>:qPp]HiR<lmUb=uJt,K>pgjag$RNdJaU`,2'#(T:qn3%Ids1]Vr5$Ag,`4/Z,0P6B6AL2ZL.dK]O1>i+-GS<JI^Z7.63],J9G='"[FBh9CYfOieJ&O+U^u-i/@E(E$`IABSR;$7`^>j:Y&'4%GRch2CjY+@kkIN8+-t"XkBH&ERNLf`2+.:]@C1WDog<!XZ/,8i/ja[Dkm?$Qg)8mE,qZD/YT0k(DA^X;*O%(5MjQEanN5Ckb0=8-%T/bY0o"L80VV51s41fM$$M('5=7#"5+jX9.h.$mF2<fsWFen1a1/W0:c!If^*XA`CKk]$O9h7WPOe1JhhN_\TGorGYNsF-Wr#roe%.pWTl=+.[M)3JbdX<`CY_:/hY;9RM>4FZ,+\;tMg!&Z!k`O>Lg_>M4g`q?[34=er';pB'HbfZ<3^/PtYp3l7K6=po9m2bj;_&Mk7%qU)a+='$tP-'#fn\\;&Do4i_H1W'&NN]2r4-PQ<qYd)Kt6"=M$:"25V2g1q5]+4Sq?o(np*SJOl:dHrjf(*sgK6Y)iLdVCU0Bc6o%G)^iTP`@TD8N8$HK#3:&GbW.-mgV*<ohhjF)j+#`*"j8.fu[[OOYQ=dfV?P6:X>$10[5cZmulN?5Ir0:c:k?SX]*XMGC4a]1UD_U%L1aKS`O_A89#m+8mrj,+Fgeukdr<8hRGn-hen55h]hZAZOLW_+p<`0-Pf@4Zd_V#'9nt"Q^9\PBnGM.KA1TWUG^e`]g9>ZOerLEs%YLhdYa;Puo&oOekKm0i?`mb6NRrKlq&kQU%4$Rq)JsaL,XTN&$\\Q,:+JtiGDBU?A[\t6Z^Ajr?>e/;=M^]5nkDnZ/ML'_.Sr\Uq%(pm[aN=Y4Wgs.`-l'RXM2WPV"KYBCrKU!"V6TK03-jNIIntX$>m2iYhCoAWI*]bpl^'g"Z"?N_@a(ba`\]@1T$t#MUe#SJX+qI*&%PRN=V6NnG=K[]FV9>SONmHHlH)*.G$Hpl6RBDB,\/fEY!9j,Gp[Z<`c'?,Te(#!=`?VNolg/[;VQmag'*IFB;%+Q8.jMMBl^7(p8%LWAju:hWDk:%ncUZ,^C>CT`WsHo3VZE$Oh@c>Oc\Ym.bZ1!jK<_3mJSaiUT*I>'ptcA"qu[5H0Hp;tF@5s/Lj"<S;F*(`9cV]Q0@%'2E(b?o^Vp;mD*M8H:<..'<W;GX@4)`&%a[ccY4?)T>FHDHlK@^QmR+E2"M\e0PM6/`]#EQ)n:Z;IG?U^eR7+YED=Q@gO>N4*_,i%ambBFgftj]:i?ofDg2QX>M1*1<P?^%lK)XEnXJbg*)B+PVAeZH4>pA(ZqQ5_2+:k=n)Np?@$9r"+=?rR6W8DmFskIT;l+2)ZdOQ_%fj)Eeo7^tpTe[3=n*rJIVC@`W7n`-k,^t]2LUGtIk+&XoG"8!2:rt/s4U<E*1+0^s^(daEJh-9\aUp`7`;@\'[F)dQqpaf#iIj<O%4!"#i@T<JKKR6RgGKU"VF3po&ipl>q3YPg8TVF^7CsO9IbDQ4bqP`.74`Ba:Y%#ef13s]Qg<\F`lSMe!]??K.-a</IF4qMeME99h%6":,q<[2I^a&_)T)KUd`(,QoUL0\r*_Q!bAVQD98q!?`A/NF`gSN(L7]Tu\h1p&0?ZC?$3Y0K2PIa#=,fF!D4idQuZqa%ndH$?[)%)hpGuO/_6DV2lQ4QcZ(beK(82.!s]Rg_K\m1g)K(b7kDB0$0c@U7l51Yq(]DWZepb?3`p2dG7hbk26[fZ_V7aH/FXVh2I\rBI^(t%B&EO/\.9DG>"Z.1md$tslpbK`]>3enTcs-)M627$MVD!<Np>okEua&SgW*g,fhsJ*fKt0j?6.%FGSH"DUo4>M:Io9NKq:;-#U_N3%AQ7/9]mFqDRGH[9&Qr6=muGWK\0A3]pJ&crNI0sr4YkoiSa9=E2J#_SWi:uH9IYp;3t>A>doPD.PhK9j"G4!i+Aa$4]\Bl)B-4$a%ac13P87S^cWo^Puo.]jAp,$T(ZlI.Dp/:S>/NsPDPk[M\EhL\Jpmmt1W%j)*]r_b[)I&WELV$Bb`au,JXM&VdQ;\4"j+M]c+3b]T%Li>FN'QkH%mB@'q6gM'TU+kq'FHt<OG8B<B&c!uBHH?=q8eEC>J7UR!a12DL'kaAcGY0m30]N>`\BMoh'dte;g>'Cc@:;`5[9h1?%)d<?T2<3-C[_8fN"iO;6=&Pi[V@jJEb8]W-WX3+J_j[VF;jk[W3LsbQL-%`WaUZZjF"hU1]DJPh=OL>If^"_q&#O\(+jJY[bsL8W%,Ps;t7(Yf="L7]AbXOL2C+ofc)(P5,KlM0\"-#=t`:abShq3+i@[Pgk6F7Dcq5ndL-HP&3=W-+gU2s\u'+P4XW>7B^0#`Z0;52#W%"Gs+k)K'2-%7l_Le'ImKVYuC)ZIH0a#;<KcrNiNDK?iLaNt7eh#G$Fdcr*&LefJoSs*B(VX?Gc0rq6'5=aSM0]EOYqTsOHc6bTS?%LX+V+:?O4=U^s$(#G&oM*ZmFq:=%JIK'Vp"Z`XPHXM]h=g4N-H=fgOKVfuWJHI,7]R&pmig*#(cmENGr`S(OQg_8nleW<H^]kC5c%L>0aY8,cEDfqqA2?J67iZ(gB0[6nu0krmd@AP6oia7i\5X-f3.PKq?@DeZ']\La8e*80AOmeA=OZa7QTSKHfu*I,jiStFE]<9&mH%TYF[BM/%fViV@/b\[!'8en'kT8)62M3MSGb<EXN:AE;hlW(s`%\#Cg4M#1f(+P$/?c!`-1Qg2`i.Q"Q2:"-'jXDVjFh:.aPDA7`O%:'P@?'f<pnZ^[Y[75#t?3P-kQ$DO5[#V[%6+A1&2<XaPVW&FfApY@^(nRh!(A'L!m7TF9gq<3cLFh!-(TpJs<R6$bE2dQqf-saBN%8q)05>SnL&p7R'!1m:o0@iEmc"2uF&\e2?=U^ge3C7'i(Dle8-Mj$m("bq;O;a7M1gl@qEiQ(\u=OQ4tNO*cpoq%9f?V%0'13ZG+%9V#S8=_U54I,2pLrq&P;U1q;ip,;EcrV12<%CkuhdqCG+D[*T[YLo5%K8l@?C%!TRC<SS.J=FR&D_IE,(q2\bnZ+rLXnX1C-<5dq%*t=W>2tQ*N`61&4STZlh%d/aSIlSOW0Pu=Q*-9FrN8:QeG(2?MKft^>B-Zcf$T?Who?Kf75VM`Gp*rdE2_;s(1l=f6dUk2<pReir%+bQ6r$^o&b`Q\Tm4\ifO=MJ5J%(K$9F,g\i\A3\&,to\^LisDMABH!m9XS33ca/\C29:UbDqnqPUSH;'g-R;>adeNJK:F+81&$LP%ZPZ@+@p_q8(bap]a);83a67:*UntIA=rpG->9)0/O?Dm"C]Sn/30PM"rK3Re2)83"P'3%q;p5;<N\iN"f',r"i[fh[NSUiuf4nj3%-#"A<RGf;W2dOh&Mr2Y\[]D>AME=";Z/KX:NJp?`+!.SdO[2o="O*u0S@bK*f#S\R$Q^p$f#W@TRc4ZZXW)KITBBH(A#e\ss#_h+%*9YU-#W<5]FXd&)"(jQrB9jo8Qs$l+)gB.M+$$Q7\+`J<Sbqd[J?>IfC>ns)Fa@\3V2jbEVmi0rT?*&Jd":\FjL"*nO[IS$>JE4a%l%5nDTWMRl)^9'6TaH6k:AdVarT`H"cGif8hEV46lcau\.<`!7rb>."&<5JmR]W>t2Oa^hF:+Xa;o>E]rS^.kR$DORXSq+DMa-@T%+3qe3HHlG.X')A^onTl[:gK,H*21LBm"!>M@r>jk&eT61rbso6.*?;-eK<'bmO2gdc2MZWU'.Rc&#]!X<1*<[f,r:/(,NSRWS`Zd%i)pQqS;e>XA"-$='^L^eFC5c=)UmR,/7k@n.UG0GZ*O('\oqlrC"&*=A[(26?JLQEG]ke[R30?6XR'GX>LCR;AiB.e'[8ZCYf>PQ%is6*p:\u:e)HNKQec8YlTd'ApTr6LG4JE\=l3tAUQoX;rd4nSKjIMnhge"p/GhLfX_7@bI3hcZ8FtD"eWUu)&=W.`LXZZQ`*:!g<%@t(%f*)4W+bkadF@`C#=R\D6`BT6\[3iaHLAeWh=8t]41Up`379EQ+n"lSc/4]64Ml&g;(%ZaTA@r(R)AN-?!nOQ+9XMlD!g0(!G%67_Bk8-SH>B47GJhJ6_HI=NFU5uV&-).=TKFfIsLfBFbu-mKmYKeoW:lZ@g_3bE<XURn9.Z/'M-f'3SIOhi"CmOPlc\WeV2FG82`%+M.Fb=#a]l_Ra%3bk5HUjg37VJhU&"TT,R[jnPW0ODkjF?H8,k645Fe:^rliflEfaFJ(mR`o]1LOCK?o?5mG-c/jPs)]bI$**hH)%7HXhP*nMBWl<`hJRl*R]A8j9X&IRp(dIA@&bp=@__k94o1A$L,1o(c!oHA[_jbm`FYJ/B2/dqKn.i5\/aN_mSj:f<!Ks$:^piZj!%bJ*2fCQaP3IA]N*E,YZV*&?&(WL_iH)M]>Bh*IUfcJjcqast04g!8/NR64L:lk\f$?$r,dSHYXe4R=t@02^1nEDgY;:/dW3[j\qF%h2@Q)RkJL4.4!H03n=(9H2JG,B6iC@72!$"K*t,GRWNP2C0L%)T9&I!2Dd.0!P>g]G5GZ@4,&'0cOFq+49'O&VIS1kgS3.XP>h";%>&V9=_bJTTI8??3CGYHLX?>i-C<^V?WWL%,EVK5Ic"=HK3N@;7.;8"/Rs//_NRL%_K,1ACf5G6i6C>*>&OhL+8kJ7683h6h>3V(7%9l>(nm+M)/CFHC:W%RJk1U49qe7hY$o2m#8LMGDo>aZ,F2Fi[jSVJc0Xt,^+;'%`]Qn%g`-.>P.Y-i4]3udMUL*SJsXl>.Pm/!fH%aP#8>\_'[n8`WS.B9r;:0%l'0q.X?</Ice,VNg@JC<Pe$F,hotHRnXI#YrOC#:BiAlnuIo^$1j6_mo971QhhS>.?G8di%u0RDjqa%hODe]-YS/dX*N/3q9lD)q.T+hB;CGE\$TMnS'K*Ac8>OQdb](8:"`#BEU->3CnnLXD`XY?)Wb,4*cF(a?TRT!aQhW(7X>hE>duY9%di%E(("2E:]]kBB)bJMj2K(W$?TP=Vkj%#H7Y`nQoWH`6c=fcFaMt9,di#9[FGd3FS'G^G9JT;Di([k2<6QtmY^::L9:q?SH.0<V%fWs@U##0+'KG_HB`*@T:)+dpOV\^eB^$1JNGiDr@:2`1g#)H:B3kad:DG(CY$ErYfBB2^`P?q>aVDE67e(fn`_4/`kQVMb=XR&Yo%":R.H^(,'B,6:Vfo=hdpSWPRrANmiY"i/n%$\5hd@dA"Fdj1nLb0Anln]<5f&@m_lk,U9VOu7Hg9YNQ'm_Tj3CbshG2CX?ChG=&p%p1\u+]@m=lK7^YcZf.PcL1KV]Y-t^HatBU+QuY>8dCKDajU.Q\L86c(YbWrgE([YbRIh1l918\Yp,fFCL^pg*Ol"=9>Vi;#Q=ZBG%cBZ_EOhHDpcBU2Ogi]&I$OS++\m&`\fF5pNPKT(5h&<##+1a3r1n>2&UY@-,><0s!,E:^*C$lZtN-V-Z8%qSrC$oNh2iC(JN\?I?%\Zfd)B6S?uNn3E,0f`F$M%Z92)LQgj*8+eorTWiV4479d*]huHBZ56Y%D4Je3]l)'O0\t3k!g=c^!^k;3ZIZKB1?D3S[>/_lla1]%nH78;'4%%JFCqeO9^[6m28=fSQd-KV%5_Lg*Hl0,KmEZ?=[QWTs-<<qK"",.Zh&QL_c6t[`?ZG5[/(9e=mjA[=EZtl.q51(MFrOZ%o+\Y-ALEJj3n@JG@+RHjIL-%GA*oUjF-e/Q_sF*!6=Z$Rr`WJ.:^Vgn$TTDCMR1J?Pa<U(.%TFG[CTO.gm[)OqF2.jehBao,9(Bg%jiDJ6.G*n/@!KB1%#3B2NXW(0s(8p>,D4S=0t]8'JQoCdl?(M#l;7UR40)to-;!GYGnOC0imAm)V'CWY)d^I0l-U&*ZZK_sXFX_-%_k"ZZdP/_tEbMDrE48HrC?HK&XLN8#pNeUMH2O_<Tm_YW(Rahpn0_+Fb$,_mbqe&lpa%ri%rn)tc8OSG;Annm7Q%A6rN*uCbK=J9%V.2*h@H.a]ET($CDCh8'?/t`/=9m`(k4ttMDKd2c$Ff%nRq3E]icZo6[C<H8PDq,*hi;te3/)(+a,+GohRLR:\ie*?96+Oj)qTVH%e@"rMAu!sUk'_=/`oPL'ktZ<KUcHE\gmI^T@3$<KS`p+5`/SJDn'ciuTXi^X`(JP3[f`^Ri5B`8Okj*$.po2LSX?4C_T$JJ0oM7H%"_1(d;B<>'3F`IZ1C[iMHU1HZj5X=SlRe&2QIoKQol2S(SClM/ikScCKWQUYPmFY&q7(T[7NS_UnM''lTmG-d3GG$gnC;gN,SU*g%a%)^gY@i2(=#;2'fH$!#>\39X:EGQ*q\*&024I@Oq3L6=GF6&K5JGII/,2*nKtFTWE9f#ahnBrbb&0dD]<)sBpeBk=2P%,PW=hFp%kEO"_nuutM\ZAAs]8^Z+J%4b&/S=F((X@(Dk:2q%ahq_^>q^3t@-.4Y`>WlVn:gZ:]q8OJc'@?u@h2qYAtAWHSFB9GQR^gFg,3`U%q'h^,_dsb`5?gKhVAaroTV3#?_A<g"H]">7N&K^$Q8p\a1psl:1#uZbSFD?HTn4@bqu4hQk+1'JD`=PamKeC9Vl!BAmp"WbZZ8$A%m?i&XSR(^]9KVnf4@cT>Q<gFn+\N&j^PN=1/3ic]:?oMDL*NI>fN2%TRG.RaWSX3"[[?t,pRQP&Jr@iO;8[KRND*_nOSc#cR$o*o%dR!'CCbd-Y7<K^E=KtL:jtrd_fhP7i@qB:.A<@U&D-CL3,aqZaHr)FhX%Y1X0NQc+j7,+BU8jS!<bZZ[%Q$b<'iWR2e"nkEbYiFp%>%QXm(0[2/RZ3"JNRR3,5A;dagrrRU1P04PCQn29lV>EC)rQWqTKBSo,8A.4;!*(5Qh[k%Od2Ms7rK?I-<CDf0OLj6S1.*g&lkjg%BJ"A2pQ<!D#O>@""``ImDQK[KVt\cm[G:?.7h&1-h!)kZl\O:$5(NJ[CU\;cYns'KKr3.='YFE_!d<:%Y>j?QMqLZR<D+ho8,=sJ%d0QefgZ`ZAG5L&4Kk]/i-R3j1%4;PB^^n/mEGQKY9"[l;)=.\2b9@Y7?=cVLAu/N'c:kTZA[De6>CH^IaCa:G.aDlG7l"pFM\X[G%A[HFePgn-`qbbCRS-+%-#6$:5=n=TX%_-N/O@45hijO/9=$S@N2fRm.`jrBo"glHuA$LLJS+lBqeCIL;nRe.LaHbo#1#"6?3q$7Q%``Ca^3f)Jcni38;9PN)Y1#%(:DBNQMOJ[(8eoHNQLb7QhkgThKk-DW9TMlpt.B:Bc?@Ye!!&<*7ZkoB6+$cZVWd?BaCEF%=Ha0E[%!1ird)VDm;n,bF.>"i`IQLk5X_:-7+;"%n*$B>iVl7$:TpKi@c6W3^[C1QDSCZAR"R$>os7^f.WnnC3aIjlh=TiPUh8bj?:A6VE!%5)bb6c!O5g7rArFB#&JYPg</6\+ZVFf(kH[Q'BU/rlULhngUsR0IXaOIh0V6ls,1&ZhgdO2Uq58%C)THjRmR6)eu4^Ib%[#QEdkU%b3S6I:2--/IYM0QX2ftCjRok1$CSqhEgPD(FG6f+6b1G,B:[RKa^*PSHoB=:B5JN\dTio9f?]:$f:(-<QtH"iS1cDSos:6Y62o$'%o(qTY]T*CC]"ELC'/HghFe..1bi(1b%f]/uj<)fQ\W4=Oelhs9]]CVgrN$Mjb`AkLY@#p;X.S\`<$lnhX@6Dn.qk8prQO%BD69I:%jn2j"kM:,a5:?:%<mU)ES^gLNWHEp-Ib'Oc7NSPPjRk<;28uYG)S:p(oD0>l_'u\da`^;"\u/dnc=F;.?9dbWINH6)'<sr35APme%NCW9^H2Z7l>M;(V`49&$YFdZP4_r4+B8?BMam3Sf47"F=hpP@a2#6oIpNnU<lF2F*LLFLRlRQEPCKjkcrN&#)U4Z`7YFgs7KC%?i%]h)HeYFhB+OE:.@X1Wo4pWY`LJgL$bC"H<)@X45dI*R^.XRkta*)&lHlF3@4I!2g&PNWJP]RDJ2nJQSI/t^bA3ien>0sk+j5K3=O%aQg7)=.3>Oa*`rYbNif_k()j_>4VMmHf7$3a1$pBXstON$@2RaXVamlAb,B%pVJe\QFa_X.lbG)=oHkGOdFD[(UhQQB,TgT7:&2o%o.GYoCoP'reqQp(p+T/$oeT_e0rppp>W=)p:Tm]4Z/&/nWJ6dc?9acsjcXofXL%c*A3Hm4lY!mU4QaG"Q.O?N0pM-6<m0fAm1?<X%O]T]kVZinXX.LP"[R=Fd9.!3j@91_?kEq$-.Bf@U,rHJu2Vtj%oD2T3%X)0KlZ%`GI,F4@m\UR\1[!0(F$XI/Tnt;mI[u*SVGZ`T%V\\K4D0W7(>Ej:ETjnb\m1!6hZa,P`.[=([Uc]g*Rt0Q$e_V..7<m7X,Tc)J-r6c<(]B!]4F^ID1Ui_+cMg9:<s!lO7el8M4n\WC%_V77N"Sm4I)P=arhH)GE]Dn'(kBATI_cQg*0iP3'`L6!m1rn++c7;S*gi"q?o5#-6dV>Ad19KO4#BMp;5+0T(50I1gq_ualm.6dY%@HI[Sk%/JIgdZ2`bX:GPa?4Z):77H8]6EE1JtFi;r7qkSFrWK6:8cY;FS7QJSM&RBc#iKE$-[S@gJa(.(N]*5gkk`ONRPm=pANq3%q;K4-g@jEpD.Rkq-3)Y0rG_Z*gV:"UNLp>3#@2g8Oki4gI,.fn+mK?s>=9fpP;g-"`9j[/]=RPh>=&j1jk8:JL5>/IrC^cZE$oMu%U8@a?+pFd07ke""!ELh(J?el8F*YsD"K0_4B\7"$i_1$%]5XA!3FHTuUCpLPmiF7We!&a,o-MofcW-Uihu6D/]U(X(AE(!u+8@+Q%1Y%ueX2g:Mr%[_?+ele#2>X7Lp:UWaZG'<n2>QlA_I:1Gnb[q6PCtS-hmic[gPTpMP)9&[_1Mi7G3B=+Dk)@4m0OI@I*j.qo0n].%)SXSE-CSZG-R8'Dg&bqH(C%I]`J2P%DRnYbZS3mdQ\4+[Di,@/<oo>tkhG3PNI6-?UMi(U=KH/ph]"<J2SYLtc5@r?MrUEp'Ed@(%0-Q#*BEUo<cM*m%0`2@>T+H-'(Poq\W*%nKLeT!A0X#Z7J$Ma1fjouXEGJT;]"NM]<+):4#J-N;ap#p*m-fYi!miB5Q1nrh3@Yhb%V2+@</SN/c!lTG6'PYB4.i#^i"nN7lG^V4j5JoX2r*o>F3MIp"oNZ=S&A052FHeqB;*175mWnN65QqrTrlGtZIH]kIJ_]rLAeEFs%=p1jYYa:>G_UJ]Z@0TTX<X'/3;m`oEVfC'78+=?QIU;&H6Y(2rB9.H<q!snEmp71,Drs!P1lOJO%@R!>9*WS/grgX?ps_[<&oZsB%F!%0JlWV#kpl]eU%F/+k4')cl7T(Vcb#5f"2X9h9VccW!EO3L!b]u*FY8us8=-[B9cR6kEBSL^^h8r`'\.\<bC4Sj\aTVpQS)QoL%D^QeQ[$;T4EuG3i71a^m,P:Rg/g<RDNaY#OAe:nPkE.(gDnP\Ym:Vn.>.77ra5>BZ?s.d9U&Cc4!"s`!&-,+,J-6]#J383@KT?2.%!g0+sWA+G#k0K$*_pea^1kA1S]s0nG/;/!T*Oh@Y4F^$]+G)UapIm?P$,1@_D:`*HO%4`o0gOk$8[Bki^;7Uq&JB)Qh2$-;k[PH<%oH*#3l"U4d,DH4^/]WB-\KfNZq?Vt+Ej?H><fS<F5^*NN$bA8.c6`V.`5dD?#R#/^PB1se!OhjQHc/9`,HWZHT-H[PfZ6]hTTnmn%*o9]M1s0ao`?%EO+-ZsKUDb*-C4=S\-UEkj-@A+m[1O'b=?d)/qB!fgME(b_E^d+CJq_Y=ef[HViVYOQ]\eBGi;sh;U98*.IQPL>%^_gF:n*Jk;M?$Uk-dYAN0A^$+@bbT@Jb#t3*_)hr(d@H.I^R16o8UXFG%qS8:tb(XgNbg8kI46YcWB?Fk7k@lX/8hF?iGk.bFb<9%lI=i(^q*:u)TQ[DT<alaeB:ajWp]KcmF5/H7">sjq-g:JFYU&XL^3Y\fQ7ENGH%]l[`M$hs/sATEA%`pJr'nWGh9J\'(lu/.bf?Z%*rgU`j8hbqLo7'6p/a<Jpe_:HPB]<T-J'!Id]"WrWodJJMt].@MJP5_QX3Ic`qj4WVtk]T]iZngd](:UE`M`,HG#kde[XPT7F#VF%Se\_4.,%(m>nlg0@O&(M.T^m(*K&i)m?C_PX_n)m67'!gA,BMRGIYs)S^Ta1lea]:[66>p`o0b?["nr#(\0FYd7JX$6@0rI`q$ip%!3`'ibY`Y1^f>]W@sff\8Y?a([Ega?9PTRZ?K3gsI,M#u<0bo/+GW4HgB1isKr*kdB^i\BiIKDoIHY1EJk$*JAs,0UVh6>1eV^,^%gJ5VDqg:,*80LecLM0WR<<1P),s*uh:fVY\o>OP5`)SFa$(1-p]RPE:V_Q".Fc+bhEioV;-Fgk3h#SI'Hb@g&4mi;dctN^SW/h*-%COMUp$5O5sYH#=c+G1S?o<<:ZA]c.OM>t^A'B350C8XKg`rJh`q2h9f5dj$/7$-]3"g7FCbcJETV'VpPY,,WQ48Rhq?U@aLanr\"%?[Vgps0p8i5$NknNnKSr6Z(BFL!QK]Fs]rGrT,/;g?G'P(VY3S(mT^lgIS_ms"/Ua*?ahm!$*:sl$iqFo(`W=Z!$%pqcedS(;Al$%kZ!DGMX*Q+TZLtZ<D5K.>L=`t2;^ZdqK7CP7V5Xo)&:K_X9oT8B4ZP(>!7VUV+Dn$Kh)tp@TA3qe%H#Eaj_S*Ki"-oYq#T;/X#2n%4c"<5?X+,B@cZO&eHlElW9F/e#,IoYp2*f:P#Q'Y4'+io,WbQGHBq]qb1karObt6u:OViM9PWQ\f0gf^O!P^`+k-%D.b!Y=32Be!%I.NJ]P)D2Fe\MEppUjBr,2.NrBraRik\f^T.)coqYdM)(.pouGg<.,+!*3)CoXM&5,rNR,gck/fE^HDTr8=L:g\itc595IRXaL*W%l[AQFc,l*LJ<MScSeQMMr9j'+Wq_3j:p>ca:bTG5lP%5Q+f]XO&<;&bL!C&HgkOO!odO-5"`+SX'GglSKu\b']js.n$Lm</D]Ej1%lhVAJFLr^Q4*48Z5q0::MnMX`9jrk6q8VqS\U'[0mN:\q9Camcft)DpJjc>.7RQU_-kL@A*!1d0,nRSIEsW*_1(`qgPT[aR?3gfH%GQeBNGotE]@j!&V1([hUhhi-:psNFW">'ld\aL+66--565ub4HOh4TrU9k&Tb+TI:rIn#OJM/a)gm7\ca0,VtH684WEHku[Jk$Fb%)UG[JYA4Js=O_F7Ln65t!OV]][iB1hPq8E?\U)=`fJS1hW#@KIq[PZ(_QX%d=bL=5_!Btm,=#BOFu9Jb?e7[u&6Wigj]GK7efr&&%:SX22\K?IHq["ms=5$W0NFe%enG&P4_+&T3"/a^fNS>Z=B-YVK\7?7^"5.s52%%5jb5SVR'+T3hkUg#taD026Au!r#$+Sm<T?'ar%Nrq;8CuQbS`26Ejn?Ic9/ll[q;J'`2ai;9rID[D+>>5kl1#&Wc9!jH)B'=6Ws![0_90Y_I*lLj?lM2)@PrI576X4ej_A8bk,&GA`%k[7HaQ^IU63nn0;O$n()aFYs$afW"cNNIiCod7Z@Mq'X&d@)6+E(i$K*6ZKOCai?J]_K`+?>`$=a)k$Lf[\?V]9SDZFs;PU(:+)h%`HUj"d:.J^<K8`=,I$E(OpuB,H^5MQj1@hSSHWW:pMNaY;YiJ3)/*0AeAr[$)`-CC:5.Q;f*C;p1#gB52+dJ?(r11RAr'bE?V\O3%oit>+)Wb.:`6`.!GR*;_<\D&"2t9fK/o"9XmmhFgpS/XT1)<e<ICSDL@hCuFjBiO@'o;=2m4%%:E,]C%2u_rkKnEZEDjN+^btH1S%fp5HaIcqo1Pm3Z$$oGR&Z;K?mH0nn2O7%X=qeMQ'a_It4nBorCBWU[%LaQ>^d_);f[:23iQ@/.MJ;k3fF,-Ol&@P"830:PI:l&b'%RQ;7np;tfV%t$ao_sjK2T1PZ^$[X(*eFsI8\',to@RD7`Yf,$sSRZ?^X6mA)m'5%LL0.DRKF01KRV=Ao5D^X@N%f1&rG!R/'`m)/%?Utf^.C(q&7fhcACp-OW&;&YAYZGR1nR:-9[fd=;E%AhFr<82`PuV#U_;8%K[RO=(]5LA1n^$rh$t&q&m)Jplln3ZYJ``iL*.En8%7(JKW^C4cgiHa?&lh&TE%d]+Bm`DP\J<auGXaAB6_8i)R,BR*8$qfC6gFApbVAG#qHI>%tFKh\VC2@g\$T8U4[se0/)Gf]"NdT3'%VWrsc^(a"G;2!Sb%7O(sVm?XsGn#XM!b5Sh6\ld[91Z20UaTZ@WBZ1CiRkWQGOhWVih03U8U_E^>YGeE;%_OmLE\04Z8eNom>]"+%2FjKA7*>ps>m:4aYkN,elhV/^W6I+1YmXXN#3M=/*<R5U6YI)jCJc</pY+h"?sc@mi"3U:XuBfdF,*plS]5W,(m._JHb"1eH@'jX%Yfkg<iFXfq:C]G!mE.f`r[OF4lu%>'@m_:>DGO=3;(H=6EfZ@j3IV"J^rDBkj:I%nf`t-\,$Fh9[O,Bl.G\'kH51]0\_]^4*c7C)%+"]CUc(/,QCI,"4oG'W"h*g.PVcnMKBFf`!]US0To5.a!BbBc^[rcV2N(o$`"kgoo!h?cX0aU&X3.2?-:$fbje6po/HipfJSrNUB%1tB,'Q+5c'(B`<5Y9j5cK]'rJ'5DrlRf,Z30A7ceVZm=8ReNRn,koib1b4K($mAt$KWirNf^')oIM?^A/&!dn84Qlt+mL'9?d,N`%0"hV+/&Mr0%e<lGGJ4H(4HK6#kr`1b%Y,SoleKPo7nG*qTaH)j\&SZaGIs`*!n/meUgcn^JMgLo.M@_B#Gbg#66Z0>3$T/2&dlL:%3@5J6&dj:F8lCfAETO6]hiq(k8LQtiMuusDm,jWY'HmR*Qr".XH`l[(=,0E]$BO'ZWE><[!9JDj.[D=oBJ.W;hFp3bhV!f,(E>=c%_!E;F-5?jFa3&ca?d4rM$E`t@-5<BpO]8+fiNCd)h"*XYRcpA#RDVe#5jVC&04@DRXqO)YHPTN'^l0\?ia&L?oTrQGmYDZFN^&l$%,TIfXEeG!pnZ&#AC65eiQEIq<68J,`^9j%8'g<2$]SU/ZCi5D/knkh$$)o/N2Pho,E=7>;,V30E/'R(hKHS:$X-doX`A_H*nFc3K%ZA]h<7J+mdHCL_]g8\\2^?l0n:b`/`c3l^1\p0CAQ;l7_A4J."=X=ea9C7^b,[A$nCD;itQq`F?n6-Ao[$9A3M-M,gh6W)f=TVMV%r`fSa3"UBZW4!MaE.O)/+]fPI10Pn;l5Dqk#rr>%D@pCf"3P%C;F3lBcn#D:"9<8#708Rn7:d2,W/t,oW`7u]L,;%(?Ou6m9Yd]u%I57f7Cu?A&SAR9o^A)l@;q%I&9X?u4L1[&i7V8YM2P>`=ep/ft"t1_&!SFgc0`l%O4W&\f$p-)aT^#'&mk9k+pGsiGUSBB,F%%-4%IKp"m/U;S(f8p5K$mJUOYqgTT)dZ_MYqgSI)A3tjYr$_cO#0iT&k`;213l^7<M0Hr]@a+hKOaS'H3n<-_eV&],R_=G*>GR]`6.-A%SX&mO@V,+\.DHmST]G&\b&:)5N6"@(1V$-Gi?hOcM^MTh(kiR?<;]*!2,QGChN)m/VYl(d-='&K^eUlc6lf7pZ?ckaS5-r#TOFMZ%j(8P1NH0$Vb&^==L=Cp%8+_3[Ap,jCOR2eZ-]sJtZqX,gHKcf2gA*]3OTY,?pZ!*1hnY%@4@qtP#c`,g8I)6CVs8B.U.//DXYWS>%h6'.7pD[p#K9f(K*.g'aL/dSEe-2js?@MPA.n<=k-#.V,0qIb$FXi+7j]/,gkWNmSj6Et.N"QliKu-5JD1nYuUi9]a.S,-_g3uam%[-,GFW;QDjL)(:T8^RV`nO%_6^`5ps"_[Q:JP3n?=,Bn/m0t$r27Sf(4T6YW&[#XQ@QeD)NX3.Z1$V8K[TdEcZH?)+P<m)h;J@X+%#rE>S$[,]&'kN1HfK+@UJ/3Ddb+O>@eTBetZ$Z-:UfZ[7Wc.&)]$;h'(V$sk]u4O?4"C)q%a!'P,m@n,9*:)/@c4VXp4:4Z?F-A(%K/?Ol[Uqt)7f*0H=EfYFLOa_t+R*96'O`G:OIhoh"&T0(Ta48:0]2oXd=[dt?1.B*X5rmoK2<EP9uad50lXLFh+`X[4U)+oo6ZE)%fT+g<22npQXTSqU_/J^A%lMX8l77ernA07Mdc;?:<u?UN*O:gub8t`C4r3h6bt*F>L/LNhZ%$>XZ"O8.B(GZh$*?ZZU*Qj&57pcA%$T'I$PZNsW=p&SUKX9Ic7bHXf;sF,AlCubX2(-3Vh*n6!h_r.2FEPi"DA/>Gkd7k^SBZ47f:8SSS[45L[F"!oRSsgS2!XA#;g$?Q%S*=aT5=60m%4>/gcbWiT[WI1)#G8X?=X,g)pk'7Yjeq(>-sZL6YQGX.T1,us&%I+&L;-;pFY9<L)U`]!`M/2M?:bHa<Rd(lq1%cg%p'o[fiN.n-`CH.\kjJ<PTK#c1#IP5Ak1o.V:9$2>/QA[<hJm9qXX4Q$OMnr2Xr0)@%qtY'$,k!I6+0Qa2V@Dh:;VfPX@sZt:'ee\%j?\.e\kY<mR66R8*Y!\A/T1l&9HGl^G&.Bq>EV,,?GQD=9-BT?qXE$l)Lb]W5jg.>#fOmH!Uha)!o\Yl+CX32#r-W+3q?,I>^60]%Td%DO]<`D[s-RaDN?Wu,<fqY\&'H.2<>n;BLTg<:ekd34]:(eA?AI4b^I#6YWh`Gis,t>6-4n-JE!Y-;HEX<,&Y[gV/7Sa4VU9-m%mPRFK./TK.<d1`]j`7QP3D^c/bpEu?SV'OQl.-!SZ-EBW4]Y_k^!7c23etC36h4'gDXXjdK>P0TlBFDeQ7=)0d"#:KTd8=49=r!Q%jVoT8ab.Y&J3^VD4OgOf)Y0QIOLp,'K.2'gX)C?J<[J>$cbCO=#7YrdgU"4\,sUP3n6lXo+N9"uCnqW6Vj>!%+O3%u'uVnkMbi<o%h(Y^b$Y)d6.L>]qj\j*_%TF!=H?H0>YY[Wu*3`$Q6PW/qr%'ZQrp`kHWdN?Q!t]#P6:dR@@gEg<<ll3K,ZnaJTpZrNXK0.bhLuSO%8JsnhYZ!"pFrq8n<]5ZlX7Gl@Ag<g?L9nig._8\1"MtiH_M<r4.r-MkKFa`FRK!HY_V2fRL:[_m_'5V&3RVRpAT$;u:.)"s6uQim%Z%_YY!nt&0%BJ"j!p#hQN7LNB3btZo<"u2B#``f6MM`SpEkl._ku_R0@G\18-A'>5pQV]eY-VNYPR84Yg_MkYVpK3D$i$$C,k\bf%o*NoQ&+hPT0q;jnhou3r4bO(NOJ0"m11.]Ym38P45stdIeHCYUC-KHXqQg9/8hH"#8I9uu2"trq)C4Kn*H8j8BF,=qkiLc=T/k'%%&(Y5tAM1`b(f9SNKS0'4e2iC]hR]a92*>ZP/#\(c6_i/(nbJO#HA]2BW^s!VED5=d]XPl&'F9INKF,W9OG4B6&gJW;mYIPY6);F`%gDeBDYml5UR,>am%-c#Q/ZsnKaN3lu_3\%<e59%FOI`kWK!;PR(%+Zt;.[R:>*'u:*lXC5POaK.^a]]VV&s*$:.!*9f7AqrdP.CH%pdk$r!N'?S1$n-7`^L::FX(&lVlCDr6r30^pn\juLG<KE%kM*lcD/gVDNTWCcXN\B2cU(Ng2dJnj?R;!FrR@S!P/5B]+9t((iT#[%(7'Q>7RU6V.bCGd3\lripiWGhKDh*790+naCW>:KH7OKBO!_iHioh-kAt[8,Tbf8*J5pc")C$mi)i-MdR?VBDd8iXII$ATtSI<(>%M<+m9f&!n[`W2BY,8NZZ9`D;Qa#u*H9sn+7n@Etq-'dp+XP?sp/3!n?:I#R9$5)-:*b<#*(pMWN`[Z71Q=>TPgOC>=j,L6W(2P*U%LG^Fu[=kosZ@<@(Do>2e+4m'"pS.n^CcO?IVj-lT41n@e\R:Uc`?%B4#RutbE82?e&94QW@@A)oNY!FWY49V7<6EYC:j,C&mS&?M%"H5-YJA$>1fkriS__(K!OKSZ>prD7_^Oo<W#g=d]g&E=i]QaBBM9#-W%LoPM)0lT+fEE4;(R]XD*=AjAo0u-Y&cXE&E%'V2lt=_%%bH%fl>l0A.,!<=qgo_h`GP*8KVZd;;71AUT6>KqcT"SKh.>j]50*ekWV$I.*llN8?Z/AUR>X&KE@W4t'"!+Goj?V<MLr*DlA%UTT%e)`c)J1-(bb\W26gnoY4TpN0@ia1'=lb'@RD,urBBFKjIWL;JT:7QS,`Un4)5dkb'iR14@ANt5+)!.t_>]A*fVL.u:_+AU2`ZFKE%>Jac6&2'8f?BsqmP294aMT:S2(6:+:>>Pd;?T!!S98[Kh(97')M(95rQ+2!%0acP>>.@o'=;S45GI0O%J^_apBm],(@u64+]JAcb%SF1q9gP(d4LC6Qb4:#JRe*$XMmVTG"_\)@BXn=se/CMlR(VpQgGARQFZQd.iD5?.WC-]S:!jJa3]RfB2"?:1IGg%A#FbbFk+'F;A%XY,@n;=:]F39hR+IR,"`i@F\^-V#PSB4C;js1W]Zi/?C'>koRKm/fJo;KR*eIU5>dpLj8%66'h60`)(3:Z:`Lr[Vl0KXY4S3pQCY%WJ.u?rg9eqc/DKrh$Pm5]et0]oEXb,%L<&%9kEdkpcntN4:_DqP&4iA47l`$87]<se%llr(Qmqf6^p2oP+U&VJI$TX]`U-h/7sI8%JjKNK7W21e;VI"mrK=O1Um/;3f;p7>*6"-G++*HS!MepK'9+'V95&;j1$h:W8Ch-WOs#%E'I<".*!=M44+J"."Uet!O2S>kEX&(q%0S&^V,0FP&l't:$,0+3!6+YH,i())QU52la![=1nJn"KP)@jN'?B!6+Nk`U"<'1EtW;tXr'ijC1E,W"'f?RcV"NC=tPt?RE/dX!-%)J>35&%cuFP-E4WU%dV7q^K"Kj^g-?Z()q=l-Qde(^Xu]7X_8%llD+"E\f5bT_ohDjZsqc1rOl4D]+DAelsbY%!YW,Pm<"0\srQ+%\&oN&DO1MIUlTk.>bnpnq*l.#0i:4V0kJ1oO5JfBb[J[$r"HSu`T&R2/)^O'G3do7\XEc;8s6583YuiR"o65LlYJQd8lZA\=&p&+%SuCQ%:4h?.0s$#4$WN#7<+kXZ5$tC_SA<)P%i8J2l-+9_Mdc$(lMRqF31]W%m-"_\St*S&Gm+M9G(#M5gH/abos"[5AL@6TjVPXM%rC<rBPs=SU*0I(neJq)<FJ;r%bjXa`AW8,"`d^?'.VhH&BB=G^U9[6fh91+eU9[7QE3R*P'9tGL=Ej:.3`0$)MX]`ZFJ?'1'[FkY%dYZ*b;3HRd9IH9fY9$UGa\06bPIR.%!00mTcF/?.jc:V?3/BJ4:h.;`13Rr=)%G.E6Q/OX@&pM,MZI6u,XHbSVD9Fkg7=J<[ns)9%/46:T8Mp<33;drDphfF[%:5'?EY_].m2SZa=kKlei%FGHdW#6$_/EE/]BI4DKI)Pt-GP!,O[n0g22U)HhMrs4V)<iXKoWhE=q.$u%rZjP]=ujOm%dW]]$+I,FYi@-AC,sU,/G!1M$ItkR7O5j:o2q\:St@B5I&5#lol;Y%*.GAXXR?BcjHa@q#d*,?KX:Sr)gb_?Fh3Jb%$qknL95t\__D($jbE,1+,cn_<0F[@U-'65C6nPkaQ"-_F;TlX%PQt5M/.#d?7L,L;niEk4_CItFj[$M`=$jsY8"',XY1Y=WpfOZS%lrh6;/)sgFdU@-HO0:%mVgi01?4gr(#k/`%0eKUV.VP=r`UId^5-Sam<%Po$WM-FN>M;jArpC>Ef-1EG8`(tpf.eamgpQV#T<f^q%EfF1R'nHJ=#dTYbBd19GbIU1$/-&??:.a>dODpUL1qgQ@IRt=,[n%A"7$Z##Ahl+L`ur?Sr.TAIlEg&jijHkT=s+H3UNe@$KF2fJ%]t-LWa.rFmGcqHA.Vcl0JN/[.GdX2F`bRT)J!JF9do3cjjd-D=j@0c+_+n[2$$F1=?O5A;R0c=3VKK0X)J0%TWiVh`^hGf.-h;2[%',kIL&W;1Wc99@W';#[2Q.W1V<=3)Eb`0rt^[,J[a&DgL-VKSid-3.6_bNHn9uK`TOf2Yu"jJiYol(ZQ'o%06:E"KDXe::T&m]8L%>\2R/rB%*R=(Wh/+l]lBVrbZ;icJcqSsIPhSDGu@V)#F^PH:H+3rsD^CTP@2dKR2hh]dAerGqZK;5a'0iEPB!di):;24QMaiBE54%4'tOI#'LV.#gQ_0p]qiaJoVJjVn!2ohl7SbXHa6]D=5?/i$=9V#\Bg_hhqu$\ad(J&k78%W.A<8PA"bkXORs;*3#u[&kY@Ilt/ZI%asB"RoX:'LGRo2;`?NbF,87*P#i_2Xp2CHZ5!k9RYqAegLlW\VfSZ1%9nb&D6<+U)[[S1%cH"4@EbN`iB]-!&647]SWFbtC-DV%C%H2j_.%5K#V+LYlW_MF9Br*mkSR?-k4IkPDdbXZpU&grfHGK^8ZO7;r33Jd`r9>>#AC%Q:R7q(4n:*Lqg5'dt+..G*T0i"OuK6o&d%KEJW8a1noh_LYmBAGUbnF9$ED'n)Iie.IB#DU8q)3lQaQTN,E2F*G68.sd:<'",gHNAE.&Gl5=n:2$"$I.%#,Y\>C>6*cpV@^'Rj%9W3-?@s0%VY.;.*nG(VY:-9Ctl=,aI"*WZqB<1oYZW0J5m'@0Y&dl`im9Z&5*s!;!ol:[7I"]Q/QBRCCNN8EP^6mfW+]0G1@1a;N%!G-Bb>.2^_Ph9l"`urm-F$52$oDX([iKUSQIP2rdjq"]!ml*VNM7IHR)A;IRa;]+0pjDn^ODp(]Sq*%MC^L*W+:LCs"qS5*mjO+)%#:q,";OhGI<rQEql**HiW7CYJ&gSA/JGKf*dVo_9.iPE3ro'qa"67ma)?6?1[>KHY%99prnGLEc981GkY0i<aLjQqGUMJd0XLSRN%EORFtYXV:_V6;c'*n0]k)nqm$iQ3"?,\Y1nkPR]f4LhIApHYftG4=7ti,E6]k$c"C.gLhCFa_"E*);\T@l5UMP_C5=<dH*EcW9%t%A%#nZ^Bk.*Xs!e:+'A`.<'a_%dlmiuLaWD-cXtdB,sh36CM"qNb_4%:/*qqDRD=-9os5;MB#:ku444%H@O7`=J63mTJXHhdrjn%E%)Rs<*!'e@NFs6uCnuu\?,sen$CM,"Ob_0+/]Cf?!89PfmYS0fc$5?;,>'9t'#@]#@026C)!j.&/4.uhc.L'JMEL2"[+\LkC8j\DT%pT$cM*riFJ',kJ7`jPeOUJ'!8iKoNVM08ZL/*h<OG8hU</N`J_?eS*R]rU/5`)s?-ARMBrpoPO*?)*[<_NX:%N@mZqjd1rZdCE$t%;FC$&K,TbjTj]=q\#f^=g3u5lMFXe#[Q5Hegl/V/?tdA%Ia@4UIk1@77[IKno*ao<L7(kRi.&r6;R)FVZ4fl58VfS!CLS[8N%R8B%-gZN3kRn+nB+GP5AkqbPA9n26N@q'6nlLf'Z%]3!G(NPA@fNI-B."TLO@==]HScHj!&hM9,'DoW<B@&qV8U.Upt5"'WjuY&C@H[U%?bk?s9"JjRPkn_uFd?Wiq\Mbnh;+0F;D/W)2S=dCZf%3Q=>j)!HC%M+O?Kq4^`M/$FV"'+s8,Z+d2m<EFZ,!W?l;G)`Q&F8aNi5t%>eeHJ1p%GL0!sD!*7F6JC2C@^0Mj>4X""0h);7\dPKt<Q)**5/#t,:2gk@pJGBhBso#N7l'P(aFl13EeorQ"R?+N/A]KBt&Qfmo!%YY+%DPmYY)<u&t`-=%\S/sZgl&E,H3)GELTW:I]Z5oLr;Eq!Q9qEr1i[u(`V.HB:K;VB7^)-r,4jY%QYOpk:On`t`5e;Z""^_%8$%KJ/N)aa@ZehLYeIc:SL[F`;,d;m5N]).hH(,/&]4hU3aH6@TO^!tcR22*fsB6A1%U9qWZM5#s2=(grnP*GVO%Z[+B5e[b\fIN9BA%mJTIZ'tqGC`^1.dk^[o6S<BIk`'[;ALRrb/6Q4s8n+`VO^n%4@,/8l4>id\^Lgqa7-[qu6^W)M-VSkh:h:0!3eLM05>6isLTZ-1P%?m)EO6CCDR?4sIpM^0_<3!OlMOfPmP>;QAq/*Ff*i\"tk\1ULL$'e.sIShfgXu>;<c#A4o4FOf,=HQ+0DL1+hRg$8jA8)#8!.2+h%K3Prr7C4sS9?''Z!.nHC4I-crgFU#;XWTUU7^70Hme"43DFM3bFi1Bc&CFmTY3o11>Ln+qZl$bq!U4a?;-JofZsX6IegN+>0j7+$%l\s8$'Ve+H>-BYQ9@t@V$dNFiegN+>0j<qV"l2[_0oF?[](,G_BebLm,&?/IeYBLe!L5O*YL0p@OKd-e+gm"%KNQ!4KeLFBB@nMc%HYlI!i0*^*>?\O_l\kch/KBH?br_2oM2bsSSLPH6YIp&Q:rQEXYfa*cTEW38+=9$9U7C0J-p[D)F&Ifr-(nRV)krjBlF71K^&cns%:9_]f3_D9U(T0bTFB4tSaAJsON,"f[>.m8F&D@!/A\;BR<T'r0a&8?Kg$;D\TWh9M9@7_*XZY+)Y%u^mK,=0bpO!OEVc5Zb_QS17%2hajAq=jf[7,M_me25HlmojO/8't:(NBS(Hik!onoC7:h.3RF_7&d-b1fIa'lq$#c@U/5iT.mt`UXTo2PCT]nW;*]a&D@$VleJ#u%K;KjdZnds-IQFE`E32+6p\.2YC-jMEg%JHlNu""UM?qh1L[,!nBZ:c!Y.&R=MR;<+Q,B2N49Jb,q&.g7aF2[`&Ol2)7F1X=$lgT\%#]*9r`$p@^pfa>B$PK%73AnbDi!@mXpMe]B8j9nk$_#/uX;)sgXpGCr]3sRBJjgbEpj'p=Ae?m<M&/:jX]U[>/Sdh31.F"jqpUp1%X5H[(S+1JOj6pi1[or!7&[=B8m2=_+ANl!<MlhI$Tm$^W:p3t]-CHV#q>C[S7K6%0,?u&5'!H?qV(mcUkN+ZcLsmAjMq[S]K-5H_%d`m&q\_8ccj2j6^r^[Ce@rN;S@]DDtNXDqN^`cCWQ`<tD7$<?JAX]>\Bdd.j3Iuh.Zed*a_o`$'M;4iQ+70WBhRNX=5t%Ym=+mo<%f*d*^OL(M](V<,6;gY8AB-=[?A!V[A9EMZD"FUr,78`T"ZB%?a/!SMFeu[)6=0'C27T'u63mM/Z&4*D?T4G@gX/SsTHA.U2Ze9[#%0$a\C;b^)8B@P>8[;%'hAk@c'<SaXF!aC]dOSD#S*i+=WLVCjUp^)`G>[n=@l!DT%JEU=1N@iR))0p)=G"1Jba6uVc>Z*]&efE$>%`$NAiFf\>B!HC^$d,T<r+>,)adcf?o"iM_+6]^,iJ@MD"kjc7t&=4(AEI<5u!hpCI1[7Rp`.!(<!ocjhGM*@+oWBNs-[7du01&AG%nf$LPK(uT`.Ng>m*eO=L69ndR49U"(*+7Rt"mdjCM>=0%h(b[GdHFO4M,/CLNgC73ale_Ih"Y!f&McU@bY)td!p>$D5g[%iS<CCP%FnQrYP8oi\a)Z`lQNL**b_%)(rb2Z\`hoH55n[NS&\4qE':kE^_66p(2+;EnpM*]0V^@oe[_].K4uGM&-.T#u:/)@RBF2)HX&DrZ%p!914e^^WjZMlGL<crP"ii'3,W)[,oRV5um;ldJj2*LpbeZ,cI9gk23;ldJ:IBCoj(n@$:M>Yf"k!pVq[(.q7]o(b"/"8-43`q<u%f.3=BOkbOH_66oMI4`U,f"nOk5!L2'3'KVC_6;l*#X4M@BD;9e%Xr7+qHCLeEp.;%Tf\EaXNI6?_=#/uq"9f=='>!lLsSmMc4T":%%;+8W`>`>1h[`p<fTW$faXQqtKTM>aE>?`nS12cZpUH+C;=;CupUH+C&P(=o]#Ppg"h%s]4mRKB3$7%@)>>2HQ$>C*/KG[8-FVu$%\DpMc&jdf^Q//oZSWLqQGEn>)ab3't_7E0/7#Z\n`?FMJH[?jfH4V57g)Vn5nUNr_0DSbDTBRf5:r!E&oW^>PnQqOg&T_uD+,W&`%;:m2QrIclj+hSo-+fW9(7ljEO%RRNmE=C8#.<mjt&f%k'#?I<<DCobAW.i?1F]]RQZcE\%Pf%\`)JioHSKj44O-oEcqPI,=q_%S!%3@t\F0t'WSc4&[1ak9qsJ+c%i9IB#K,Vs.Qr*hAlVPhoB7t9TZG]l7?@ZtB,8%inZ.L9+mht,"#],1mM\Mr]2(GEtVAgUXm]&TC?%NK>qOX^D=Rh@^\LhM`O(>4fsa[f5+8]\%"$hO47hSQ-QbfY`:HP$>g#hg(i$@#oj$\qH\5&28J=-PN%(%,V#Xc&+2,/ZRdieh&f0%e9K+]#G(-Uje2kj_2=4_c<i#R59EO:-er;0kb&JQ5J'du.4*Z"\o@`\8ngG-WU+nA-AYK*pX!tu!HYdR]=FpiIRW!10XX:CfEKC_%%*a;!"mkRKIF6I<'8UO/R(,%9)*7C"11;Wd*P"NmbBJ0&<4gF8\-`V*j%l3GQ=pp?;o#Oj!N^[OkYf4!0``gh=,^(n\kE*.^ZJ4.%`petDGW5>C2e*K=<5&gR_FsC3r0aRUMZ-DW["::WQ*_`bW8s8&\16q!)HsL(0+js9rc2Iilm_!`'!auR$iP^VIka:ei5n?:>[<"!%\MI^B('tbZ%+'GrMtSbI)Rk3HNoB&bM1D,M;UR6AA=r>j!!=,T),MS[.iD0XM1Hq=#JOi3?d*+bN^\b&-ibdS^RN83hp4hGN3unm%8C22S-icnQHG57Yf[Nk_]+MN0ka6s/`L)9[<BB1c0puS5RYA:co3]KfL\WZWWIT)8C@i?2dmS9nP-/L4\:piTeuTXZo!#$'Q''d,%;'GIEC`.b'$)h=1'/-HP$cn>EF0KIC8*g&D='IaU_&%)W.RTSIKiKCIk*lTf;?LRA!SN)5X1CXj=JAY41-PZ917dim6crmOS!)j-%a*9,ndh)GGGhM-\4\KYgr2$M&D4nMCNm3QQ.)coqYdM)(X0=]5aG4qP(p$7N6=:PO8[(MSnc#?1DLUfUqe<]m3eD_c;VG*_=]EO)%QusVJ7+_J>7l\7F]E#+^#6f<JYXo1F#M1=1fFdBO'3`'9EFQ:X)#S%1i&9(S=;7p3,.so#`jd-.pj[#Teo",uj18SOs5@,nA!.HX%)^mg[-aFIM*@["*dBXb3@UtU@Cs>e:*m<-$r:Vstg3]U@3M\">jeX8-B@#rLFqkpo.KEK+r90CKZSmrD%]o[&Y>0O2qu*LHhhTVC%=1lpfrq2>l$'_WPhYcc!G:rajd<h&/ci3"W++EC#j&`s9MXk[MRW=jV^AIY3rQ5(!-`QaOeXPC3)&GnN"@&4Y:+h#;s5D!4_LLHs%E;!o\_QVZX6O80MRg@mHo0<&C&4-.h+rJ#heJ*ST?V^LWDa4"A6MT\%Ie=S3nG\CQ5+i1od4'[@Osu!JSbWYIn/m+7dJs).OV%L;%rV!"9s!HdaS)="E_p_gWqciOfB+!VpJ+rl+J,1UInGL,cNe?<#s!ac=NUSq1l1kG=F+*tDJ,8fn2gE:X]\p96H>gOU`B/#8MK>)5%?XL_fIh/]K]2sZhI-jSSR$I(6K$XBF^[N!<l1orjV(r#/`B/:IpgJLJE\tdMPO"<6&ps49Fh3aVs8T$fQ4i>Xe*28S/\c1Q_=?3*%O'_>8SMu$es5!QZDMB%`LgPN(MDs&)f_G7<kOr?(`;_fVT8!mUQo9E`kPmt(Y`E+EVAG3Id%AoC25mB0o>NAMhu4G+@U/d.A"rmq%-1?JirZLuPq:i*#n,)"Z/'>VRs.eK(s4RDB1p#R*^\dF`"o[7:O8;*8^Dj)H?*\P-F32.@B.\sY+IK^'roM/PgfF2*b5'mYJ)g..%X"j<:YPA)us5LpLo=9moaWGp)/LHIj&*8T*Mu,3KfGArcJ,f+ahY)m%(]8@L3`b=NI)RbR>2M`=?a(`8j5\Hmk)1=NOWV<nMEJ?f%Ed/B*$ifMbFbBPHn?lWR599Iicf"s:91eYlq89-1p?MHoWVLHqRRuBIqomB9]%qNN^<34QC?-?4\)"&*ZfTs!!;bCgDH1I*r9^tn%^]2QNN1W>khu3<Ln?jFm++N,,@q.?E_sQips2^tlkO9B7il</;cLj,G0Z<ZpJ*en=r6tIFgU8*9s7("ih<0,,UbQQ^gBY@/Y'KVf%nuZ!>s7$"prmtNVY92U(4JuqtLRd7II,+Pphu3/9pRPg\9>0l95Pu%1E.%N[._k<Nl8L[drSmDZ:_1#Y?Z$^nnO88;cg`d:JIM;B%nCn$<c+j)"0Dnf900YuTd<AZ*jg<cTm.>^eSVF=q3%ll0c\u5[#BStMDs]d_n,;q*\@qCg]QF0_I=-L>C)o2%/4FV1E8MtY<m_>j%%e&f\-Ls3cL@>'<PE0=2a-ZS;fDM0#MR6X'5]&o:[K#OB[pFLEZgSA[iICG<]$:04r4_nA?h:sg'tF;2s8A!3rp1V557$6.msOiN%^?P.HSTdiijeoljrBH?-a<,otdsq/5c[PYI5CE<s(ZB*,k;`Jtrbq1"+h";9oD'UAoS7qrinaF>:Z9!b+.a/-`uk<BDgqHJJ,JEs%rpeU4rSfbcGl#F1IeKNYrq$HQIeq(5qV.(W^\tL:GL,+c+.n%2rmQ4(VrQgDLEF8jT)S<Yn'D!p`U@0Hs82D;rT*nFpKeirMt:<T%E;oX5o7-\ee+&s#roGRK:Hs1%kjOP0:W@H?GnEYuDV`I!L#]]b7soWrA+n^K;4_+-GUYJWr`o'oGH$kjEZF'7GBOh[q!uE$5@$?2%6^T7Gj6=IdT/61`:,;Fm04'/)K?laWoO$5=QbWFjDuP:EJ+hk9m_:l\V]WU>Ucs'$T&+nal">Ke+\dD=6FH":8EoKXl2?s]\e%5X%5.\.ml@s.TM3@.YCfL*">>ku<P%kEm3?G0T:bB_/m+*ghL$_ijMQ2c/.\D0*Wq"81/bY]pA65dSjQG$pmSl,]UIpbM2e8\`Vr*rC%]eS%rIqQ?Bk8T9&NqSu0$o_Y=a)ai(ms`/tYlU-BK^<1.dr-hHr,3^do!W#Np7+e"2e)+K\Y\U3Z=1AtJ4aWEG-UT%[h`3H2\92?%>I!kp>YD"sZ)&/+cS,#J+)TXW2PLo?L2:>Jdr-hHrbipfn6kLlH.`:nV.@ocKROZinJpQ`PE3^jL8VRoCN7V^,aE9N$#Bn2<)7c8%[^YhTp#5c_S9fJR5Zb/W[.<MM?&t*)Sijdd,1cI(F+D=#gs9R-/JcGe?R6er)sfiRk9lhLk=X?dHHuF;>h9V/88FE+P]2ECd\8a&%b22i)8c@3=GNT)b?T4h2U2*(nHM%!Ug%(JClkKAKEUb6m!km</(uNmUc2WQ.hL&%IU_l00FIT!f`EdM'`PgH;e=Xpk\8$;iY.aWL%XKG"b:!K1(G)H.o52/*0=arX#r(o='5PLQ!P^@f'Tp<s?r7P-^hY.lamFh0I3o=m=pSglfcc^dJ!,F-VJ!\p]EG>CENlC0bo,Jbs%4GVA]k@!TNh>87'hTL:qA^`'9oPA#DJ,K@7?fPiXoJ#%cc`-'sf,Ib^/M=$`oR)nS4pU[l?TiYk@r1i2I#jbCVZ?[r]>rRUHHpJ.%1FYPT3p!q]Vg@Bf@6?cO-(B[W5Ps`^q]98(f7n3(V=?iF8_mep!u@J(hk9?]Fi1#qTod^?k?o9\p[<Hfq%sqNC3g7)WE4V`4GJuP%*\HbtfJt61:"rO:C\V/YT7-CjI?-+1:\d"EMtJ?c0^%;%df+e0?WJ7Tn!H\!L+ha&<m^mDpH?N$q_d:>b%$ldI>:XrVaoC:p.h[*%^ShT'nF]nB(m0k5_j>ED^;lVaoN[L'&UCtE8aG"L`kDr#B763@3QBTN@>Q3\ea]K6cb]P4<tF0^)"YJ=lmq3I_3.l,mkFHXI[QDk%3CMHM^L=%uesC:Of7/kWZ`bF_mkNsQ?!hoH&hiS:^W6%&i3LJN[_*,:OeR^1J0/4cd9$'\HO+m]:E+(pJ`l7#DOK9gm,pAa::k_l%0@l*0ZESCN$$0Jbl_PA(3c?0(q<GfN*b-%dnN$4j4W/TjR!OWCA#p$OV@#t$5@_^"rWoQpA+/:K(dhX>hg47MHA?384f9p6Mq,Ql%@HBNH(N`i>0'Pln5Ps`^q]977<SaN/CX9i3W]Q0GlKKsB\CEG<2Cq%YV=*Rb9r$nQPTf;g[lq`Y:-C0\?^/u[oI/B5[Z=E1EIfVi%Z!E:BHuk)%fiJ^@pDD@m>u&Tmn*G[F"8(\&?PUm!lo'a*Z2"0S'WTJ9O"`]nlG<?=A,,nY7g[4klEet\7bs]#>fLOAhpdAu243*=%_2<Q"'hJ0"I?-,7r`DChIel!GO%HJdUF>[0(DceJLCDr%&XGC#mb[[TK3Sk\deNdu@CrAA/=t<?>dOG7"jHVV-uh+._NN72GAhg6%_+KQ%4f*tfruPZ7Moc%:[nl?1Qg7#"V.f_<L%+0(#B+sJGu%)Mm+M4%hdP%6n;>eufJoW5bFC`A2oO]^d66&?HeuI)1$71CEVQ9O%d_UlgLWQ<+ni_Cqh6?)NBKVb7E;o9uN4&6UD3$DBot^<3qnBr_@o$<_AR:_"oQnRE\ZO91%np=@TF)Y(rb[]NGZ,W+4p,NnR(iRd%\iIeCr"NW']A\s4h&*3uG8Qp"p#(7Z1!Q`$lV9\+%b"Jo=*pp<T1dEeF[.M*,:t:bYpMWRr7P-^hY.l)#VZd0.r99fH!d1-8l'G\%h@slWrN3q"&%4tjgr&O)58Nm:gmt2/chkIAa1ch`;uI]"k2HUSEOn[!g4?B!NP`)siZ#F;0o\02'sl*\(7&mU^B5tshU`gUg\Yh,%_7tRP[aspuQL<T7TCe#k4!*?M/d%#U@I/Q!]D'/2\ROf`7s(rpMUad0nUWmjJNiFO54!ham"%@eJNiFO54!hadK=on#Ppt%oT:3Y%,<aCDHD$>s5TffQ54Sf(j9PP&&+ku+kT`_BF(=1!25go`e-#cO!<@6BT\R8Vh6oYt0;(r*!%;phl2$DiE<E0(k,%J!dj?LG#hO8W%aVR4Rp9[Ds!,B8ol&AC6X\AVo9`(qcqlNQhX\AU$\TZbi4+Som'=a2eJLe9SglNJE"o[S[=)onJO?8"D\J)K94+Som'.C?YBXb*K%#>C%7"6K`h"6K`h"6K`h"6K`h",?\>"RK0dFt6M'Q)WT^e8Ai4[kb?qRAO2VVH]Ic>FD?_VJ-tJ"-Zi@8[?2Y>[Vi@DfSA-*dp1+%$!pE*]2nJLIUUZT0I[$)g%6C<gqBn-g(9S<fTf/Y_Wi/&Z=sMFh39-8hXRP6MM0f$WBS[,Q'OPb3&#*(=Hbp,N;D22FSEKrI;Bbn%Z!l,eYqCH@=L`]bQTd;Yh=9^Wa+i,+*h,.pXDd6k#E]6\I;BbnZ!l/&L=HOT[_$1]P5lO;meRPS)$lE7KLlBb-j+\V#"BIAMito2%;$It/)/L.$Y[QY0qq?[G3@9TN`oK1^E$?9a6oZ6EE&83$*f*W#N[3k>8@Wq@P5IHg1,-k#_^PNoPPg.-]D(D]rk^(55B8P6b(%;W%rsbb$2iR=b0Zp"iOo0V0BOK?*L/A0p7P/EnorqlS7!DS8=6X23W/V7]4uSArfJ(oInXlrkr,aNlT+).C:RD$jE9*cSk-Da00)H%=%ZG0d"qgu';^g-RPL7lO$F4jp)`:r4pa0tp]X5L6k%6QalG5a_Irdk<dDo3"NXt\?k'6$;]G9IM\2Eu,bf+[Crp\G*R60%Hd;)]Og%*>iq*@FWPV;'$d7)&VI$/4ps&7X;N@1GHs]_^LZ6!!NFSg]<MJ0B)FT;;X'*pZ60uUqU95mRtC33%R"I_fEXS/1]5A1b:SE_fE`l%Nhes4KL<$c7rsV=fJ'=u5uh&;fJ'=u6S2FjkYOR2$9$,9;#R<X!'a`k'd%9TkfR3cf0I<q3&&qaUUpVL%:$,hp[Nm1B3Xo2d'Y/d%htET9+>LI:<J-b^mKLdIP675%DUkDVX1Mg4G,l-PHFkO)J^EAX)Lh=(0,VX2TgmA;C03>BU?4/'/j0K7)E<PaeA)+6V$7Es/i@Te%FK"0ZI%Uet6_j@m!DQfQf0nYT#R<3&*RoYN-5s96BI]V+@MWW+2C^f8;J]<KTV^;>fK`*7;2Kjiiji#?Aq>\GUDa4D`C?*r)N'M(%$T&Pnh&RY"(;[l\'5/aOl6et+!;["!!pH&UEsZsP,1)>;Oukhk0"KH!mZK[1l*4%F:!fa)&i./c/g8]KmLh:'lOuXPl!AR*PTG"7%7-S6+8X)tnQUL(KGDVAUG*i!f:3R3:!-`a*jgb*D9b.NcK/\3f'G\:FEIS*sJN&!d'G\:FJY=U`VGE/FJiA*e(jg5!:PboVma9W"%><3[)jpN]LXVE1u_&eCO#QYG/M,>aAYQonY!tKJlh\Vnj)B'QBREmJpSJ]+H37n=3]1YL=7M3GP*Z3UbK3\O[p&G>ED!PXrS'eCF%KmPtEc6jQ5O=f8R')e`o-L+N\B0CEn5RO+U_!lYpegHdUH<3HJ.<sDiP#R*I4n_+2<.nn4@Z+3=?[X+8fF`T*M*YDZgE^:$==q$$%N%?0]8I"<.,.:)*[3Y2I[RnV&DEWN'Qf[(^@i:88M2Eu2$Vs;&bdCjD0T=)9e6s2V-\h01_]`O]3BQ5X8Eqh/aKb:&J86=-].bL+%bbY\'ZA^f_rsEB!M6XB@,Kk$pq0,Rt9=jVmbHSVRG7Dl-4@FGF-*)7ZX\4s6iE_eOrkZ3!=oEts?&JI`n%-S-M=@Z@;?,Q[(Upju%>jDE4rfIQgen]qK?&#iBP@Hc^X8hh^2f(>MM3#EOnHY\taLmE"WCtbX"/!0G,)Ylh99k1g;\qRY$>A]/h!*8:%CjkU#"!u)?(,:)%GIfWP!mYn%Op*u5dP\bt<gPG(^pbq%.Y34X\uPtjFVtjQ2ZW<XFF@ilY/eh(Ack[6F(^dJ/1o@=o\j)J)!SrM*]p]Q(>a2Q1)&VN%="PL+^3'm"'u'@nK:PdV4R5%5eA]Vh=jJ,@oq]F1Y*ePbT(Rr59nR@Ip0[LR;T"?rc)$)nq:X[tf;LUd8QQu,);*A)e]_guUrUSj%T<o#2/lf6Z@Fq@PN,%!f)-a+c&0!9D9=;A8E'aGMQXNC]CAp&+b#Fu-)ji-GZ_bLB4>BrF#/d`UE\uF6<>2(BXrQ2okVMSJRRJ!8%A^/PGRHm>KS&)&)N-u/Z[DVc91`2Jm0b]12=VY'n37q7!]"u@gEg$qbG--*!:*+;L_839p%1NejQ02auYcE.'K7dJ"e#CO"0f[gn%mB:a!nhLV[G*T+9n?Qj(T0=SZW>HWA.b!22@+W--hT)G9AqQ#tA.KWLlup/Z1\fTsdtPWYDR)kD55'i<$2E._HW*Wi'oX/.DZVQb%f[;k^/JXceLCp'C-6(:hA2bBK"t0;d@&t<;m'1u,M(LlL*DGo.SF!\4p[GKCp>*X0DR-&H??S-H*FAGr;6B>na8Y.NAmH,X1.cGj%:C(E*E3dNMV"Z.NaWB2t#;K:KVGInqlk>"J'"mS9WTZ\-<Q_SGkZrb'h.2<e38%"q7tQr\'J<)KZCBio$!qf(a-tpt2gqb6?M<"f%oWH!O*a=."+BO8UKnR^<VVjq\AkZ,[,%3:).AW'0):S5#->^[YI@U]!0hpML_M69kTuXAYa+bVG!paiBc5ji.(NNsuXN)s^1r4M)%ni@Gca0?53Y/#?'Rr/J9V2V\Dk0enPf_IBOfT'7_>(Z.ojd7?]O'SAfJrea\3@=ORA(rOJ>8$/r*#!_dcHe5]`U:_U_o(p5FV6h'%Y-0RrRI47#':e<))L-4uHW#p`:6/+&a:@Y1M.,J]Ri_H2):0:\@scD:+plP:f2A'q9V3/K$tm07rG'Qc+8j;Cp:Z2pk?ch$@(qA0%0/OCVh!C%Y28RE&>#Q*)m&n]YJt(R2Akm<OHc<8+EUM2=1]t)HQtpEU8:e=;WZ)ucSp'!T;g@#Eqb5s_G:fNqSp#%^@QuJ>\rPoc%C6#if])QjUBbAU/Zb&EK$obdK7[;qEpUQ*Saf1#:bXHV2l#-41QH6Bof`PXjmUm&h/\%E90XfngFumLs_E-()G'lR)rTo)H#JteT%QI+tnp;!>">TQU0Ue\8.f`TtIW/F&S"+@j6WW@=N#K?u'd8#Ir!I(mUjtcM`RXn:)^0<BIap9@r&!Mq\>"FfRJeenna9c%sP+!&k%0]khH,7.OE)Fb$:^oL]@M@&>P"UlL,?^7=;bjQZekeQrD#N?ZK!h1u&0Uuahbr&=nPmetK=.]jW:rK;_H'-;XQrd#u\U_6aAo[qD%.U!#Jjg=1XqY7^E"aPOQ\Uo4X=K%lG+$E]PQ]I^gk\m)@"oZGT0K2OqWSN:`fHngt1"b#o_^O=&Jqd.T-..HEf_9Q;'ZqlNmVJf3%C#[IMZ^l]<o'FZq^lk9pg'EJfFa&1?<R3:7"M*X5*UYb-86f37*U\LSm0S!G#6N]sGIRlYo]4FiJ6Q@8h&],9P=l^%Hc/ECEJJmK%(fA6mmX^de`o7L&^i6Pg.3_0C0CEZf%-3=ngB/[GGIUSuKMs'/JI/5BW51kc64Lqc>p@dki+ImCK-m9)Ta'B6=TjmK@F,#:Ugh\9%;C;kk83/SP7E8B5DCN)%P.G8PN+T8&d#:*bP+\5ErZu5)UONSrajO1@C>@u*$$tQuX&p#,Jm#6%BLPdKP+e/XM7[<^Kr6fj-'.^W%c$Ug)0=#([L0b5MgQJ6Hfes"*6pd#t$C%=Qnku,%ffQ#q&Xjt<JKh,4<1jLc4%k,KW]mQm7EC$/'f)^+?PP?CFBU/)T]rg_a?X0i%;B^Z>q)-5Y;f$006'M3bAC/i@"rYM1.Le/[Zs+GZd&#V()/+B&FNC,UIiX/=Z&R0d*7)1c=DMp@(lgB%$LYci9q';@CM9%iFiQS'%9cALgFjGDBn-CKVb`.T$QU,c?HXQ>YWdES)K1r=mh?/C(X*`\*K1md.(<(n]XmUKG%,Xa$f/lD=K[jAsJO-0`?13>5QU,cGHXKG6%lZaL^>2Aim(nBOL^A#Dce*>6Q^u/'iGJ4<:EDYKe:1H3gI<Oe#@$GAY5%Jk<K0H[:<Xnn]P,U_hg1RGjI73b]TF[Hh'j%3N7M00m%TF]L28C3,`V@!)QNIq@^aI'(9qCqS&5p'97C4\WCirHV0UGg\<L-B/?edQt?A$'A,,>"aMqG=E+,1g$m)@%/V:rK=KkT`Zr0JK8r%:_a2sfQ]IPGHMHFVCE"uYofh:\N[<0$3PA98E"tN0k8coKo$\Rq?IZiArT`VQm8AjhWO_`l5r^DYuQMP_8M9n<EC,M:t35a)(>D_%)e;dp^BPQ(,ZYjp:t<;j)<a=cm>sV&s412aRt'tX5;!mD]5*1<r.%`5&<%)JeIKDp%E]0skZC\D+IL/7fa\Ei/P,9E5]'a[gOXpU%"fWLZW3Z6RJUr],\HX^7m!#-NnA:rdSd%DAC?\#JU4M:pB^ip7]RU2N4EgB#IX(5C$,#c+0OBAVDMf#_39$e=V83bQ6Sa3;DT=OO%=Geed%2p4+e&p(rLmsod#"RJ0'Jqf/#,e-1&N?g(%?C59"NtUiWPK9UBQ1mAE/e^R`%Ci3V$#2Rhr'3X4G!bjgtX,fE5>9?H\3DX%;=2112tNXoI>.,/>k#"p"bFJr2rD&ZnA%c7LB\:ECi@Xr^]"B8[qQ1e"bKP0=!2`Paj:CU/n;U1a??N9!kDqQVZOCZ*mlIuXr(Z$%?"o0d1t\&t9>/0A1rU[XX@au]40U2/<dB<tBc`=K0I]`NFU][o.3?lE;HaeeR$8pr]>::"9jnJXV9,gYc1lk[UO_NEc$qcq`>T\c%DVHKb38Gp^\A@Df9L9aP\&nX:E4J[V:5@;8SLnqCh:C7GLXU*G/NEF;\$2g/K6ld$]$isYF?&*u-^"t#>Bti*[YA2<Us\.CO)6"`%`&jLWYmlrNkSf%E;acDiSIdaDE4V6l_[`S+7C<,n4)%1JE4V5C=*6LY#m[Fjr9gA25_n6fZt[nGGpg0&*Bs2>:)+aQC.LDKeDXo8%j?HoTg5bW@YEOQt*U\&JYd)*^:AVgh*:0rt!i#1hP;_;[I-d*l]UW'uo`SMWg6;!p]T^"u%aR6$)t3:/;ir9^Gpdmj*M.Jl_4_@R%43=,_n@OlJkRP?hl%AEn]9>GB%_k*iKC86@PK]!r^O'dFA4Klh1+YK!m\F@+]g=qX\u<tOQV8n$,Eng&kf8bToEm0`PHS%96InHs%9q/J!RNc-3Am#0UVIYu3fjRKb*7="),kL^5_iW)_%Qb*@]R@UM(\@>(_dFHg%L988#U]RV3lkLOOcjHee1&V\Z+7(a3O42?4R90m%R$5QdkKRph@*Y8!m_G@'mB:`rVUr`1c?,lek0+KNTUDi23T^sC\S2lO":5O]l2,apJN3J4\)?<bD&_/.f+?1(U^+>_T\i9]^`%^6%)`Z<P/d`KVFC8n^Aa]L+C^i\c3#]jVJE&O!":+rf(C:TN2(l-B,iN#S"n+KROb.eJX%:(=f!UBtN6TmLeLJ5t)<pm.iEbc@_G'%!%=>[DnmlECHKl=)?!!@:"1pm\J3]D#3B:TungNLB=c<^!pB:ZYh-9UVL2/M2RkPgDE>RfIcYQJccmcXkFl5AOC?S+.Z!5E^[:3ASH%%62o"O;d%VQU:h*;`tVgj*c&]'H@sF*1Uc70NX]WSL0u>pa-B>-6Ll<KMIO<XJa`@;#fHQQ_;/Tp2+C\_*s,RRhDM_Ctb,H%_%^>%BOLc1Z"[-g"?JGXAcq?R=H+VABYeH5+n:,[eUIe'#3L5f;Z/9ifBX`(R#Zm:X-(*Moq9D]*7+f^<sRl6E-l4?Xp%Ro0-?jj-W\"l%fsUuV8f]W.R#>Kt%?C)5d6Mp78/L]u%*V.,7r)Kb&l%4m%r$m=G@E,=N@o=n/ARB#7U_#WJQslF#g[r.bfM[;Ac[qa'rt`)*U'0#%!-lm1&CGb'L;$TSn=Zse6/OW&U$ip)i<r<,^kTgDhikth+CG#;,^>1h8bBs,7)*.E4iNp;HE&2_oG^9I;nZ>.pHaleHOc;bnT.59%Bn/RS8-p91KhCj,"WnB_5<S2IkeY(2c0$pH9QF%hLKHD_'QgHl;P9V]-3Xa_DNhrRB/qD;8559L7FF"AOFH5ci'1KPb,QPPk2iJl%F'c"q4m-D%6XB:=.<NhXe8s6kloOO&R"O7MM:mA:/1aLKl<%08Ym="-d/717"FT`+a,mek(&GWHirY'G1cAYUJ\usq/FVdlUnu_o%NSrg:;BBO!C:t^Y/$o8F>nC]s1)r;.=t!UMMgK>V'Q3P&S_ucOK5<A*ES\&C(_&=GmUIVT'$l#%@j!VST^uhPcS.b^JU8+`UNtud%SN6FE#?Ga0b6S>6(D/>CHFfqk1!)g1J`K0/\L@_L)]8VbA.F4Pj"=sn!1n4+;F#g8P.D$63@@B#c>l\FDMAX[?XCtI<Jpe$FeBU1%B)*p@0&5QieN"CYJWnL)#O(K1)'#fTVd2T.DoEG*p/YEaRN#^eJi"!+\C'k!#Nc@S,R(^*q2c<K7a&sqQtqQ;XF\c_DYguAV:7@C%^lt'g4tmL]FT8lcP[NfI\Bp*B$uDmj2$jRaFK-P8(!YZ5l)ohA7B.l,_4fId&Vub^`+'ZR4b4]G[VqnP)AK_:_mW4\m)dm_==j(V%(q*^Jp7EDI@*!V$9*7aqh6>q&Ga;oKXo\@L##d7ea^MCe'mL[blTcu*"bliH:4o+)r'o!t>R)1G#!4R0AF`D)]-q?41>%G?]B03:%*GCuufSSi(IJD3IYmtTt[k@OHUlF+u",hug6A&l&!Rn]"VRU\j@*pnB6A$Mb3Zk]@5k9.Z7@.6Z<[#&MLc\%lSA&]H2Rq-Al-Ha+%fJM6P?%Ys2#=]'S"5="oHhKa=fme%kK+cMapXgNkK@#dg"YY0m#&eQ'a=&pUd3eJ3MRK&QaT;obC:']EVsR&WK$5Qo)f>#+)LQ5I%*,+i89kKAbmJ5^,=+D97j0!KjMRb7>aj/g0O/mWnD,"6<<"n&"D4_;3>Hcu7\Fo,OQh[rj4KsRr?E+=WF4A-?n=X9RMS$=:W@3#<%Yt3YU`rd`-GgJ0<<F*WI+RoRF3bg6Bn=ZQ9FU9+2A?^Mj9+b%eFuj_M"/8GDNb^n%l$su/:[Gb_q$J?Lq4]!Y5@OF8C:'h1P;Al(%!`\-R/Re)o17I2;[dO.Vou(*&>)Q>/!@KX\3oED<YUJPj5;UVbJJjD<S^A?X_\k$]1S$BJ1ROBBB=qb9BGQ.M^$*Pl/0'8:Fr6\T%NjOi(bo/'VQJG(mDTH_2OUf@B!Co0nC7='P#>K^TcEtkZ%]nWn,c(NS>/r1,V3JrH)ld$G5rhp'9SXmiA01R=T,!,`f@6,E7gECR%':e9Z2)rF/eu@>RnHa$_hshC5)8VLXiL!<?i?3-lhmifq1+.=p+m=>:lR4,8_35@t5#^9t6gO2G$Sik=cT5gK:@P%iR?.`Ho[3=q%Gg_A[\HI-Qkkk7%4FMS6mIBh"/S3/1jbc$pY2ed!Ce/NCB*KPhL-tZ'J!Y/r*g:#a6`i`Q")GC]d.MTU*sX@B%%l8B%Ldm^"<rr(%Lk>qS#F9A/!FJ]Y4+50Mc1%\Cf`N*Uodj:S87hSG1BA7G_n?He`XK?Q8D[YIe@=KmOGYP0lu%=`G\4iK[U'G<m_^8Q'XXj(Z28S*%gW>Qo<W&bQ+3$a(\Tl2_bqKqE`J-1m`?Rtj0Gb7f\/FGg&^UT<`?V;bfS`8P>MqXfI&\(Xih<<!L:qgOBE@hdTl<YZ]m/aNbHMcn%R4oLbol9cQ8UXp7_Jhf`Suuub,@s[&>*@^8T%CBU,8h<(W*snJkIn(C\+r`U`DJCo'DdTMh.n&3-J6PcKSlO8pR8RLC,9#JU/4::%QO2abB(q`!L/0`!1*Q#Ulot#aZ#1mB>82;_Drr$D'FIHZhI<Z9Z77Hu,44n5Tkpr<Tc/CKpK%W5>->h:%VKZU%"^1$<sY4EGG`5\%XL'*^?6RO+P8=LM.!2>h=q$SJj97m:[,qk30YbFt.^^*=adX(P'6fpdLL,5qdoc@>CN$^&cj\6Mb`#>UK46lq[g7E</I.NUF27s"%-"oIk#F*#_4u;ZU+sA&=+B)(V6rQoUX[gem8Cc2NfouIo0VaaFV!@2J`=#T:o]SMF#<^d)0\:m867"r+biCU%*T="Q1gc?EVeaV^%6tekB<'dg]*rModi(u@oVl.^Z01bii[?Xl'3`(JHV*,%&DA[Jg#]W/Aa+!eZhY1V@gf-*Eg,7IABjE3.;fTDN54]?E\i0j!;Gf9)%NJj9`o9MC-+VdF])B>[VfU>:/443XHHfj5U`d;m%j$>.%H$UA;nU`;TXm'=E+Q**0`bg.HVgs&XRZOAD<CmI!HCF!;;Sg"<6HIU(%AEjlY&8kJ\6Csbqo;<^,ccf52^K[J:a]C(8e'j2/Oh9"FAqPY[hLVD0KN(*/iO[I1"jNtLWHt"FeC("GN!oM-]8nI/:.@OL*[PY?%R&`RFCdG?J-%)'tKT`eVoKFOO(dBN+odHHN^g%VAGUr@W-kjQn-aX/hGug')V^[d2Of#%mA?,rWTK%6dR\#8+/q1@o'cD<9*1r,d%4AD#[%1p6Laq`$DPdk48(@(mF8;\.tPk8Ht(@'b,B7-)WKi[Y";-.;fBp"jc&X(ah@7;LajWk_#IpDnl\>hjmb\-M;MP?\c7>@D2%8\H%l_HWEa&^b&8GHE&\:LdG=J[oYTgK,ZbBq"F)JqC?c:m(RYBst4dr7H*(UaE$2-UoR@5;q2n'kX94bKT$886<_._2N3SXZ/#d%P*UY+6aH7Yf$%9]]T&la\X%I\D!!9P4:_D%<2&Y>"7pn+=;iZJ8EJs<MNV)l[hJ(nW5nP1NX,NP6(4CFTJB0Rb\TRGh1HaTKrAIV%kc*55W9umr<()%pk=B>+QH7FJ1e(Lb=>tXd8C:@I4P'eo9qMkmoMc^XX8o"(930kuSfNMOOJA^Sp!<U"8NZP4%(VrX9'#38>!QhX%%]U5%*'L_+:Y,TMkKMnh-kt#,0h9Jt^tV%o`%;24o7d[0af6K-G!HYYo<?GYhRrs2Z6;;jZ=XQioq9:"+[&WO@aY>MTZ*]M4\sU;%dZC&u.cB"^oUs1!+[&W_SV&p=-#WmkCe2pJoO;m]6cq+j']f@2U-Oj58,:?j7([+X$5D`MPko3(9Uc6;)H<DqVBJ)u9bOBj(Kt\p%ddpG%5`qY9o((XB`"iZC5`qY9C:CYu-pu9G6[G>D]@"6LoK:YLcNIMr.F)&@RF[B]c;6s*30E"$C(Y2OmoZt'2&M?0F'aZ_\LO=C%!,T]\1*6F=YT7LYO't23CSflt(lq\27=tb(PQ0Uf>SW,>2AhN5W5gS7X5&[="0r.((^B%T.F;S7cS_ZAE1guSO5W<)XZm9oo1Y:V%rX99YeODK5aj`[@L''TF0R?OQ6J"RfL'q8tob]<'jc]9,!BSA?_mQXgTka(sM`-o(>Xms(VkZ"mPqE\CJ_Ra'Za`\kB@Gd?(Th'r%/lT!+Fa2G*.i:q&'P>iMQBiuReEV"S$WC_7hf,hs\>R6L0$NB6h+VAKbRSms;6=XTIWa&\esQS@gT_cJFcfbTR0%Rq`pC1gZ0h%]%M\`nLm'g0^3rJ7e:T6/MD>!las/cdrF?%gIWrL:nX-Km+ZS#GW3]#\pN;O1+\gS'=iE2Ej%WJM-]VuC]\nF\%E3'G6`"(tABM%Q0%Y"K?7\CZGXA;>A7ZqPXff1!knLNfkB\hi9O=CdC:Gh3**n7M<-OjM8(OmK>`&OWkEOdb:FUTOrLAf\E'M\acJTF*9J*=3gG(=S:s%O!T]%N(>6M*gl7[$Z(S==h)7j(m7<rp'sHqB[Q4O-4:XG%V&DiR:g-8j=TlULH/MI&9h6?9)h#KXWTp8YU3$&=Ca0lXj%k-G1#$f%;DTO<$<qZLndel;VO4m1_&`V'D\`9EG5@JXAr9XY%fa+Z"_XBoH)u/6hhcJf$<QnB^rJ'0eJ$-Mbd5uMe;#6sKI<(S.J,P4$d6a=%X*iL=,+&>JdP?O"IlcM*&'VWeDd+Si'._6?k4K[\X!5+T#1UG?!eA=n<:"B6`1&a5'6r<m,V(,?O'AMdk=3X(&L8*9g]c9IJ=%UR%6@m$[R-A)B.I5gnK`]l;":>=([5-RarM8LK:akh7$Or5LFg.N<i)qSrrnQ0.$VCbtFU9$;E3/5&N3Ecqgn=7(^s$l.\/c2(h!K,Q%HuQPlA74fWfd]GKF2^h&L/J-o;K0'EggI!DleV\Lk1ZM!5.;2&A:a<a0=!8fU4Ind(1p#m:l+<T*,Zeo>tNGV%E`amVr//C\SpaY%k"f#.jNZGih)[!`m)7&/An<VkZ#ZYn.X0j7KQX8H`H1&uGmfi^bY&\s=I[=e6:PTjX0B3X@9hqIl*=,oQZQY@B'(A245->ml*=-Z%gM_-d*#'gi0(P6N(O8g,SW5?!PW)7]FT:ULC%eC:ljVsgQ_!Y'g*shtc4#E)^$Nst3I-[?UqQ%%oWhPhnVlf`^uN^6(8(<#1XJdF%a6i&udp@)"HJ*)ZCfgoG:R@[HRPW;jJ@hA?3A9bgB9o\%9+u26!<HjeYV76,kKhU#+9:d4P8Z?<C4Jd+;%<Mg-((W.38.Gm-(#UL%ZT_f_QJlNCY2DDhPIukaEue4nR2$(0[*/l2(X/.@V0Q)iXO93Nm461+9H4MC:fr-&^s1^9QGH1m8&m[e:Q2[fX+gjp'35PQ38%Al%HJjl6d_gf:%mF[,Zp9:*#i5AYV#q4&.NN=B[D63MV1fAR(-&[i['3ucK)^K*r$P.RF\!*VitZ&Q30$2TNB=RK.--3>.MQcfCS5?/%DA<L;bVa@U=:T5.gpkl^,SInd/.K8)U4*t&Z+c0Sf-T"7;;o,$%nU?MD@>OMo7W24egAt7\RLd1^4[=KPmsKf2N1PU%T"DYfI@R:%+Ebo*n\.-E4Gep_D\su=@YJ?<R4Hk9I:?EO6J*_!me%=,/^ZQLJUmqf^M$N_L/AC!7Q%9.12^)!M,4@DVuS"U5?<H),lS7b/Xncl%H_LIApLBL12N2t70^<)aW!Csg0hW#r7Qh;5d_gf:&""tYOWHDSAP@eT%i[u$C`)duJ$N0"IR4/9'B8bYOM1[9Yqo32ZYlo5DAW`p%?8*2m"hUlN4#:\q["0CEg4U9$Q$YI6`P,b3:3aT!G[N^o1_DC..ea9#i3?^jgafK#Rl64KiWW9JAH-b1G2`[(rFB?da+gRJ19dmD%onLGtB7ja!AoUk;fb*d&U:S`;aPDt,k!Z@0UQ`ZV2%Xd$:YOgJ=dV/NZ]2:FNkl0'ok7bRK,^]QdDBe%G:,2+6"3Dq&?D$Aaa_3G%/""X&>i;kqeA6m=U:`2FJQS3b2G=kIKi&d.QLB'/l!qW0&%=W-?;[m@0^eMeesW.E]Z<k#D4UKR;+hjO>A&Cm[rpir?))Mr7btEs%9Ni'@rO.]sBh;F;j&%`e$0udtg860)e.V*ZCXUXc;+hit/T$l^"KY6<)b,6l)"k.BeAm;@*ue8LG]`0P=?<7=%?%\XdNO$T=MEmZ%%d@K@g+AA-80>deSQoL8GlOZtX4950T9dX74FK$f8E&h%Ni,ZRYm=U;T;Q:.T+?>EQTkc7^O>s^^O,gsq;d=grQV74rq*NmIf8p3%p$3Et5Q/E2T7$L=kO4M)5(*1<?iT7!!<2?(Mf?+eSpp>(d;7cd3hCfoac#`^mX%_oqjSDjs8GE8ErPf[lq]U\+$],AM!gM?3YcoS%>@!e&B@G^c>ic9'Zi/@1gkEUC]JNbY4_3ts(_+7iA'+*(!,XFjkn_@PBcZKD=m-?[>MpKBq#Xgfo`:/,CH0hG](q)C_hO##0[UGt%*ah"%B,gQ;?'PZh.e>0'Ek]L`Cr=>Rf^qu1/U$G+Kc7pI_sGD/$9W3LK<\]jjL/L+Sm@^0n'F:-i[0V][]d/K*EC:lfPQK;JW\]A%OkYVe#AoRWL<4qjNfY+jnfi,IV?7@<#tZ'\+Q<JkCq>[r['A:<[O4abK\]*"!ft9*0f&=@Eo8[_.n3RXZ?U5R+rJ2<D9)(uc/Rm:%rkMKL?5U4iR%c4MaDJi9D8XGs@qI7N[UJ7*@H=k,rVfr>'8B-IrY$G3s+rG$s$U.<s,!,7s&:snD(UI,fK.o!%.W^e^OOf`>VH@(%2iP`>""'D8:uI(n#8e<F(djQ-`hN,,'1W_F%3r>&lhA_ggP1hp`.ZLUD8R(M'ZQ6pL6:5FOkYVQ>?hh-(Gd4_s-o@!f^"BIIetIH%DMa/q-@ih8'ZQ7*L5D`\Z8?sI>q@q9hdYtLfQYC4rSNa(8&YN?6s_TggG![&0QPo%EeA)T%WU5W"k&+t7i9sNJo>(UmlM(u!E&u,%4^ELaZidY/"``5"P0tpM.N:i,YRG-tnT5/$$*bm6)\sK&UkAo$*nj;s&;b6@M/=)c@EECa`&<RmG-'Ra8n)Q>DC/OT_Ats87(=o/%LEo2B1"n<:g+Y57+E!TT=_su&M[]c`%H<BXYp<(Hm91.'%3r%c,I7h(1TY%;M:mW7f`kkh'L."]c[RQ2pkA[_q(lfE&do5uYMWaC%[bNS)T5IcjQ6ZYbGL8%q@W@+K/Coj$)"IiO5!-\W:LZc:YU%GVY3?_MI]P49>I/Z,U.+.S6TYiU'#<mA%)O2T)[8VJ6pdEG7i3Sl%>7?0CLkI_oNu^E6FMgX`_aoXumP$ZjX=uEaYhMnB0XK%$VRulrqsJcD9j@8j5U^,52%eOr'&##Pi]Pm^L]oj.dFSclpJ6u"Vog?T%)ob5N)s3>le&9nXG/LgK^L;$T2GAg1,EbU/8(aP?&Zsq2U)7!XJ<:Qo\1Uf$f$PtOIY\^cZ[RDn,P4@)2N5:&S+02B'dL0s_s&$<%=fst>%bUQ:cbS+N]KdKMG_e)OeN#Y76ceL-E]t;`n2a62*S/46E]Q=?'6m^VMNnD`M62'#e)&`=IY1%._B^p9rMNkUS1pXYg):b9%S2Q1n0V@u^GCXC8jFhfQe(D0<A@5k,[:ktA!<=Lk$Tp1mKCS`%0Q=l3d(/%R_8lp)HT,ru0HS`t0QP%NN_0Ej/;_sS\E<nZF9A1-%=?&F+IDs!:K?/olE>#;]/)DVff-F657T0.BP=Q;/,.1jCei:Z.K;kQ^pp`ROYm<F$*;T$e(=Ll%-u1o_\7*A2jS-/)D;6h:YhZI3%F(@#tmC;2:U"ORc2P=Tt'd>;[J;(WoLqNMfnP&`^"##+=ANR1HXNdS?a#F1$/_jfK2S1/@JQs>GieLLPCW!r'K?/rm<u%nJ"##*n%<P15K]_ELInRCM&Hh@!Jk3Rf.Z_9>BO9iC+iC)@S)pE7LQJW=6P:NN:^<fX(@97n'#^BT/+.WEsrHtmMF>cFc>1ZX5%1>;4$utki%r<;4QC46OE5d"5/a_ZD6?,s!)bS^Sc:RukkUo4.op4,[A-/=MJZo3lM:s&hc.W-rg6BMl0Y.2;=.m'tiUjeMg&+?IWr2Re^*9=Im%jFj6S3oPS)a9f7G%TjiTN1<psOX#[E0*+od!A53[Tq:'P`,!D<_#Ig*^h\SD$WTnt4i7VUL?hWJ_qP:rj*cdo9>FBn&*5Yq#)RV%%is*BN$.M*uGT.%b+6)66N=3VX%gI=LHI`6-hBiK&l"UD-Sr)$QOVS1nM:R^WqT#T;F-pW\pmGf4(jL&qR>>j],n\lc&E?;S,$%uC%8\>1g(.VO@/Ing,=rTq;**5_E33Em>D%LUqGmU-r\&h<R$22CCMRX59iPc1:.S+b+dW'o5<PK^jFcXC!RLn_n5SZ5F31)hTU"`0A%l=cDa&MFWk6=,+>F[5#AEDtYN^-H5J@8k+%j/.'#i/3X4a%[/LHE\dTKgAU)$W%QgNgiXA*$SCa2N5"jfXu=UgR.3jL#JmF7h2t5%9(JUa1Zpt1Y0`lf(Q,&*pY[7aL?Q?V4D8qTfQOHY1D2TM$;-?)Ot*M.X<_t*2skbs(\]mO)Yn&k1m6;"d_ot>a:'(4/Imgg=r[lT%ZoAc2BPeTCEF,=>P-BO\dGe9lU.*%FdFp;&iZ(;V6abHiS#)e"N[prn)$97,?Ec:4<?*sEqI%=7a@e1t.lsnG&nal>!E"jbP]&1G%%]g5bCt'o5Eb+)3CM&8;(jYp)cg*>&#cs]\&B"oZ%RI1hd1FA+$4T;.r9FhY[%PeHqr7a?'bhR<=@&W(L_UUBG`B=C"lOeKh(aq@%7Yo1l#Mrn%@#L@$g]q0Z/lF1&2&<2'G"@`"H-oKsLj>CYpShXf]OP>5Ns?=OW6<+P&8>!q-<aBBOVTffU4k$XD"l&F66e(^b=%9R%g2<9V>p``\ZoW*M6X@&dWmla,L[Mpt^mjO(D"1ENjZlJ7EcDSr6n6aK;%HsNO+I&UX45)rQt*<UTS6,lZN]oODR+La2d*elRk.kl%HP;g[W1,>EcqP9-.OUDrFd'eF+)JaKkUPE(&8>)Q2I&k<C'p[;9kn(c@r0A6$OhA=l%,-kUE4**1b"#bO0RRSd)=qoU^)W;)YEOI%d5dUO*71/lqNCeSjFUdUdSSlE2!G3W@Z+tuL+9L!ql7`?`Jh:.$H)<e<,naTWjqW;_$qrleqa>s4\EajjS,<ZGb;`D1CSMM9jS6R%Gh=t[L-3&35\$VUCS3E120gq;To.X<e5a0Bjt(P;f'giW(UQbR2mK*eRu^/VlO6L`>hWJJ.+p4NP\_-b8et9bH>qXakYVj^QO0Z%%8[g?V<<Y\k%$@R\i;q[cp#*(KYX^i%>_G6iUNeL;lqnY*MpZC(MWih\(+Wt$)&QLB]^ZObLmL'FWeq6UVSP;QYJ`f@+Q7R$='(GK%XK066%(G5+A@AR)!CsUgWbS4s>gfPZ.`KI3=olL!#^n+nd(l#1#SQ8o2WZ,$=94`@3N&]-:\<"(<CdAfTXG8"Ogj2I68^K\(PNaG%Mo(G47:AXt_^s(0ED5%";+t`Jlnkq59YILJp4OkTH4Zl-#SLR*<(/`BFDBs/6K^H:U/Y*SpZa5\(+;O-1KtlIRsCJ;S;@t]]P+&$%.pb';C?ca@FnH3F])(Qr(b1>GRP;n/,9U"S50@'RlsJu2Q8o@oF'D%X_Zn%a@ME$eQb(=RO,/<72qc!6@'$;JCXoS.]jh[.8hQ#=%a'9rG8hQ#=,mS4]-Aop)&LCnE]Gt&8$dWisZZA]I63r7ThBMCrete?Af#UMu(XNcWPp@`q5aYtt5`8[kcMmr/m@<YCa,"6&<ISX5%,0S:Ia%Y[,hR.;m*&CSm]R_e%*JK9qaBFiQ9Tc>iiOkmejYfTH7?ju/7cmG:ADE;+(T[JM#[=+I+68\VAI4;Dnhm`[U*kbI<4R=f%n6"f(79Cebn"n!*`JYq?imlQmo&=,oI$I,Un^AU\ITV7lU(iM?10Ih48=GT5?Fu1/E=escN02fJMBq0s8M(P\2IMapEaVX8Sl8$&%UnXN.llsF;NQEm9&]HA''F<\@[7VRtH-+Nl#_XTjArM)^9QXgMP#i;/"fX!2*gK,l!^S5&aZCl)7NiA=8]%6Q!t3&Q,@lK]`X];+%5R^5JC@e&8a\4G>QuBhiDe\:GccX.1&V\T?S>QJT`70X(S>W#tfSHNp*Z1Uo<NZ</VJQWBUNmOV=^.ZK&nr<k]L/]HY6/")])Qe7%1?Nk_</G-52Ofm^c`<q.3FSX:rMM2j6i<_%9'6pg:N8GroCnG+/J+?-`Y>+#^Fb%tPT@`"X:b>saa*'qd9L1%T8;3<1P[J_,O@/1%/8%HS&WfK3UWIiEh,Yg<Ne[M!`a&-<oAmrtMp:9'b$Q,cpMFAS[\?o&2tH6KeTh=<:$tP2m_D:Zgd>eCUMVHMSUYZ=]#hB<KKYR`%3SKeK)%S>tZ=8eBn7Al!XPCb`i1_KDQ'Z9UG5c*E\_/_8F>gEt;0Hh(UcnL?o8-k2?q6CiMJ@5h!I+6Crd4;1`&rm"I)bIZ3`=H>%-`Od3?I<U%`4[5i9R)JUi7LQK7[,V^^\Q2eCc#:\]YiJtbRsee#3L_i1msK=e_<d/KrO&,dj)'l2VF#.N;b/a#]hiO-q9T!aZ-Y"%7UfLd9A:Z1bl9F%%=sP:m1*G7DVE/cQlF18*t;F-9cFed$3<^?XWKT(T)31,Fs%`Q1ft\k`gjTITeuVn&F4"SasedpD[:D463"l(%Ha(nBpNRaJmWc#;,9[1NRd;d#5Y'k2nRr2M1mqjdU>0:,c,tKL03U%P:m1Ydkto3KBF&aZ0Z(b/ZS8bF,n#TT+k!(4$^#Y&>C"5@%Mc:9;(`Fmk&//gun6Xqd(+CTtM7ihhl4GbUi.:6mjH`86=?*Pi!c4]d-q@bWVO.qVBJPkd$R;a",a"Fj)q.Eu"B.\\1a4SI[jk8s%jClc2'bb@2<09M/UG\0SA"tadfRR(.`(;,jd@*TL`6i,d,fD[2!hbAb(n,\XbG?Z?R1SFU7?a*$a>)"3Hfkt$BH9<7V<,MIh;D+4%PlWlk))R1])`k9>%BKOS.@,#<,"7ur,?NO53j:J;,SkUf)JgJPBF5KOXl'Z=!lJLhL@tg6^sQSqTNpL#Uoa;DIsIW=k(ARl5G%CQ%7>oZP\[SXQ3s/]O\nmR`nA[R%m1";b@i"R%^K,DA3l*_t3"*D4<t0!9$.9,H)tVi@?g`m.hFMO&bX9^(]b:aoM`!19"FD@:W%efG%HNoH[R[76>.ZOV+R]uD3UXTEN6rfKV`k"mI-et?]Z9&]ec`1m3^f\c/X+c/J:dlrek6mQK#3%M#A5FP)3k>`W`/84T%PU#VJl;t[%0-(fr6;U&"XWf5c%P4R_k@NWQlU0d?#3NQ,*"^_h#G!q[@/[0dKC_\sLUEq#SW65l\qZC[$#trEXr/f6Y+bDp"'Yk+G!U`Id:F.?%emX2>OSlKM4Oq[M4"D<f81`#_#Ym]cA"IH'BY[ce&kLYcl*:F)Jf7p\5h\i?Ob/?Gjq23D!9ONd\dcS<APqri7b=*$&CaP0\:LpC%>YkNDTgl`+!B;AWq'_=b/(LJ&*=K[XOX$_X'4CG#%#o:^K(74rl:XS\dPO.r-rnMg8BEed-1fHQ;UlKC[`:Lpba3O<$_/b(lcNon%c\Q1l,K]q6eDHdQ[/Kq@Q:GS%d$V)W_EW#q9Z]<!`<^6;.WhhpgAE2!aOVd(lrtuG96Op$\qWhQ0dE.7&XCECB6<9F*EY_)*=]gL%ke&2tYQQMU"_WMu`9d#QhSfIq8,)3K.Y+]"h#*p9WCtZqB_3oK,GHng$[X6`U9SH97b%cUD:sKF<$hfAp41.6MlG<Th9^d!-*NEM%XKn8hB>n)>YTq;Z*YA%&C(.m.?:L1s<C@taEg::/D`"[LN`d#0ml/UFo:Kk[b?HjOQjoj=iQVQr!Tbp]L)+2UA-8YN@2gTu$/:sa%Smof@b*p:Bjk&\VI%kqU^dj;s:12#ZoVJ=keS9LqYlkJVHVU5k,rVMHoF[pO"JT(/Ero4nBsaA8Z>l1%4_MX"BmeGEN>]^1&+/_V%FR$ZI"4IM0C=s*@Buq[I)73'XG,o-8,L?9L-cR(9""V0kSn=4YT%/#qoOV_j8Jc8f%#hbGi0DgRibHsi8M4D::h"QT/.;q?1`%i-%j`PfD$CJrIc:*GFUY7-3@)q=0ApNk9@[9kgF[-tlEh$+Z2m*]aF_3[YQ7J=;osfUA2CS.%4D$`gFLZp)d5XF+lpFNgXroXJENoft%VS.ai<@W=\E<jK9Z\5d"inU&,eOXDSABg7b:t3!iUbl^2(HAbJG#aSBQt^I]2_^F3S6:6OC8`sCdoJ_O@+Nih%V?(IkO-Q_HH[;`%MY$!@Ao`3=G@jPoV1Y36gYBWHWQ.OMFsr0=46ekN%2G3'eet"5_/-]nEu?H_b+>BOj`"h\UW&l$,1kN0_G];Q,Z>1cei?XNU#P91%/[/&5H<`SniC2GiG:_Ubp"0Yoo?Q(*3\ZMXJi_oO9Inh!;3+j%54d)%RUqfflHLiH?<5Qc5TN0W[IKp-,:K]V1Vg&J\V(3Y$:2A]%XigUXS64E*gjrmQUB^22$P/r(>'\KRNWR*D"Ec_VR4c"6kfi+LU0d:^*tP'\3!jUsM]4#eC8=6OMgLM_?TkWqa3I?p22ZsQ:/DYW%-f`]*Ugd`/W-1I0oO&Rek02n:('??kQXQZmSU)^HbiF6hPYWCa:7"d`cGYA$?cIa\s(*#QW$"3deb_+'%#j_f[@2lh<PKfX;=Wq7%5W3U?8#>14],lRpFCG?q%O>tR95&m='&\9UP\1Lu4\aiZ&%&!?HcV]m;5/;C*',cO`c4lbSIA\iMgid@Pr78OBP$irK9ejM"a3MZ%S/=m'1W>qY"uiZX-%fEafJC%&^!FtuB;S<+2soLh!cCF_@f\N*etYG"9Vme.@&X8\U'6iTcluX#\7m&!'Ha"%L+`_[W^[=(Q(V-a%\=jPBLmA*S>!u!e1G,>tJsdD%;Sc%HA!CDnM>/n,/ck!GWF2T'ZrC\87C6$AH<N^6Xa+OH<tgL[[`46g!#ZX8hS;gCBPCkO72/1]%B/4s-V1G%D`MJ,gQf&gMl%j(gcE'\.YZ-5J\dL'STY9dAS6;36)jk>P]6I^o('9"_ge`j]at>AI`edCq`T&/K%KPSXEKPfl[e.)N%X::gLMDnD^6pXVKRTRMf[]ZdkaK-/M()F0RFVSUaB*A<SU:QmN:1nk\o`-`680a8]/1TRP+ID=D.\J,YR+>8J1nAam%fT`7#.^LB%odi%@YV1p&2P'.7As&!NKq/j!YHtg2&p;>/'s7dr_1UO?ZRu9I#[jO;[_bjt>&08TFOhp<)pV,mD%0mM[C-9PAigB5V@/(mL.[\K%>,*l0Ys?5QC;Y:.2BAiI1pK<a,jI'lKqT-%Ec>VKS^/Xf5fb3cF1<E)&sI!Rcm5KZ`EK_1>\dsh!]@K#;$8`76'Jf#!(=7o8!28E%H$3&6/@(hll3[H<="a\20QQc$V^\?7=(:<$<Y7r\Ea_hUHPT`1ldl1SF_%\m6lBVc-\,l&e;B3DVmG@a)G&e^'cB#--^OS0Ti%m+%aE]fs1Lr]8`3^Ig&NYbPV(4k[Z-]dAcI7=j[F'P6d]*SD7'4nYGrdY'>0(tMX#aW`JYa!e9%S2JF];g0e:^cL_MseXZfK$?7gh$9%#DPk#b)MX`ZQR3&mWDq8Hk8Gt>.Ub):SLm-A3:kL7i:TWW7ANrB;WWf#u>1sM9JJ\R25COi(;F5Nr5f]`e9e"Am3G0U*ig9h^Y?J%;1<QYkXh#.>[aNuXmd`g5"ea<GTK#)>2X28PbJ7uaFcN(<b+D*eiYt<W0KP#&ju.6b&^#je60]k9d"Zn[HL]E.8d-0d\+n&('gI;%bY7GHp#q7SRmrh=M5f1Ib[_#Z2cED)5kVe_ZQr"PmhR^CK8h.T"/F!M4>C[d,O+GDP6#:0JMSu8lXIl]kg:%O)NBQEfOc/>:9gJV%h<bmaqTKL50mVbLHofGgJ/Nqd(8OG;.]/[O8:3HPbTKH(3_OS)7$77d(?mgRls_:dU*4hlZ6GD)FCK!.0pBM8K(/q![HbtH=Wm+r%/G#QI4.:jEOnj*.BGT!ZEQf'_,'m_P=nWQ."!Ukb.OJX-=\rab&2h(eBs5&jH85t7Wmqho0KK$%"a/B.;6*Gc#0>#?lAre!6l+9T%DZn</G[`#*0N:_8$.>Kl)C,Q[F_3I&?=(ue))O!"2?1b<(_WSR/>ser7>2&:k@C4(9+F.t]K/uq*P##PL+aFt;.l")[#90d.=-LQ%W<:&)N!u[!bDq[!;laFuOW\CJG\etnV>ru9NFE5K1rN*^p'm1[%ZKH\2_bIV)U&mofH/.3B2oZO&ca[Wgr'oJpWTSBnd6E@+\lcC%N]Jj,:Hg=@"#WJ@9K!H&V9VCYkQdh/VJq$;I:Cha8#Fd=XsN\]"H4E)@O<EpaYTb'.'"QrN>?ZTH0OggB1e^+qE\.%#t:pD&3!<W%`YA!>c>#&s#Jqcf,nP`&9Uc@0PrbtcA0B_.MW4f)M93Iu]$uS9-]=8Ye0A&[X=Jp0+B2fM_o&ShP6ltKWO)L2\ktnR19)Ne)'Mme%%6mpPZH81TF^RKuF%3a8i+Z(:PT=^8:#^^e@SL@R2fhZ9)mZ:M/3Dd;AB5oolG+f')C%#u=qdlm[ujQecUb%7B;!c)1LJ_1bLU?\%F:$/9,M".o6q0l$+0qRMbQWa2Lah92BS1C5$p-GG+;"+;:(2P>@)QS$2@kaKQcs,qaDOC,e:BoGr?/9i`dW^Y`&LNmcBV%8)*/0;%*B!1;5gnUUQZJ]3?pZ?mJO,=;LH;]Y\$%)=kt3]DU/#Ot(%IB-:pur*F[@_7Nd+*X768nkH38EDjHF\1U'L7_>j&@WIgu]5O:-2=%P\Ui0M?ZTXk8'-gFVZjW?F/f94kG$k8Y)]<I!Bb:rA$+snl01QYQ%k`O9OFQVXM=!"&G%?Z-:h'&XdaG""@+qQ5us]TQC1/,O)iG%&u6!Giu:!V-O'VXK-WYtdU@,@=jop)3\Y<g6u0\2MdM$l(:@_J<RE:1nM;lH_JFfDW<8o%P%[]GI]asdf4kg\SPGE8P)i,(=6YNi%b`g46p(70n3lBt1;(%SKE&(9O6KmHeF^cJLd)S9Dm#Am;83.?8m&1$0%ZhA)0]En7`J?R-V(o3m#/Ou*aGFZUi`+;P)=aIP@^KY/%4]P_)LpLD".B9h<f*;&p@K+_)l!UUU7(n/;YEF";V^'hKO*7iCr=S0DC)k%=82t7?S>[7B#oV'TGt-9aE>644\70!fO\s58K?/q&%V2?#!dI.))iFlrbZXIC_&_+aU_kiLE#*BQh:_T`9"",0i%7>&$aG3.*m>NR&N8152?6hbK_+9G.YD^nb)4JNq80gF5_44NrT8O80%3?+N6mP$E!f]&YhBOj9^0LOF?)_;P)dPk]"]tp47_Vn!Pf$bQHI!3_*Xc[JAI!S6.UlTZi]Vd\"=V2$Njl>6[p[eZJBQV/5b!1cM%=#@%TIti?L`7EDu\m`cN:3=]-L>H_`$#eJePHPf@01eU["VB$)!#"s)foQj>#"oI\;VEg&g+i5o?mnH@g+ZFY0N'*,@cc0k*@>57%7W'/7DB"l_@-"b+B\+UH4&"EfN8-=Mgbt,HLsb@p@-"b)jL/LX[UJ5tZQj!-Uu2/G\O4:AL_p.)T7u?c%1mL[+soSAVU,'u"YG`D%\Rgol=EmQN$ZaFBV?RX9-?han=d1u`jc2c\A\0+p/BWT"<Z[4)Z7ur75K:jc#2%^-\V9I,(d]$?m!aajdGh'U*L/.@mljr/e9ch=%e8Ct'pP%0u2"*1U1c!f.9ann[Cra1gc<F#]2N5R4N5RW5`&<S3:j.Ar!0GY2\iq7^nm.24ll:KE%_Gq&\gVP5RTFCe/Oi>O7S6o!%VpQ)p0s]Le&p#_FOR2TD,I\[\]?:0[S'=6P]\I>3Q0U9`@cXq*>dE-t[[$29mat0&?25.^4Ya6rS[;:fVCNG#G/MDPrC'pn:t%!#%^A\dVr?n*L3%fsPV`1"7j;s#/+JXD'BEYpnCFf?t\mc(Z(gLhaEO17N3?pJh/O\:-7%=nWF[P`K)iSr'-@ufJCW"4$?[.BrZ]a!#%o%Gh0/8O._Jo*,u0_3*T'hlj@h#nD#%3mfZ,Jc9&9Gk>1HSBI2XY:,0DAu&_*:"qh*:$2O2N6F==3a,F2ic*-DB"ngmK$H:"Tp_*%E=DMt3ObsW\4&B)F)b[FTB/%*i3m&uKVLjd);Lt+eJ@6((rA#W/*>Ws8SVZAFDqY"ET;;cijN:V`\E^sNT2=CRm@6_XFk#XLtdZH%)oi/BPGk```/WfML`=B#&NB!fL`:JsSWt_V&DX&+)=e']3C=iR3j7HWUgMh(62IF;_F&a[d\![TWCt5oJok/3m=J?F62b8R,mEP=%MOP\KZr"`$\np@q>rH\thAXu;+MBXPMr<1)NI#C"7_L[!o.u[JBVkpsW%$f`1YZkdLNGAJ+=e!u*AIo<oUQ(oGagag]lHY6N.N%t%;$XQtqHt"j.7Yb?G,Z#+.u3cE`QcnFE\mBVg`ZK=L`9kH%rmf(E/20!(cO+Prl7BbnKk;*WO(4U1LmTn*t31c:<]!.EhoR\]>p!X%Q(()u1Si=@Fm^5PjLGfh0H"o,DEC]2@B=.[b)dlkgXn8,8_l;?Ch614qaT8W\9W8eI:PgP#;HVO+.3<*O5(6<O5)G%OXG;+34+LG%M"VVoM,Lg2840-$[9LcI3O^?'7dY:qISi1tP[=R&`aOd!WS<`>7@s-bOrm@6mGJn'V655QJ"MQ:VKsL\okiaK(qELm0O4m+n9kV4%i>d9Cc#uba.pm&FGJ5Yt2VY;/d]i>fnH[O^Geh^g0m2p,UG%F^B_1)B13M@4\!XP_:0GDTYprm&ET:.oiYL#[Ehf_!N^n3aV;VPH%='qJ%OfT*AZ(c5l8;W@2(p^%8Ym``6d4WHS9Ga8j0]Ysa:4lY:bf"bd`E(jFjC_-<Q\os]qEf'cI3CPl"ktjpqdN*Z\fHp$fP3?\%]YJWo/@cm\U2r=1Ytnk4Eo@%\XRT3(/P@]M>qAVQfWEQ[,$UI5f<^]-'fV/>.W1J:'fUS3<MurI",'Q'Bl$amA*7PV5+?P<X/[g8%DabOCG@Pd<bE+;u3t5d6YnTio!De?h'ou':aX@7Y/ip+HZ&'E2d):o!B](631\*qi>f[3"7E=n6V+b1@(:Dn9$nnYek9ee4nmmP]%ZH2X:-5goEP?Sd6NWbLu_C@UbBX*KMTlt^?PBDNGdFT%Q`_e6afBLS<p[N'4;.#i3eCrAo[W=WGLCSJo!/<IkES&k0d)""`-_79M%"G=s.guLBBM,jT?Ht;<mTl[_<%ItKV7>&lUVRmj0KaU%Jcmdc:JFeojD*^[20rPQ?']\up1E%gMWJr9*Gm;.p0bk^02@DQ*h:4+g%:,fTHM`QogR*f=#;&)GneTpB4!@Pm.0P3GGH:W=g<XpO=[`Tas4HM&1e9EJ9n=Mi(:.C&:kb.djel<6KQUn0g*IKfA<S\/+Rj"5p%KCjo:Wd`ki3+cjU8XYdjl$Yp&<BoT+-Prc7rMPiofSDEFV&@s6`_/+nmuUJuY:6R),E/A_$t]d?kh:Y4VlF*b^pAc2%o*HtPaS2u%H\W`$/nLCnLn_L#'3hS>1#oAR=_!1/MQVmT;QKZEP1;Vs;.B2!L^6U`H6YdteTo3SG?YLq3P+roL'UDQdL7<JOa.WMM,^tM2J+X;%@aTj[;lR$0_Ee$0XS.LaF'?euD9/Qb>oGKZ;V`rARGhCc/5QhN-e"+G((`Wc72uk%dFG.OiN?3[$dOZU2%;QG[jtO7S>t>o/6b,7%,O]Q=n[_D[EaY))A'l6omXjcQQm&0gG.Gg*Tp(;aBAA,TH@<e5];jIE-^cC(V95iY$Z!9CL'F/E;ZD#@7U,\CNLd#c",;n/<0/+<%<DUhg3ZV0!@>70Ks'^XU5DH@c:5UMGSa*lEk^X>P^&K+4HN.>YdCC*blTS4JqF/RR2?ZjNM&!5cRfDHV:sRFDSOCFa%4>2O@\62q%l;pUJH=mS;JbOCJK)pOeW*lC:qM5J0,/^EfM[b\,-i=9(nY6%t]>TX,-WhIQL]._H<W-A[rf3=inSKY,80Uhc>2gi756koDYe&XO%[KI6hC?87(_lK%e+[crg%+GnCnbN:7M;Uu_k,/>$6oV2!nHuIcq8=er>36J",SA4IiWWY[`&2(-h6)T=_QHYlH!j9=28U>HQ4P+b%m;t^Q<PQKoJDh8jG/,moFFFUSM+3kDeW=?b]4#UaZ&t\*4>G:j?KF`ug>7>Be0&\,(ho-lJg,aPm3^E_8]mMO7^Q8F"@WA-lbj2V%>-&B(,(XHM/\qKcg&t&B0iB<9V@q:nS.H;>>*osi,/G)XKQp&7_OP"d">.iSa[EKi-RKMS_OM/J;.b]:ARrC1+D4.U/A_]43C/RB%@QkAU_?nU$jju3I<V8Ho!>o!_Tu..5<Y%jI-;sah'8^[U+:Jmiett$]#j2!%6m>fM'>bm.f@n.o,'iXV1Wno1+s8%EGVFnDf'kp-%A6/NtDD6hOZ\9;QW\U?-XaI-g-%bCZ/*;8r+#3-j#=ib]3bVqj3n9XpVR%4:.Nt4U-!23s9p3^@@d5E%*W[4nM4$_)irW)=?lBic%3lXoDAAQJ5L/a5"&G;F&Z2?[2Aa1h@*l7>e2&S8,@!I@'OhnCJ;'Q/DO'.=g?]T`XfX+EO4$ssA7)IpIgGf/</d>F0>nZ(0-`.Q>%Vk"A)$/0`!\>U@RVhR%/SfA)ekFB#hP6j[07QCMn_&_cn.#9W[):GU4L+@>hcmUsa,:%(u-fQ.T><3Ab#i!daGXp]?#qJEs]I^l+%#m\*.S<t2<ODEB&Lm_aJMg&)((==BS($&O]1&nd$XlO*h'2JafSX,4ZLGG\DP-&U>eI9Q#4nBRQiJA]=p*/7k-ZWF@LPX!E'f%#t%0samt;Q\5lE^%d2C3@]SB,U4Lje=Q,>2=5M=[p%kWU27Sr]%8S,2qfZQ03sedMdsiX#'49J,%*o3ck"ga07c<XcZ5eW\m[G=1(M0%KKK`O,F*7KCLfoIj/D/oXH.W^Ndo#iJm3GiQ<$Q<>h'1L&b7oc6=uT-7o<oeEj\$iO-op/SOL3O@-K+=dT$J71G"VT$Y78Sb_f7I%heM"plAW#pl?kAMCuno5mV'eJ5*R5>P]TnUUsc<do?<#7*:c3JXH+)Y<Gkf^Sf+5^6_:2rX31$5DH1tR)53(97X!&0b,q\MCW`c:%dq0K&N^II9Q!?1\E$3_On-o?8<i\8QV<"ZI2)A\^9&OGVY3N`57]>@/YF/gK*2_]2e>c[u1I<+;<lpV2FeuueLRD@(Ea@"q5`kcl%1+\M3C5ajQC=F(dW8l5kWQ_AI-nQ[n0i"gNa3H69a%WTRrMPhd)C#N0.+,7JX_Ns9@>5aQ).4>O0:q"PPZ0N=Y6]7n;6hXI.aoi]%]KuKuJ.eu!IE^?';9icPU/e=V)%dE*J2ZLlebZ4,X)]dJ%$4t',+3+e>9]JKF^$%%"?En:&gk\>peT4lY'=s[@)pKdNRsqs9UB+S%4kML\EoZg5$,bT&bY7TAXcOQG"qVV@K%68R*7@)0RBBHifn1;$+*hHWQl*N9"fDOU13\hCCPh\`1KV/s:_&T8Z<>u\R&S]NKu-gX%=>n>'<kR@-8?]T;]c/`-DRn[1k(OH_mOcZUXq_V<<G0$k^"u?VMM\^?>;lA8Ti'#h-%M,j9&s!C$1lP0!2o*HSPE&^;+j@rqlL!?%dY9`EWm5G\H9Fn0:tPf=jAI2$.dIRH@BOgOTX#1r8o\.4<8EEP=G\0>K[,=BWiV^uaJ_/c/#WX7V54kT<OZuX<_uPgCSSI/nB0b;%d3^lHN1ER4=>B;;ikTjqg3tXY?>qe1$d.Ze54Y[jeM+'AG\Noj#utVX%CP-,YeCkTX0cs3BU'R#MNX&g!\Y2les1e*MTi&(Yn8L(%K$9r7I]a+$;n(a4L@hHLOV95r/S!_#<0SZ,Kn`V=[G\]>$FXb>AB5pH(REj^Q&m/EN%t`;*&;d'N%%Z&DT-4hCdhl8_-AK.[,ch)%Xbt>r-Ce2j8T[qr+UM23$!pZc8c^SjV1iJkF:&\<;eJCg"-5Jtq5&dFA=.Yq$EM6]K=;QF!X`\:U=k/n3&0g^Q3(MVj&fDQ7XM\B%Jf2le^3kIFSeu6)AUi4OC4.]LCisj)Ydb*.^BG?n]68El`VOcAdpZB@SLZ6+-2Y81<`*TDSh2^scDjoY_*]DNod`BVeZDH0'iqfm%ftcTuO',m!i^A>8<Tg[9:l2DL@r@4+3aYoig9+"O%A]H"eNca`0%-[.N+3@+88J'j@#MC/.;*Y4-Im4bi_kg%19F,*/8j)30u4i,%;)TpUDPojGV1Vnc1DH6S/N?*=eU`9SKg@JWb,h:C=l<'<k3?"*%`IW5@MR>pd\q%Pn#UCQm_GnF?m]M(BiJ`I4Z23B=OYoa7s-?<%B9cKbF<%Ff0Ip\R.X*rL<a"NZ-f8Y=ZU/9*E[Qd<ZHc_fZN+UC#V,/ql&]*Y@$\b?[YZIc>%O6d*GDJcbVD[uAYD3=#rS`9,cO4/%bG<-mG;9j^X51$EL=I\e4t@h:l;ksRC':jgB!>$B;9\\]X51mB5fV;V@M?[VmS9T<%2i*RP+@>dW<:');.6,r"K3J\l;fCaWe"<9%,$@lH-:NW>U(X;'@A5Rl>njtNa\tRhe?(Rm/4dOc)2BUkPZ_TUi))iF<U(0mmq0sJ4R1/1N\MVuAic!-]VtupfW#T([Kdms@^8.Y%2KdQI%1WQk\ZKOfX051!0N(Bs]*"*4.c$8'"u"XSaI9\4oAWX1'u^nGMCSQCP,8`U@&qR'LarhgWOD:IqS%d57&_k;At<BplF^Z%%<)gGE1f7ugY99tO]QjJ:jTG/J`!RDhCIj04U*@j:4K;U?B<+I;Z/d-jl;emN<dA%gFbca/6;ak!6R('_-M8q^hYgT+aq];lI`X&i%m:m`T_G!hKCdT]&XgGM[Pq!/\>HM9["/e%3,?pTcL]:VT<"n&K6ZoFM50L?0;CF5:8>3V[+eQa-P<VY+_`mURk(X#=>MX?f!nFD:%\lD-f<(Gc+5]s-:DFgG3Q"@GY7>oAOC&(P;,bkXe;eI3&,\t@\o+"5a$:\8gjlm5b;c1Hh.`*AZFDj^?3[O.:OZ7Jt@WeFh/5gUr%!JsaQ(;1s[&1oSS0MO$G3[5M:%=sYARgR6*3_*S$`#6[UC']_sR8M%n3la3@J]LC4SV2a=8<n%GS>ki/ij2Aeq[a2p8QAFf.9#Dr%MOjt@3n+i+-$-+13)XlDTtr.V$FV'klGQ_!&0.[nSS\hPOX^GA.9#DgL7Z1+W=$a(Qm>[4)3Ubtl'9RU1PBIG'X+1$<4!Rn'Cn36%'B^Z/%J`jKL7TMM;KYY5q,&N**H>C@h3rn]9K2$&SSMEggROU([taBCc&rAaOt(M_8Q+aBMOonGa%6msasi/`AHI4s8L9I]Fk70D%WJV*-60ba,paRYf]pAq5UrqacNmrn+I%QVn!t,R3OX_:]),_i:cG:9q3lKBQMc9hEO<J`j#N&!S*&Um+.%s=<pph7+g&eRT:2;TU%<R+.u$6-i+Pt'cV#O&_p,Al_Q;^")%-WT:Snto/$(EGuPUag94&2'rnoROTRduM_$?UhX[\g"j&>nPtehN;_Qn%`c=KFq)smV4FB%WX^[+DsHsFcnRpW.RIMP0p/KrN6%GK*LG!Z3@.h*%8i8Q7i[XMFa?OBRPWBs8#/nNNY]4W7*B/m7#Ea8,"7nWOeU&<C#S5i:sh/]%9qBqQ=#hL+Xu9fc?/DLj%YR6M6>hcPLi-?P)BmfGCC#b*%"f!4Om8EHaIYHKkCYED1l@:!ejYN>DATR6[uhFPfgREi];0SJCS3P6%,'3%.-Fb<_66T>P4sWppOU1Dl7kCIY/FG>]A/6D:lATms^<]BUPe(u?6`NgkUemVL!tC5:FkA^ZGe5,OlAF5="$skk,`t?7,3UZ(%&CuqMFk-F^CpYCClGV'*5[+/.0e/&0G1[on>/f)H;Pd$t#_EcCh8kgA&Ted3OBI"QhhD\5l&mW7OJ6tFd\T^_J]4S/5"Dd*):Ihe%J@$`Z-s@IuaHekAZp7NR[ttl3CSF8N_>l%@Il\hA;'Js(MK*rT&c3tNZ:4,TaP-*e4pnCi%bkIt<BFB'8knkGjC8=,5ld%.U>rU$%OcSL.6&4\Z,JN#"&hV6fM&,3D7#UV2U(u&W8VPG*8;lLiM:NgWUdZ;7d_a>\i:'&2p"5Ru_/k)h@NGUR!<bOmO"e7pJA.VB;h[/^%9WAcB0S2_kFDJH4&lRea+I26G.Ng=@l5RAVejkkGJkW0X_mEN6(+UI^WQn3HBVpTOCSln%^P!e7R)=7_/Za[tVg<uX(:@.5$U7^V%npZZlF^cJIE6$VsJ[Q-X..W0T_Are$;2=gA'Ttp@e[aq/fn,D;qI1$&..WO_9m'nFcm/U3U8")9;,L&Xp^&ftU7u%C'_k_BM%^WS%`/1*_'.85q9q4,#S>`AU>5luBaX';4e[;aI9d8.CG9HkWLijEBBum/tK/kNnDTJY8Ob9bsWN>=o!KXKsg=^40X&L.AO5afiHP`db%,\0lF)mYCbWXeLro(d3q[6]_R]S)6DCX[L9R#XP(,$H*:,%Td"S>V)1ITL/K9%C?BbVmSa<B!]!JJ>@S?N/D&--VPD@+8pH6(J==%;qFdT2i24g'm!8p1D:D!:(46?[-F\n6JBqsA'\2He-0nk4?]<u3H^kmn5a7O,hH]DXTYY$Zo3lMW9#F2e2".e,V;LugFs7ukQtsW%c;mMpH8a1)0[c]`:!BPK"?YaCN:)c@gEG`k;EkU%PPVQ[;G=)[W8iaq1R%YIm$Pgb<jT.uG0"rsL'0g`o5KT],`*>fT1!M9cmjf=%'!p*8/;XZW0-:i\DpUUpre.)I'3g[rXD*`=IFV%^(>TEE?]L@%^-5H#fFf?/c4O2aI;M_MY^1qaXKTn5aPt1DPJq=TI(cua':U_1%Ob&0JX#HDE@^I7$fBPIC"`_lp\R8/_C+pgd;'P-8KKF@q.5B+%%sOenP1^ADZsctI30^FfE@=iWg+`*?!'lEW8/8*5,:SYJ.U!c\%@[r.PLiFD7&L5jpbXYPE/KuIZYsh#*C)f,$g+`*W][XlXj/@gdLA;aC-:,b'3h)dNKj[CW)HI,eggJs1jW$]>jFTCeTV7*b`t`Yb%!J:jONY42$BSB\F-P\J)FYNuQ4KIdEjm!lWXPRE"(BY5:<[[#0B`T>(N':cT]tk%Z`#9I&Z.cG^8)1`CgpT"AJPU7A@5f?`:/9\`%BH\Nq,10g8!X[7>-i[Li;Td,rakPFQ*OdoHW%.A);UmbTq8T#Lp2J5K`,I\PXRqP&HE(=SE`RKV-M'Vn4/s_i-UWiThN:u<on=8:%rDIB1eJDi1oI`k[Gm2E:l!9a@o.nO#O/.7tQh%'D0`e=%'0Eo^@J&1g2jrN2U/k"NKm[=GaFp^b9^hbnKTW(&f491t7'obg"t0".%^+eSYpMFnV!Ae&*hjP5LKc)PUQ](GBR.1NNnS/+B/H_6&qKQ14on=86\\EWCUN0g/:"?f>]/`mSWo*SNSSQ$"X$$d>\H^9fb-Op8%W?^,p4UKZl)V1F\^9:IV?3)ig!@um)q@'>`YCIKDHTIVe$CLD45G_$Ko.k((T+9C5,,T\,2g-&r9,aa4:%a3G7a2PPW`E&H@@'hq%rY2?knVpgD0228.B<+*M6]@@\-+&j#$Su,SVJ%:+(M:;]B"[JE)pTsA`ljr)og$5GitX7Xec[[9(RWLj^+e#="jC'PbZNQ)2P!j`%N0Sg6VR)/Ip)>\qA^B7U<WP!cncURXAk:?6%5CoW6nW*e0OkhO@qAH3qB4[_Z*J<#E`N2s<WP!WqNPUb6G>0a(,4hsIk!&G;](o2%?F<2d)nV'C0O\LK0NCcA^+a!fKaAufeZ0HWI::"V$PPuV^K3"MqSJ1q`3eG!N,+:"0>r)Q@]]3ifCGjnCfugVAS7iH>qM-6_MhL1%N0V*^Z?d_PR'@!cn^@/^Q:H@3`[tT<XU/CR/l8('!_,ag$sFD=Kc-_C/c;_J;HHo"U'BuI2l`L"Xd*YRrO!6f:VG=OI::.GYj-?'%<MQs"?^NR.R.bl62d.['$Sf)E(b7t4PJ2FO7d:@;:'!.GqEiUKW@uIT"jAqp9`%ia6>NC20]Nm%@qIBnk1g"r[,6BO[t#p:o4L!c%nu"7k5M+N+_IN@V9m)J79R(qn_IN@Vc('hJ9R(qn_W)";*gTB![3"T@9A2nS(B2mpg$<Q9[t#@*J/PhH))lgm%VKC0nM8$b#r8'8%]d1l$pqhtg^mpTu`^u`$4IoEdRe@[SitO1WAM;Ns]E2]h$sV"/@dF!IjkT4!]:<*@N*F)V>JQ2%'>TDQi2d'#8cgso"gfM&/Sgp+%(M71ZAn1sTAFu^'bl@ITN(h$G:V_oe^l4QTNlCpW0?gpDQCM0pN*F)VS%dskk3370D?2P2!AeWf<Nd-5^C]GeaEmm/3!kb=Oa[YE%f]`cb7ZNak^NE#+3?uS'Oa]'mk33i6IKO2p!bT[C;uf<N++C>FH8,0QBI2.EQ>JI=)<65bj+&"Wr<R*he/)_U,I[*N`].AGc*1s<%jA2TuIju]=;p!+Qb!Z.B$FZ7-[IWQ$]7#'86K&:c$=B/s#aiaSc12$5WGh+S0d6.B$)9.IBRO=7bq\7UhoF08>JQ2%^l2L5N1483%\HONM^YQHb\$^>@(,4ba0]NqRKtfK_!AeWf93f%a1W4ME@NJ'*N0>F18.k$[LpPL\KR"VGR'UeVff8,1*-4<(/a-\*-iN=Gp!X^h%]E2]h!bU43[d^cG/RZT#lO.;c[t#@*J?A\Im0_VgF)I!u2oglHH5=I^O>"hf"jFI[bd[i#\-6]3IZ9h+ol4kD!$e@kYu8@d.Bm,C%EA@ST'*4VX!6.<qS,,+"J/JU0P&h3$kAPk?T76Zq^]///iW&MiJ,O<3O2(ZGl"9"&pPJojjID\5]NQO^eK*f@[M\RbrV$0a2l)M<%IOu03kPs<3lEnt_iOX)dlYZ1]rQB]h="4(iJ,4r8qsc=(?2s$$rS'R8ks,--^]']Es5O%NhgbUhYPuRLs61UhJ#E;+07WuWhu)mA%;W(p\p07Ae<;l>/51_t_rl\[KepmV(J,\KCr9&Q'UB;H`27>+-j$/"lqfcM;oR(sYHUGWNj2X0Y\@5*ZRssf>(U,T5L>'QL,YXa.%qTkeDq+i_bld)*2]VX:af5'BI6;Nt.a5Y#dl4`>OS2gE=T072iq'VQ>SGq<#gSmWJp@!jE"+.r("Y<?;+76*B(Q^=jrp)duipo=Q%`0EQ.im-MaZd.1@BdLk\EK8"pZ^R(9EK7toZX<b.'3G2_-Ed<X'=TIoQHsr,:Rn7FLP^(':7S%BEK7toZX<b.'DG;mEQEXta5J;L%Q<M$N%_pH,+r2NnrU'S!OYCeSlT]mYr[C#@q>^?P5\=l*bkpq6?8&gLCR:)H['*.f^:g7>os)2BZF/UfrV`](r;XN)Q%oPP>)E8$%D6!0As#FP\%i`;jQ0bXP5L-DP1B-r<d=]K)<g_Y.P?Vq%nYR`A'&g;G*(&T8h3+6lmk!/C@\4t?F/ep3kBHWfpdae2]9i(&L7E8q%`1EEIKOMqLrI<]YQ?uR)Iehi`(ablKBp#Y]qO]XPs8=UU%kWRAkoh/'h:8d$do,ecNJYCoOFJqDfsf6S<r[QP:L0Eo59ZqVrRh]/%a<1.EhXb1LX4m#VbRkdLAG:4r,f&Saqt[]#n7MCn\@hj^3`G+#heY]0OU^"_qVq1g\]t,e+2VgJ/q4K"hST<loBuK<+F1D"ea]4p%'!V3/k7(:<Cui^1pZ1#7nTgeurg1(^;$$[kr+c/$B?fD(:Z+6FO3JLcSaE$ep'E<8cbkgj;#?3Hp"5`VJ,C(:A67HgXeds:SYU)V%AKpM#VNXu&?>A@R]sji0a&[c)p%'#LVq(L(DUl7<F',lT,(CSFojc5ZYA1h%@Z21/;WMqCIjDfDb?HcL'Cr[qX><<Eps"TT<uDNa%l&1tc6dIb(@!L51?Nd_"frsU%b:UMpD]sJJ5&[sW9Cgl@1Ol"cZR:(,Eh9kmC3&ClpWor2UAgRI\RIp\89]R](9huIolrQF]m.S9%hO,L9r"b#t=4sgcSMrKWcE%/.BKa*9k0M`9m7\t^FKQ,+-W^*!XQS0$!S-(?\^/W8(:jP@Jb_!8iL6Y!XVjL%Zi)\tFt1M\ItWR)%msVXJh?:BM[1(0[Z=-s1DfYiIS^Sa:=0MHh0RqAk;;hC*fEF%m]oa<#2l![K3qj`UVsm:4pW1W+57Xb=p[0\_59kX-eh>@MfNL$u%qYT<^JCWOI3mWVi[#_;i/+t@3+2<M,fi9qNC['*i+#kc;eEdVX!.WMlMTrfQYN5l`Krr(4+K_R!m-Q[j4@T);^8]eJIJ<1ekF1C1%ce5?3)KOd.[XY.#kL]UmiiRU@K`#i>6=5?2?eL8%.N>cRoVUbHRMGf4Uu,;PU89u=+(F^i@b[CMgn=P1Xgs[Cm)*N04F<^TA2nV%%[D#(gE7O.%4$K:$d#oR#hgO,[q`I$6.Ji!Tm7e\5L$f*=j#8'D?":d\B&;VH8^h0H,4.>O:YO[dZYjL1/rlu!+5c<Mi,cBq>&EF1%><h#oekW$ibP=I3ZL@\X#+i$+?+#`Z3aZuEaUm_)r_B]2!1`V@d*h*;QkIJ5ItI%Efr46e*On!!,3MaieW.q`d2K7aXGsqa\Eik0%K-ii`GOOPupANA,&'/l"FeN!$qk03ZF1geu_kltX[?_4Mi]%j<e_d]FP59j_=`VR1L1FB=YcX`TAm`lPedL!25%$Q;T.fQ;?i%BZ%O+-a2CZ/e%jSRAj&,PI]9'MB&6.aH#Zp.!.eJ9"q#M`N=V#"`]YTf]TCT-G5h7>-9h7#ZbpC:`l`VkQFG!8Qm>*+1,hjD[::,dU`%4dr+hqkQ6\(QA(jZ;Y>,oAoAbcf0.2jh*tb\aE)T28uV>T#up".3Q<0O6T%R>Gl-3#gM]L!RL.HSI+l-Ddc1_Pn.)'!cgIrHDmO/%T^dqJ`4moXs4X%TG@oUa^CF&.43$[T?[GG#Pdc.5_7rb'?ROi?-h+;qpt+Wh?V`9=WTB`Qo-^YT[':j*M<GB&AUi;HJL(BnG[p!n%*L`q$aF+l\Z2.Hl,7nY4&Euu\"i['qb)anI]D>Um:QYI,b,F[,^d_LRo8@N4/)id_IJLW4GU&bBWq6+IF>eQuj3u)eJ%i3?^6&g1%Dkq?;]PBi,L:I-EQo]ZPdWQ%[lXTl"&me/g.N>q+o]?DIUpC_9c4g;<\CiqY;PH7jG"'GOURSrGs"mcOgFL@3Rr)5p")TV-,5lr#%fcM`)PbOZGq$-I,]=YkFPHEGikWkS^PPapU[D8P4&n$/Em<nj_!;.u%6A7T=c0P5Lm>Ui3"tArb=W_39o#L"So4f98W\$%u?uR'*%7!cJ['5Tm6ksoFNj'^1KHb7)d)X`FB&f\-`nRgmH@hh/E)sN@$af0?Ij&kG[ZQn,cCGM6X\BK#1c;(!nq,s[D8$5Q.4#Llsr0/D^%qJF=dl0loY?rD_+['UL8>O:bZGCj@!EfCT6RfRPLP*V]#VFU@\k)\3Yc-b_QAlpm*=S<T=p3^@mM,UP9EUd`9o+&i!`N)2kM'QDu%Zt)_uB\'CX@o-t*d5]\QHT[b);;"r-o#KeMDgjlG\gFIhOadroIbn\%=-!^`Nh%liIO)!anHm2.X#?%!RTdM857X=[AVjKb]=g&.%A;J3$!L$'t>8fF;oBq>;Cd'2X`eJ?T]ZKt2gM2XARj>dY0_0K/Xtl7>C;VUl+-1Y<I2qE7I0NRi\<"Gjqqq=GXeL`;A:_K=Vn;gf%_*0[FZ0.1p;V%dQ]?;r$QSE%^rFOd8d$pTPP*O0#]\aPeP$//IqNAHEk.(N:ESE?9LO?G0&?4MYjokN\l6psOL1Io]*(t;_GY@;X%-Ji%V>KOp]f@[=0R5_\?:3J.(WUHZBk**0)Km<j?OFn]Y;ekuS8TnCebJ)'L7ZeXKIm-Fa?BsWQjUE)*I?"^d9$UTi_V_pT2FfeR%]u1+\I&=ZXq%RPCZ^s/GMdZOk4]h;>Pqg3EE\)H+7iFNj*n3P<,-rH`*M52q1p.H1)DWQt8;;!-k'Z$m+nq%nZfiLQLu]Hr['g%c%U44GDmE''N^BfQ[afZhZf(o_G:9!XmP+2m4?Qk7M0dQ:i1t^/uoPa+I"scQ2Aasq=\bJ3PDi2J``31pCf$^$,"sd^Sin>?0\'`T+%DRl<"UQ4`iC?sU;-oRu@9Y,,"SDJPmEHZBIiL4cJ+`G@4ktKq`(TY=&YsW\Q8<ue6Dh?bG]aRK9nmQ<,5VBW>Fol@))sN@$BVb<H%UP^lm/cQ0FQL[7!@P@JnrcumrpLEG2!scAac^Va(qY2d:]G>3P&a`?+SVqo.-TuZ/:ID&&HY]<67DuMsA+H[ZM`(-=kHe\NSdjMj%!$S(dYquR'5&\#]DBk@t5G$GfLJ<GH6,#a:]1N6TCIeKj/W0PhpSZ*=-I(Vtr?T4oF=,(ql>K`-.alb7>^Y*D4V)]2ZhBBpZPF>/%![]F-G%9jtRGIhU^h/X`?Sbrh^!/NG$XNjtA[0UD/=hLOCk4/H8[%\nCJ-oF5&5=PN8-kZLd,PN1R`SbHEGkj"Mm8ccJ7."((50Y%EQa?4f0d6n$&8@t5+M69b)9>dS)t8#1.8^c^Cs;dV$emBX^Wm&rWKbaeK'l[AE1+QhX#WEl<Uk_s.X;^Dp2kY;>FU&gi(h/9&dkV%]0=?e#>[n*f4At7I8C"F]ps-I%DQY6kb/GGU>=W?<teDRd-_A16S;sY]a8YE;pL1%#s>)`#B+(cEjRc*PWOW(@.oTU"F]^[^.5YJ%Y(#5RB7^2no"&PtpFEjK#+)*E>&?hsD@X^0N"nGQT!,`6oS&h7mdC;5b6?4_Iq`UM(E>(Ye?V3X+2<M,fi9qNBaOV2NF\;.ATul^%K#Q'i1\Wh>KsW\SOugW*e':)EBo>?k_j:#?.jAG*h-u(Foa*(i=$m<W0bDa=rPUeKAp4"Dgd5?LaNO#\aKEoFHS]SPnWRR?'+Xu:%7>/=U-)8H[bCd(oU?B\_gG<HkkW@A!deE64DGCO1/cgcR0_\Ra\MElYp5Bo><U3Z16X0D!p@Y$V3X>0k_0gR?A=`'3'Z;A>9T!h]%9X9kNYnIP+]<dDPSKo"?Y"8*(ZC+rs,SS*818L:5jB*1!`YqJ/m<EQkHm0Yr?"N')L>M:pPAb)^'GK+!_a&BF:T-+OmA.)MJa?.d%*\jl5+GR.ENQ.mQMBUDLN+."Aol@]\CFJ)9[*W%.e28>1?"ASrL>LE6OM0i<rW7b#n9ol=Z*UMm_?XFL?Msumla-SY[]AanD@Hac%5hBYD'/7@#OG<JOlZn[sGCmd%]j2>dm^J`G2tFM_2td(b_0h9C"u45d64D$UT@a%sTAClI5<@VBjPC=]=ij[97j*Z#,7PNR4O?%R%d6QSmH6gqJmN.;YF\$h8%GG!2;iA,H`+$hQ9lCHIOE9th0umJ%:\:&[#s%0?V4^O2i&Z[$1@t_pD:mao:Coh;3BnFs5.]\0>E:oR%&nDQgap/p'f5Fhi#I-X\oF*q!r!qEu[I`Mn=:ViL)H1KkjG9JhKO$N@odHXD>_d=l>2r%M,Zeh2+;QSX@@p<;O3j$m?J_5CB0IZ%%c6AV(&@.4#j%Tc$hM>U/Z)mF"5h>$[Ti]k64mgj&pcUXiYL3P_Don*QkT0_,QOh>sBG<M6(&fm4]?5kF/U]@3$-%/JVgRqFMsG()%Xm6u*VU(W<q)f`\#/>f4-52pY1'R)%G-]?iRW0"gZk<="`J7-k`uhVAbkD&);l4sl,,2jjOBps8es:hgFGQBW\uA:?@*tIX\aD!7%ZnO&s;`8RBr;MY81[H9Qonm!eqL!n3<F'Y;]cfb+Bcn"OLVm;AoDu8s*e2CU:j,^o+q;6=7?>$\b8YVlHt+j'Vp);mnI8.fTtUW?%<Ff>(;&^-[.9n1s6UQSjrl%rTYNEuo>/'c)5N^[j,!JTW+s","oB$hOkU]Z)Iq^f2hcP9Ur!E(NI=I!XX:[X!A>-VK^[!)Q,=#::%g0a[lWP5b>H./S9Os;t>m0f4*3+)YG]'K(@>I()R)cEuLI2R15`Vj^imT80%hnD>Y(d;d5N268t)r6.]cZ6AIfB;M&GT.M5+#^m6%qh>ql!PaG6(E^)60[X0Ces?$O4Lu^ggLd=d>K`];,3(FA$2^2t]TMRE-I(lZ/?UkQX)43e&gou,--M]<r6=?kmRTp6X8=)@7,6Vi%](N,(^65TE6V_RO!u0hf4rBHk-?&o:la#*2,5650a5g=T\?2TGDK2@I(@e<Kcl3)CqA_Ak914Nb]<n=j)FsHHU*Cp&&le19eQ&EI%)?$o:!g,h&f8$/ajQf1]<V#f+)j"?:6ai<;`8YgF"fmqUqo3*403U[4`U/2t>'sE%+mXHfelYu6LA@QOfMt@?%VmL9[]48uUPnZr%da"6$P-AQ]$equ$NlnQ2O]tIsIPG8*KlG.6ZTiHQ9OBhB?eF>uqc!4&\8cmQh8Q*Zgbe%ml$aIf.3LD"JBc9Z>M@,0j]4`uMSrdV%I[,oJ>'fdu]4Ro];J452=NiRiF5HjPCHec1#pr1+S/&//A7<3[qt^6Dg4B,JW`AV&je>Q/;'Z`A)DX^lPOp->;L5K2.4spL)L:l1%mKAX5\iV7N-ub<'hX'7Fk\AVR\fUagif8eh(rZ(ja)#03hsZ=Pr?V3YK]Smt5"'S=,Msth`K7;dA=+qZ=[TV[AA.g0OH%=6Z9_\^%Dea:0_g&9nI3UIBrP%fg+$Jple^UQE0)n,jm\X&[rLPlB_A`86Z`CZbX1T`GMC2gMQ8O$3>0<"9A_goj_Qko<2*Phn#0=bGot15b%cj%]AWCb+a3Rmn!OWd(Ue@R-sadh+`Pb4#IQ24MA1[&,Z37f4Tb*&ae/K*!uPOD&+&%/lFj^[_l<VtkSR-Z:A\$bkQc"8BYU".uI%e,YDim-5reH,eV`_.:a=;)eAI;pfG^qZV"aQ2B^EI9X0cCV8qBd.H.W+YtG]$)U:=erhZO>BdOOb/\&EfW[lej6GNm\`e92dmVo.%%$u^_1EL(p-"K-Z8kd<NOQDpmnR-,nG*O]W=@3/.KEm2^9gP8*#nOMOmt?HXUmUWo<'nI>2`Y+`)YR/u/B2CJ"3s)*>.1@i2IpIR%5)A@fjOpFU(E(WVn"Y]W>:8+UYM'_H<t-`AdX@1F@844s=\DJ5T36Zgp8IecoI:rn[KQN&13/;d9drC(MdS_EP5]g"OtJaaL*b)k%fG\_>aSBN:"*R/A^L_EN3@[;"e;00H1.*RP87)u306nlr=lD8\A0c0G:M1#>O8]X10@E.56Z6]oSipGco.RP$(m+MuZ^pqQXWcRZ%_3/E10AjH-ela8f^3fl&pU_b6?L4\c]4.k<iVWFHJ+n/qUL-pC[ACQQ=Bc13.<<1>P!5dFfuU9Ai"nUp2g^$;^6\K4iZ<P?_c`9G%@b@:$PLO#F\<<]R9hG4R+e`gFEfaYYDuPhW,_5T3^]#%T/3Ie3`8Kf-d`rR&,OR%fX,MqDoHkA%8b.^c=Ve6/q]O#9^+$uTgWXZG%-=<l^<2$Zta4HBUD'=u&QT*56q0^YG[hOq`fcc)]9C.apFBaRoB%oY"8:$8T>$H8NMa!r,Gj[0s?kB]9ZV%p8L1!R\JIKe%9i`e*%`)$eoONjtCRLs>[)"Mo7&WPH:@B[-ILdl4XAD5g:LtEDu&Y!.(nX6lY-3nZ'cEXL?6hA<*qoh&T>B4C$G&q>=X3*Ha\O]K4g!=+u%fKKtOP)V3Q;FDe.-"'.t?`^**feM&b[N$2-Q!WPsf9UsEf++88>M$&!1ga@DCd/I#bph.Z7ZJ5>*7XF<eibulZ=BbDZn>G'HEH_3%H<8?X6\]./ARnok>t3Dn,J/oA[mr@pq2"YU)mm$DVA;,:aC9;CR-biL990i,5P`_%cEMR-n^7oQDt`22R2P1IE?fH(mTW,sFi!db%DB\smkR0E,h5*WXjM]'bdOo%[9'B$#]B1\TZAWPSdL`^BM-(DOQ^EU%NQ%a7P=fgj4$78$^pY%+ocVskmeD1`;j5G<S[`+LI3kHV%Nc8"5.3P<-6_lehPoX[&9B3a:DF;I:eC;:_SK`8uc^=VS*O`BIjqc-+SF%E]PO%<Q^+mjJ?6_)+#r[3WmH-KK)rF(%bue!ljC%jR%RU,:i))C4BRUJ-2fGa%h\gG,`\@O"slFsoC>bn&P43YNI@EZP-_gSk<\OV$=a-s_2FH>]>+geu+`@)pu%:,2V\Oq(aH:rulo-GD-%r[*bnZ?V5_?T)9>7qGcTaG]MZr8rc=BD919^8c*&D@JU;!RC6)=rG2]-*)gupr$BEi:36H;MO-"aq.^6("cONe2%@>.58FfKL4^C%c%J<`S9q!Q*jjC_+]f"8,77N*W/&oipneh9o?#T?lsb?P0l$#QdNA*^E_LD%]lKdXpE\\l]Jrh=?aiq]o&5$JI;\hcde?Hb8@Xon%di6),d[S2Po39=,AQRR+Xedtk\3c@#doBGp-R/*Pp@6j*CfJC)YjP]\?*DrM<0:[_E?rD=-*ro=r!7Bom49\$-RH)-BjNR<Yc<D[%XJ)A'XS#V!ZF(hj(NsBB<AiMi\bL;'LX)L!2b*OqL>,HWh1Om;0Y;7]SPlE1A6[g5Bc#H_:MVBF$T6TqljFQ]eln6-HIeSQjms)K%-"0`N[.:(0mi`"'"6h`K%`!O'b\SR8j\,I?d&&'h2;*d^<f8'\$cLB+?";c7CSbf=W:Uh=rqe:ORRAEa-G&*.-e9-'-7Xh$rkh/o%`#<r#Mr4Q(MRAbJB>$#2O`i]t$]tIRj[7F3:5l+jLUXKt5`h-+,#sH3TnqnnUgqMj(J@D%1JGCgKuIk%U&:::gDYCEM`R"Pp'0Al%/1-9=<Gm9_rYoIQg2eC_f9cHbrt(%6^Ag8X\peo2HRjZ30U.k3#qp/5m&OtTfpCOk$f?FQQ!IrG0-8eooCI0h*g^Cjm2$D!N_f&E%OZXn/B^-Y6>Jb//W8EE,8tdn,mYGdA0YaVYaY7W^+;,n%m*S?j>O"kV%IHrRX,5_2q,KIpCZn2>lMn0ROusq6A,\f0o'Ys6p&BQa%)1d(tl%_?AALmWs\_e;op.M.$(Wil'o%!;s$lLP:#HV:k5.&hB\0(Q_\c`R6AQRR+Xeds@Ik)6_rRgN,/&[5G0MU8ED!t/&2*(a'%m/S\Z!7om*OCePL<GW/t!!f0TC`V=@'t9r6,$3I%#<2_T>MMDhREgJU]O(D;70HZG:<?cnj(I#mPmpsNHM6VoMT]@Y`76c\9%MBV%986,I,;F#T:!`=Z[W7OI-(X;'?76H;gVQrKEbjpa%i3sG^GO.)s2Otf)nK7hZMXeOan_i&@h)Z@q`_Hj$'ODbmsj*-+BMS#e0kbD%@[ZrkPPk@*dS8[2h.`1i%nSFZ6!GjXC47,DWF5U1\isnJ/F'[L>Mq'eBtj/Wd\C`DH$:9F&[7+.O]54<a;sp/^>N'Mg#Cp!.AGX(%j]8V!Q?ZCBf`s8(?)-4=_r"!?-GRX#BKL-Md7_&`Yrp4e7rQW7.*M@)q\o346dkX-o1JSEh;1L[q<<rfN>;8JGqSo)gJr=;GMQGC%jLGZhNq@H1mCf&SYK-%D.C*SWa5g=d\?2SD2kM6VH"n^%Be%OM_n@6;?.gsUY1DtXSq4#53+AJfm.?+UgnO.>6\^7Nm=7cO[5MP%%f[a9Jd^Cmp<KYIA#hVRK>N2umo^m&1^M=q_=i-JQ%N`m$ZB%Q)>V,d%,gFsK+!e\>7n[$+7/Mn7[_:!CM/[fGg5G$Q#e.9-7H15i%Y6o(kAa@U%`3rH@DSIoUhNI2%p"ju9e[AB$?B6?nYs1NTOiL1>@LI2u2j)2RWkG.,@bYb@Oji!3ge;Hul^9t(48IIs&%r9i+1F<W%]-t5<FrP`^MbdQg3S@E@aa=+;+0Fr3Y[Kn^@n`iSDM(FW=3aYgb"$W?#t*:,,Mggb$u6pX92!OHId+"<gi$]NCM_YSbaTSe8#si4%iYQ(5cFuC+][b"YK/-mpj)Y\:*]7Rgmpq@hF)CZ"d!%*fNE7uo<P>5ZB^Vg/Oq6k1C!NgSkF&_A._j+qDCrQtfe#%_N+fLm)IR)_%:":M46^jmDlNWZXg$,rgV0`]am=jerkq;jEX<Bs2k-,e&2"TMVadSc<]k,Muf-/g92JR$kRi0mV;h*Cuf`7\L(2D5YVA8/d`j.)c%.WpGCoHo@h74O^N6\^7tU/0G?QXk0J[%p.QXZN^SmpiY]Cu!UgS)'F><b82(PrF/%E>-8^)q`nq79^.%^T,r>:/LOV[k%%.5.1"s%OS,6DQ>fR1M%63s6^k#\!NT98$OtXeRt]_!MJHWkG*NNk>'cBj2pjd%B)bN1dZ33eHs<d*O728*?LkN?/H%3)_47jES=1/..SU:r%CB`p_G;j:H=7,BP@hrk#s-CCeS,-UkKp$!<lYU;$R\FYPhA!LZdN+NYV5*aMhV@+MFE9kD^GN"HpPm/A)TsuJAOR$6Z6H25IRnX,%4T@C*'s[[H.4[/:s&dF$"N8H?9[?;=Z6GTaCh6$d!BHAZO\o[C.q/h*<`\:N?hB2XP.%C#6hVlQ6@?mi!>@>lqhAESbaRqq2-I'X%emK0Kj>CEV"iOq/_b:NgQ<Z,-m\6_YA+GOogt'iA?-J#4+0L_ogTWp@l'h>VgbGoWE#CDgDsc?%Vd@_2hYjtY]-3>g2J\:R[JT$<%Q3-X@Yu$#l53n!3F-\5TS9/hEY2qI7@gZ;j\?2TGDXm'2H.P0E+pqGRBk1"VW+fegXjo8N=`Q8K+jJk/Tr=*eJZPftL]@;B<Rg4V%haNM-o:e_J$IYY<p'1)^7X%CsWf]"*W^bmqU5E!Z.UT,hoSntr1nTilZpXme5j;;61s194?,=829En4f3Pa5f)S7EaNff'rVp1b"%^@op$hX*o*bq54Co2qg8SH*#DB^?o^[l*ei(\c9I??+PR4l8eXbc[l7BiVq?Nb/#S-hF;20l^+jjfI,`+Bul-fn1IbRB(-5"c$9r%odMlMX.:MNC[$tb\97PuVr#I)(YQ=#Tf9Tej4(I,^Rc;E(b+"em65Q,M#"_:hNV6_X633hOhA]*?);--X<@bYh*qUVO7B':[8m.:%2b:"XW4,X**[k+CYcX`\3Dul\>945];'hC--HV-0$)$JFmF9n&@n"_tHh80OE$F0L%IWYNil.O#LJ7F$:P'iBrZm"8Uh@s)@=-R.%30DOAj@AdoYTGOt'UZl3)-[Hro.:#oH@FN<i7N;=q-c47lK`H9K<"EiPq)I`Os(k=I,FO'/[`'Z+8.hlW7kJ%pQj\6U7REm*o<:/%;p-BKmUH678mfBRc,AAX/Rl:e!nc1PV'RR5WlQ:F)!!2&gJrAfd8Xo'OfiDA!Ga&!0/QXH\mFU'C//+QP[.i&f7r/KCmI6o?>8,S%f0mhpaU[@D4%B7tLN/IjXT(#1EL+8\_LA*VhYf.R^\I]Pbisq3>c">K*>t`PVR"*\2n%"Ug^h_*6d$?p@lGk/)_5:_?*(^Lj5!fb%m7l$t?(6b>W`%a,/^*sL<G4&-X5P!:^a$PTARcSf(#E&Ep9K?[hcL%'=Xo>X@fpsd@ZNkB;2@@BYt#u2.)[0\fV9")<+:n\lqrU&%.^;Jip8GnNNS(!<HSf2m7dSNY4W:Rq,PL?>*hCrY'74h1O&#&hM*3o)`ut'm`#aQ`@h<tq@ZNhA0o8%?Z,\-`R)C&0fOGP@9Oa&O%m'2@0(9tn(p/o6Sms!q"Rh*f\HuKS(6Lu8i0'i/$KDFFFbQm<=4u`eZOq%&QE"7'].,^5,%e^rhdN72-4"p^W)=P[Q1^eP=]I3Hq%(=7!>Hd^1IO'!S!.)[0\fV9")'Om+ilqrR%.^;Jip8GnNQ.ViEHW4I89'js@*^9u-lX4D&7]b*qPo?o*,?F*J8tB(`'.\37V,",A%M3U-,dNDR/`(GYaBb2d(@\lAl1l.DDH"n\2a!CAG`#b,p@hO,>@ZNtEZ%tOYZ,\'^=Mu9!o3B6*>f?5=`:I6PoA$1*a_tStG$Y7J%2W5XWKQHY!?k-5S3EQUN@-9=2H^W)D-?G9j*+Uf0)=P\4nXeMDJA@r<4h6aqJOdP'EYZ57G8UtM;2@@bYt$,6W5KaBfV9(+<+:n\%m*UVP)R2dWp1VAcNS(!<HSf2m:@-Ab4Z]i<-hccB*hCqn&:4gpO$W+eLcksI`ut'm`#b,p@hO,^@ZO+I0o8%?Z,\-`=Mu8=fOGM?%/7OZ/m"(a@IaI]1%sjfdHeW%?DgUOM4jX&!kP:=7^CKtG;LZt7h:UISq*BLP@rEmZ#NPN;iQP]b^+l,qN8$:G1P9]E`niMX0q8?)%gGak.J8tJ+E"4R>hq7g$h:VU"bn%h])ggJA)ggJAq8'R(58^kJ%./Ucqo6u((q4->kO9EXHXPXC0sh2*mJ4T.4[0dmD[c#aEVmc&%*Z2BL#NPN;Tfk)Ih\b&Lj7\J+4YUd2(to)Pp5Pb/0Q,bbg&pC/r*\<O+,ntGK5l6e0Q,bbg1(_A/@<INp&4/c-Omb7lntJ\HTRYg%h/>X+F(8U=KV%AH^`EeFc]*K=&pg-0U$&s@YX_%+F(8U=KV%AHE"4R>h\aW>`pGcpgqGM5",tuU_RP#(3!U;0kCdjP`c)DADVl;d%P6p:CS1nj,$01`L0Q,2C,P6AEVk.f8m=>lG`m>bDTl1A,JJ!3'(npsTkc]W4Pq[+5(g77+p5Pc20Q,bb=pa6_NM2UkDU/XLp5Pc2%0Q,bb=pa6_NM2UkDVl:7$01`=iDYAKqo6u((q8[eEVmbk*Z=#3NIa5JXr)!am#c;,-tcd>g)/Hej,27(^`JngSsahpR<Y<kGb1=J%SsahpR<Y<kGb1=JSsahpR<Y<kGb,f5p5S#N@,.>0`pF__3P`.Q@lO]1[r2]<!9<dC0lGkcc2krP)oI"8j7\Jk4c+0*c5=$/%.?cH%gGal\^pnf&BFg'V2hq%A\:%k#%uf7%LA&Em4_K`.2hq%A\:%k#%uf7%LA&Em4_K`.2hq%A\:%k#%uf7%#50GjDD*8Q0-kEg,]57\%DD)j9D[bu08;(;?KO.3&?:]`UE5cL#@#omi7_.H7d8,An3Z(tui&]<+^e0=UUP8K<L%qEspnNQ<UP8K<L%qEspnNQ<UP8K<L%qEs%`9i8sm=iLGKuEA4`9i8sm=iLG*t7=_`9i8sm=iLGKuEA4`9i8sm=iLGKuEA4`9i8sm=iLGKuEA4`9i8sm=iLGKuEA4`9i8sm=iLG%KuEA4`9i8sm=iLGKuEA4`9i8sm=iLGKuEA4`9i8sm?PWWQ,N'T`9ii.m?PWWQ,N'T`9ii.m?PWWQ,N'T`9ii.m?PWWQ,N'T`9ii.%m1i]]2?rlR\72g"Zj3`ND%,f_.n1IFHP"N0'$mlsca+81ZP(Tj'$mlsca+81ZP(Tj'$mlscgueJ*0@\DP.82g\@n'8]oon=P.827%gqGM5!tq;/&trA>TiVl#<t_3.&trA>Ti[3"IhMD*_=12GEI0!OHR3ZY-#n8XEI0!OHR3ZY-#n8XEI0!OHR3ZY-#n8XEI/pMHR!NW%,B8&TEI/pMHR!NW,B8&TEI/pMHR!NW,B8&TEI/pMHR!NW,B8&TEI/pMHR!NW,B8&TEI/pMHR!NW,B8&T.n5N"(cAU.eB!ME,:c6C%X;EhSGrFZ-2WB!?id!HAGrFZ-2WB#MrrjI^o5)A:CrGp]`:IdjDJpe<D^94=,]7NGDJpe<D^94=,]7NGDJpe<D^94=,]7NGDJpe<%D^94=,]7NGDJpe<D^94=,]7NGDJpe<D^94=,]7NGDXSigmj)f>,]<&rDXSigmj)f>,]<&rDXSigmj)f>,]<&rDXSigmj)f>(q4Dl%m*SCXhFWCW8VGqlK\f:RhFWCW8VGqT6N9X(?O&qKOgr)g\@n*9]p#t>PBEZrer`!r8*XV*WKVJ#:=bOg=\$'8>iltm.hR9<'7[A&%J$]l=ZkIqr'7[A&J$]l=ZkIqr'7[BQ\@n*9]p#t>PIS;i\@n*9]p#t>PIS;i\@n*9]p#t>PIS;i\@n*9]p#t>PIS;i\@n*9]p#sS%OLT_#\:'IKI?:seOLT_#\:'IKI?:seOLT_#\:'IKI?:seOLT_#\:'IKI?:seOLT_#\:'IKI?:seOLT_#\:'IKI?:seOLT_#\:'IK%I?:seOLT_#\:'IKI?:seOLT_#\:'IKI?52=5urpK=YUh*`Ft>JUHqq>#4Xe\nN7'H49tC=#Osn]nN7'H4@em'RfI%/"j@SdQl-T?%he`Kt;h=lFP7W['d,$uAU'_`1WOS-^Lqs1*/?LZ<U;%3#h#5ho?OHUGb[qu*2@0DjH&tpeH%sC&@!41qc%V/1]biH8(Jik<NS'dM%]BhIgG@JAS:7Sel9V*C[Qf<?21V:_Wi]JeFf:Rn.5$l#g3pL0`S$'`:2C@SN>)tgB$d&8td^kR:XVDkD"m"KWb@q!&s':+&2R)cf%2^UHH5%bXjGFo>&`k/RaBRFKM]f[kb+&:"Rna0l>F^g'`"1DljfY'*n)BV.,MoLNV`hMuPIu49(c_La(e*"sWnL8Ni;>Be_/./"e%Fc4,'F13QFWMu>T?o^l<_3a'((5)(^1*1<">+n1D:CY)9j,A*=B?+"50O=J<NuM4<IQj,VY7!QXae*SrH&Bj>$0C6ml^H-0Q*bi0%*I"HXc)^<cZhu8;&$e-tDW:sXH`5]Oj\Y=Do+]ihe).Jq_Wit,&A&h1C##tS%SWG5*W%tMg7A4Lga)/AmO1S"U/'_R1K#-3mtg*t%!X\Vd`&-K1!K@`@LjK@`c'jh&W95"Z$OQiJba&Ig4*Hb6=TQPRVHk_^\9FGe>q?GpG>.QE-8XRuUSS"cN^*G&R=XenBu'\`o[-k]%E:4W1VI4,R^#Of.;bQ0<53s_%)K0P\s043;:@ooQBtW8g:P$O?h4LI=nb.4eF]+dnnb+frhQF!SX7>n,:RbW;Q(bMXU%.h)54oh4%Dg1S'9FeD0c;u7V]tO8GHtd!%G<U?if,B!;ZHg)eemgb<Jb@m1l^42Ejj3t4Or)6<5Qg>cHh=T#??>JBDR8Z33VFE<X7H6/nh7aq%*VVp?qR:0Qa?BL0^,4n7O.Ke3;#BC(m'kSC/&h5C]SU#1%CoOW\VAo&//1CQRF\pDMdY.1IP0*hUu]"MNArf%2iD`J?Sfpl?Melc%::o5H[5YI)9pIs74a=+)"#I<-HM?Q5m:R6td8uSR[e7]HCWR483P;k)J+nc7SW0b=/Fi'O`L6e9?H,1L6LR]i.;LF-,f5H['@^"[%R1dP\@lE0&>Lqllf+QuHm\EqO@qffKiKGcujMpU<IYeS<e+EGI+*(lBld>l="+B\_COWXGF&)T-D19u6V[hATD79;;kLduT>:X96%C?M-"k8^\;1QZ[jm`n'MI\"F0)j=Dba4/r=m$hER?Z,5S^a];-Afs%'JQi3OoO,D1*PGdch:*C-)&V4_(/E$GrnZ5?'6aL\1[NtT%fmFPsQD53U#5=W0Ip+@2mNfO'2-M%AM8\"g-P@jTnTEXo4cWfPPialfppuco]h3BPG=m^4OQa:D1_0QI[DYh2d(,A(]%/QEM6?/N%qA8(YTba7G4`S(lI43B4+,<2MDH7(GlX!<Y%^$u?nd1W/]!g[!-+'h%`QYT&LfWPYf+9lO;XBi]]AYfA&mAB,CJTqc6_Z.[-?41q%abb/BU(cs1M5tDFIb..r?$fN)86!81o2NKig7]%l2^PK,4kOO@8Yc59GO1c-93_PJI=bcGaWCcpXQr#L8$Qib>uO401SbN6eo>SC%H5uAZ&#Pj[\#Uq19Zg8Y`pB&D#$Z/rWLUHOmgH`cfQtePXfWm4fQbB9g`r55h9tje`S4TpG\QJGc$k#a0X<q,l^$)';?cD$Tt_9_%ZY=a8$<FM&PSq)6Qk?r2#SoP1i(d8uqc;OQ9)('K$JRGck>$<8KkmDh@S_2_\f=4T<Ocgor$ni>eBARga7>dXfl<beG?10_bdCot%nS(T.DssT!/X.O;Y"`fGP\!m1R$FbV#qJ>dNe9CQYP([Q2950$_V]eklYFAp6WPP;/EJMSG'qc8,.D3!^[">_hCQVT>P(pdHtYt:%cHe#sL*jb1Ie>)gm570f_sX9+jhk6gd7dP)SCq3qWJV:.;@6DELD>;aXcTFX.6^+CQ;)d^lA[a-5q;CcnJRLRC179hHo<=3>I\20%^lmZ?e?i1`QeCck[HT1oFYSERda`!RhF^kA/NN&Je,MNoHB#Dco#BdAcsREE[[4b_P=F<MI=O0BjR4k>&sdB.>j%h6p8qIH-SJg[%,AFs,P2G(6E3JcFR+DE$S.-Z*BZN>L`/Y"QZbNaaiZ&uU0WB3J+sr(1<6'*Ok(lQ_fm/_]ZOeKl'&l#;^*R@DLOYDLY1&@!K^7mM%6Tie[Fd6Q@kdrR+2r,8F&R,YOQo<MP51J2+I^Js^`K;+GGZ.aU?)?4I.8>n>Mt)%qG'*T@4X@;O?Eb&-,(GN^2C=Rdo\h,?h_"=G%fu!,A?c296%U..E^0;/QZ)1]YhUm2Hc6;)GR3lRu5&;J_CqDI/YtMhJVlIT,eqfPn;>M'dCeSG+Il:9:$I-akA4b=oP,jLZ2WIg*%_X:2kXtIGV9rj1j7]X[;\<APXO/_E<ftN=eg@FrR"abNA[Xr?'ji4GP>fkcg8YAe.CPT$Ul9Le2TOoi]^)fH=?0lO9B4R,)d9d,/%.dV=snQJFIg=]N6rJR"Z7=45-f#9[e3."lU*qJJOba,9:+\Ss(52hf2krsLG;]Aschq1mg]Eo]]nZQ!%%*J"(Z5"=*4Jpi.qlMr.%EPSGuW`cp5b8\pLJb*MV[P<[kSbqQn_ZGf\[nGo`$aU!TS"[&O,Hm]8e*kV,$-P+*'-#Sec,ORF-=F8EU[qb4[D<Yk$T%lgb!I2;%&f,-^jpPg^<TOfH?TrOI.$#^*YFlmYUeE7G7Sr#YH#NjDr<dp(%rPdhJ$Qe<'%WurGV=kjbZG)9]cam@@i;NFJnQUC5eSnI)mK&<%ou;r4^toIK)ga57DeoFb>bKqU"s19>]s7;5ou9&^^]j"_/`;0fe/Lc%FCGbcT\^O>!uIn/_$0+`Tfk(eEarbn9T@gEg1(\@?u"cB%clSPm\M:J3,kf%'aGllV0K!l\BTGUKJZ4bN6[N3UA>tq7\M:<Y`RMtgJNYK[7W&Y$;'3/8`RMt-,5KKY@VXuD^`GA,4Y!<uhR*C^%QX9t"93"ZSg_a.nB!bOVUreUIV(*fdQAS7t)ad8,dcAEp;OAN90t:G'+`i1UjVu)tW+6Al\U7mH#FJb&.OLL#%-IVSb;Y/sJB?ml%_n3==]+pOQ2hlN,DJS#EhQ<@(XgkKQ@qZD.f!mHA`ut)koZ3#c4YT%)<(rA.(to)@,<(AN_">^-Tfja-#Gt"/%./W1OW-Z7/7K,`%O5(T)ULAK0`kWY_6$kF^O5(T)ULAK0/qFQ,d+\@M%.)@Sg7r)&jMntV/YP<GVFPM4m*RLMEarL<QI-`_dj$f+p;$=ANM/LkpXtAs%fnfCUM"fSYpXtAsfnfCUM"fSYpXq6[Ht,,@Qq"gi([%HR3P[KBrP(;sQpuPb_06ulbQ4T'T4esa?lJhMOg,G0-S^VY`9G&>[l*"N%YO=Z('(jeln4psIN^oH:G.=[E$6=&.P?8.#2'+%If\s9YRhPM`@hC6M[`4L[#!?j/j&M,D&$SsPD2fosm*2<c[`4<CS"i2]O,hs5%O&G]6d;`CN<S?5W,d^(^D2fJ:HZ\&o\-5.%8'bk0NnYJ5GR-EN>N6G>Yn+2HDJM@$-LeffN>k63'OhU4H$81mG2ddjid#_,H$81m%G2ddjid#_,H$81mG2df8NB+e,`9s27m[_;aS]'re`9s27m[_;aS]'re`9s27m[_;aS]'re`9s27m[_;aS]'re`9s27m[_;aS]'re%`9s27m[_;aS]'re`9s27m[_;aS]'r8ps00a,^(7TFrquQ+!c"O,^(7TFrquQ+!c"O,^(7TFrquQ+!c"O(qZEa8)QZWoKa\n5pGqe%,4n/FoKa\n5pGrP&c,:Tr]1m"M8\e6`9dZ92/Wi)K\IEkqAulYD2fK%.og%)if=T/Nt101%cWQ;j*uRanOEiS7gJQS#Ot:hnOEiS%7gJQS#Dq3WnNUTH\=FW>;onJnAWXEm*<1(\IUN^WgeNn0.>,S+jS5?&8DHt#s!d%(T/&sm:6,?'K>d0<pn'm5s!`T=m=W@EK>d/@%`9ic,m?>KUPJljP`9ic,m?>KUPJljP`9ic,m?>KUPJljP`9ic,m?>KUPJljP`9ic,m?>KUPJljP`9ic,m?>KUPJljP`9ic,m?>KU%PJljP`9ic,m?>KUPH5ZsZ>)5<WmN)m7['nl9sSLjM<?mUk;eC^3JloZM<?mUk;eC^3JloZM<?mUk;eC^3Jloj%f.W<7-N^)T/&uk%:(I+LjIi,#8VBhKqDm::?k+kWs%1Ruf0GAr.?h^;jS5?&8_d($s!d%(T/'!n:6,?'Mo>#Dpn'm5s#IVpD]XhTm>JpMMo>"@`9iK$%m>JpMMo>"@`9iK$m>JpMMo>"@`9iK$m>JpMMo>"@`9iK$m>JpMMo>"@`9iK$m>JpMMo>"@`9iK$m>JpMMo>"@`9iK$m>JpMMo>"0%G7X0c.n5Gu(bN%&[)e-P+tH-@X;EOp@^LsS\VTFZM!)=)kIHE3\VTFZM!)=)kIHE3\VTFZM!)=)k=L^6.>u.3jS5@Q8DHt#s!d%(%T<_#C:6,?'Mo>#Dpn(0=s/?OKm?J[kF7O<X4=WAjVip(il@X)',mXCu#NPMM%f30cTV%E8$p64]hq6[)4"'i@O,^j?Z*Cc$2YOT"%`npDKH-a8.j7\J+4YT4[(to':oSoP-0LDrR7d(dYHXMN@0jLD;o[gq+8f5$U%'>2&qai^OG)]T1j7\J+Pq[+53UUQ,N8)Zr7,WW9%qo6uT\;mpNZkBMdD%*P"lUVu4V[!+IPNNH=cl_)U.a]=$O)>BnJc=lQclVD3m_&p?&+ht73W>q>j+$?HEI0"Ps3q;6p.CAFWT<iH%RP8W_jS5@90Q+)Tpn(0=s/?=bp.CAFW<qVY8riqNjS5@90Q+)Tpn+!/DQi-rT8eCb'#s;X"+);Pg\79UZj4V<B5\4J^pnf&BFg'V%p\l,=#KH-M6[N4r^+lu"`pIEr&+IBEI:Hq$N8$:Gp;"1d@qZC3g\5##Zj4V<B2931^pnf&BFg'VpYKSj#KH-M6[RaKdDjNS\72g"%Zj3`ND%,f_.n1IFH_BQ40sh13SpPf%g&jLaNM/M^o@t2:K6WuUGb,d9c^t@=FYK1#Er8_X(q3Rer(kQS[o[VJ:F4']e;SBo---&8%N,a1ja8]+Zr(kQS[o[VJ:X'`c=*"47---&8N,a1ja8aYJEI0"Ps(i,2JT:S,clO%5mk'c;%uf7%LA&EmrR;/S*Z2BTC&quYN8%.)%!T;@]4YUd2(to)Pp:[jJm=B9Sfn'Pn0Q,bbg&pC/NM/KhDEejLJ-X*])aes[gqGMM#KH.D)_UWq\:%k#%pUjC(to'nN:rQFZj3`N%D%,et4O6\`cV-II9K^Wf4O6>VcU'b?69NR\4O6>VcU'b?6K30/r(eWZs3sBpG&mLV/L53]a8]+Zcqc5=DC5\fe3`/<EmRT.#Q<.=%ic]@h:G!i0-O9TLEmRT6,]4t7rR=0np-Rd4JoU\-clOH!0-ik;,XO.06Ji%H!"T^9(D<DXN6lK/"oO^Jk>4_9?:aEh8F0YRls<6L%?:aEh8F0YRls<6L?:aEh8F0YRls<6L?:aEh8F0YRls<6L?:aEh8F0YRls<6L?:aEhE7JW3BFe?*g)/NG=,gt6<MPP)4Y#tc/+GeR%nNJJn4tH.eag")qJ,>0(F>aDQ?M(f,pn'eMlRoK*If-\<a'[`R^/KTV9/2c?T-+!m^](9urf9;B_r(FfQ_.XajhLcK5Q0h2rK"_m%Rih[irq5/urTUNba'\l2+$P1(Ief<ps6ah)p4"O\YC?@27/ujKrUCtYr7BE8oAfZ:?iKo2ro9XLo,n"o5QCEnJ,_h6j6+1,BB)S0%^,QPdgu2$iogVDhG>)WoPuc"hOe+tl;]MN9.@SRM%&mjR%ed&FRg'c`Oh/mYHe71M,UG%)>1":9)`WuVd2RGal:j3[XhD"6_ltlV%L9gToO;h6g:Sd^V`fSsN$obsm^W7u=DA^s#JQ;a!32')oA&o*p=`4_ZiFi*sUgN2;,1FPn)h.cFp3rF*RtB8K(imMm=V=<A9*5?t%K)mnFXYtph$K6_+<[,Y4l.4R+D[a283<b8hhbGH=09M^Y)aeN,StoSg)ohW$nYUkH=W39=6T6?SHJ[m5%Dm%G>9hqMh+7^&[Z)Fh%']1g'gcFDKK&"A->:82[bY/,b>=bQMGTt7eM:<;:,_9rFaDDK+(o!mYU0kKgNpp96L*tt+P5MgEHr&`^%i[lRG]HQj8WrJ#+ZDLo%,2LE)n6=t.B1/PHNa3h8Q>,96AK+!SGa:b/("=11YC:s6o[gp@1!5i>UhloZB:pQ6`gI%BPT*!0(oX?`B;MG]dV##eK:-s::a.?]%Bqd]#1#OsH#;^A95#"-?,>E8a2o`AD=+1bmB&ZB"Bqi,KZ*NX6!XE>3Nf[#u.JsmJTsSbmlkPB93`hbpi7l85=@QbE[S\5_XQ`]Y%LS#bF>Tl0Gp56dbp>$Pu_hGIW_=rB;=W_@P4M3CVL?i[],M`DW'Tpj4E?n7@,pZ2!Q4lip9bYjS9+saYFOG'm)a\/HU6eVPIJ>6H%_aV9rn[,nr&pD_ll$?j\$l9#pWQ8EI,2FHLL<OVY0MN7pdn0SAD[;2nMN]A.FHRtciu8)0Gi&&3OB>"^W1^&Z9>#"g@mCGKTle_@%nY\ndAYOg>DNPehB;Tag!"9C+TgkYL[W6d`aD;K$G]N)h0Z==F?P`f^G]mJ`./G<Srk't5A"npI-8)E<$p8<g&=k/>4*WI-064tZ%Zk>s#:(rt*dj4q8,6#_/lH1=9as-*X8\.ZTpa_9$.uU>V$PNq-p:a<=EE<pUD!C"rf/JB,LpjV9>?Q4#=!Cf'Bb>&j@D5H>`*HMj%,Zl8Dhru-W:u;g>,OW]@G@_@pAJ&?^iF-20&V"@(Iq@Td[V=](bJo&M/lNi#Qka.d.l&&2Ap>`l`o*mm1=O^hUE7n$S=t&1eLNo3%/b)of_%lH<A4AtPL$f:>F&.^-.LXQi9-j0nSV&LD5VNgU/_V$QCP3O%<#0d1$eLV$L;`R`hm@>[.?WE^[.(<BN?PWgb](rYOVI`#%cs9eA)jO0!rp00en<hBe1A0*?rlW)&h%Iid:ZmOoqM((LnQ5F`*H,PW/!/%Z*]U_iZ_%C!FYS-1@@gM'6t0</::;nTa:U@clm14#%"QbP4/7`rj>/XiP`*ldsZ(sh,'XA)i/`NuciijsXVCWpg/0^rB,,UkN%.t(GM2)U%MuFl4/3i3[:pSIl5NLnPLR_Ls2F#\M"G\:d%r=Jc*G@a._N1APuO>BBKEf0HUc67U49$(To7=IKofaon`a-Ah2V<!E%s87rl9HTKsnj?/0I;gJ\5NJ?uLR`J_J<l??EqnmOq/Z93%/L<WKJ=I_2;XsqXb(ed@8g_/4njAF3I8EPX%lm8T6%:2Eh&uLo/S.;jN1<T?J@gudSrrr46WbFp;DQoqE\Pon1*_R^5+n`_ZEYZ>%kca%Pr0@2QPd3#Sed+'R=>JQnOrn`:l[rA5IR$QZ&=cEe[]\Zr[$2"CZOVP3I`S4fA;<fA#N"BWOVp04qZ/Dt5NH);LR^=#J=)MA%hO+56R.=2&D_E8t>r;An7A5^7,uJ-n%n\C@m'b"HqD%dh#D/-[3;K)fo,\u6,lBrhARidjjco\9S?am1L*"OXO;l=kq*@#PA&o*B%Q:uK$C^dkJS<=t73;J1J9-u`R2?qqLasm/Q)QEeN]-SDQ2YM0mF$_T-PJ'C("(mC7/.!,B2MTGsOm!,$PamQMP&Tf$A&+$CS=WPO%aU&uR6l_MG@S0DVI.`/%8g^$tEZuPt68^&::fDDObl*ME1NZ_3-E1U_4Xqfn;fY2Z,q%]W,[C;iA/eNDTVcN2R1YK+_;\6;S#p]t%0kFjR)1:$LnQ6Da,<hfiZ8#`V4I/AtQ3:qp:8k%+%%37,jV./da;1tL:eo[\1'9OJ6cb3+9V4RFfaooS&=O[LHUVBa1l%&60lj(<%+s'B$*_Sg[ARiLajclBh`qRWZMikig"7r$D7R@EFJoa8@,psC01>0=+'<V[Z$jksK[[]$a-'M&@3T2lUN?L4p<,t;k,q%]X,iZ*T%'N?j@+ICCl=qr1./Q/'_S"cF9'?VaC6Y=8F8LULtKQ9[[.&UkiQk=foiUTc>TVgd<e<EYVP`5$&`l4R0!O5>:'XDd5BB$+*iicme%VIWY)1/Ut*EE=p,.iJ)ej@mLV9Z3/h`"]L9E+?tJW$rV7P`4@)1>,!]1G&NA#al8Z,ni"elnlqSpa_c2.:i0]cD[UNiicnPY@LU2%a<&<jM40UT?-1#ja[AhE6qk]j9Z\][AE'b&>l2V\`KX'7PYB#[N8@1H[@_j?7D?KtR:n%;BIW,c2>f$],@X870dRJf,nk2CUUNR5%=lsd-gO"$19-HAM2hoP4R$*;nP!Me;.H'qaL7C!=p0]Qkbd#D1F)3dipF)/+1?R5$ZK3lTU9S7'Z&igq#D7J^^QOGDP)5\q[Yo#3%r09tRPt^8'9]QnnXYaZ]=im)A.iHrg2?pW>&Q:Fs;_iYL)-;;GL;\n6P)5Jkp9!INgm(R?Pd?^a^*.#V]TnH48g[.;g$tLe;,T/h%<siqK$B\6-cIcAu8h!m'.Mq*I'O:MYqe'sn8kL7!9#2NV\WFe&6DTi4Um-I/8g3U0foE[!@"spT1>/@J0^KO2&LF7b-&$0rh&$\J%hF\qa56[;dZJ@GUU8/KF<XN"+.7?]U6qAK!%q`+G3#Amo;i$T7:e;gc'P=YE3#D3f$5$1]*okigZ4J15loWMUHpdf`1*]C`5p`?=%-&!=k\1qA\KTpO5id5c880OlWD@Dpj_@2]oT*5+80_i^(il)Vk`K5Mqq4,4pIUcj$8g\1+D@@L#Z:d4pU9G?+Y`PF)#:!_EDF@/I%6qeacX>bmh#2r%iPX<;&Z4m+CUgN1P`0:<P[^cr$V%A-QTYFB\PZ!=%;M^Q8Lr2RQHKRW%PX;aAJm(bi=pipqT$O*poaN'#,,Gtt%V%hpnOL$GrL<PI>;G^"8`*jfZ>]/oQN9iRNjODA*/bgdi/!WXSPt3@bE6M"aX63(p(:%4oA&+%:.@"Qq(&aDT7Hudcb_VK]M3L>e%hqT&(,?d]./Ys(3Kq-,m0jmJH'QQ>!`fM).==WiC.a_/80qK<dAjf:k`+,dFV3&SY2[4hY-!Ene*m6PX'Ru%bLmV(;9W>s?+_QRJ%%%%V]V%PMZU;K;m(u6#A6S7CI5sJZW3K*N;^lA+DPt3G@[k-]`B'JW@=\6=73QH5O&E?d7Yg&GH/<sm"jLis$+ZCUCO>B]lL>7U*%;MiFlM4?oX9&1?E"s:TP4I/V#'QU)9`o'$,%SJ)X98+A?>`"hGM3q1tQr8dY;T[oo-#-$uC.^oPV%SQ[P-pp>C.]de8gS4E7=V-H%It\m:\hPI"`0<k6Q:`,4E\-RsJ/MBpbiGSPK>![]8[7',R*peX64T79(bf`9nYZsVV4j>EcCI*8l1WB'&M^*o0r5I:V%JK:**Km.%A4G(5L2'=*%LY;MG%8=HW%$f3gPm@4iik8FpsY%h64Uuj(bd0E9-\4:%HS:EFDbt"6h?'38gF=-.i=[5U8BcAVDR;:1ub_r,,[8^%;]:csaPjcN"(jqqBrIp,'_LK51nq63U9QP<?e`Yj:a7/W_toesS,iJ5AN&PQ1b>r<0o5?<afsV$b:q?tE[,m&,C2u"KU#"H(37Lc%`k[m.9d/[0D[`$GJ#/:hT17<EE^'$5J/N?.)Hm#QQsna*QI:STda234AF69,.A[V*V%G/1*-JnKA4EqjL0@3emE1ieLqGHML4r,R%3@&l[aG`Y=NOUKu/H1aKPW&fjY\*.9TNb[u+\+/'%%.\VV%IpJ&U1&`/Ys+4V5'@)M7_2m]@'PLksS2/6qcc49BjB#+U:/K%%.\Z%V5'@)M7Z+"KAIG!,?bF7,'mbfD`Tm9H=KL)81EUFl%;:2`*MUq9BiCOO9;C>"s:C9hF].n9$\?@G9Wl*,,KD@Y&puGdtsC=;+p.A%9-Hf/D[`#,P]A:MhLBes09Yq12o[hpGJ01CgJ1]`E_c>J+>WE(BBd?Il$,6U53HY?plHHb=ZZ(U3`/j;;,fSR<'!lU3q6?6ag(5$%;<^JG+_Ps?N:`%`Ln`=SU-d0!hACXp47QK8;,fSgfleR<FQ0ZLFBU`Q;``<)3mgked8S-Ni>XRb9`UrbJ9')QmHHE7]mcYSoPY*L%/eFfl"k"@2p%=MH?WY`9n/D(L%6XD0$G6R,?NZqhJZng`h=o:2?fPJ]ENf,Hf6c<=2=C,YpNhmI]uI`lj,O:S(&/^AG[BEjARlOS%Dr>utZ$NJQr=+,bHp$9g+4#;l_09R89u1Z4%f,T7Es@Y)L+W>*;fSlPbR$:AS/b_Z74-561<Y>Rp)#eta=K:]rHYt^(B"K^Qj(^$%"\b<fa?HDS"m7%:b"SJ#!m99qTYCtKd8p$^+e@7%W4/Z3B&Qe+b`W"m"EV;;:""e1<\2<4!AeWR\aS6S4uQfg/Rf*;CYSu'g]D*C%7ME_-).HrR6e2VOMM<;"BZV81oSeT/Iu^N.(EaqZRi"$()$0%+ZYsToN7<0l#XQcj/EdrPe%7D$`b`c+EWg;(@*1#c_Q:qQ6;%:E%hgYuu4YE-@>As>SQ=<FX!>@0$YY4's>5D124j?.b_Ch)a9td$tUraFMI"'C9O=kr"+>,uGN)Fqm.@<s^C;oG%,,QA]2:$A>!AdL9%hMc0=!b@gi!(NnE);?u?!A[RH(7J"AT)@i[$sQKMT%)l/j9]$caq1=)FkW-YZ?q']-+e`QXlt4H/n5V=@<G5t?V!_9TOs`I`U(;o%04WWtjE4gbh(W10on0XtORO034%rX*L08to@PQ*L?M/H.8Z/_pHu@2!4"siQ/?ek1bV3ApFdQV"j1L,*2`WItK9ps+2X+Q=Fk@+,%ak*L*lkNm*9r;!>SN`Gk=%o)B;_+`k>LJmfqBW$N14>2,#FTa.T7X9;;k#'H/#LXKM&"M(RhIRE54j`9e*3?*Z1Mr1q*Og+mao9#%0O-dF<`j4\S&ELc0#(2`LAc/,<X3f96f`AtQeqfj@4Z]f]F+"GB'+[rB;Q%h8%Q#J0!DD+Gn67ndHU#/bA3#VO'Qroe6A1/p+E['%b'A?#fbW];LfL>)nsd(b1<#C5Uc!9[[as$r]$'GRD0B2bbiVi8MBf4)0%d^#[tsb1AOF(seLhMEHHE]X[k-Zo&5(U\U&)^Y^iU-f%:Md^;J#bcS(;0RS67TUX<1hg;Q2alUQ.YOO<UT%dWkWEtb'tdtMVfV`T$m9=@9!1oW2de%J^dBQH>LPjT0Ou/Z5"H%P_p*eae-GH%`R]`9Mlkl4>ApeBY#o@DppeA<7:3ZU_l`!8QOi7Y/Y`,D:$]K9s28$Qf,hX>.Rj"!AlgFUL\J-T&O!d;eH+nj[au6%m0Ta0gUj7n%CeeXqT1a;oH?c.)!m6P;rNaU_4S%Y][A2t586*SLC%X]6n>l;D\f`4[Qmu2(!;/)5;Aptoi_UQifDVB0+Al?Emph$K7YH[3*Y?jS%Fpuq)&OOHT+4W#f,kP2K6E0f7Ki!cDm#$L($DHUs]Q@?TTl>$"gPWK^Vu4j,&lE/Kj0_k<352\(G/%;"n%C$ma7`c-!(+eGZ;\R3%r,DY<(C;>$SZI/'n_L:eqhZACmo]D:l!FrOhmsgM,q<ZMoXe\6g9KIn-HN#?rP$Y<XYZH1YuL#@T3hUOUZo7=<GpXM4R_g'3o;>)%lm4Of%;1r1pQsjag<XiY'E62<K5WVQpM4&iW5n!nf.jA*lO<JgQXkCBYk7kTl)q9kFe.r$>#j2GL9Njpp!c!%f42B:A2RYj^FQC_%lZB&AC:Z$A".#r-qlWf)l?mCu4*I$/6TB7WSLKa7X4jiC3-L^\!>sB&$eJ[%VaRRoQeO-c.Lr1QFkmd.'iVMMf->G)gn_P_BRk!0%*\LSqfB#k_<cq[m?7*m.]M+^gb?V*Z0)$0K\fWFbBd.cN>p.P"V:]J-27Q0uFdF$UfK.W\mJ.O6d`),!X(>Qq2BCPrl7R(SGGp<=%)m_V/I#toI`]:JqeQo]PZ&p#<)uE=@N^T7[['+%H2eE`WQ'm,Q[B/]6Co4d!Rm$p[R8'<)0$N)Sf<VRB@!TdFZfFlaP]bfD9n:_:%fk7Lta*PGCG$1PO]e78*Zh*]NkFsIRDTTob<Y5dOT-nONJ7p(ggi6nP23;mL\3oq4gO''W138jMb.=1n\fDDqiCbtkR>6T%^ic8_%>m#8</\_Of10Zq@U4f$MW-+t*#ruWh4*I"Y.M3.rB"N_KA!^=.T8b@US<K9[\p%X:nZp=hQ[%=K^".G]nVfD=Q\cJu%O-'I.2K'"%@bk1CPB%-9G"e9_Gb$N-5']eg"^<Nh(2P.#auM7ZmC7gPGQsHh>C*1]/`(f6Y.]$YdGh:k8D8DH(+nCSO+EQdZtT!\F0'2ap+E\b%bOi(50!i5koWd9pB#WUs7>nYC;c^e40!f$58s/,8kMTA/oeJ&kN[e5Foc0R'>pNunECnR;XW%p8(+nCSZ)&uGM#KH&n3'QNP$\US%mdlc_OF<.&e5;,OZS@r9UkD89m0U)ahLjt*'un`"c,t;-DoH):j10XHfsM!P,+-_\HNLRRWn>anM'fOSca6nA1m*dN`/C\%YqV,0%X4hp.4JI`"ZT#3tGA5Ugm>3<u0tR\/=kT1%:R5U-[50CmQ?:rMnJ,>?@ncqHQ@6R.WGF,-+N0/lTdVW%9$1(s<cP/UV,dFb&O0i:%en\8h`LkMW[#.Xb<Ee?!W(O,%H)`X#3kD?(Wo#a8H%i/o.^/]\r_R:Y83poh^N7mtWR\-$PZDq,9kf#a7VahH.O*TE+\'Qb,8Aiq%kP2_EitTMEZq'.%kP0IFn'7m=@"`>3]+_L'Q5q]r-J^,=jgpY%]M#m:QM2N/_B%,(%Q(3NSA[MYXNu:OW5EO=)4[WM?T7rQVeZ#\%KiWGSA9l1e[,FfG4cXQ?o%.AuUlk,D>Q'`[()ZdN_QUGf'N3nd16kg`q+RV"?;efqq0nZ)AJO'I,*72c)atnFHA>6=(>lMu?ggYe%]VOO+>L'q^HF&Mro(</gqIU7FMR,f3It(>F-])1OWR(G6KfXR&oCnSf.BV_g\!0p7WlHR1hqut\gs5XqY7kgQN+dXjpcVE6Eq@WV%/^R\?4V1#KAa:L&b059n>G$&!:-0.fm^Ao]5L8cSgsW8a\j897n,CM@"6<g<*DGZ\5.jNH\6E.B<SXl*fHok?>IcUqC\71TenbfP%?o^)KcYpjP_NIG<_6Y[rYr-d!-)j,gSn^j&H6XK5%SiPVAl%SAfilon^0"EFeZVo$j>u(R$*b,H'4Nt.-cC&<::LJFWDher6V6R-%G^*)mBPRl@MAC%<iCZ[^Zu?:d%X(41?jq0M;D:QPDB;Of/_V[_<tak?9E(`$e^b;N's629UHLmq1CjeM(2XMSA'q$Q+iGq2.'kW!%7@AjtYKAEn9N>Yij>O&2b?q6J.]pbU=#hT*L>CR7#R]N.OG)$n`>>Z0HD>mS6r3;R?;ePV[=b1g>=E&34d]-qSUM5UY$%!"8kG42%0<$>3Z'pjHmr1%I`':,u.B2fcC.]s;H':g_P?6As8P6]G.9T\%aX!%i/`5[">o/lceS94MW[(lSEP8C->-1eIXX)P)i4/WM@X#ZX%b%-CcQ/C-PF]Xi6[VAaB/F,(iZm8qe3=;*\\otE6291ASNRqI<g"!uLAQ`;M/@R0GNG<"/ZE134(+[Snl=NVV0&e?oZ*LI6Q52!o%lDeSj\pEE%CU(1HY0rV?QF01>\(n9jfeqYr79Nn60"36EN='^2U9(LSQ_^P7\0>4A\0sYR/ln6["q0ZE2m.h#>F%-:/\P7hef!=5%>"@GWq3%%!.m@QNb]0c"gp4$3('KNFAG&rTKAB:d:YeoXpA!iDN\=@rUaPa/H:GG&=`[jB-ruP^f1/Ha'D["rjX3?D*DG%/r;1B.%>%O\1gcDPpY3-M"e#KH4`N$<AdSRJS>&.A0.TWCrQ^Z'rdX$X[.oI[/.Z(?6'e@bu.pOAJV57NCX4$9kA]:[VqP%0(<EcFV]cCY*%11'aPn1*sp_Q3GbKiO/.'is"UC+>(D0bu:e3jSZ4K`%FHnuTQu=fa`d079'iT!cQAdUM<@I3H"#Gue3g/[m]TQ1`d=F]nU!K91`n%>M1T2I$1]8>c]Vp%l]cVi:qnEZ-'/^n6E%MCCg0.Y2K(AG-TJs^>N:u1i"2<]h?Nbd#40$onE+!h%^o:O"\$l[k82C0&Pm(I`\%Y%lAP\]lEY`!5d@o%4l!Q9Wp3.\`<rqtE^Imu&eX2#@8pb._PkK:Ki*iS$R:-+>#!RSj\K;ar!q-VB:d+?X<+G'HBbN.>!*n&=>a.*%)_"o'<I8sgRW?Qr8W1X`*'9^[Ro93o_C9iHR],Ls1;sU(p8ic#/sGm+B;C;1:Q'mJs6+&Xf#DcYMUbu)>bH+QY1Asr<3eP0Sm,0q%k,RSeQ!8=;HDXTFMQ<>p<35(o&'q\q,+]lVXQ$8C;&-.AlM4KB<a<m(0<9?:e`?uSSo85I2f;<(fjMebXfaYCbKFtMMUu&A0:(ku%B(hru7mo/eMO.OipG(F]29S!RiT8a8`TsX$k?u?t9tq:<noFKF$a*7>/#G(kcHMGQ4Zr=fX5UIqPhC0U=9>P7=P8_;#qs?\bgbtJ%HE6o,&&>C?Vm,dn0o';jjeK,_cf(W3QM08J\Z@hV-02A3jiaD=D7R6BONcD]&;ldJ]!88@l@bFab,Vp@H(:0q@L:/X=aMi#fnX@=%Oq6/CFEP):QW7t+P)P_)BkbUK[j<K&02+o>hJr(SX'HA=91_aURgm$oW['YB0=_u5mF/.GH*$F[H,\;e9IP&.="IZt[G0MCX@C8I%B"XQ47`m9NSQ*C`PZ^".Xb\F2;JgABbcp*Flu"4H9^[YpZj\ZeL);5K@u@T"R'B8U%tn?1.Uq,pZY["g.U^9=Yj/=V%]mr*@']Mu%J#9%&:Ltf$g3,<b5JoD5Lu"**0\[d-QOjS[BEMlD\-rc"BEOR-%snLIJ^o;(k+@/1XY7o.g%,lcd7-h,%@D)6EQkr7P891Y&L;1d%28hER.:SeUH#I=FV)tH&3MV*Vr2hbqbS`G'>IF)=m1O,&/CaS'Qu>?5lithoQu>?5bd[hXOZn.[Tfr[u\HU29'KTj]!bU3r$WTCm%B&!H"g]HW-,ondZ&[QrZ0b&7i!p88XHZ,3$,ol@mYZ8GfqidZp+!=Tb[9n]!o`FjD6s3u5eUZ3H*d+Cd&hmk/#ie>j0>_r;DB"Cc%<>BIR!dnk;/bQM[pAjOP'5&N)f7r*ZT>3aCY78)iek]<(2>$M^H?p)b]n[Z/HmnJ&H?p)b]n`396Vm0EVt\QeHg(8go_]bVILeTV%LS!BjcgRRjpX&MYkb3$P!jA<\pX%*1kiFu"inl!b?:-C7TpPN#n_BLk]urDM;X:\h/Ak>"E>jR?mBBL+B%i%mr9_,[6)dt@UQB5g%V.,js;R$X#+luHl`A/F0<l,<hKG@D;[+%RT@2Y(l$Cd@8#e/_V":Vj"=a,Q62D)<KDHJ9fOM[lkG/=^3E"l4&[+rNqq2HOV/8SL-%@8lqQEpJtEJpss98#_,[_a5?>i]/`i##?FNa:6IP.<Q2>==``GUgN2;V+jURKGt[7.i"-$]itL+?[a"(=_$"2;C>m9ak_hs`"!!Q%6Y-eGYjQ5)Mm12f@YN;p/ThYC=SK2P7CZbPZ%J0fOW.=b/YqrOBb,6"=K9&rb,;(!aGj._/aYiAV"A@EV,'a2O;k0I>"J&0dLtMn%[8.10I9Keugp$KdBo-d:DFhR)>9_k,qIq,':H&Jb6W3liOQra?A\noBM3XA5[nO;?q:!bIiJ.#$9>fe#8h5Q6(-jG\O-;#p&8kTI%lsQVrjG!h79.PZ7<^874!buGfM]jBC$PY\9(igj-$n6@'=s_t.fP)MJ:.rJLAbQ-J2_9-`rti4SZ.&<Z^l<RnXV#H1E5Q._qgX_I%nR>%se#Rf.J(m,@%N'42?;)SM$n6C(=sr+0EnCt-8KZ"_l^])&(q:$l%82Hs%/Lut)cf'QD%LSenan1pIiSs3nnerX=9nLM0`Y]7%KN^nie5LJj(h4lA67S[p2@3mQ_2q9fV+nf9/"rO<,iFER:^\_+HBtL[)qI>-U_[]ZMf9m^%&nqag-T\Q(@#&\HZSMkK-A3197N$B%WJ4SI2:Ss/8brU.U`+"4&)i8n:_*d/&eB_]6S1G5DHIFWOF!j<3>f876.A4.U6_AV2_9bg83tbR1Z=&l;+o5g)cf?YUa#),E<gA`%'")gD?)I6f\\XW:'+^rV_@9/4Q<jhUXGL+O:"5BD!8NCm6;!l9:,J;44;^umZui%QOOC%\PWg[iGVGrcBd'<K:R29*,FSuhI9J]%%?qBP2dY[*Q8tTu0^4`&%0Vn>T+f.t1JdlZDRL:Qm>'_FKM!!-Bk!D\4(/k"9oM2n.c(u)uV0Be9GVG\50YJ-;7!%Uk\bm`:YCjZX%OH`-bSL?4`-o%8@0qJ(s*W;GTM%UKFU`)^eQqim5:-=o(a5W@ZoTi8EQ;7(<:-=o([G4D&H:oW39.,$Y-QYr/*_[r-9.,$Y-[JE5%*_[q&9IG-Z-[JE5HHRFWb9.kM+F;3RHHRFWb92,S+<JaOOP:n(b92,S+F;3R*m@0.)pqjod9?h&>6aV*#4Z(*d9?h&>6`JZ#4Z(*%nR)RK>6`JZ#16WZd9?hF?j<3`<sI&V#16WZd9?hF?j7Bh08&I?KBOn>kUhF30S=U(KBOn>kUhGN/VA:%K6T)&kUhGN/VE7=K6T)&%GVFd6/VE7=KBOn>kUhF30S?GF%AL<?U:1Q*[g_94%'jViWj1Q%OW2\P#4Z(*nR)RK>6`JZ#16WZnR)Rk?j>"_7OQtfDtuuO?O&s<%`31%h/SPb2Ae5\h&/Af=[A6+>Op4cl]PQmML=RUkbSZ!Pd9?h&>6`JZ#4Z(*nR)RK>6`JZ#16WZnR)Rk?j>"_#16WZd9?h&>6aV*%#$EZ!6uNr2D](r])8q.FAAr3n]k%bgAIuOd&.`@c%qZHfAJ2[f'"qih%qZFbAeMdg'"qih]k%hiAJ,Mc'"qih]k%hiAJ2[f&eAT;%'r+@mQ:^_78bA<?4IA]@N$cqV-IH$Ed9@sf?mbDO-IH$Ed9@sF>:/lJ-LkIjd9@sF>:.a%-IH$EnR*\H0q(LKR7(t]6uSL3K:-8h%BG/!i'"qih]k%feAs*n(8bA<?oTi)@Q:X3+8N`A3oTi)@Q:^_78N`A34IA_4Q<VM>^+n\<oTi'2Qq:>;-IH$El7G4,qXGIN;.1gA%CM"rQM$c%q$8[MG1W_]+,Tb/T.a0.fbTn[^,Tb/T*m>mUb9VDW,^RWZHHRQTbTqMX,^RWZHHRR[b9S.Q,V)?JkUi"^/X,BMPB\dF%X;F[+[nNO*9VT!iik\=J_+^T49VT!iU:3hU_+`k)9VT!iU:3gj[nNO*9]El>Z=:1shQhsoZA@ACL^19-MU<Vob9D8U,'qEV*m>fL%bT_AV,'qEVHHRKRbT\+P,'qEVHHRLYb9A"O+s+rPHHRLYb9D8U,'qEV*m>fY7Z6I^Ms)aNkUh^;0T3"L/Y]^*U:2\J[k-OT/E4Js%U:2\J[k+8_/E4Jsik[1?[k+8_/>BU)U:2]5_(;=i/>BU)U:2\J[k-OT/@&`lLu,FnhQhsoZA8alaGS@hHHSXgjX3?D*=Nf!^Le(m%Ae>bi&J\mi'kWSNUd[D579#XC<1$*RQpjuA76Hr+er^`q>8GUj(=?>%nR*,87p8<!=[[126uQ5HK3?-F=[[126uQ3rDct#2=i>qq%6uQ3rDcoJH=i>qq`.M2\DcoJH=[[126uQ5HK3;a(BG%ph&\V`f]k%cdAs!h'7J)m7oThr<Q:3p'76HrkH:rZ_DlF94/Z0@]`S\D?%eHbc5qOl\C+4OLi"XMO:Rp1;[`Mbu!\'tZUQMR92Eb[<p^UR`P+4ON[K6g1=:iE<DH8,$.'r1VuhGPHF>O$ie97>0>W=O;/og-9f%5,bs?#PFC8Oa`E3l7MZp]qmok\'tZUQMR6Z;]f7!WXnAHog-9f5,bs?#<eINi/1B[:iE<Dl7Joo(iVhQVEX4[e-GZ4qOl\C+4OL)%7f#PkW417]op23QrH0f)N%.MLd''DZW\F*3'rF0n_UMdO[K8qp7E2:Ce-B!@qOe0o+7rt+KBl)$6+s*YW417]op5HI#?)`:@-WAj%979WTW=S8G)gd&@l[p6PI8Fj]&*bb>6+s*YW417]4dc*(MG\duDlF94/bMECV*=+Ze-B'6l@XCUI8Fj]&*bb>5nBhV\7/DZe6D3j%H:rZ_DqPtV$.4C)&*bb>6+s*YW4*`TqF(pl5,bs?#PFDZT\`Qge6D3j*__!$`Mbu!\($(W922@oe3lEdKI]MLU#'h4>e[`pe6?Z3%*_[b!9L?Fh-Ic776G;JgcnFos''_&+U#&Z\l7FlehGP$W?kV`V25/l)'C%/,U#&Z\nR*!4(tF:c922@oe:`-@9uMZU\7/DNl7Fle%hGP$P/N"+N-4pb8U#&Z\l7FlehQem2jsB$',h-%56G93Be6?ZS]qm(8_'E8?WX8?aT*5+80P$+l9MNI/8[sd['<3`DTaF^3W\?:B%%jhl!-D:cF'<3`DTaJ+\p_%>8fb]Cu:iE<>op15mIZYT7/N'6Y;A8=I25/l)'CfHCXr,]BH:pu2\($(W923?W8[r5/'C%/,U#&Z\%l7Fk*%jhl!-DB9o'C%/,U#'fDdP#W.]qm(*>A?L<V'a\rC*F]m6G93Be6?ZS]qm(*>A>?'9YqO>RS[q%$2'UQ:iE=iGVBG*N+t\m%V'a\rC-oV1-K;ieikZni>A?L<V'_qGAE(F9ik]0"[q)5BA>6PDU:4[m_.6e*WgW'&RHQ5jkUi3I0H!rNC*n7"-@/<3H:oS+9I:fS%-@/<3H:oT29-t]R-6>i-H:oT29."sX-6>i-*_[o,9."sX-@/<3H:oS+9Z@gBRYfmaM;FDPhNE^#PB"R?B%1%6'(jelO>0U@1@]-8%nS9mW@5:\g1/VI8nR+-B?ntSf1/VI8;.25[0JsLS-K@-bbsZKl6uU18DooqMagd@1XZ5],L>7UAP)0F-EQ+kgU:4[-[q)5BAE(F9%ik]0"[q)5BA>6PDik]0b_.9:LA>6PDU:4[-[q+L7A6^jhRHQ5jkUi4d/X^i;)-;c3-@/<3H:oT29-t]R-6>i-H:oT29."sX-6>i-%*_[o,9."sX-@/<3H:oS+9I>)/s'=4sXelQH!>p<<]Yh8dkZH6p4!!X1V5sbbfWZqHN)>1=<mX6D]$e&p[$I$>ZQOt^1$[T8n#r<V%]Hn50ai%C=.@@1u0oDBD9.&MYM77"n0Z_0<nJ9&I&8siA"t:D->7b^=]EK`$UgOaP6+dBk(;sF=JjC_QLpnM`Jp7Z$0Z_0<nJ9&I%&8siA#+6;OhL]t[i[m^;+9b-a>Fs/ZlJC!U"!TIU`#roLZje36Lr:DKK1HDK0utmPOVgJqkXnN:.L):e+m+BD$Xt_Z`?5nJQj[@U%Lq+WCK2`7g/oQ6sp<?e8]ns9B'n_k]@P3JI+Qe8T$o0\,bQT^;`*AC]6)I,-\KL$dQjZeH8Au_6JsZpT/kEr('n_k]@P3JI+Qe8T%$o0\,bQT^;`*AC]6)I,-\KL$dQjZeH8Au_6JsZpT/kEr('n_k]@P3JI+;KN.9GDQ)@P1O%-&T6$WL,)4UF>7;`E].)99b<j1,Xqp%F1G'&h&_%AY^QB;(k2E)L.-.^neL`jnSlFbk&od)mc!ZMbK8K.OmC<#Ch8sg-L'>o<&\/bo4D!fH2SF@[7c:-kJL\.jQk/39eO=o%Z`WL>N2q_SZ"s@s9ss5@p[-PAs.J65XZ+f(H!bL"5LZh7l\E<!;m4>Tk`*WXq>=YWX."G9m)KK?$r:5J[T_NHchl!PA>f/rMa,7!%TA*Rj)1)8No1(PV-g>;bEHbD8VYO.fT:I9BqE81$2g)i<(Nm%=jaW2MQf\2m(#/GRYcNag;q4=hh,f[7Q1c@SgXGf[gXkL.d]/82~>%AI9_PrivateDataEnd