%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coplot2.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Manoj Bhatt
%%CreationDate: 10/4/10
%%BoundingBox: 0 0 448 461
%%HiResBoundingBox: 0 0 447.0996 460.8950
%%CropBox: 0 0 447.0996 460.8950
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 124 128 8%%BeginData: 15402 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD37FF59A8A8FD05FFA8FD72FF597D7D52527D28535252A8FFA8FF%277DFD6CFF7D7DFD06527D52A8FFFFA82752FD6CFFA87D7DA87DA87E7D7D%A8A8FF7EFF597DFDFCFFFD49FF84FD15FF7DFD14FFA8A8FD14FFA87DFD15%FF7DFD20FFA8A85252FD13FF845252A8FD13FF277DFD14FF5252FD14FF7D%27A8FD20FFA8AF7EFD13FFA8A87DFD14FFA8A8FD14FFA87DFD15FF7EFDE1%FFA8FD15FFA8FD11FFA87DA87DA87DA87DA87DA87DA87DA87EA85284FD13%7D8452FD157D52FD047D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7D%7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7D7EFD047DA8A87DA87EA87DFD0AFF%7DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8A9FD08FFA8A8%FD3EFFA87D7DA87D847DA87D847DA87D847DA87D847DA87D847DA87D847D%A87D847DA87D847DA87D847DA87D847DA87D7E7DA87D7E7DFD0AFFA8FD3E%FFA87DFD2FA87D7DFD09FFA8A8FD3EFFA8FD047D7E7D7D7D7E7D7D7D7E7D%7D7D7EFD217DFD0AFFA8FD29FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8A8FD08FFA8%A8FD27FFA87D7D7D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7DA87D%7D7D847D7D7D847D7D7D847D7D7D847D7D7DA8FD1CFFA8FD0AFFA8FD27FF%7DFD2BA87DFD1CFFA8A8FD08FFA8A8FD27FFA87DA87D7E7DA87D7E7DA87D%7E7DA87D7E7DA87D7E7DA87D7D7D847D7D7D847D7D7D847D7D7D847D7D7D%847DA8FD1CFF7DFD0AFFA8FD23FFA8FD05FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FD32FFA8FD09FFA8A8FD20FF59FD1C7D7E52FD31FF%7DFD0AFFA8FD20FF7D84A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D%A8A8A87DFD04A87DA8FD30FFA8A8FD08FFA8A8FD20FF84A87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFD31FF7DFD0AFF%A8FD1AFFA8A8A87EFD0AA8FD48FFA8A8FD08FFA8A8FD1AFF7DA87DA87DA8%7DA87DA87DA87D7DA8FD47FF84FD0AFFA8FD1AFF7D7EA884A87DA884A87D%A884A87DFD48FFA8A8FD08FFA8A8FD1AFFA8A87DA884A87DA87DA87DA87D%A8A8FD47FF7DFD0AFFA8FD13FF7DA884A87DFD07A87EFD50FFA8FD09FFA8%A8FD12FF7D7D7DA87DA87DA87DA87DA87D7D7DFD4FFF7DFD0AFFA8FD12FF%A87DA87DA87DA87DA87DA87DA87DA8FD4FFFA8A8FD08FFA8A8FFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFFD0FA8FD4FFF7DFD0AFFA8A87DA87DA87D%A87DA87DA87DA87DA87DA87DA87EA87DA87DA87DFD56FFA8A8FD08FFA8A8%7DA87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA8A87DA8FD55FF%84FD0AFF7D7D7D847DA87D847DA87D847DA87D847DA87D847DA87D847DA8%7DFD56FFA8A8FD08FFA884FD1BA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FF7DFD0AFFFD10A884FD17A87DFD2BA87DFD15A87DFD%07A8FD1BFFA8FD15FFA8FD15FFA8FD16FFA8FD14FFA8A8FDFCFFFDFCFFFD%96FFA8FD0BFFA8FD60FF7DFD08FFA8FD06FFA8A8FD07FFAFA8FD07FF7DA8%FD27FFA87DFD07FFA8FD07FF7DA8FD07FFA8A8FD07FF7DFD0BFFA85252A8%FD05FF7D7D52FD06FF7D27FD07FF7D59FD07FF5252FD26FF7D5252FD05FF%A87D52A8FD05FFA85252FD07FF52A8FD06FF7D2EA8FD0AFFA8A87DFD07FF%A8A8FD06FFA8A8FD08FFA8FD07FF7DA8FD26FFA8A87DFD07FFA8FD07FF7D%A8FD07FFA8A8FD06FFA87DFD91FFA8FD19FFA8FD31FFA8FD07FFA8FD11FF%A8FD0BFFA87D7D7D7E7D7D7D847D7D7D7E7D7D7D7E7D7D52A87D7D7D7E7D%7D53FD047D7EFD057D7E7DA884A87DA884A87DA884A87DA884A87DA87EA8%7DA884A87DA87EA87DA884A87DA884A87D7E7D7D7D7E7D7D7D847D7D7D7E%7D7D7D7E7D7D7D847D7D7D7E7D7E52FD047D7EFD057DFD0AFF7DFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8A87DFFA8FFA8FFA8FFAFFFA8FFA8FFA8FFA8FFA8FFAFFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFF7D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DA8FD09FFA8A8FD24FFA87EFD%12FFA8FD07FFA8FD09FF7DA8FD23FF7E7DFD0AFFA8FD25FF7DFD24FFA87D%FD24FFA8FFFFA884A8FD04FFA8A8A8FFFFFFA8FFAFFFA8FFFFFFA8FFAFFF%A8FFA8FFA8FFAFFFA8FFA8FFA8FFAFFFA8FFFFFFA87DFFFFA8FFAFFFA8FF%A8FFA8FFAFFFA8FFFFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFAFFFA8FF7DA8%A8FFAFFFA8FFAFFFA8FFFFFFA8FFAFFFA8FFA8FFA8FFAFFFA8FFA8FFA8FF%AFFFA8FF7D7D7DA8FF7D277DFD05FFA8FD09FFA8FD1AFFAF7DFD24FFA87E%FD09FFA8FD07FFA8FD12FF7EA8FF845284FD04FFA8A8FD12FFA8FD07FFA8%FD09FFA87DFD08FFA8FD11FFA8FD09FF7DA8FD12FFA8FD07FFA8FD09FF7D%A8FD09FFA8FD25FF7DFD24FFA884FD24FFA8A8FD08FFA8A8FD12FFA8FD07%FFA8FD09FFA87DFD1AFFAFFD06FFA852FF7DA8FD1AFFA8FD06FFA87DFF7D%A8FD09FFA8FD25FF7DFD24FFA87DFD21FF7DFFFFA8A8FFA87DA8FD04FFA8%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA87DFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D84A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87DA8FF7D7EFF8452A8FD%05FFA8FD25FF7DFD24FFA87DFD21FF7DFFFFA8A8FF8452A8FD04FFA8A8FD%24FFA8A8AFA8FD10FFA8FD07FFA8FD07FF7DFF7DA8A8A8FD1FFFA87DFF7D%FFFFA87DFD06FFA8FD25FF7DA852A8FD1FFFA8FFA87E5252FD1EFFA852A8%FF84A8FD08FFA8A8FD13FFA8A8FFA8A8FFFFA8FD07FFA8A8A87E7D7D52FD%05FFA8FD09FFA8FD07FFA8FD07FFA8FF7DA8525352FD0FFFA8FD07FFA8FD%05FF52A8FFFF7DA8FD09FFA8FFA8FD11FF527DFFA87DFD0AFFA87EFF7DFF%A87DFD1CFFA8A8FF7DA8A884FF7D52FD1CFFA87EFFFFFFA8A8FD08FFA8A8%A8527DFFFFFFA8FFAFFD07FF7DFF7D7D7E52A8FFFFFFA8FD05FFA852A8FF%A8A87D2784FFA8FFFFFFA8FFFFFFA8FFFFFFA9FFA8FD05FFA8FFA8FFA8FF%FFA87DFFFFFF7DA8A87DA8FFFFFFA8FFAFFFA9FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FD04FFA87DFFA8FF7DA8FF84277DFD05FFA8FF52FD09FF59A8%FFFF7D52A8A8527D27A8FFA87EFF7D7EA8FFFFFF527D7DFF7DA852FD07FF%A8FD07FFA87D527DFD08FFA8FFFFFFA8A87DA87DFFA8FD1DFFA8FD04FF84%84FFA8A8A8FD04FFA8A8FF7D7DFD05FFA8FFFFA9A8A87D52277DA8A87D7D%52FF7D7DA8A8527D52A8A85952527DA8FF7D7EFD0AFFA8A8FFA8FFA8A87D%FD05FFA8FFFF7D7DFFA852527D7DA8FFFFA8A8FD04FFA8FD11FFA8FFA8FF%FF7DA8FFFFFF7DFD0AFFA8FD0BFFA8FF597DFFA8277DFF7DFFA8A8FD05FF%A85253FFA87DFFFF7DFFFFA87DFD07FFA8FF7DA8FFA87DFFFF7DFFFFA8FD%05FF53A8A8FF7DA8FFA87DFFFFA87DFD18FFA87DFD06FFA8A8FD08FFA8A8%FD08FFA8FFA852A9A97D7E52A8FFFFA8A82752A9FFA87DA8527DA8527DA8%FFA87EFD08FFA8FF7D52FD04FF277DFFFF7DFFA87DA8FFA8A87D7D7DA8FF%FFA8FF7DA8FD10FF7DA8FFFFA8FD07FFA8FFA87DA8FFFFFF7DFD0AFFA8FD%05FFA8A8FFA87DFFA8FFFFFF7D52A87D52FFA884A87D7DFF2752A8FFFFA8%27A8FFFF7DFFFFA8FFFFA8FFFF7E7DFFA8FD04FF527D52527DA8FFFFA87D%FF2727A8FD06FFA87EFFFF7D7DFD0CFFA8A8FFFF7DA8FD05FF5252FFFFA8%FD04FF84A8FD08FFA8A8FD05FF527DFF7DA8FFFFA8FFA8A8FFA8527D52FF%A87D52A8A87D7DFD05FFA8FFA87DFFFF7DFFFF7D7DFFA8FFFFFFA8FF7DA8%7D53527D52FFFD05A85952FFFF7DA8FFFFFF7DA8FFA852FD0BFF7DFF7D7D%FFFFA8FFA8FFFFFF7D7D7DFFA87DA8FFA8FF7DA8FFA852A8FD05FFA8FFFF%A8A8FF7D7EA8527DFF7D7D84A87DFF52FFFFA8FF7D7DFFFFFF7DA8FFFFA8%7DA8FFFFA97DFFFF7D52FFA8A8FFFF7DFF7DA8A8527DFF52FF7E7DFF7D7D%FF7D527DFFA87D7DFD04FFA87EFFFFA852FF7DFFFFFF7DFFFFFFA87DFFFF%A8FF7DFFFFFFA8FF5227527D527D7DFD04FF7D7DFF7D527DFD04FFA8A8A8%FD047DFF7DA8F87EA87DA87E7DA8FF7D7DFFFFFFA8AFFFFFFFA8A8FFFFA8%52A8FFFFA87DFFFF52277DA852A85952527DA87D52A8FF7DA8A8A8FFA87D%7DFFA8FFFFFF7DA8FD04FF7DA8FFFF7D52FF7D27FF7D5253FFFFA87DFFFF%A8A884A8FFFF7D7D7DA87D527D7DFD05FF7DFFFFFFA8FD06FFA8FF847D52%52A8FFFFA87DA8A8FFFFFF7DFF7DFD05FF52FD0DFF7DFFA87D7D52537D7D%7D277D7DA8FFA87D7D27A9FD04FF52FD0CFFA87DFD04FFA8527DA8A852AF%7DA8AFA8FF7D52FD04FFA87DFFA8FF527DFD07FFA8A8FD08FFA8A8FFFF52%5228A852A8FF8453A8FD04FFA8A8A8FD07FFA8FD09FFA87DFFA97D7D2752%52FFFF7D7DA8FFA87DFD04A8FFFFFFA87DFFA87DFD09FF7DA8FD04FF52A8%52A8FFFFA87DA8A8527D7DA852FFFFFFFD057DA8FD08FF7DA9FD09FFA8FD%04FFA8527DA8FD1DFF7DFD04FF7E527D7DA8FFFF7DA852A8FFFFFF7D7DFF%FFFFA8A8527DA8A8FD07FFA87DFD06FF5327A8FF7D2EA852A87D7DA85252%FFFFFF847D527E52A8FD07FFA8A8FFA87EA8FD04FFA8A8FD05FFA87DFFA8%FD09FFA8FD07FFAFFD09FFA87EFD05FFA87DFFA8FFFF7D7D7EFD04FFA8FD%05FFA87DA8A87DFD07FF7DA8FD08FF7D7DA87D7DA8FFFFA8FFFF7E7D7DA8%FF527D7DA87EFD07FF7DA8FF7D277DFD05FFA8FFA8FD07FFA8FD07FFA8FD%12FFA87DFD08FF7D7DFF7DFD07FF7EFD10FFA87DFD06FF7D527DA8A8277D%FFFF527DFFFFA8FFA8FFFD04A8FD09FF7D7DFFFFA8A8FD04FFA8A8FD12FF%A8FD07FFA8FD09FFA87DFD08FFA8FD09FFA87DFD06FFA8FD09FF7DA8FD06%FF7D527D7EA8527DFF7D7DA8FF7D7DFFA8A8FFFFFFA8FD09FF7DFFFFFFA8%FD06FFA8FD25FF7DFD0BFFA87EFD17FFA884FD08FFA827FF7D7DA852A8FD%05FF7DFD0EFFA8A8FD08FFA8A8FD12FFA8FD07FFA8FD09FFA87DFD0CFFA8%FD0DFFAFFD09FF7DA8FD09FFA87DFFA8FF7D7DFFFFFF7E7DFD05FFA8FD09%FF7DA8FFFFA8FD06FFA8FD25FF7DFD24FFA87DFD09FFA87DFD04FFA8FFFF%FF52A8FD0FFFA8A8FF7D527DFD04FFA8A8FD24FFA87EFD1AFFA8FD09FF7D%A8FD0DFF7DA8FD15FF7DA8FFA852A8FD05FF7DA884A87EA8A8A87EA87EA8%7EA8A8A87EA884A87EA8A8A87EA8A8A87DA8A8A87EA8A8A87DA87DA87EA8%A8A87EA8A8A87DA8A8A87EA8A8A87DA8A8A87EA8A8A87EA884A87EA8A8A8%7EA8A87D7DA8A8A87EA8A8A87EA87EA87EA87DA87EA87EFD05A87EA8A8A8%7DA8A8A87EA8A8A8847D7DFFA87DA8FD06FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFFFFF7DFD7CFFA8FD04FFA8A87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7D7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87D7D7EA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DFD0AFFA8FD24FFA97DFD24FFA8%7DFD24FFA8A8FD08FFA8A8FD12FFA8FD07FFA9FD09FFA87DFD24FF7DA8FD%1AFFA8FD09FF84FD05FF5352FFFFFFA8FD25FF7DFD24FFA87DFD24FFA8A8%FD04FF527DA8FF7D7DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87DFFFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D84A8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FF7DFD05FF7D7DFFFFA87DFD25FF7DFD24FFA87DFD24FFA8FD09FFA87DFD%24FFA87EFD12FFA8FD07FFA8FD09FF7DA8FD24FF7DFD0AFF7DFD25FF7DFD%24FFA87EFD24FFA8A8FD08FFA87EFD12FFA8A8FD06FFA8FD09FFA87DFD08%FFA8FD09FFA8FD07FFA8FD09FF7DA8FD12FFA8FD07FFA8FD09FF7DFD05FF%A87DFFFFFF7DFD11FFA8A852FD11FF7DFD24FFA884FD24FFA8A8FD04FF27%52A8FF7D7DFFFFA8FFAFFFA8FFA8FFA8FFFFFFA8FFFFA87D7D7DFFFFFFA8%FFA8FFFFFFA8FFAFFFA8FFA87DFFFFAFFFA8FFAFFFA8FFFFFFA8FFAFFFA8%FFFFFFA8FFFFFFA8FFA8FFA8FFAFFFA8FFFFFF7DA8FFFFA8FFAFFFA8FFA8%FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFFFFFA8FFAFFFA8FF7DFD05%FF5252FFFFA87DFD12FF847D53FFA8A8FD0DFF7DFD09FFA8FD07FFA8A87D%A8FFA8FD0DFFA87DFD24FFA8AFFD08FFA87DFD08FFA8FFFFA852FFFFFFA8%AFF85252A852A8FD0CFFA87DFD10FF7D7D527DA87D7DFFFFFFA8FD09FF7D%A8FD08FFA8FD06FFAF527D52FF7D7DFD04FFA8FD09FF7DFD0AFF7DFD0CFF%527DFFFF7D53A8527D277DA8FD0DFF7DFD10FF7D7DA87D52277DFD0DFFA8%7DFD0FFFA8A87DA8FF7E52A8FD0DFFA8FD09FFA87DFD0CFFA8A8A8FFA852%7DFF5227F87DFFFFA8FD09FFA87EFD0CFF7D7DA8FFA85252FF8452F8A8A8%FFA8FD09FF7DA8FD0CFF7DA8FD04FF527DA87D27A8A8FD0BFF7DFD06FFAF%FFFFFF7DFD0DFF527DFFFF527DFF7D527DA8FF7D52A8FD09FF7DFD0CFFA8%527DA8FF5284A8A87D277DA87D7DA8FD08FFA87EFD0CFFA8A8FFA8FFFF7D%27A87D527D7D7DFD07FFA8FFFFA8A8FD04FF5252A8FF7D7DFFFFA8FFA8FF%A8FFFFFFA8FFFFA852A87D5252FF7DFFFF7D52A8A8A87DFFFFFFA8FF527D%A87DA8FFA8FFA8FFA8FFA8FFA87DA8FF7D7DA82E7D7D52FFA8525252A8A8%7DFFA8FFA8FF52FF7DA8A8FFA8FFA8FFA8FFA8FFA87DFFFF7D7D7DFF7E53%5252A87D7E7DA8FFFFFFA8FF7D52A8FF7DFD05FFA8A8FFFFA87DFD08FFA8%A8FFA8A87DFFA8AF7DA8FD04FF7D537DFFA8A8FFA884FFFFA87DA97DFD0B%FF7DA87DFFFFFF7DA8FD04FF5252A8FF84A8FD07FFA87EFD0BFF52FF7DA8%527DFFFFFF7D27FF7E7D7DFF52A8FD04FF7DFFFFA8A8FD08FFA8A8FD08FF%52A8FF7D2752A8FD05FF7DFFFF7D7D7DA8FF7DA87D7DA8FFFFFFA87DFD08%FFA8FFA87D2752A8FFFFFF52FF7DFFFF7D52FD04FFFD04A8FFA8AF7DA8FD%0AFFA8FFFF7DFD0552FFFF7D7DFF277DFFA87DA852AFFFFF7DFFA8FD0AFF%7DFD08FF7D7DFFA87DA8FD06FFA8FFFFFF7D52FF53A87D7D7D847DFFFFFF%7DFD07FFA8527DA87D527D7DFFFF7DFFFFA87DFFFF7D52FFFFFF537D7D84%7D7DA8A87DFD07FFA8FF7D7DA8A8527DFFA827A8FFFF7D7DA87DFD04FF7D%53A8FFFF7DA8A8A8FD08FFA87DFD05FFA852FF7D5252FF7D7DFD04FFA8FD%05FFA87DA87DFFFF7DA87DA8FFFFA87DFD05FFA8527DA87D53FF527D7DA8%FF7DA8FFFF7EA8FFA85952A87DA8F87D7DA8FFFF7DA8FD07FF7DA8FFA8A9%7D7E277DA8A8FFFFA85227AFFFA827527D522EA8277DFFFF7DFD06FFA8FF%FFFF7DFD05FF84527D5227A8FD10FF7DA87DFFFFFFA87DA8FF7DFD05FF7D%52A8A87D53FFFFFFA9A8FD09FFA852287D7D7DFFFFA87DFFA87DFD05FF7D%7DFFFFA87DFFFFFFA87DFD05FFA8A8A8FFA85252A8A87DFFA827FFFFA8FD%05FF5252A8FF7D7DFF7DA8FFA8FFA8A8527DFFFFA9FFFFFFA8FFA8FFA8FF%FFFFA8FFFFA82727A87D527D52A8A87EFF7E535252FF7DA9525252A8FD06%FFA8FFFFFFA8FD04FFA87D7DFFA8A8A852FF7DA8FFFF595252527DA8527D%52FD05FFA9FFAFFFA8FFFF847DFFA87DA8FD07FF7DFD05FFA87DFFFFA87D%FF7DFFFF52A8FFFFFF7DA8FD10FFA87DA8FF7D7D7DFFFFA87DFF7DFF2827%FD04FF527D52FD13FF7DA8FFFFFFA87EFFFFFF527D7DA87D287D7D53FD05%FFA8FD09FF7DFFFFFFA87DA8FFFFA8A8FD08FFA8A8FF7DA8FF7DA9FFFFA8%A8A8FD07FFA8FD07FFA8FFFFFF7D52A8A8FFFFA87DFFFFA85252A8FFA852%7DFFA8A8FD0DFFA8FD09FF7DA87DA8A8277DA8A87DF8A8FD08FFA8FD07FF%A8A8FFFFFF7D7DFFFFFF7DFD0AFF7DFF52A8FFFFA87D527DFD1CFF7DFF84%537DA8A8A8527DFD1BFFA8A8FFFF7E5252A8A8A8FFA8FD1AFFA8A8FD08FF%A884FD04FF7DA8A8FD0BFFA8FD07FFA8FD09FFA87DFD06FF527DFD12FFAF%FD09FF7DA8FFFF52A87DFF27A8FD12FFA8FD09FF84FD05FFA87DFFFFFF7D%A852A87D7D7DFD1FFF7DA87DA87DA8FD1FFFA87DFFFFFF7DFFFFA8FD1DFF%A8A8FD04FF5252A8FF7D7DFD0452597DFFFFA8FFFFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA87DA8A97D7D52FFFFFFA8FFA8FF%A8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FF7DA8A8FFFF7D%52FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FF7DFD06FF7DFFFFA87DFFA8A87DA8FD20FF7DFD24FFA87DFD24FFA8FD%06FFA8FFFFA87DFFFFA87DFD20FFA87EFD12FFA8FD07FFA8FD09FF7DA8FD%24FF7DFD0AFF7DFFFFFFA8FD21FF7DFD24FFA87EFD24FFA8A8FD04FFA8FF%FFFFA87EFD12FFA8FD07FFA8FD09FFA87DFD08FFA8FD09FFA8FD07FFA8FD%09FF7DA8FD12FFA8FD07FFA8FD09FF7DFD05FF5352FFFFFF7DFD25FF7DFD%24FFA884FD24FFA8A8FD04FF527DFFFF847EFD24FFA87DFD24FF7DA8FD24%FFA8FD05FF7D7DFFFFA87DA884A87DA884A87DA87EA87DA884A87DA884A8%7DA884A87DA884A87DA884A87DA884A87DA87D847D7E7D7D7D7E7D7D7D84%7D7D7D7EFD077D7EFD077D7E7D7D7D7E7D7D7DA884A87DA884A87DA87EA8%7DA884A87DA87EA87DA884A87DA884A87DA884A87DA884A87D84FD05FFA8%A8FD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FF7DA8A8FFA8A8A8FFA87DA8FFA8A8A8FFA8A8%7DFFA8A8A8FFA8FF7DFD04A8FFA8A8A884A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD06FFA8%FDA6FFA87DFD07FFA87DFD06FFA87DFD07FF84FD07FFA87DA8FD56FF7D7D%52FD06FFA8537DFD06FF7D52A8FD06FF7DA8FD07FF27A8FD57FF7D7DFD06%FFA8A9A8FD06FFA87DFD07FFA8AFFD06FFA87DA8FD2AFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-10-04T13:58:09+05:30</xap:CreateDate>
         <xap:ModifyDate>2010-10-04T13:58:09+05:30</xap:ModifyDate>
         <xap:MetadataDate>2010-10-04T13:58:09+05:30</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>248</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqxH8yX1VdP036ql6+nG9/3MDTWuVuvq4t5jGFazV7pUa6EIkMKlwtdqVxV5hZav&#xA;+caXVk+l2uqw2l3bx6W0d+s939Xee+1FIr9nureBz9WjWAsZIwxjKGUNiqovmX89riyvi8d9a3UR&#xA;mlVYLJZOMsVlqMwtozPYRK0Jnt7SNSvqluW0xL0VV7T9bvDf20RJCSWksskIt5TWVWiC/wCk8hFH&#xA;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&#xA;VdirsVdirsVdir//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:DCE858BB51D1DF11AF4DB8170CF9340D</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:DDE858BB51D1DF11AF4DB8170CF9340D</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helve; Helvetica</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -460.895 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 460.895 li
447.1 460.895 li
447.1 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
19.1338 441.764 mo
155.414 441.764 li
155.414 314.995 li
19.1338 314.995 li
19.1338 441.764 li
cp
clp
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
19.1338 330.145 mo
155.414 330.145 li
19.1338 352.075 mo
155.414 352.075 li
19.1338 374.014 mo
155.414 374.014 li
19.1338 395.944 mo
155.414 395.944 li
19.1338 417.883 mo
155.414 417.883 li
19.1338 439.815 mo
155.414 439.815 li
150.504 441.764 mo
150.504 314.995 li
118.824 441.764 mo
118.824 314.995 li
87.1436 441.764 mo
87.1436 314.995 li
55.4736 441.764 mo
55.4736 314.995 li
23.7939 441.764 mo
23.7939 314.995 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0.1725 cmyk
@
87.6138 371.633 mo
87.6138 370.651 86.8164 369.854 85.834 369.854 cv
84.8511 369.854 84.0537 370.651 84.0537 371.633 cv
84.0537 372.618 84.8511 373.415 85.834 373.415 cv
86.8164 373.415 87.6138 372.618 87.6138 371.633 cv
147.014 392.995 mo
147.014 392.012 146.216 391.213 145.234 391.213 cv
144.251 391.213 143.454 392.012 143.454 392.995 cv
143.454 393.977 144.251 394.774 145.234 394.774 cv
146.216 394.774 147.014 393.977 147.014 392.995 cv
109.094 373.315 mo
109.094 372.333 108.296 371.534 107.314 371.534 cv
106.331 371.534 105.534 372.333 105.534 373.315 cv
105.534 374.297 106.331 375.094 107.314 375.094 cv
108.296 375.094 109.094 374.297 109.094 373.315 cv
113.534 374.274 mo
113.534 373.292 112.736 372.495 111.754 372.495 cv
110.771 372.495 109.974 373.292 109.974 374.274 cv
109.974 375.256 110.771 376.053 111.754 376.053 cv
112.736 376.053 113.534 375.256 113.534 374.274 cv
135.494 378.114 mo
135.494 377.131 134.696 376.334 133.714 376.334 cv
132.731 376.334 131.934 377.131 131.934 378.114 cv
131.934 379.096 132.731 379.895 133.714 379.895 cv
134.696 379.895 135.494 379.096 135.494 378.114 cv
42.1338 414.834 mo
42.1338 413.852 41.3364 413.053 40.354 413.053 cv
39.3711 413.053 38.5737 413.852 38.5737 414.834 cv
38.5737 415.817 39.3711 416.614 40.354 416.614 cv
41.3364 416.614 42.1338 415.817 42.1338 414.834 cv
105.254 359.034 mo
105.254 358.051 104.457 357.254 103.474 357.254 cv
102.491 357.254 101.694 358.051 101.694 359.034 cv
101.694 360.016 102.491 360.815 103.474 360.815 cv
104.457 360.815 105.254 360.016 105.254 359.034 cv
54.3735 382.674 mo
54.3735 381.692 53.5762 380.895 52.5938 380.895 cv
51.6113 380.895 50.814 381.692 50.814 382.674 cv
50.814 383.657 51.6113 384.454 52.5938 384.454 cv
53.5762 384.454 54.3735 383.657 54.3735 382.674 cv
55.0938 388.915 mo
55.0938 387.932 54.2964 387.133 53.314 387.133 cv
52.3311 387.133 51.5337 387.932 51.5337 388.915 cv
51.5337 389.897 52.3311 390.694 53.314 390.694 cv
54.2964 390.694 55.0938 389.897 55.0938 388.915 cv
30.1338 417.475 mo
30.1338 416.491 29.3364 415.694 28.354 415.694 cv
27.3711 415.694 26.5737 416.491 26.5737 417.475 cv
26.5737 418.458 27.3711 419.254 28.354 419.254 cv
29.3364 419.254 30.1338 418.458 30.1338 417.475 cv
108.614 379.075 mo
108.614 378.092 107.816 377.293 106.834 377.293 cv
105.851 377.293 105.054 378.092 105.054 379.075 cv
105.054 380.057 105.851 380.854 106.834 380.854 cv
107.816 380.854 108.614 380.057 108.614 379.075 cv
101.894 362.395 mo
101.894 361.411 101.096 360.614 100.114 360.614 cv
99.1313 360.614 98.334 361.411 98.334 362.395 cv
98.334 363.377 99.1313 364.174 100.114 364.174 cv
101.096 364.174 101.894 363.377 101.894 362.395 cv
103.214 365.155 mo
103.214 364.172 102.417 363.374 101.434 363.374 cv
100.451 363.374 99.6538 364.172 99.6538 365.155 cv
99.6538 366.137 100.451 366.934 101.434 366.934 cv
102.417 366.934 103.214 366.137 103.214 365.155 cv
53.7739 392.514 mo
53.7739 391.532 52.9761 390.735 51.9937 390.735 cv
51.0112 390.735 50.2139 391.532 50.2139 392.514 cv
50.2139 393.497 51.0112 394.293 51.9937 394.293 cv
52.9761 394.293 53.7739 393.497 53.7739 392.514 cv
86.2939 367.674 mo
86.2939 366.692 85.4961 365.895 84.5137 365.895 cv
83.5313 365.895 82.7339 366.692 82.7339 367.674 cv
82.7339 368.657 83.5313 369.454 84.5137 369.454 cv
85.4961 369.454 86.2939 368.657 86.2939 367.674 cv
97.334 353.754 mo
97.334 352.772 96.5361 351.975 95.5537 351.975 cv
94.5713 351.975 93.7739 352.772 93.7739 353.754 cv
93.7739 354.737 94.5713 355.534 95.5537 355.534 cv
96.5361 355.534 97.334 354.737 97.334 353.754 cv
35.4136 423.713 mo
35.4136 422.731 34.6162 421.934 33.6338 421.934 cv
32.6514 421.934 31.854 422.731 31.854 423.713 cv
31.854 424.696 32.6514 425.495 33.6338 425.495 cv
34.6162 425.495 35.4136 424.696 35.4136 423.713 cv
40.4536 410.514 mo
40.4536 409.532 39.6563 408.735 38.6738 408.735 cv
37.6914 408.735 36.8936 409.532 36.8936 410.514 cv
36.8936 411.497 37.6914 412.293 38.6738 412.293 cv
39.6563 412.293 40.4536 411.497 40.4536 410.514 cv
107.414 365.874 mo
107.414 364.891 106.616 364.094 105.634 364.094 cv
104.651 364.094 103.854 364.891 103.854 365.874 cv
103.854 366.856 104.651 367.655 105.634 367.655 cv
106.616 367.655 107.414 366.856 107.414 365.874 cv
64.9336 378.834 mo
64.9336 377.852 64.1362 377.053 63.1538 377.053 cv
62.1714 377.053 61.3735 377.852 61.3735 378.834 cv
61.3735 379.817 62.1714 380.614 63.1538 380.614 cv
64.1362 380.614 64.9336 379.817 64.9336 378.834 cv
86.2939 364.194 mo
86.2939 363.211 85.4961 362.415 84.5137 362.415 cv
83.5313 362.415 82.7339 363.211 82.7339 364.194 cv
82.7339 365.176 83.5313 365.975 84.5137 365.975 cv
85.4961 365.975 86.2939 365.176 86.2939 364.194 cv
95.1738 355.315 mo
95.1738 354.333 94.3765 353.534 93.3936 353.534 cv
92.4111 353.534 91.6138 354.333 91.6138 355.315 cv
91.6138 356.297 92.4111 357.094 93.3936 357.094 cv
94.3765 357.094 95.1738 356.297 95.1738 355.315 cv
75.2539 372.475 mo
75.2539 371.491 74.4565 370.694 73.4736 370.694 cv
72.4912 370.694 71.6938 371.491 71.6938 372.475 cv
71.6938 373.458 72.4912 374.254 73.4736 374.254 cv
74.4565 374.254 75.2539 373.458 75.2539 372.475 cv
52.814 404.274 mo
52.814 403.292 52.0161 402.495 51.0337 402.495 cv
50.0513 402.495 49.2539 403.292 49.2539 404.274 cv
49.2539 405.256 50.0513 406.053 51.0337 406.053 cv
52.0161 406.053 52.814 405.256 52.814 404.274 cv
69.0137 379.553 mo
69.0137 378.571 68.2163 377.774 67.2339 377.774 cv
66.251 377.774 65.4536 378.571 65.4536 379.553 cv
65.4536 380.538 66.251 381.334 67.2339 381.334 cv
68.2163 381.334 69.0137 380.538 69.0137 379.553 cv
70.9336 386.514 mo
70.9336 385.532 70.1362 384.735 69.1538 384.735 cv
68.1714 384.735 67.3735 385.532 67.3735 386.514 cv
67.3735 387.497 68.1714 388.293 69.1538 388.293 cv
70.1362 388.293 70.9336 387.497 70.9336 386.514 cv
115.334 385.315 mo
115.334 384.333 114.536 383.534 113.554 383.534 cv
112.571 383.534 111.774 384.333 111.774 385.315 cv
111.774 386.297 112.571 387.094 113.554 387.094 cv
114.536 387.094 115.334 386.297 115.334 385.315 cv
54.1338 392.754 mo
54.1338 391.772 53.3364 390.975 52.354 390.975 cv
51.3711 390.975 50.5737 391.772 50.5737 392.754 cv
50.5737 393.737 51.3711 394.534 52.354 394.534 cv
53.3364 394.534 54.1338 393.737 54.1338 392.754 cv
34.9336 417.475 mo
34.9336 416.491 34.1362 415.694 33.1538 415.694 cv
32.1714 415.694 31.3735 416.491 31.3735 417.475 cv
31.3735 418.458 32.1714 419.254 33.1538 419.254 cv
34.1362 419.254 34.9336 418.458 34.9336 417.475 cv
26.0537 416.274 mo
26.0537 415.292 25.2563 414.495 24.2739 414.495 cv
23.291 414.495 22.4937 415.292 22.4937 416.274 cv
22.4937 417.256 23.291 418.053 24.2739 418.053 cv
25.2563 418.053 26.0537 417.256 26.0537 416.274 cv
120.254 369.475 mo
120.254 368.491 119.457 367.694 118.474 367.694 cv
117.491 367.694 116.694 368.491 116.694 369.475 cv
116.694 370.458 117.491 371.254 118.474 371.254 cv
119.457 371.254 120.254 370.458 120.254 369.475 cv
90.4937 356.754 mo
90.4937 355.772 89.6963 354.975 88.7139 354.975 cv
87.731 354.975 86.9336 355.772 86.9336 356.754 cv
86.9336 357.737 87.731 358.534 88.7139 358.534 cv
89.6963 358.534 90.4937 357.737 90.4937 356.754 cv
97.334 380.995 mo
97.334 380.012 96.5361 379.213 95.5537 379.213 cv
94.5713 379.213 93.7739 380.012 93.7739 380.995 cv
93.7739 381.977 94.5713 382.774 95.5537 382.774 cv
96.5361 382.774 97.334 381.977 97.334 380.995 cv
125.174 381.475 mo
125.174 380.491 124.376 379.694 123.394 379.694 cv
122.411 379.694 121.614 380.491 121.614 381.475 cv
121.614 382.458 122.411 383.254 123.394 383.254 cv
124.376 383.254 125.174 382.458 125.174 381.475 cv
89.4136 356.874 mo
89.4136 355.891 88.6162 355.094 87.6338 355.094 cv
86.6514 355.094 85.854 355.891 85.854 356.874 cv
85.854 357.856 86.6514 358.655 87.6338 358.655 cv
88.6162 358.655 89.4136 357.856 89.4136 356.874 cv
102.614 363.713 mo
102.614 362.731 101.816 361.934 100.834 361.934 cv
99.8511 361.934 99.0537 362.731 99.0537 363.713 cv
99.0537 364.696 99.8511 365.495 100.834 365.495 cv
101.816 365.495 102.614 364.696 102.614 363.713 cv
91.5737 359.633 mo
91.5737 358.651 90.7764 357.854 89.7939 357.854 cv
88.811 357.854 88.0137 358.651 88.0137 359.633 cv
88.0137 360.618 88.811 361.415 89.7939 361.415 cv
90.7764 361.415 91.5737 360.618 91.5737 359.633 cv
134.774 401.395 mo
134.774 400.411 133.976 399.614 132.994 399.614 cv
132.011 399.614 131.214 400.411 131.214 401.395 cv
131.214 402.377 132.011 403.174 132.994 403.174 cv
133.976 403.174 134.774 402.377 134.774 401.395 cv
39.7339 396.954 mo
39.7339 395.971 38.9365 395.174 37.9536 395.174 cv
36.9712 395.174 36.1738 395.971 36.1738 396.954 cv
36.1738 397.936 36.9712 398.735 37.9536 398.735 cv
38.9365 398.735 39.7339 397.936 39.7339 396.954 cv
69.9736 377.874 mo
69.9736 376.891 69.1763 376.094 68.1938 376.094 cv
67.2114 376.094 66.4136 376.891 66.4136 377.874 cv
66.4136 378.856 67.2114 379.655 68.1938 379.655 cv
69.1763 379.655 69.9736 378.856 69.9736 377.874 cv
136.934 401.155 mo
136.934 400.172 136.136 399.374 135.154 399.374 cv
134.171 399.374 133.374 400.172 133.374 401.155 cv
133.374 402.137 134.171 402.934 135.154 402.934 cv
136.136 402.934 136.934 402.137 136.934 401.155 cv
99.9736 362.274 mo
99.9736 361.292 99.1763 360.495 98.1938 360.495 cv
97.2114 360.495 96.4136 361.292 96.4136 362.274 cv
96.4136 363.256 97.2114 364.053 98.1938 364.053 cv
99.1763 364.053 99.9736 363.256 99.9736 362.274 cv
123.494 391.674 mo
123.494 390.692 122.696 389.895 121.714 389.895 cv
120.731 389.895 119.934 390.692 119.934 391.674 cv
119.934 392.657 120.731 393.454 121.714 393.454 cv
122.696 393.454 123.494 392.657 123.494 391.674 cv
54.3735 388.915 mo
54.3735 387.932 53.5762 387.133 52.5938 387.133 cv
51.6113 387.133 50.814 387.932 50.814 388.915 cv
50.814 389.897 51.6113 390.694 52.5938 390.694 cv
53.5762 390.694 54.3735 389.897 54.3735 388.915 cv
112.694 382.553 mo
112.694 381.571 111.896 380.774 110.914 380.774 cv
109.931 380.774 109.134 381.571 109.134 382.553 cv
109.134 383.538 109.931 384.334 110.914 384.334 cv
111.896 384.334 112.694 383.538 112.694 382.553 cv
72.1338 368.633 mo
72.1338 367.651 71.3364 366.854 70.354 366.854 cv
69.3711 366.854 68.5737 367.651 68.5737 368.633 cv
68.5737 369.618 69.3711 370.415 70.354 370.415 cv
71.3364 370.415 72.1338 369.618 72.1338 368.633 cv
128.894 395.395 mo
128.894 394.411 128.096 393.614 127.114 393.614 cv
126.131 393.614 125.334 394.411 125.334 395.395 cv
125.334 396.377 126.131 397.174 127.114 397.174 cv
128.096 397.174 128.894 396.377 128.894 395.395 cv
148.214 373.434 mo
148.214 372.452 147.417 371.655 146.434 371.655 cv
145.451 371.655 144.654 372.452 144.654 373.434 cv
144.654 374.417 145.451 375.213 146.434 375.213 cv
147.417 375.213 148.214 374.417 148.214 373.434 cv
67.4536 359.155 mo
67.4536 358.172 66.6563 357.374 65.6738 357.374 cv
64.6914 357.374 63.8936 358.172 63.8936 359.155 cv
63.8936 360.137 64.6914 360.934 65.6738 360.934 cv
66.6563 360.934 67.4536 360.137 67.4536 359.155 cv
142.454 393.594 mo
142.454 392.612 141.656 391.815 140.674 391.815 cv
139.691 391.815 138.894 392.612 138.894 393.594 cv
138.894 394.577 139.691 395.374 140.674 395.374 cv
141.656 395.374 142.454 394.577 142.454 393.594 cv
45.1338 389.995 mo
45.1338 389.012 44.3364 388.213 43.354 388.213 cv
42.3711 388.213 41.5737 389.012 41.5737 389.995 cv
41.5737 390.977 42.3711 391.774 43.354 391.774 cv
44.3364 391.774 45.1338 390.977 45.1338 389.995 cv
54.6138 378.114 mo
54.6138 377.131 53.8164 376.334 52.834 376.334 cv
51.8511 376.334 51.0537 377.131 51.0537 378.114 cv
51.0537 379.096 51.8511 379.895 52.834 379.895 cv
53.8164 379.895 54.6138 379.096 54.6138 378.114 cv
148.694 392.754 mo
148.694 391.772 147.896 390.975 146.914 390.975 cv
145.931 390.975 145.134 391.772 145.134 392.754 cv
145.134 393.737 145.931 394.534 146.914 394.534 cv
147.896 394.534 148.694 393.737 148.694 392.754 cv
48.3735 389.874 mo
48.3735 388.891 47.5762 388.094 46.5938 388.094 cv
45.6113 388.094 44.814 388.891 44.814 389.874 cv
44.814 390.856 45.6113 391.655 46.5938 391.655 cv
47.5762 391.655 48.3735 390.856 48.3735 389.874 cv
33.4937 413.633 mo
33.4937 412.651 32.6963 411.854 31.7139 411.854 cv
30.731 411.854 29.9336 412.651 29.9336 413.633 cv
29.9336 414.618 30.731 415.415 31.7139 415.415 cv
32.6963 415.415 33.4937 414.618 33.4937 413.633 cv
125.654 395.995 mo
125.654 395.012 124.856 394.213 123.874 394.213 cv
122.891 394.213 122.094 395.012 122.094 395.995 cv
122.094 396.977 122.891 397.774 123.874 397.774 cv
124.856 397.774 125.654 396.977 125.654 395.995 cv
55.814 392.274 mo
55.814 391.292 55.0161 390.495 54.0337 390.495 cv
53.0513 390.495 52.2539 391.292 52.2539 392.274 cv
52.2539 393.256 53.0513 394.053 54.0337 394.053 cv
55.0161 394.053 55.814 393.256 55.814 392.274 cv
28.4536 403.553 mo
28.4536 402.571 27.6563 401.774 26.6738 401.774 cv
25.6914 401.774 24.8936 402.571 24.8936 403.553 cv
24.8936 404.538 25.6914 405.334 26.6738 405.334 cv
27.6563 405.334 28.4536 404.538 28.4536 403.553 cv
29.6538 396.114 mo
29.6538 395.131 28.8564 394.334 27.8735 394.334 cv
26.8911 394.334 26.0938 395.131 26.0938 396.114 cv
26.0938 397.096 26.8911 397.895 27.8735 397.895 cv
28.8564 397.895 29.6538 397.096 29.6538 396.114 cv
104.774 356.995 mo
104.774 356.012 103.976 355.213 102.994 355.213 cv
102.011 355.213 101.214 356.012 101.214 356.995 cv
101.214 357.977 102.011 358.774 102.994 358.774 cv
103.976 358.774 104.774 357.977 104.774 356.995 cv
124.934 374.754 mo
124.934 373.772 124.136 372.975 123.154 372.975 cv
122.171 372.975 121.374 373.772 121.374 374.754 cv
121.374 375.737 122.171 376.534 123.154 376.534 cv
124.136 376.534 124.934 375.737 124.934 374.754 cv
103.814 364.434 mo
103.814 363.452 103.016 362.655 102.034 362.655 cv
101.051 362.655 100.254 363.452 100.254 364.434 cv
100.254 365.417 101.051 366.213 102.034 366.213 cv
103.016 366.213 103.814 365.417 103.814 364.434 cv
138.614 386.034 mo
138.614 385.051 137.816 384.254 136.834 384.254 cv
135.851 384.254 135.054 385.051 135.054 386.034 cv
135.054 387.016 135.851 387.815 136.834 387.815 cv
137.816 387.815 138.614 387.016 138.614 386.034 cv
46.2139 387.713 mo
46.2139 386.731 45.4165 385.934 44.4336 385.934 cv
43.4512 385.934 42.6538 386.731 42.6538 387.713 cv
42.6538 388.696 43.4512 389.495 44.4336 389.495 cv
45.4165 389.495 46.2139 388.696 46.2139 387.713 cv
45.7339 405.713 mo
45.7339 404.731 44.9365 403.934 43.9536 403.934 cv
42.9712 403.934 42.1738 404.731 42.1738 405.713 cv
42.1738 406.696 42.9712 407.495 43.9536 407.495 cv
44.9365 407.495 45.7339 406.696 45.7339 405.713 cv
93.7339 360.354 mo
93.7339 359.372 92.9365 358.575 91.9536 358.575 cv
90.9712 358.575 90.1738 359.372 90.1738 360.354 cv
90.1738 361.336 90.9712 362.133 91.9536 362.133 cv
92.9365 362.133 93.7339 361.336 93.7339 360.354 cv
111.254 375.354 mo
111.254 374.372 110.457 373.575 109.474 373.575 cv
108.491 373.575 107.694 374.372 107.694 375.354 cv
107.694 376.336 108.491 377.133 109.474 377.133 cv
110.457 377.133 111.254 376.336 111.254 375.354 cv
30.854 404.274 mo
30.854 403.292 30.0562 402.495 29.0737 402.495 cv
28.0913 402.495 27.2939 403.292 27.2939 404.274 cv
27.2939 405.256 28.0913 406.053 29.0737 406.053 cv
30.0562 406.053 30.854 405.256 30.854 404.274 cv
131.174 381.834 mo
131.174 380.852 130.376 380.053 129.394 380.053 cv
128.411 380.053 127.614 380.852 127.614 381.834 cv
127.614 382.817 128.411 383.614 129.394 383.614 cv
130.376 383.614 131.174 382.817 131.174 381.834 cv
137.654 394.915 mo
137.654 393.932 136.856 393.133 135.874 393.133 cv
134.891 393.133 134.094 393.932 134.094 394.915 cv
134.094 395.897 134.891 396.694 135.874 396.694 cv
136.856 396.694 137.654 395.897 137.654 394.915 cv
35.8936 414.354 mo
35.8936 413.372 35.0962 412.575 34.1138 412.575 cv
33.1313 412.575 32.334 413.372 32.334 414.354 cv
32.334 415.336 33.1313 416.133 34.1138 416.133 cv
35.0962 416.133 35.8936 415.336 35.8936 414.354 cv
59.4136 386.274 mo
59.4136 385.292 58.6162 384.495 57.6338 384.495 cv
56.6514 384.495 55.854 385.292 55.854 386.274 cv
55.854 387.256 56.6514 388.053 57.6338 388.053 cv
58.6162 388.053 59.4136 387.256 59.4136 386.274 cv
115.574 379.075 mo
115.574 378.092 114.776 377.293 113.794 377.293 cv
112.811 377.293 112.014 378.092 112.014 379.075 cv
112.014 380.057 112.811 380.854 113.794 380.854 cv
114.776 380.854 115.574 380.057 115.574 379.075 cv
90.854 359.633 mo
90.854 358.651 90.0562 357.854 89.0737 357.854 cv
88.0913 357.854 87.2939 358.651 87.2939 359.633 cv
87.2939 360.618 88.0913 361.415 89.0737 361.415 cv
90.0562 361.415 90.854 360.618 90.854 359.633 cv
74.5337 368.155 mo
74.5337 367.172 73.7363 366.374 72.7539 366.374 cv
71.771 366.374 70.9736 367.172 70.9736 368.155 cv
70.9736 369.137 71.771 369.934 72.7539 369.934 cv
73.7363 369.934 74.5337 369.137 74.5337 368.155 cv
55.9336 384.114 mo
55.9336 383.131 55.1362 382.334 54.1538 382.334 cv
53.1714 382.334 52.3735 383.131 52.3735 384.114 cv
52.3735 385.096 53.1714 385.895 54.1538 385.895 cv
55.1362 385.895 55.9336 385.096 55.9336 384.114 cv
87.9736 375.114 mo
87.9736 374.131 87.1763 373.334 86.1938 373.334 cv
85.2114 373.334 84.4136 374.131 84.4136 375.114 cv
84.4136 376.096 85.2114 376.895 86.1938 376.895 cv
87.1763 376.895 87.9736 376.096 87.9736 375.114 cv
47.1738 391.553 mo
47.1738 390.571 46.3765 389.774 45.3936 389.774 cv
44.4111 389.774 43.6138 390.571 43.6138 391.553 cv
43.6138 392.538 44.4111 393.334 45.3936 393.334 cv
46.3765 393.334 47.1738 392.538 47.1738 391.553 cv
129.974 392.995 mo
129.974 392.012 129.176 391.213 128.194 391.213 cv
127.211 391.213 126.414 392.012 126.414 392.995 cv
126.414 393.977 127.211 394.774 128.194 394.774 cv
129.176 394.774 129.974 393.977 129.974 392.995 cv
40.4536 399.475 mo
40.4536 398.491 39.6563 397.694 38.6738 397.694 cv
37.6914 397.694 36.8936 398.491 36.8936 399.475 cv
36.8936 400.458 37.6914 401.254 38.6738 401.254 cv
39.6563 401.254 40.4536 400.458 40.4536 399.475 cv
38.5337 418.434 mo
38.5337 417.452 37.7363 416.655 36.7539 416.655 cv
35.771 416.655 34.9736 417.452 34.9736 418.434 cv
34.9736 419.417 35.771 420.213 36.7539 420.213 cv
37.7363 420.213 38.5337 419.417 38.5337 418.434 cv
89.8936 367.075 mo
89.8936 366.092 89.0962 365.293 88.1138 365.293 cv
87.1313 365.293 86.334 366.092 86.334 367.075 cv
86.334 368.057 87.1313 368.854 88.1138 368.854 cv
89.0962 368.854 89.8936 368.057 89.8936 367.075 cv
116.294 368.395 mo
116.294 367.411 115.496 366.614 114.514 366.614 cv
113.531 366.614 112.734 367.411 112.734 368.395 cv
112.734 369.377 113.531 370.174 114.514 370.174 cv
115.496 370.174 116.294 369.377 116.294 368.395 cv
58.4536 398.514 mo
58.4536 397.532 57.6563 396.735 56.6738 396.735 cv
55.6914 396.735 54.8936 397.532 54.8936 398.514 cv
54.8936 399.497 55.6914 400.293 56.6738 400.293 cv
57.6563 400.293 58.4536 399.497 58.4536 398.514 cv
97.334 364.194 mo
97.334 363.211 96.5361 362.415 95.5537 362.415 cv
94.5713 362.415 93.7739 363.211 93.7739 364.194 cv
93.7739 365.176 94.5713 365.975 95.5537 365.975 cv
96.5361 365.975 97.334 365.176 97.334 364.194 cv
27.7339 412.434 mo
27.7339 411.452 26.9365 410.655 25.9536 410.655 cv
24.9712 410.655 24.1738 411.452 24.1738 412.434 cv
24.1738 413.417 24.9712 414.213 25.9536 414.213 cv
26.9365 414.213 27.7339 413.417 27.7339 412.434 cv
138.134 381.475 mo
138.134 380.491 137.336 379.694 136.354 379.694 cv
135.371 379.694 134.574 380.491 134.574 381.475 cv
134.574 382.458 135.371 383.254 136.354 383.254 cv
137.336 383.254 138.134 382.458 138.134 381.475 cv
142.934 398.514 mo
142.934 397.532 142.136 396.735 141.154 396.735 cv
140.171 396.735 139.374 397.532 139.374 398.514 cv
139.374 399.497 140.171 400.293 141.154 400.293 cv
142.136 400.293 142.934 399.497 142.934 398.514 cv
93.854 346.915 mo
93.854 345.932 93.0562 345.133 92.0737 345.133 cv
91.0913 345.133 90.2939 345.932 90.2939 346.915 cv
90.2939 347.897 91.0913 348.694 92.0737 348.694 cv
93.0562 348.694 93.854 347.897 93.854 346.915 cv
67.334 382.674 mo
67.334 381.692 66.5361 380.895 65.5537 380.895 cv
64.5713 380.895 63.7739 381.692 63.7739 382.674 cv
63.7739 383.657 64.5713 384.454 65.5537 384.454 cv
66.5361 384.454 67.334 383.657 67.334 382.674 cv
123.014 385.315 mo
123.014 384.333 122.216 383.534 121.234 383.534 cv
120.251 383.534 119.454 384.333 119.454 385.315 cv
119.454 386.297 120.251 387.094 121.234 387.094 cv
122.216 387.094 123.014 386.297 123.014 385.315 cv
59.8936 388.434 mo
59.8936 387.452 59.0962 386.655 58.1138 386.655 cv
57.1313 386.655 56.334 387.452 56.334 388.434 cv
56.334 389.417 57.1313 390.213 58.1138 390.213 cv
59.0962 390.213 59.8936 389.417 59.8936 388.434 cv
84.1338 361.553 mo
84.1338 360.571 83.3364 359.774 82.354 359.774 cv
81.3711 359.774 80.5737 360.571 80.5737 361.553 cv
80.5737 362.538 81.3711 363.334 82.354 363.334 cv
83.3364 363.334 84.1338 362.538 84.1338 361.553 cv
81.2539 373.674 mo
81.2539 372.692 80.4565 371.895 79.4736 371.895 cv
78.4912 371.895 77.6938 372.692 77.6938 373.674 cv
77.6938 374.657 78.4912 375.454 79.4736 375.454 cv
80.4565 375.454 81.2539 374.657 81.2539 373.674 cv
132.374 385.793 mo
132.374 384.811 131.576 384.014 130.594 384.014 cv
129.611 384.014 128.814 384.811 128.814 385.793 cv
128.814 386.776 129.611 387.575 130.594 387.575 cv
131.576 387.575 132.374 386.776 132.374 385.793 cv
72.1338 379.553 mo
72.1338 378.571 71.3364 377.774 70.354 377.774 cv
69.3711 377.774 68.5737 378.571 68.5737 379.553 cv
68.5737 380.538 69.3711 381.334 70.354 381.334 cv
71.3364 381.334 72.1338 380.538 72.1338 379.553 cv
58.334 391.553 mo
58.334 390.571 57.5361 389.774 56.5537 389.774 cv
55.5713 389.774 54.7739 390.571 54.7739 391.553 cv
54.7739 392.538 55.5713 393.334 56.5537 393.334 cv
57.5361 393.334 58.334 392.538 58.334 391.553 cv
128.774 393.235 mo
128.774 392.252 127.976 391.454 126.994 391.454 cv
126.011 391.454 125.214 392.252 125.214 393.235 cv
125.214 394.217 126.011 395.014 126.994 395.014 cv
127.976 395.014 128.774 394.217 128.774 393.235 cv
98.2939 358.434 mo
98.2939 357.452 97.4961 356.655 96.5137 356.655 cv
95.5313 356.655 94.7339 357.452 94.7339 358.434 cv
94.7339 359.417 95.5313 360.213 96.5137 360.213 cv
97.4961 360.213 98.2939 359.417 98.2939 358.434 cv
144.134 384.475 mo
144.134 383.491 143.336 382.694 142.354 382.694 cv
141.371 382.694 140.574 383.491 140.574 384.475 cv
140.574 385.458 141.371 386.254 142.354 386.254 cv
143.336 386.254 144.134 385.458 144.134 384.475 cv
88.5737 349.075 mo
88.5737 348.092 87.7764 347.293 86.7939 347.293 cv
85.811 347.293 85.0137 348.092 85.0137 349.075 cv
85.0137 350.057 85.811 350.854 86.7939 350.854 cv
87.7764 350.854 88.5737 350.057 88.5737 349.075 cv
50.2939 405.475 mo
50.2939 404.491 49.4961 403.694 48.5137 403.694 cv
47.5313 403.694 46.7339 404.491 46.7339 405.475 cv
46.7339 406.458 47.5313 407.254 48.5137 407.254 cv
49.4961 407.254 50.2939 406.458 50.2939 405.475 cv
98.2939 363.235 mo
98.2939 362.252 97.4961 361.454 96.5137 361.454 cv
95.5313 361.454 94.7339 362.252 94.7339 363.235 cv
94.7339 364.217 95.5313 365.014 96.5137 365.014 cv
97.4961 365.014 98.2939 364.217 98.2939 363.235 cv
138.854 396.114 mo
138.854 395.131 138.056 394.334 137.074 394.334 cv
136.091 394.334 135.294 395.131 135.294 396.114 cv
135.294 397.096 136.091 397.895 137.074 397.895 cv
138.056 397.895 138.854 397.096 138.854 396.114 cv
69.4937 379.915 mo
69.4937 378.932 68.6963 378.133 67.7139 378.133 cv
66.731 378.133 65.9336 378.932 65.9336 379.915 cv
65.9336 380.897 66.731 381.694 67.7139 381.694 cv
68.6963 381.694 69.4937 380.897 69.4937 379.915 cv
87.2539 372.594 mo
87.2539 371.612 86.4565 370.815 85.4736 370.815 cv
84.4912 370.815 83.6938 371.612 83.6938 372.594 cv
83.6938 373.577 84.4912 374.374 85.4736 374.374 cv
86.4565 374.374 87.2539 373.577 87.2539 372.594 cv
151.094 374.274 mo
151.094 373.292 150.296 372.495 149.314 372.495 cv
148.331 372.495 147.534 373.292 147.534 374.274 cv
147.534 375.256 148.331 376.053 149.314 376.053 cv
150.296 376.053 151.094 375.256 151.094 374.274 cv
92.0537 360.475 mo
92.0537 359.491 91.2563 358.694 90.2739 358.694 cv
89.291 358.694 88.4937 359.491 88.4937 360.475 cv
88.4937 361.458 89.291 362.254 90.2739 362.254 cv
91.2563 362.254 92.0537 361.458 92.0537 360.475 cv
69.4937 360.954 mo
69.4937 359.971 68.6963 359.174 67.7139 359.174 cv
66.731 359.174 65.9336 359.971 65.9336 360.954 cv
65.9336 361.936 66.731 362.735 67.7139 362.735 cv
68.6963 362.735 69.4937 361.936 69.4937 360.954 cv
27.4937 413.874 mo
27.4937 412.891 26.6963 412.094 25.7139 412.094 cv
24.731 412.094 23.9336 412.891 23.9336 413.874 cv
23.9336 414.856 24.731 415.655 25.7139 415.655 cv
26.6963 415.655 27.4937 414.856 27.4937 413.874 cv
94.4536 350.034 mo
94.4536 349.051 93.6563 348.254 92.6738 348.254 cv
91.6914 348.254 90.8936 349.051 90.8936 350.034 cv
90.8936 351.016 91.6914 351.815 92.6738 351.815 cv
93.6563 351.815 94.4536 351.016 94.4536 350.034 cv
100.214 367.315 mo
100.214 366.333 99.4165 365.534 98.4336 365.534 cv
97.4512 365.534 96.6538 366.333 96.6538 367.315 cv
96.6538 368.297 97.4512 369.094 98.4336 369.094 cv
99.4165 369.094 100.214 368.297 100.214 367.315 cv
104.294 368.034 mo
104.294 367.051 103.496 366.254 102.514 366.254 cv
101.531 366.254 100.734 367.051 100.734 368.034 cv
100.734 369.016 101.531 369.815 102.514 369.815 cv
103.496 369.815 104.294 369.016 104.294 368.034 cv
69.9736 362.514 mo
69.9736 361.532 69.1763 360.735 68.1938 360.735 cv
67.2114 360.735 66.4136 361.532 66.4136 362.514 cv
66.4136 363.497 67.2114 364.293 68.1938 364.293 cv
69.1763 364.293 69.9736 363.497 69.9736 362.514 cv
97.5737 370.075 mo
97.5737 369.092 96.7764 368.293 95.7939 368.293 cv
94.811 368.293 94.0137 369.092 94.0137 370.075 cv
94.0137 371.057 94.811 371.854 95.7939 371.854 cv
96.7764 371.854 97.5737 371.057 97.5737 370.075 cv
0 0 0 1 cmyk
@
grestore
0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
19.1338 330.145 mo
14.3838 330.145 li
19.1338 352.075 mo
14.3838 352.075 li
19.1338 374.014 mo
14.3838 374.014 li
19.1338 395.944 mo
14.3838 395.944 li
19.1338 417.883 mo
14.3838 417.883 li
19.1338 439.815 mo
14.3838 439.815 li
19.1338 439.815 mo
19.1338 330.145 li
false sop
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 49 /one putdup 53 /five putdup 127 /minus putdef/UniqueID 28352 def/FontBBox {-166 -225 1000 931} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 718 737 523 538 688 703] def/OtherBlues [270 281 405 409 -220 -207] def/BlueScale 0.0437916 def/StdHW [76] def/StdVW [88] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF19407412ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-/one <1C60D8A8C9B7EF327C10274AD9026AD10E2766BF7084C2014D15DE02958A6977C33F9C9651D5788EA2FB530B3EE42DE5824448> |-/five <1C60D8A8C9B7EF322448D34FC69162D5B3FA33847725A6C54ED91995E45D690B7D0E476479D9EDB4F61F0B8E7F37F7415ECCEF12BD0BB3A993663B38C8EEAA49F314551016ECC1F8DE4119690672560B970B6156CCA876B5A96262978DF14B4FCFDE401A9555> |-/minus <1C60D8A8C9B7F374CC52CC6AFA414A834D96E3500AE21BFB98508788FC7E> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/DVPWBU+Helvetica /Helvetica findfont ct_VMDictPut/DVPWBU+Helvetica*1 [48{/.notdef}rp /zero /one 3{/.notdef}rp /five 73{/.notdef}rp /minus 128{/.notdef}rp]DVPWBU+Helvetica nfDVPWBU+Helvetica*1 [0 -9 -9 0 0 0 ]msf7.73096 447.448 mo(\17710)[-5.25586 -5.00391 0 ]ysh7.73096 423.01 mo(\1775)[-5.25586 0 ]ysh7.73096 398.44 mo(05)[-21.9326 0 ]ysh7.73096 357.073 mo(10)[-5.00391 0 ]ysh7.73096 335.151 mo(15)[-5.00391 0 ]ysh19.1338 441.764 mo
155.414 441.764 li
155.414 314.995 li
19.1338 314.995 li
19.1338 441.764 li
@
gsave
155.414 441.764 mo
291.703 441.764 li
291.703 314.995 li
155.414 314.995 li
155.414 441.764 li
cp
clp
155.414 330.145 mo
291.703 330.145 li
155.414 352.075 mo
291.703 352.075 li
155.414 374.014 mo
291.703 374.014 li
155.414 395.944 mo
291.703 395.944 li
155.414 417.883 mo
291.703 417.883 li
155.414 439.815 mo
291.703 439.815 li
286.783 441.764 mo
286.783 314.995 li
255.104 441.764 mo
255.104 314.995 li
223.434 441.764 mo
223.434 314.995 li
191.754 441.764 mo
191.754 314.995 li
160.074 441.764 mo
160.074 314.995 li
0 0 0 0.1725 cmyk
@
grestore
286.783 441.764 mo
286.783 446.514 li
255.104 441.764 mo
255.104 446.514 li
223.434 441.764 mo
223.434 446.514 li
191.754 441.764 mo
191.754 446.514 li
160.074 441.764 mo
160.074 446.514 li
160.074 441.764 mo
286.783 441.764 li
223.814 371.633 mo
223.814 370.651 223.016 369.854 222.034 369.854 cv
221.051 369.854 220.253 370.651 220.253 371.633 cv
220.253 372.618 221.051 373.415 222.034 373.415 cv
223.016 373.415 223.814 372.618 223.814 371.633 cv
174.134 413.633 mo
174.134 412.651 173.336 411.854 172.354 411.854 cv
171.371 411.854 170.574 412.651 170.574 413.633 cv
170.574 414.618 171.371 415.415 172.354 415.415 cv
173.336 415.415 174.134 414.618 174.134 413.633 cv
283.213 392.995 mo
283.213 392.012 282.416 391.213 281.434 391.213 cv
280.451 391.213 279.654 392.012 279.654 392.995 cv
279.654 393.977 280.451 394.774 281.434 394.774 cv
282.416 394.774 283.213 393.977 283.213 392.995 cv
254.533 389.155 mo
254.533 388.172 253.736 387.374 252.754 387.374 cv
251.771 387.374 250.975 388.172 250.975 389.155 cv
250.975 390.137 251.771 390.934 252.754 390.934 cv
253.736 390.934 254.533 390.137 254.533 389.155 cv
245.414 373.315 mo
245.414 372.333 244.617 371.534 243.633 371.534 cv
242.65 371.534 241.854 372.333 241.854 373.315 cv
241.854 374.297 242.65 375.094 243.633 375.094 cv
244.617 375.094 245.414 374.297 245.414 373.315 cv
249.734 374.274 mo
249.734 373.292 248.936 372.495 247.953 372.495 cv
246.971 372.495 246.174 373.292 246.174 374.274 cv
246.174 375.256 246.971 376.053 247.953 376.053 cv
248.936 376.053 249.734 375.256 249.734 374.274 cv
197.174 384.114 mo
197.174 383.131 196.376 382.334 195.394 382.334 cv
194.411 382.334 193.614 383.131 193.614 384.114 cv
193.614 385.096 194.411 385.895 195.394 385.895 cv
196.376 385.895 197.174 385.096 197.174 384.114 cv
223.094 359.395 mo
223.094 358.411 222.296 357.614 221.314 357.614 cv
220.332 357.614 219.534 358.411 219.534 359.395 cv
219.534 360.377 220.332 361.174 221.314 361.174 cv
222.296 361.174 223.094 360.377 223.094 359.395 cv
184.694 409.434 mo
184.694 408.452 183.896 407.655 182.914 407.655 cv
181.931 407.655 181.134 408.452 181.134 409.434 cv
181.134 410.417 181.931 411.213 182.914 411.213 cv
183.896 411.213 184.694 410.417 184.694 409.434 cv
190.694 382.674 mo
190.694 381.692 189.896 380.895 188.914 380.895 cv
187.931 380.895 187.134 381.692 187.134 382.674 cv
187.134 383.657 187.931 384.454 188.914 384.454 cv
189.896 384.454 190.694 383.657 190.694 382.674 cv
285.494 382.434 mo
285.494 381.452 284.697 380.655 283.713 380.655 cv
282.73 380.655 281.934 381.452 281.934 382.434 cv
281.934 383.417 282.73 384.213 283.713 384.213 cv
284.697 384.213 285.494 383.417 285.494 382.434 cv
198.614 391.075 mo
198.614 390.092 197.816 389.293 196.834 389.293 cv
195.851 389.293 195.054 390.092 195.054 391.075 cv
195.054 392.057 195.851 392.854 196.834 392.854 cv
197.816 392.854 198.614 392.057 198.614 391.075 cv
244.814 379.075 mo
244.814 378.092 244.016 377.293 243.033 377.293 cv
242.051 377.293 241.254 378.092 241.254 379.075 cv
241.254 380.057 242.051 380.854 243.033 380.854 cv
244.016 380.854 244.814 380.057 244.814 379.075 cv
238.213 362.395 mo
238.213 361.411 237.416 360.614 236.434 360.614 cv
235.451 360.614 234.654 361.411 234.654 362.395 cv
234.654 363.377 235.451 364.174 236.434 364.174 cv
237.416 364.174 238.213 363.377 238.213 362.395 cv
173.414 401.034 mo
173.414 400.051 172.616 399.254 171.634 399.254 cv
170.651 399.254 169.854 400.051 169.854 401.034 cv
169.854 402.016 170.651 402.815 171.634 402.815 cv
172.616 402.815 173.414 402.016 173.414 401.034 cv
252.133 371.633 mo
252.133 370.651 251.336 369.854 250.354 369.854 cv
249.371 369.854 248.574 370.651 248.574 371.633 cv
248.574 372.618 249.371 373.415 250.354 373.415 cv
251.336 373.415 252.133 372.618 252.133 371.633 cv
184.574 392.754 mo
184.574 391.772 183.776 390.975 182.794 390.975 cv
181.811 390.975 181.014 391.772 181.014 392.754 cv
181.014 393.737 181.811 394.534 182.794 394.534 cv
183.776 394.534 184.574 393.737 184.574 392.754 cv
222.614 367.674 mo
222.614 366.692 221.816 365.895 220.833 365.895 cv
219.851 365.895 219.054 366.692 219.054 367.674 cv
219.054 368.657 219.851 369.454 220.833 369.454 cv
221.816 369.454 222.614 368.657 222.614 367.674 cv
239.174 368.034 mo
239.174 367.051 238.377 366.254 237.395 366.254 cv
236.412 366.254 235.613 367.051 235.613 368.034 cv
235.613 369.016 236.412 369.815 237.395 369.815 cv
238.377 369.815 239.174 369.016 239.174 368.034 cv
209.894 377.874 mo
209.894 376.891 209.096 376.094 208.114 376.094 cv
207.131 376.094 206.334 376.891 206.334 377.874 cv
206.334 378.856 207.131 379.655 208.114 379.655 cv
209.096 379.655 209.894 378.856 209.894 377.874 cv
211.574 383.633 mo
211.574 382.651 210.776 381.854 209.794 381.854 cv
208.811 381.854 208.014 382.651 208.014 383.633 cv
208.014 384.618 208.811 385.415 209.794 385.415 cv
210.776 385.415 211.574 384.618 211.574 383.633 cv
201.254 378.834 mo
201.254 377.852 200.457 377.053 199.474 377.053 cv
198.491 377.053 197.694 377.852 197.694 378.834 cv
197.694 379.817 198.491 380.614 199.474 380.614 cv
200.457 380.614 201.254 379.817 201.254 378.834 cv
237.734 384.954 mo
237.734 383.971 236.936 383.174 235.953 383.174 cv
234.971 383.174 234.174 383.971 234.174 384.954 cv
234.174 385.936 234.971 386.735 235.953 386.735 cv
236.936 386.735 237.734 385.936 237.734 384.954 cv
222.614 364.194 mo
222.614 363.211 221.816 362.415 220.833 362.415 cv
219.851 362.415 219.054 363.211 219.054 364.194 cv
219.054 365.176 219.851 365.975 220.833 365.975 cv
221.816 365.975 222.614 365.176 222.614 364.194 cv
231.494 355.315 mo
231.494 354.333 230.697 353.534 229.713 353.534 cv
228.73 353.534 227.934 354.333 227.934 355.315 cv
227.934 356.297 228.73 357.094 229.713 357.094 cv
230.697 357.094 231.494 356.297 231.494 355.315 cv
240.373 363.114 mo
240.373 362.131 239.576 361.334 238.594 361.334 cv
237.611 361.334 236.814 362.131 236.814 363.114 cv
236.814 364.096 237.611 364.895 238.594 364.895 cv
239.576 364.895 240.373 364.096 240.373 363.114 cv
189.014 404.274 mo
189.014 403.292 188.216 402.495 187.234 402.495 cv
186.251 402.495 185.454 403.292 185.454 404.274 cv
185.454 405.256 186.251 406.053 187.234 406.053 cv
188.216 406.053 189.014 405.256 189.014 404.274 cv
205.334 379.553 mo
205.334 378.571 204.536 377.774 203.554 377.774 cv
202.571 377.774 201.774 378.571 201.774 379.553 cv
201.774 380.538 202.571 381.334 203.554 381.334 cv
204.536 381.334 205.334 380.538 205.334 379.553 cv
207.254 386.514 mo
207.254 385.532 206.457 384.735 205.474 384.735 cv
204.491 384.735 203.694 385.532 203.694 386.514 cv
203.694 387.497 204.491 388.293 205.474 388.293 cv
206.457 388.293 207.254 387.497 207.254 386.514 cv
251.654 385.315 mo
251.654 384.333 250.855 383.534 249.873 383.534 cv
248.891 383.534 248.094 384.333 248.094 385.315 cv
248.094 386.297 248.891 387.094 249.873 387.094 cv
250.855 387.094 251.654 386.297 251.654 385.315 cv
214.454 371.633 mo
214.454 370.651 213.656 369.854 212.674 369.854 cv
211.691 369.854 210.894 370.651 210.894 371.633 cv
210.894 372.618 211.691 373.415 212.674 373.415 cv
213.656 373.415 214.454 372.618 214.454 371.633 cv
243.014 369.475 mo
243.014 368.491 242.217 367.694 241.234 367.694 cv
240.252 367.694 239.453 368.491 239.453 369.475 cv
239.453 370.458 240.252 371.254 241.234 371.254 cv
242.217 371.254 243.014 370.458 243.014 369.475 cv
171.494 405.235 mo
171.494 404.252 170.696 403.454 169.714 403.454 cv
168.731 403.454 167.934 404.252 167.934 405.235 cv
167.934 406.217 168.731 407.014 169.714 407.014 cv
170.696 407.014 171.494 406.217 171.494 405.235 cv
256.453 369.475 mo
256.453 368.491 255.656 367.694 254.674 367.694 cv
253.691 367.694 252.895 368.491 252.895 369.475 cv
252.895 370.458 253.691 371.254 254.674 371.254 cv
255.656 371.254 256.453 370.458 256.453 369.475 cv
172.214 396.114 mo
172.214 395.131 171.417 394.334 170.434 394.334 cv
169.451 394.334 168.654 395.131 168.654 396.114 cv
168.654 397.096 169.451 397.895 170.434 397.895 cv
171.417 397.895 172.214 397.096 172.214 396.114 cv
178.214 404.155 mo
178.214 403.172 177.417 402.374 176.434 402.374 cv
175.451 402.374 174.654 403.172 174.654 404.155 cv
174.654 405.137 175.451 405.934 176.434 405.934 cv
177.417 405.934 178.214 405.137 178.214 404.155 cv
226.693 356.754 mo
226.693 355.772 225.896 354.975 224.914 354.975 cv
223.931 354.975 223.133 355.772 223.133 356.754 cv
223.133 357.737 223.931 358.534 224.914 358.534 cv
225.896 358.534 226.693 357.737 226.693 356.754 cv
233.654 380.995 mo
233.654 380.012 232.855 379.213 231.873 379.213 cv
230.891 379.213 230.094 380.012 230.094 380.995 cv
230.094 381.977 230.891 382.774 231.873 382.774 cv
232.855 382.774 233.654 381.977 233.654 380.995 cv
231.854 372.834 mo
231.854 371.852 231.057 371.053 230.074 371.053 cv
229.092 371.053 228.293 371.852 228.293 372.834 cv
228.293 373.817 229.092 374.614 230.074 374.614 cv
231.057 374.614 231.854 373.817 231.854 372.834 cv
255.975 389.633 mo
255.975 388.651 255.176 387.854 254.193 387.854 cv
253.211 387.854 252.414 388.651 252.414 389.633 cv
252.414 390.618 253.211 391.415 254.193 391.415 cv
255.176 391.415 255.975 390.618 255.975 389.633 cv
227.895 358.915 mo
227.895 357.932 227.096 357.133 226.113 357.133 cv
225.131 357.133 224.333 357.932 224.333 358.915 cv
224.333 359.897 225.131 360.694 226.113 360.694 cv
227.096 360.694 227.895 359.897 227.895 358.915 cv
176.054 396.954 mo
176.054 395.971 175.256 395.174 174.274 395.174 cv
173.291 395.174 172.494 395.971 172.494 396.954 cv
172.494 397.936 173.291 398.735 174.274 398.735 cv
175.256 398.735 176.054 397.936 176.054 396.954 cv
206.174 377.874 mo
206.174 376.891 205.376 376.094 204.394 376.094 cv
203.411 376.094 202.614 376.891 202.614 377.874 cv
202.614 378.856 203.411 379.655 204.394 379.655 cv
205.376 379.655 206.174 378.856 206.174 377.874 cv
259.693 391.674 mo
259.693 390.692 258.896 389.895 257.914 389.895 cv
256.932 389.895 256.133 390.692 256.133 391.674 cv
256.133 392.657 256.932 393.454 257.914 393.454 cv
258.896 393.454 259.693 392.657 259.693 391.674 cv
246.014 373.553 mo
246.014 372.571 245.217 371.774 244.234 371.774 cv
243.252 371.774 242.453 372.571 242.453 373.553 cv
242.453 374.538 243.252 375.334 244.234 375.334 cv
245.217 375.334 246.014 374.538 246.014 373.553 cv
242.773 364.915 mo
242.773 363.932 241.977 363.133 240.994 363.133 cv
240.012 363.133 239.213 363.932 239.213 364.915 cv
239.213 365.897 240.012 366.694 240.994 366.694 cv
241.977 366.694 242.773 365.897 242.773 364.915 cv
208.454 368.633 mo
208.454 367.651 207.656 366.854 206.674 366.854 cv
205.691 366.854 204.894 367.651 204.894 368.633 cv
204.894 369.618 205.691 370.415 206.674 370.415 cv
207.656 370.415 208.454 369.618 208.454 368.633 cv
235.814 362.995 mo
235.814 362.012 235.016 361.213 234.033 361.213 cv
233.051 361.213 232.254 362.012 232.254 362.995 cv
232.254 363.977 233.051 364.774 234.033 364.774 cv
235.016 364.774 235.814 363.977 235.814 362.995 cv
284.533 373.434 mo
284.533 372.452 283.736 371.655 282.754 371.655 cv
281.771 371.655 280.975 372.452 280.975 373.434 cv
280.975 374.417 281.771 375.213 282.754 375.213 cv
283.736 375.213 284.533 374.417 284.533 373.434 cv
187.574 386.274 mo
187.574 385.292 186.776 384.495 185.794 384.495 cv
184.811 384.495 184.014 385.292 184.014 386.274 cv
184.014 387.256 184.811 388.053 185.794 388.053 cv
186.776 388.053 187.574 387.256 187.574 386.274 cv
201.974 398.274 mo
201.974 397.292 201.176 396.495 200.194 396.495 cv
199.211 396.495 198.414 397.292 198.414 398.274 cv
198.414 399.256 199.211 400.053 200.194 400.053 cv
201.176 400.053 201.974 399.256 201.974 398.274 cv
261.254 391.793 mo
261.254 390.811 260.457 390.014 259.475 390.014 cv
258.49 390.014 257.693 390.811 257.693 391.793 cv
257.693 392.776 258.49 393.575 259.475 393.575 cv
260.457 393.575 261.254 392.776 261.254 391.793 cv
181.334 389.995 mo
181.334 389.012 180.536 388.213 179.554 388.213 cv
178.571 388.213 177.774 389.012 177.774 389.995 cv
177.774 390.977 178.571 391.774 179.554 391.774 cv
180.536 391.774 181.334 390.977 181.334 389.995 cv
261.734 387.475 mo
261.734 386.491 260.936 385.694 259.953 385.694 cv
258.971 385.694 258.174 386.491 258.174 387.475 cv
258.174 388.458 258.971 389.254 259.953 389.254 cv
260.936 389.254 261.734 388.458 261.734 387.475 cv
285.014 392.754 mo
285.014 391.772 284.217 390.975 283.234 390.975 cv
282.252 390.975 281.453 391.772 281.453 392.754 cv
281.453 393.737 282.252 394.534 283.234 394.534 cv
284.217 394.534 285.014 393.737 285.014 392.754 cv
184.694 389.874 mo
184.694 388.891 183.896 388.094 182.914 388.094 cv
181.931 388.094 181.134 388.891 181.134 389.874 cv
181.134 390.856 181.931 391.655 182.914 391.655 cv
183.896 391.655 184.694 390.856 184.694 389.874 cv
201.734 373.793 mo
201.734 372.811 200.937 372.014 199.954 372.014 cv
198.971 372.014 198.174 372.811 198.174 373.793 cv
198.174 374.776 198.971 375.575 199.954 375.575 cv
200.937 375.575 201.734 374.776 201.734 373.793 cv
169.814 413.633 mo
169.814 412.651 169.016 411.854 168.034 411.854 cv
167.051 411.854 166.254 412.651 166.254 413.633 cv
166.254 414.618 167.051 415.415 168.034 415.415 cv
169.016 415.415 169.814 414.618 169.814 413.633 cv
192.134 392.274 mo
192.134 391.292 191.336 390.495 190.354 390.495 cv
189.371 390.495 188.574 391.292 188.574 392.274 cv
188.574 393.256 189.371 394.053 190.354 394.053 cv
191.336 394.053 192.134 393.256 192.134 392.274 cv
222.854 385.075 mo
222.854 384.092 222.056 383.293 221.074 383.293 cv
220.091 383.293 219.293 384.092 219.293 385.075 cv
219.293 386.057 220.091 386.854 221.074 386.854 cv
222.056 386.854 222.854 386.057 222.854 385.075 cv
165.974 396.114 mo
165.974 395.131 165.176 394.334 164.194 394.334 cv
163.211 394.334 162.414 395.131 162.414 396.114 cv
162.414 397.096 163.211 397.895 164.194 397.895 cv
165.176 397.895 165.974 397.096 165.974 396.114 cv
219.494 359.874 mo
219.494 358.891 218.697 358.094 217.713 358.094 cv
216.731 358.094 215.934 358.891 215.934 359.874 cv
215.934 360.856 216.731 361.655 217.713 361.655 cv
218.697 361.655 219.494 360.856 219.494 359.874 cv
241.094 356.995 mo
241.094 356.012 240.297 355.213 239.314 355.213 cv
238.332 355.213 237.533 356.012 237.533 356.995 cv
237.533 357.977 238.332 358.774 239.314 358.774 cv
240.297 358.774 241.094 357.977 241.094 356.995 cv
249.254 368.274 mo
249.254 367.292 248.457 366.495 247.475 366.495 cv
246.49 366.495 245.693 367.292 245.693 368.274 cv
245.693 369.256 246.49 370.053 247.475 370.053 cv
248.457 370.053 249.254 369.256 249.254 368.274 cv
261.254 374.754 mo
261.254 373.772 260.457 372.975 259.475 372.975 cv
258.49 372.975 257.693 373.772 257.693 374.754 cv
257.693 375.737 258.49 376.534 259.475 376.534 cv
260.457 376.534 261.254 375.737 261.254 374.754 cv
227.293 364.793 mo
227.293 363.811 226.496 363.014 225.514 363.014 cv
224.531 363.014 223.734 363.811 223.734 364.793 cv
223.734 365.776 224.531 366.575 225.514 366.575 cv
226.496 366.575 227.293 365.776 227.293 364.793 cv
240.133 364.434 mo
240.133 363.452 239.336 362.655 238.354 362.655 cv
237.371 362.655 236.574 363.452 236.574 364.434 cv
236.574 365.417 237.371 366.213 238.354 366.213 cv
239.336 366.213 240.133 365.417 240.133 364.434 cv
274.934 386.034 mo
274.934 385.051 274.137 384.254 273.154 384.254 cv
272.172 384.254 271.373 385.051 271.373 386.034 cv
271.373 387.016 272.172 387.815 273.154 387.815 cv
274.137 387.815 274.934 387.016 274.934 386.034 cv
182.534 387.713 mo
182.534 386.731 181.736 385.934 180.754 385.934 cv
179.771 385.934 178.974 386.731 178.974 387.713 cv
178.974 388.696 179.771 389.495 180.754 389.495 cv
181.736 389.495 182.534 388.696 182.534 387.713 cv
214.334 388.434 mo
214.334 387.452 213.536 386.655 212.554 386.655 cv
211.571 386.655 210.774 387.452 210.774 388.434 cv
210.774 389.417 211.571 390.213 212.554 390.213 cv
213.536 390.213 214.334 389.417 214.334 388.434 cv
230.055 360.354 mo
230.055 359.372 229.256 358.575 228.273 358.575 cv
227.291 358.575 226.494 359.372 226.494 360.354 cv
226.494 361.336 227.291 362.133 228.273 362.133 cv
229.256 362.133 230.055 361.336 230.055 360.354 cv
236.895 359.274 mo
236.895 358.292 236.096 357.495 235.113 357.495 cv
234.131 357.495 233.334 358.292 233.334 359.274 cv
233.334 360.256 234.131 361.053 235.113 361.053 cv
236.096 361.053 236.895 360.256 236.895 359.274 cv
271.094 388.194 mo
271.094 387.211 270.297 386.415 269.314 386.415 cv
268.332 386.415 267.533 387.211 267.533 388.194 cv
267.533 389.176 268.332 389.975 269.314 389.975 cv
270.297 389.975 271.094 389.176 271.094 388.194 cv
247.453 375.354 mo
247.453 374.372 246.656 373.575 245.674 373.575 cv
244.691 373.575 243.895 374.372 243.895 375.354 cv
243.895 376.336 244.691 377.133 245.674 377.133 cv
246.656 377.133 247.453 376.336 247.453 375.354 cv
167.174 404.274 mo
167.174 403.292 166.376 402.495 165.394 402.495 cv
164.411 402.495 163.614 403.292 163.614 404.274 cv
163.614 405.256 164.411 406.053 165.394 406.053 cv
166.376 406.053 167.174 405.256 167.174 404.274 cv
267.494 381.834 mo
267.494 380.852 266.697 380.053 265.713 380.053 cv
264.73 380.053 263.934 380.852 263.934 381.834 cv
263.934 382.817 264.73 383.614 265.713 383.614 cv
266.697 383.614 267.494 382.817 267.494 381.834 cv
174.494 398.155 mo
174.494 397.172 173.696 396.374 172.714 396.374 cv
171.731 396.374 170.934 397.172 170.934 398.155 cv
170.934 399.137 171.731 399.934 172.714 399.934 cv
173.696 399.934 174.494 399.137 174.494 398.155 cv
241.814 368.274 mo
241.814 367.292 241.016 366.495 240.033 366.495 cv
239.051 366.495 238.254 367.292 238.254 368.274 cv
238.254 369.256 239.051 370.053 240.033 370.053 cv
241.016 370.053 241.814 369.256 241.814 368.274 cv
210.854 368.155 mo
210.854 367.172 210.056 366.374 209.074 366.374 cv
208.091 366.374 207.294 367.172 207.294 368.155 cv
207.294 369.137 208.091 369.934 209.074 369.934 cv
210.056 369.934 210.854 369.137 210.854 368.155 cv
192.134 384.114 mo
192.134 383.131 191.336 382.334 190.354 382.334 cv
189.371 382.334 188.574 383.131 188.574 384.114 cv
188.574 385.096 189.371 385.895 190.354 385.895 cv
191.336 385.895 192.134 385.096 192.134 384.114 cv
224.293 375.114 mo
224.293 374.131 223.497 373.334 222.514 373.334 cv
221.531 373.334 220.734 374.131 220.734 375.114 cv
220.734 376.096 221.531 376.895 222.514 376.895 cv
223.497 376.895 224.293 376.096 224.293 375.114 cv
171.374 394.194 mo
171.374 393.211 170.576 392.415 169.594 392.415 cv
168.611 392.415 167.814 393.211 167.814 394.194 cv
167.814 395.176 168.611 395.975 169.594 395.975 cv
170.576 395.975 171.374 395.176 171.374 394.194 cv
266.293 392.995 mo
266.293 392.012 265.496 391.213 264.514 391.213 cv
263.531 391.213 262.734 392.012 262.734 392.995 cv
262.734 393.977 263.531 394.774 264.514 394.774 cv
265.496 394.774 266.293 393.977 266.293 392.995 cv
176.654 399.475 mo
176.654 398.491 175.856 397.694 174.874 397.694 cv
173.891 397.694 173.094 398.491 173.094 399.475 cv
173.094 400.458 173.891 401.254 174.874 401.254 cv
175.856 401.254 176.654 400.458 176.654 399.475 cv
226.213 367.075 mo
226.213 366.092 225.416 365.293 224.434 365.293 cv
223.452 365.293 222.654 366.092 222.654 367.075 cv
222.654 368.057 223.452 368.854 224.434 368.854 cv
225.416 368.854 226.213 368.057 226.213 367.075 cv
176.294 395.395 mo
176.294 394.411 175.497 393.614 174.514 393.614 cv
173.531 393.614 172.734 394.411 172.734 395.395 cv
172.734 396.377 173.531 397.174 174.514 397.174 cv
175.497 397.174 176.294 396.377 176.294 395.395 cv
194.774 398.514 mo
194.774 397.532 193.976 396.735 192.994 396.735 cv
192.011 396.735 191.214 397.532 191.214 398.514 cv
191.214 399.497 192.011 400.293 192.994 400.293 cv
193.976 400.293 194.774 399.497 194.774 398.514 cv
269.174 388.674 mo
269.174 387.692 268.377 386.895 267.395 386.895 cv
266.412 386.895 265.613 387.692 265.613 388.674 cv
265.613 389.657 266.412 390.454 267.395 390.454 cv
268.377 390.454 269.174 389.657 269.174 388.674 cv
164.054 412.434 mo
164.054 411.452 163.256 410.655 162.274 410.655 cv
161.291 410.655 160.494 411.452 160.494 412.434 cv
160.494 413.417 161.291 414.213 162.274 414.213 cv
163.256 414.213 164.054 413.417 164.054 412.434 cv
274.453 381.475 mo
274.453 380.491 273.656 379.694 272.674 379.694 cv
271.691 379.694 270.895 380.491 270.895 381.475 cv
270.895 382.458 271.691 383.254 272.674 383.254 cv
273.656 383.254 274.453 382.458 274.453 381.475 cv
203.534 382.674 mo
203.534 381.692 202.736 380.895 201.754 380.895 cv
200.771 380.895 199.974 381.692 199.974 382.674 cv
199.974 383.657 200.771 384.454 201.754 384.454 cv
202.736 384.454 203.534 383.657 203.534 382.674 cv
226.334 379.674 mo
226.334 378.692 225.537 377.895 224.554 377.895 cv
223.571 377.895 222.774 378.692 222.774 379.674 cv
222.774 380.657 223.571 381.454 224.554 381.454 cv
225.537 381.454 226.334 380.657 226.334 379.674 cv
196.214 388.434 mo
196.214 387.452 195.417 386.655 194.434 386.655 cv
193.451 386.655 192.654 387.452 192.654 388.434 cv
192.654 389.417 193.451 390.213 194.434 390.213 cv
195.417 390.213 196.214 389.417 196.214 388.434 cv
192.734 394.194 mo
192.734 393.211 191.937 392.415 190.954 392.415 cv
189.971 392.415 189.174 393.211 189.174 394.194 cv
189.174 395.176 189.971 395.975 190.954 395.975 cv
191.937 395.975 192.734 395.176 192.734 394.194 cv
268.693 385.793 mo
268.693 384.811 267.896 384.014 266.914 384.014 cv
265.932 384.014 265.133 384.811 265.133 385.793 cv
265.133 386.776 265.932 387.575 266.914 387.575 cv
267.896 387.575 268.693 386.776 268.693 385.793 cv
208.454 379.553 mo
208.454 378.571 207.656 377.774 206.674 377.774 cv
205.691 377.774 204.894 378.571 204.894 379.553 cv
204.894 380.538 205.691 381.334 206.674 381.334 cv
207.656 381.334 208.454 380.538 208.454 379.553 cv
280.334 384.475 mo
280.334 383.491 279.537 382.694 278.555 382.694 cv
277.57 382.694 276.773 383.491 276.773 384.475 cv
276.773 385.458 277.57 386.254 278.555 386.254 cv
279.537 386.254 280.334 385.458 280.334 384.475 cv
234.613 363.235 mo
234.613 362.252 233.816 361.454 232.834 361.454 cv
231.852 361.454 231.055 362.252 231.055 363.235 cv
231.055 364.217 231.852 365.014 232.834 365.014 cv
233.816 365.014 234.613 364.217 234.613 363.235 cv
275.174 396.114 mo
275.174 395.131 274.377 394.334 273.395 394.334 cv
272.412 394.334 271.613 395.131 271.613 396.114 cv
271.613 397.096 272.412 397.895 273.395 397.895 cv
274.377 397.895 275.174 397.096 275.174 396.114 cv
205.694 379.915 mo
205.694 378.932 204.896 378.133 203.914 378.133 cv
202.931 378.133 202.134 378.932 202.134 379.915 cv
202.134 380.897 202.931 381.694 203.914 381.694 cv
204.896 381.694 205.694 380.897 205.694 379.915 cv
223.574 372.594 mo
223.574 371.612 222.776 370.815 221.793 370.815 cv
220.811 370.815 220.014 371.612 220.014 372.594 cv
220.014 373.577 220.811 374.374 221.793 374.374 cv
222.776 374.374 223.574 373.577 223.574 372.594 cv
248.895 380.034 mo
248.895 379.051 248.096 378.254 247.113 378.254 cv
246.131 378.254 245.334 379.051 245.334 380.034 cv
245.334 381.016 246.131 381.815 247.113 381.815 cv
248.096 381.815 248.895 381.016 248.895 380.034 cv
206.534 367.315 mo
206.534 366.333 205.736 365.534 204.754 365.534 cv
203.771 365.534 202.974 366.333 202.974 367.315 cv
202.974 368.297 203.771 369.094 204.754 369.094 cv
205.736 369.094 206.534 368.297 206.534 367.315 cv
191.654 401.874 mo
191.654 400.891 190.856 400.094 189.874 400.094 cv
188.891 400.094 188.094 400.891 188.094 401.874 cv
188.094 402.856 188.891 403.655 189.874 403.655 cv
190.856 403.655 191.654 402.856 191.654 401.874 cv
205.094 385.075 mo
205.094 384.092 204.296 383.293 203.314 383.293 cv
202.331 383.293 201.534 384.092 201.534 385.075 cv
201.534 386.057 202.331 386.854 203.314 386.854 cv
204.296 386.854 205.094 386.057 205.094 385.075 cv
197.174 396.834 mo
197.174 395.852 196.376 395.053 195.394 395.053 cv
194.411 395.053 193.614 395.852 193.614 396.834 cv
193.614 397.817 194.411 398.614 195.394 398.614 cv
196.376 398.614 197.174 397.817 197.174 396.834 cv
172.694 401.874 mo
172.694 400.891 171.896 400.094 170.914 400.094 cv
169.931 400.094 169.134 400.891 169.134 401.874 cv
169.134 402.856 169.931 403.655 170.914 403.655 cv
171.896 403.655 172.694 402.856 172.694 401.874 cv
240.613 368.034 mo
240.613 367.051 239.816 366.254 238.834 366.254 cv
237.852 366.254 237.055 367.051 237.055 368.034 cv
237.055 369.016 237.852 369.815 238.834 369.815 cv
239.816 369.815 240.613 369.016 240.613 368.034 cv
197.894 394.674 mo
197.894 393.692 197.096 392.895 196.114 392.895 cv
195.131 392.895 194.334 393.692 194.334 394.674 cv
194.334 395.657 195.131 396.454 196.114 396.454 cv
197.096 396.454 197.894 395.657 197.894 394.674 cv
269.773 386.633 mo
269.773 385.651 268.977 384.854 267.994 384.854 cv
267.012 384.854 266.213 385.651 266.213 386.633 cv
266.213 387.618 267.012 388.415 267.994 388.415 cv
268.977 388.415 269.773 387.618 269.773 386.633 cv
249.014 382.915 mo
249.014 381.932 248.217 381.133 247.234 381.133 cv
246.252 381.133 245.453 381.932 245.453 382.915 cv
245.453 383.897 246.252 384.694 247.234 384.694 cv
248.217 384.694 249.014 383.897 249.014 382.915 cv
233.895 370.075 mo
233.895 369.092 233.096 368.293 232.113 368.293 cv
231.131 368.293 230.334 369.092 230.334 370.075 cv
230.334 371.057 231.131 371.854 232.113 371.854 cv
233.096 371.854 233.895 371.057 233.895 370.075 cv
185.774 405.954 mo
185.774 404.971 184.976 404.174 183.994 404.174 cv
183.011 404.174 182.214 404.971 182.214 405.954 cv
182.214 406.936 183.011 407.735 183.994 407.735 cv
184.976 407.735 185.774 406.936 185.774 405.954 cv
255.254 388.194 mo
255.254 387.211 254.457 386.415 253.475 386.415 cv
252.49 386.415 251.693 387.211 251.693 388.194 cv
251.693 389.176 252.49 389.975 253.475 389.975 cv
254.457 389.975 255.254 389.176 255.254 388.194 cv
176.534 415.674 mo
176.534 414.692 175.736 413.895 174.754 413.895 cv
173.771 413.895 172.974 414.692 172.974 415.674 cv
172.974 416.657 173.771 417.454 174.754 417.454 cv
175.736 417.454 176.534 416.657 176.534 415.674 cv
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWBU+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A77988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C312D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1E4FEB02B613916D7> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWBU+Helvetica /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/DVPWBU+Helvetica*1 [48{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 73{/.notdef}rp /minus 128{/.notdef}rp]DVPWBU+Helvetica nfDVPWBU+Helvetica*1 [9 0 0 -9 0 0 ]msf154.942 458.87 mo(\1772)[5.25586 0 ]xsh186.622 458.87 mo(\1771)[5.25586 0 ]xsh220.926 458.87 mo(01)[31.6709 0 ]xsh284.278 458.87 mo(2)sh155.414 441.764 mo
291.703 441.764 li
291.703 314.995 li
155.414 314.995 li
155.414 441.764 li
@
gsave
291.703 441.764 mo
427.984 441.764 li
427.984 314.995 li
291.703 314.995 li
291.703 441.764 li
cp
clp
291.703 330.145 mo
427.984 330.145 li
291.703 352.075 mo
427.984 352.075 li
291.703 374.014 mo
427.984 374.014 li
291.703 395.944 mo
427.984 395.944 li
291.703 417.883 mo
427.984 417.883 li
291.703 439.815 mo
427.984 439.815 li
423.064 441.764 mo
423.064 314.995 li
391.383 441.764 mo
391.383 314.995 li
359.713 441.764 mo
359.713 314.995 li
328.033 441.764 mo
328.033 314.995 li
296.354 441.764 mo
296.354 314.995 li
0 0 0 0.1725 cmyk
@
grestore
291.703 441.764 mo
427.984 441.764 li
427.984 314.995 li
291.703 314.995 li
291.703 441.764 li
310.334 413.633 mo
310.334 412.651 309.537 411.854 308.555 411.854 cv
307.57 411.854 306.773 412.651 306.773 413.633 cv
306.773 414.618 307.57 415.415 308.555 415.415 cv
309.537 415.415 310.334 414.618 310.334 413.633 cv
374.773 377.995 mo
374.773 377.012 373.977 376.213 372.994 376.213 cv
372.012 376.213 371.213 377.012 371.213 377.995 cv
371.213 378.977 372.012 379.774 372.994 379.774 cv
373.977 379.774 374.773 378.977 374.773 377.995 cv
390.854 389.155 mo
390.854 388.172 390.057 387.374 389.074 387.374 cv
388.092 387.374 387.293 388.172 387.293 389.155 cv
387.293 390.137 388.092 390.934 389.074 390.934 cv
390.057 390.934 390.854 390.137 390.854 389.155 cv
378.373 387.954 mo
378.373 386.971 377.576 386.174 376.594 386.174 cv
375.611 386.174 374.814 386.971 374.814 387.954 cv
374.814 388.936 375.611 389.735 376.594 389.735 cv
377.576 389.735 378.373 388.936 378.373 387.954 cv
333.494 384.114 mo
333.494 383.131 332.697 382.334 331.713 382.334 cv
330.73 382.334 329.934 383.131 329.934 384.114 cv
329.934 385.096 330.73 385.895 331.713 385.895 cv
332.697 385.895 333.494 385.096 333.494 384.114 cv
416.414 388.434 mo
416.414 387.452 415.617 386.655 414.633 386.655 cv
413.65 386.655 412.854 387.452 412.854 388.434 cv
412.854 389.417 413.65 390.213 414.633 390.213 cv
415.617 390.213 416.414 389.417 416.414 388.434 cv
359.414 359.395 mo
359.414 358.411 358.617 357.614 357.633 357.614 cv
356.65 357.614 355.854 358.411 355.854 359.395 cv
355.854 360.377 356.65 361.174 357.633 361.174 cv
358.617 361.174 359.414 360.377 359.414 359.395 cv
327.494 400.915 mo
327.494 399.932 326.697 399.133 325.713 399.133 cv
324.73 399.133 323.934 399.932 323.934 400.915 cv
323.934 401.897 324.73 402.694 325.713 402.694 cv
326.697 402.694 327.494 401.897 327.494 400.915 cv
338.055 376.194 mo
338.055 375.211 337.256 374.415 336.273 374.415 cv
335.291 374.415 334.494 375.211 334.494 376.194 cv
334.494 377.176 335.291 377.975 336.273 377.975 cv
337.256 377.975 338.055 377.176 338.055 376.194 cv
321.014 409.434 mo
321.014 408.452 320.217 407.655 319.234 407.655 cv
318.252 407.655 317.453 408.452 317.453 409.434 cv
317.453 410.417 318.252 411.213 319.234 411.213 cv
320.217 411.213 321.014 410.417 321.014 409.434 cv
421.814 382.434 mo
421.814 381.452 421.016 380.655 420.033 380.655 cv
419.051 380.655 418.254 381.452 418.254 382.434 cv
418.254 383.417 419.051 384.213 420.033 384.213 cv
421.016 384.213 421.814 383.417 421.814 382.434 cv
334.814 391.075 mo
334.814 390.092 334.016 389.293 333.033 389.293 cv
332.051 389.293 331.254 390.092 331.254 391.075 cv
331.254 392.057 332.051 392.854 333.033 392.854 cv
334.016 392.854 334.814 392.057 334.814 391.075 cv
372.613 376.434 mo
372.613 375.452 371.816 374.655 370.834 374.655 cv
369.852 374.655 369.055 375.452 369.055 376.434 cv
369.055 377.417 369.852 378.213 370.834 378.213 cv
371.816 378.213 372.613 377.417 372.613 376.434 cv
367.574 367.315 mo
367.574 366.333 366.775 365.534 365.793 365.534 cv
364.811 365.534 364.014 366.333 364.014 367.315 cv
364.014 368.297 364.811 369.094 365.793 369.094 cv
366.775 369.094 367.574 368.297 367.574 367.315 cv
309.734 401.034 mo
309.734 400.051 308.936 399.254 307.953 399.254 cv
306.971 399.254 306.174 400.051 306.174 401.034 cv
306.174 402.016 306.971 402.815 307.953 402.815 cv
308.936 402.815 309.734 402.016 309.734 401.034 cv
388.453 371.633 mo
388.453 370.651 387.656 369.854 386.674 369.854 cv
385.691 369.854 384.895 370.651 384.895 371.633 cv
384.895 372.618 385.691 373.415 386.674 373.415 cv
387.656 373.415 388.453 372.618 388.453 371.633 cv
374.055 373.915 mo
374.055 372.932 373.256 372.133 372.273 372.133 cv
371.291 372.133 370.494 372.932 370.494 373.915 cv
370.494 374.897 371.291 375.694 372.273 375.694 cv
373.256 375.694 374.055 374.897 374.055 373.915 cv
416.895 390.354 mo
416.895 389.372 416.096 388.575 415.113 388.575 cv
414.131 388.575 413.334 389.372 413.334 390.354 cv
413.334 391.336 414.131 392.133 415.113 392.133 cv
416.096 392.133 416.895 391.336 416.895 390.354 cv
320.773 392.754 mo
320.773 391.772 319.977 390.975 318.994 390.975 cv
318.012 390.975 317.213 391.772 317.213 392.754 cv
317.213 393.737 318.012 394.534 318.994 394.534 cv
319.977 394.534 320.773 393.737 320.773 392.754 cv
375.494 368.034 mo
375.494 367.051 374.697 366.254 373.713 366.254 cv
372.73 366.254 371.934 367.051 371.934 368.034 cv
371.934 369.016 372.73 369.815 373.713 369.815 cv
374.697 369.815 375.494 369.016 375.494 368.034 cv
346.094 377.874 mo
346.094 376.891 345.297 376.094 344.314 376.094 cv
343.332 376.094 342.533 376.891 342.533 377.874 cv
342.533 378.856 343.332 379.655 344.314 379.655 cv
345.297 379.655 346.094 378.856 346.094 377.874 cv
300.373 402.114 mo
300.373 401.131 299.576 400.334 298.594 400.334 cv
297.611 400.334 296.814 401.131 296.814 402.114 cv
296.814 403.096 297.611 403.895 298.594 403.895 cv
299.576 403.895 300.373 403.096 300.373 402.114 cv
388.453 378.475 mo
388.453 377.491 387.656 376.694 386.674 376.694 cv
385.691 376.694 384.895 377.491 384.895 378.475 cv
384.895 379.458 385.691 380.254 386.674 380.254 cv
387.656 380.254 388.453 379.458 388.453 378.475 cv
347.895 383.633 mo
347.895 382.651 347.096 381.854 346.113 381.854 cv
345.131 381.854 344.334 382.651 344.334 383.633 cv
344.334 384.618 345.131 385.415 346.113 385.415 cv
347.096 385.415 347.895 384.618 347.895 383.633 cv
374.055 384.954 mo
374.055 383.971 373.256 383.174 372.273 383.174 cv
371.291 383.174 370.494 383.971 370.494 384.954 cv
370.494 385.936 371.291 386.735 372.273 386.735 cv
373.256 386.735 374.055 385.936 374.055 384.954 cv
325.814 401.034 mo
325.814 400.051 325.016 399.254 324.033 399.254 cv
323.051 399.254 322.254 400.051 322.254 401.034 cv
322.254 402.016 323.051 402.815 324.033 402.815 cv
325.016 402.815 325.814 402.016 325.814 401.034 cv
375.494 387.954 mo
375.494 386.971 374.697 386.174 373.713 386.174 cv
372.73 386.174 371.934 386.971 371.934 387.954 cv
371.934 388.936 372.73 389.735 373.713 389.735 cv
374.697 389.735 375.494 388.936 375.494 387.954 cv
376.693 363.114 mo
376.693 362.131 375.896 361.334 374.914 361.334 cv
373.932 361.334 373.133 362.131 373.133 363.114 cv
373.133 364.096 373.932 364.895 374.914 364.895 cv
375.896 364.895 376.693 364.096 376.693 363.114 cv
311.414 403.434 mo
311.414 402.452 310.617 401.655 309.633 401.655 cv
308.65 401.655 307.854 402.452 307.854 403.434 cv
307.854 404.417 308.65 405.213 309.633 405.213 cv
310.617 405.213 311.414 404.417 311.414 403.434 cv
350.773 371.633 mo
350.773 370.651 349.977 369.854 348.994 369.854 cv
348.012 369.854 347.213 370.651 347.213 371.633 cv
347.213 372.618 348.012 373.415 348.994 373.415 cv
349.977 373.415 350.773 372.618 350.773 371.633 cv
379.213 369.475 mo
379.213 368.491 378.416 367.694 377.434 367.694 cv
376.451 367.694 375.654 368.491 375.654 369.475 cv
375.654 370.458 376.451 371.254 377.434 371.254 cv
378.416 371.254 379.213 370.458 379.213 369.475 cv
307.814 405.235 mo
307.814 404.252 307.016 403.454 306.033 403.454 cv
305.051 403.454 304.254 404.252 304.254 405.235 cv
304.254 406.217 305.051 407.014 306.033 407.014 cv
307.016 407.014 307.814 406.217 307.814 405.235 cv
396.133 398.754 mo
396.133 397.772 395.336 396.975 394.354 396.975 cv
393.371 396.975 392.574 397.772 392.574 398.754 cv
392.574 399.737 393.371 400.534 394.354 400.534 cv
395.336 400.534 396.133 399.737 396.133 398.754 cv
353.174 379.793 mo
353.174 378.811 352.377 378.014 351.395 378.014 cv
350.412 378.014 349.613 378.811 349.613 379.793 cv
349.613 380.776 350.412 381.575 351.395 381.575 cv
352.377 381.575 353.174 380.776 353.174 379.793 cv
308.533 396.114 mo
308.533 395.131 307.736 394.334 306.754 394.334 cv
305.771 394.334 304.975 395.131 304.975 396.114 cv
304.975 397.096 305.771 397.895 306.754 397.895 cv
307.736 397.895 308.533 397.096 308.533 396.114 cv
314.533 404.155 mo
314.533 403.172 313.736 402.374 312.754 402.374 cv
311.771 402.374 310.975 403.172 310.975 404.155 cv
310.975 405.137 311.771 405.934 312.754 405.934 cv
313.736 405.934 314.533 405.137 314.533 404.155 cv
368.055 372.834 mo
368.055 371.852 367.256 371.053 366.273 371.053 cv
365.291 371.053 364.494 371.852 364.494 372.834 cv
364.494 373.817 365.291 374.614 366.273 374.614 cv
367.256 374.614 368.055 373.817 368.055 372.834 cv
392.293 389.633 mo
392.293 388.651 391.496 387.854 390.514 387.854 cv
389.531 387.854 388.734 388.651 388.734 389.633 cv
388.734 390.618 389.531 391.415 390.514 391.415 cv
391.496 391.415 392.293 390.618 392.293 389.633 cv
346.453 382.434 mo
346.453 381.452 345.656 380.655 344.674 380.655 cv
343.691 380.655 342.895 381.452 342.895 382.434 cv
342.895 383.417 343.691 384.213 344.674 384.213 cv
345.656 384.213 346.453 383.417 346.453 382.434 cv
364.094 358.915 mo
364.094 357.932 363.297 357.133 362.314 357.133 cv
361.332 357.133 360.533 357.932 360.533 358.915 cv
360.533 359.897 361.332 360.694 362.314 360.694 cv
363.297 360.694 364.094 359.897 364.094 358.915 cv
376.934 379.793 mo
376.934 378.811 376.137 378.014 375.154 378.014 cv
374.172 378.014 373.373 378.811 373.373 379.793 cv
373.373 380.776 374.172 381.575 375.154 381.575 cv
376.137 381.575 376.934 380.776 376.934 379.793 cv
319.574 399.235 mo
319.574 398.252 318.775 397.454 317.793 397.454 cv
316.811 397.454 316.014 398.252 316.014 399.235 cv
316.014 400.217 316.811 401.014 317.793 401.014 cv
318.775 401.014 319.574 400.217 319.574 399.235 cv
361.814 382.315 mo
361.814 381.333 361.016 380.534 360.033 380.534 cv
359.051 380.534 358.254 381.333 358.254 382.315 cv
358.254 383.297 359.051 384.094 360.033 384.094 cv
361.016 384.094 361.814 383.297 361.814 382.315 cv
352.453 388.194 mo
352.453 387.211 351.656 386.415 350.674 386.415 cv
349.691 386.415 348.895 387.211 348.895 388.194 cv
348.895 389.176 349.691 389.975 350.674 389.975 cv
351.656 389.975 352.453 389.176 352.453 388.194 cv
317.654 392.633 mo
317.654 391.651 316.855 390.854 315.873 390.854 cv
314.891 390.854 314.094 391.651 314.094 392.633 cv
314.094 393.618 314.891 394.415 315.873 394.415 cv
316.855 394.415 317.654 393.618 317.654 392.633 cv
394.453 391.915 mo
394.453 390.932 393.656 390.133 392.674 390.133 cv
391.691 390.133 390.895 390.932 390.895 391.915 cv
390.895 392.897 391.691 393.694 392.674 393.694 cv
393.656 393.694 394.453 392.897 394.453 391.915 cv
312.494 407.155 mo
312.494 406.172 311.697 405.374 310.713 405.374 cv
309.73 405.374 308.934 406.172 308.934 407.155 cv
308.934 408.137 309.73 408.934 310.713 408.934 cv
311.697 408.934 312.494 408.137 312.494 407.155 cv
382.213 373.553 mo
382.213 372.571 381.416 371.774 380.434 371.774 cv
379.451 371.774 378.654 372.571 378.654 373.553 cv
378.654 374.538 379.451 375.334 380.434 375.334 cv
381.416 375.334 382.213 374.538 382.213 373.553 cv
379.094 364.915 mo
379.094 363.932 378.297 363.133 377.314 363.133 cv
376.332 363.133 375.533 363.932 375.533 364.915 cv
375.533 365.897 376.332 366.694 377.314 366.694 cv
378.297 366.694 379.094 365.897 379.094 364.915 cv
378.373 384.954 mo
378.373 383.971 377.576 383.174 376.594 383.174 cv
375.611 383.174 374.814 383.971 374.814 384.954 cv
374.814 385.936 375.611 386.735 376.594 386.735 cv
377.576 386.735 378.373 385.936 378.373 384.954 cv
372.133 362.995 mo
372.133 362.012 371.336 361.213 370.354 361.213 cv
369.371 361.213 368.574 362.012 368.574 362.995 cv
368.574 363.977 369.371 364.774 370.354 364.774 cv
371.336 364.774 372.133 363.977 372.133 362.995 cv
357.254 380.514 mo
357.254 379.532 356.457 378.735 355.475 378.735 cv
354.49 378.735 353.693 379.532 353.693 380.514 cv
353.693 381.497 354.49 382.293 355.475 382.293 cv
356.457 382.293 357.254 381.497 357.254 380.514 cv
323.773 386.274 mo
323.773 385.292 322.977 384.495 321.994 384.495 cv
321.012 384.495 320.213 385.292 320.213 386.274 cv
320.213 387.256 321.012 388.053 321.994 388.053 cv
322.977 388.053 323.773 387.256 323.773 386.274 cv
350.293 378.354 mo
350.293 377.372 349.496 376.575 348.514 376.575 cv
347.531 376.575 346.734 377.372 346.734 378.354 cv
346.734 379.336 347.531 380.133 348.514 380.133 cv
349.496 380.133 350.293 379.336 350.293 378.354 cv
338.293 398.274 mo
338.293 397.292 337.496 396.495 336.514 396.495 cv
335.531 396.495 334.734 397.292 334.734 398.274 cv
334.734 399.256 335.531 400.053 336.514 400.053 cv
337.496 400.053 338.293 399.256 338.293 398.274 cv
397.574 391.793 mo
397.574 390.811 396.775 390.014 395.793 390.014 cv
394.811 390.014 394.014 390.811 394.014 391.793 cv
394.014 392.776 394.811 393.575 395.793 393.575 cv
396.775 393.575 397.574 392.776 397.574 391.793 cv
320.293 409.315 mo
320.293 408.333 319.496 407.534 318.514 407.534 cv
317.531 407.534 316.734 408.333 316.734 409.315 cv
316.734 410.297 317.531 411.094 318.514 411.094 cv
319.496 411.094 320.293 410.297 320.293 409.315 cv
398.055 387.475 mo
398.055 386.491 397.256 385.694 396.273 385.694 cv
395.291 385.694 394.494 386.491 394.494 387.475 cv
394.494 388.458 395.291 389.254 396.273 389.254 cv
397.256 389.254 398.055 388.458 398.055 387.475 cv
407.895 381.713 mo
407.895 380.731 407.096 379.934 406.113 379.934 cv
405.131 379.934 404.334 380.731 404.334 381.713 cv
404.334 382.696 405.131 383.495 406.113 383.495 cv
407.096 383.495 407.895 382.696 407.895 381.713 cv
355.574 376.194 mo
355.574 375.211 354.775 374.415 353.793 374.415 cv
352.811 374.415 352.014 375.211 352.014 376.194 cv
352.014 377.176 352.811 377.975 353.793 377.975 cv
354.775 377.975 355.574 377.176 355.574 376.194 cv
338.055 373.793 mo
338.055 372.811 337.256 372.014 336.273 372.014 cv
335.291 372.014 334.494 372.811 334.494 373.793 cv
334.494 374.776 335.291 375.575 336.273 375.575 cv
337.256 375.575 338.055 374.776 338.055 373.793 cv
414.133 399.114 mo
414.133 398.131 413.336 397.334 412.354 397.334 cv
411.371 397.334 410.574 398.131 410.574 399.114 cv
410.574 400.096 411.371 400.895 412.354 400.895 cv
413.336 400.895 414.133 400.096 414.133 399.114 cv
353.895 378.114 mo
353.895 377.131 353.096 376.334 352.113 376.334 cv
351.131 376.334 350.334 377.131 350.334 378.114 cv
350.334 379.096 351.131 379.895 352.113 379.895 cv
353.096 379.895 353.895 379.096 353.895 378.114 cv
306.133 408.594 mo
306.133 407.612 305.336 406.815 304.354 406.815 cv
303.371 406.815 302.574 407.612 302.574 408.594 cv
302.574 409.577 303.371 410.374 304.354 410.374 cv
305.336 410.374 306.133 409.577 306.133 408.594 cv
393.975 386.874 mo
393.975 385.891 393.176 385.094 392.193 385.094 cv
391.211 385.094 390.414 385.891 390.414 386.874 cv
390.414 387.856 391.211 388.655 392.193 388.655 cv
393.176 388.655 393.975 387.856 393.975 386.874 cv
359.055 385.075 mo
359.055 384.092 358.256 383.293 357.273 383.293 cv
356.291 383.293 355.494 384.092 355.494 385.075 cv
355.494 386.057 356.291 386.854 357.273 386.854 cv
358.256 386.854 359.055 386.057 359.055 385.075 cv
355.814 359.874 mo
355.814 358.891 355.016 358.094 354.033 358.094 cv
353.051 358.094 352.254 358.891 352.254 359.874 cv
352.254 360.856 353.051 361.655 354.033 361.655 cv
355.016 361.655 355.814 360.856 355.814 359.874 cv
416.533 372.114 mo
416.533 371.131 415.736 370.334 414.754 370.334 cv
413.771 370.334 412.975 371.131 412.975 372.114 cv
412.975 373.096 413.771 373.895 414.754 373.895 cv
415.736 373.895 416.533 373.096 416.533 372.114 cv
385.574 368.274 mo
385.574 367.292 384.775 366.495 383.793 366.495 cv
382.811 366.495 382.014 367.292 382.014 368.274 cv
382.014 369.256 382.811 370.053 383.793 370.053 cv
384.775 370.053 385.574 369.256 385.574 368.274 cv
363.494 364.793 mo
363.494 363.811 362.697 363.014 361.713 363.014 cv
360.73 363.014 359.934 363.811 359.934 364.793 cv
359.934 365.776 360.73 366.575 361.713 366.575 cv
362.697 366.575 363.494 365.776 363.494 364.793 cv
417.494 374.514 mo
417.494 373.532 416.697 372.735 415.713 372.735 cv
414.73 372.735 413.934 373.532 413.934 374.514 cv
413.934 375.497 414.73 376.293 415.713 376.293 cv
416.697 376.293 417.494 375.497 417.494 374.514 cv
368.654 369.713 mo
368.654 368.731 367.855 367.934 366.873 367.934 cv
365.891 367.934 365.094 368.731 365.094 369.713 cv
365.094 370.696 365.891 371.495 366.873 371.495 cv
367.855 371.495 368.654 370.696 368.654 369.713 cv
350.533 388.434 mo
350.533 387.452 349.736 386.655 348.754 386.655 cv
347.771 386.655 346.975 387.452 346.975 388.434 cv
346.975 389.417 347.771 390.213 348.754 390.213 cv
349.736 390.213 350.533 389.417 350.533 388.434 cv
383.654 392.995 mo
383.654 392.012 382.855 391.213 381.873 391.213 cv
380.891 391.213 380.094 392.012 380.094 392.995 cv
380.094 393.977 380.891 394.774 381.873 394.774 cv
382.855 394.774 383.654 393.977 383.654 392.995 cv
360.494 382.674 mo
360.494 381.692 359.697 380.895 358.713 380.895 cv
357.73 380.895 356.934 381.692 356.934 382.674 cv
356.934 383.657 357.73 384.454 358.713 384.454 cv
359.697 384.454 360.494 383.657 360.494 382.674 cv
326.533 395.874 mo
326.533 394.891 325.736 394.094 324.754 394.094 cv
323.771 394.094 322.975 394.891 322.975 395.874 cv
322.975 396.856 323.771 397.655 324.754 397.655 cv
325.736 397.655 326.533 396.856 326.533 395.874 cv
373.094 359.274 mo
373.094 358.292 372.297 357.495 371.314 357.495 cv
370.332 357.495 369.533 358.292 369.533 359.274 cv
369.533 360.256 370.332 361.053 371.314 361.053 cv
372.297 361.053 373.094 360.256 373.094 359.274 cv
364.934 370.075 mo
364.934 369.092 364.137 368.293 363.154 368.293 cv
362.172 368.293 361.373 369.092 361.373 370.075 cv
361.373 371.057 362.172 371.854 363.154 371.854 cv
364.137 371.854 364.934 371.057 364.934 370.075 cv
407.414 388.194 mo
407.414 387.211 406.617 386.415 405.633 386.415 cv
404.65 386.415 403.854 387.211 403.854 388.194 cv
403.854 389.176 404.65 389.975 405.633 389.975 cv
406.617 389.975 407.414 389.176 407.414 388.194 cv
310.693 398.155 mo
310.693 397.172 309.896 396.374 308.914 396.374 cv
307.932 396.374 307.133 397.172 307.133 398.155 cv
307.133 399.137 307.932 399.934 308.914 399.934 cv
309.896 399.934 310.693 399.137 310.693 398.155 cv
378.133 368.274 mo
378.133 367.292 377.336 366.495 376.354 366.495 cv
375.371 366.495 374.574 367.292 374.574 368.274 cv
374.574 369.256 375.371 370.053 376.354 370.053 cv
377.336 370.053 378.133 369.256 378.133 368.274 cv
307.574 394.194 mo
307.574 393.211 306.775 392.415 305.793 392.415 cv
304.811 392.415 304.014 393.211 304.014 394.194 cv
304.014 395.176 304.811 395.975 305.793 395.975 cv
306.775 395.975 307.574 395.176 307.574 394.194 cv
411.494 400.434 mo
411.494 399.452 410.697 398.655 409.713 398.655 cv
408.73 398.655 407.934 399.452 407.934 400.434 cv
407.934 401.417 408.73 402.213 409.713 402.213 cv
410.697 402.213 411.494 401.417 411.494 400.434 cv
402.854 385.553 mo
402.854 384.571 402.057 383.774 401.074 383.774 cv
400.092 383.774 399.293 384.571 399.293 385.553 cv
399.293 386.538 400.092 387.334 401.074 387.334 cv
402.057 387.334 402.854 386.538 402.854 385.553 cv
312.613 395.395 mo
312.613 394.411 311.816 393.614 310.834 393.614 cv
309.852 393.614 309.055 394.411 309.055 395.395 cv
309.055 396.377 309.852 397.174 310.834 397.174 cv
311.816 397.174 312.613 396.377 312.613 395.395 cv
326.895 401.274 mo
326.895 400.292 326.096 399.495 325.113 399.495 cv
324.131 399.495 323.334 400.292 323.334 401.274 cv
323.334 402.256 324.131 403.053 325.113 403.053 cv
326.096 403.053 326.895 402.256 326.895 401.274 cv
398.773 378.594 mo
398.773 377.612 397.977 376.815 396.994 376.815 cv
396.012 376.815 395.213 377.612 395.213 378.594 cv
395.213 379.577 396.012 380.374 396.994 380.374 cv
397.977 380.374 398.773 379.577 398.773 378.594 cv
405.373 388.674 mo
405.373 387.692 404.576 386.895 403.594 386.895 cv
402.611 386.895 401.814 387.692 401.814 388.674 cv
401.814 389.657 402.611 390.454 403.594 390.454 cv
404.576 390.454 405.373 389.657 405.373 388.674 cv
327.734 398.034 mo
327.734 397.051 326.936 396.254 325.953 396.254 cv
324.971 396.254 324.174 397.051 324.174 398.034 cv
324.174 399.016 324.971 399.815 325.953 399.815 cv
326.936 399.815 327.734 399.016 327.734 398.034 cv
355.334 373.315 mo
355.334 372.333 354.537 371.534 353.555 371.534 cv
352.57 371.534 351.773 372.333 351.773 373.315 cv
351.773 374.297 352.57 375.094 353.555 375.094 cv
354.537 375.094 355.334 374.297 355.334 373.315 cv
362.533 379.674 mo
362.533 378.692 361.736 377.895 360.754 377.895 cv
359.771 377.895 358.975 378.692 358.975 379.674 cv
358.975 380.657 359.771 381.454 360.754 381.454 cv
361.736 381.454 362.533 380.657 362.533 379.674 cv
328.934 394.194 mo
328.934 393.211 328.137 392.415 327.154 392.415 cv
326.172 392.415 325.373 393.211 325.373 394.194 cv
325.373 395.176 326.172 395.975 327.154 395.975 cv
328.137 395.975 328.934 395.176 328.934 394.194 cv
326.055 399.114 mo
326.055 398.131 325.256 397.334 324.273 397.334 cv
323.291 397.334 322.494 398.131 322.494 399.114 cv
322.494 400.096 323.291 400.895 324.273 400.895 cv
325.256 400.895 326.055 400.096 326.055 399.114 cv
417.254 389.395 mo
417.254 388.411 416.457 387.614 415.475 387.614 cv
414.49 387.614 413.693 388.411 413.693 389.395 cv
413.693 390.377 414.49 391.174 415.475 391.174 cv
416.457 391.174 417.254 390.377 417.254 389.395 cv
405.975 381.235 mo
405.975 380.252 405.176 379.454 404.193 379.454 cv
403.211 379.454 402.414 380.252 402.414 381.235 cv
402.414 382.217 403.211 383.014 404.193 383.014 cv
405.176 383.014 405.975 382.217 405.975 381.235 cv
396.133 376.553 mo
396.133 375.571 395.336 374.774 394.354 374.774 cv
393.371 374.774 392.574 375.571 392.574 376.553 cv
392.574 377.538 393.371 378.334 394.354 378.334 cv
395.336 378.334 396.133 377.538 396.133 376.553 cv
385.094 380.034 mo
385.094 379.051 384.297 378.254 383.314 378.254 cv
382.332 378.254 381.533 379.051 381.533 380.034 cv
381.533 381.016 382.332 381.815 383.314 381.815 cv
384.297 381.815 385.094 381.016 385.094 380.034 cv
342.854 367.315 mo
342.854 366.333 342.057 365.534 341.074 365.534 cv
340.092 365.534 339.293 366.333 339.293 367.315 cv
339.293 368.297 340.092 369.094 341.074 369.094 cv
342.057 369.094 342.854 368.297 342.854 367.315 cv
327.975 401.874 mo
327.975 400.891 327.176 400.094 326.193 400.094 cv
325.211 400.094 324.414 400.891 324.414 401.874 cv
324.414 402.856 325.211 403.655 326.193 403.655 cv
327.176 403.655 327.975 402.856 327.975 401.874 cv
384.854 377.633 mo
384.854 376.651 384.057 375.854 383.074 375.854 cv
382.092 375.854 381.293 376.651 381.293 377.633 cv
381.293 378.618 382.092 379.415 383.074 379.415 cv
384.057 379.415 384.854 378.618 384.854 377.633 cv
341.293 385.075 mo
341.293 384.092 340.496 383.293 339.514 383.293 cv
338.531 383.293 337.734 384.092 337.734 385.075 cv
337.734 386.057 338.531 386.854 339.514 386.854 cv
340.496 386.854 341.293 386.057 341.293 385.075 cv
413.174 386.754 mo
413.174 385.772 412.377 384.975 411.395 384.975 cv
410.412 384.975 409.613 385.772 409.613 386.754 cv
409.613 387.737 410.412 388.534 411.395 388.534 cv
412.377 388.534 413.174 387.737 413.174 386.754 cv
333.494 396.834 mo
333.494 395.852 332.697 395.053 331.713 395.053 cv
330.73 395.053 329.934 395.852 329.934 396.834 cv
329.934 397.817 330.73 398.614 331.713 398.614 cv
332.697 398.614 333.494 397.817 333.494 396.834 cv
309.014 401.874 mo
309.014 400.891 308.217 400.094 307.234 400.094 cv
306.252 400.094 305.453 400.891 305.453 401.874 cv
305.453 402.856 306.252 403.655 307.234 403.655 cv
308.217 403.655 309.014 402.856 309.014 401.874 cv
347.414 387.235 mo
347.414 386.252 346.617 385.454 345.633 385.454 cv
344.65 385.454 343.854 386.252 343.854 387.235 cv
343.854 388.217 344.65 389.014 345.633 389.014 cv
346.617 389.014 347.414 388.217 347.414 387.235 cv
334.213 394.674 mo
334.213 393.692 333.416 392.895 332.434 392.895 cv
331.451 392.895 330.654 393.692 330.654 394.674 cv
330.654 395.657 331.451 396.454 332.434 396.454 cv
333.416 396.454 334.213 395.657 334.213 394.674 cv
405.975 386.633 mo
405.975 385.651 405.176 384.854 404.193 384.854 cv
403.211 384.854 402.414 385.651 402.414 386.633 cv
402.414 387.618 403.211 388.415 404.193 388.415 cv
405.176 388.415 405.975 387.618 405.975 386.633 cv
385.334 382.915 mo
385.334 381.932 384.537 381.133 383.555 381.133 cv
382.57 381.133 381.773 381.932 381.773 382.915 cv
381.773 383.897 382.57 384.694 383.555 384.694 cv
384.537 384.694 385.334 383.897 385.334 382.915 cv
378.975 367.793 mo
378.975 366.811 378.176 366.014 377.193 366.014 cv
376.211 366.014 375.414 366.811 375.414 367.793 cv
375.414 368.776 376.211 369.575 377.193 369.575 cv
378.176 369.575 378.975 368.776 378.975 367.793 cv
316.213 395.034 mo
316.213 394.051 315.416 393.254 314.434 393.254 cv
313.451 393.254 312.654 394.051 312.654 395.034 cv
312.654 396.016 313.451 396.815 314.434 396.815 cv
315.416 396.815 316.213 396.016 316.213 395.034 cv
321.975 405.954 mo
321.975 404.971 321.176 404.174 320.193 404.174 cv
319.211 404.174 318.414 404.971 318.414 405.954 cv
318.414 406.936 319.211 407.735 320.193 407.735 cv
321.176 407.735 321.975 406.936 321.975 405.954 cv
391.574 388.194 mo
391.574 387.211 390.775 386.415 389.793 386.415 cv
388.811 386.415 388.014 387.211 388.014 388.194 cv
388.014 389.176 388.811 389.975 389.793 389.975 cv
390.775 389.975 391.574 389.176 391.574 388.194 cv
312.854 415.674 mo
312.854 414.692 312.057 413.895 311.074 413.895 cv
310.092 413.895 309.293 414.692 309.293 415.674 cv
309.293 416.657 310.092 417.454 311.074 417.454 cv
312.057 417.454 312.854 416.657 312.854 415.674 cv
373.453 372.354 mo
373.453 371.372 372.656 370.575 371.674 370.575 cv
370.691 370.575 369.895 371.372 369.895 372.354 cv
369.895 373.336 370.691 374.133 371.674 374.133 cv
372.656 374.133 373.453 373.336 373.453 372.354 cv
@
gsave
19.1338 305.485 mo
155.414 305.485 li
155.414 178.714 li
19.1338 178.714 li
19.1338 305.485 li
cp
clp
19.1338 193.864 mo
155.414 193.864 li
19.1338 215.804 mo
155.414 215.804 li
19.1338 237.735 mo
155.414 237.735 li
19.1338 259.674 mo
155.414 259.674 li
19.1338 281.604 mo
155.414 281.604 li
19.1338 303.534 mo
155.414 303.534 li
150.504 305.485 mo
150.504 178.714 li
118.824 305.485 mo
118.824 178.714 li
87.1436 305.485 mo
87.1436 178.714 li
55.4736 305.485 mo
55.4736 178.714 li
23.7939 305.485 mo
23.7939 178.714 li
0 0 0 0.1725 cmyk
@
131.534 242.514 mo
131.534 241.532 130.736 240.735 129.754 240.735 cv
128.771 240.735 127.974 241.532 127.974 242.514 cv
127.974 243.497 128.771 244.293 129.754 244.293 cv
130.736 244.293 131.534 243.497 131.534 242.514 cv
102.254 241.793 mo
102.254 240.811 101.457 240.014 100.474 240.014 cv
99.4912 240.014 98.6938 240.811 98.6938 241.793 cv
98.6938 242.777 99.4912 243.575 100.474 243.575 cv
101.457 243.575 102.254 242.777 102.254 241.793 cv
148.934 231.354 mo
148.934 230.372 148.136 229.574 147.154 229.574 cv
146.171 229.574 145.374 230.372 145.374 231.354 cv
145.374 232.336 146.171 233.134 147.154 233.134 cv
148.136 233.134 148.934 232.336 148.934 231.354 cv
105.854 251.633 mo
105.854 250.651 105.056 249.854 104.074 249.854 cv
103.091 249.854 102.294 250.651 102.294 251.633 cv
102.294 252.616 103.091 253.415 104.074 253.415 cv
105.056 253.415 105.854 252.616 105.854 251.633 cv
143.894 252.114 mo
143.894 251.131 143.096 250.334 142.114 250.334 cv
141.131 250.334 140.334 251.131 140.334 252.114 cv
140.334 253.096 141.131 253.895 142.114 253.895 cv
143.096 253.895 143.894 253.096 143.894 252.114 cv
55.0938 264.594 mo
55.0938 263.612 54.2964 262.815 53.314 262.815 cv
52.3311 262.815 51.5337 263.612 51.5337 264.594 cv
51.5337 265.577 52.3311 266.374 53.314 266.374 cv
54.2964 266.374 55.0938 265.577 55.0938 264.594 cv
65.5337 239.995 mo
65.5337 239.012 64.7363 238.214 63.7539 238.214 cv
62.771 238.214 61.9736 239.012 61.9736 239.995 cv
61.9736 240.977 62.771 241.774 63.7539 241.774 cv
64.7363 241.774 65.5337 240.977 65.5337 239.995 cv
134.774 248.995 mo
134.774 248.012 133.976 247.213 132.994 247.213 cv
132.011 247.213 131.214 248.012 131.214 248.995 cv
131.214 249.977 132.011 250.774 132.994 250.774 cv
133.976 250.774 134.774 249.977 134.774 248.995 cv
46.2139 271.075 mo
46.2139 270.092 45.4165 269.293 44.4336 269.293 cv
43.4512 269.293 42.6538 270.092 42.6538 271.075 cv
42.6538 272.057 43.4512 272.854 44.4336 272.854 cv
45.4165 272.854 46.2139 272.057 46.2139 271.075 cv
123.734 253.075 mo
123.734 252.092 122.937 251.293 121.954 251.293 cv
120.971 251.293 120.174 252.092 120.174 253.075 cv
120.174 254.057 120.971 254.854 121.954 254.854 cv
122.937 254.854 123.734 254.057 123.734 253.075 cv
100.214 240.235 mo
100.214 239.251 99.4165 238.454 98.4336 238.454 cv
97.4512 238.454 96.6538 239.251 96.6538 240.235 cv
96.6538 241.217 97.4512 242.014 98.4336 242.014 cv
99.4165 242.014 100.214 241.217 100.214 240.235 cv
56.0537 254.034 mo
56.0537 253.051 55.2563 252.254 54.2739 252.254 cv
53.291 252.254 52.4937 253.051 52.4937 254.034 cv
52.4937 255.016 53.291 255.815 54.2739 255.815 cv
55.2563 255.815 56.0537 255.016 56.0537 254.034 cv
94.9336 230.994 mo
94.9336 230.012 94.1362 229.214 93.1538 229.214 cv
92.1714 229.214 91.3735 230.012 91.3735 230.994 cv
91.3735 231.977 92.1714 232.774 93.1538 232.774 cv
94.1362 232.774 94.9336 231.977 94.9336 230.994 cv
101.414 237.714 mo
101.414 236.731 100.616 235.934 99.6338 235.934 cv
98.6514 235.934 97.854 236.731 97.854 237.714 cv
97.854 238.697 98.6514 239.495 99.6338 239.495 cv
100.616 239.495 101.414 238.697 101.414 237.714 cv
144.374 254.034 mo
144.374 253.051 143.576 252.254 142.594 252.254 cv
141.611 252.254 140.814 253.051 140.814 254.034 cv
140.814 255.016 141.611 255.815 142.594 255.815 cv
143.576 255.815 144.374 255.016 144.374 254.034 cv
108.494 267.954 mo
108.494 266.971 107.696 266.174 106.714 266.174 cv
105.731 266.174 104.934 266.971 104.934 267.954 cv
104.934 268.936 105.731 269.735 106.714 269.735 cv
107.696 269.735 108.494 268.936 108.494 267.954 cv
78.854 266.754 mo
78.854 265.772 78.0562 264.975 77.0737 264.975 cv
76.0913 264.975 75.2939 265.772 75.2939 266.754 cv
75.2939 267.737 76.0913 268.534 77.0737 268.534 cv
78.0562 268.534 78.854 267.737 78.854 266.754 cv
27.9736 265.793 mo
27.9736 264.811 27.1763 264.014 26.1938 264.014 cv
25.2114 264.014 24.4136 264.811 24.4136 265.793 cv
24.4136 266.776 25.2114 267.575 26.1938 267.575 cv
27.1763 267.575 27.9736 266.776 27.9736 265.793 cv
115.934 242.274 mo
115.934 241.292 115.136 240.495 114.154 240.495 cv
113.171 240.495 112.374 241.292 112.374 242.274 cv
112.374 243.256 113.171 244.053 114.154 244.053 cv
115.136 244.053 115.934 243.256 115.934 242.274 cv
39.6138 266.514 mo
39.6138 265.532 38.8164 264.735 37.834 264.735 cv
36.8511 264.735 36.0537 265.532 36.0537 266.514 cv
36.0537 267.497 36.8511 268.293 37.834 268.293 cv
38.8164 268.293 39.6138 267.497 39.6138 266.514 cv
151.814 242.754 mo
151.814 241.772 151.016 240.974 150.034 240.974 cv
149.051 240.974 148.254 241.772 148.254 242.754 cv
148.254 243.737 149.051 244.534 150.034 244.534 cv
151.016 244.534 151.814 243.737 151.814 242.754 cv
53.4136 264.834 mo
53.4136 263.852 52.6162 263.053 51.6338 263.053 cv
50.6514 263.053 49.854 263.852 49.854 264.834 cv
49.854 265.817 50.6514 266.614 51.6338 266.614 cv
52.6162 266.614 53.4136 265.817 53.4136 264.834 cv
73.334 263.395 mo
73.334 262.411 72.5361 261.614 71.5537 261.614 cv
70.5713 261.614 69.7739 262.411 69.7739 263.395 cv
69.7739 264.377 70.5713 265.174 71.5537 265.174 cv
72.5361 265.174 73.334 264.377 73.334 263.395 cv
103.094 251.633 mo
103.094 250.651 102.296 249.854 101.314 249.854 cv
100.331 249.854 99.5337 250.651 99.5337 251.633 cv
99.5337 252.616 100.331 253.415 101.314 253.415 cv
102.296 253.415 103.094 252.616 103.094 251.633 cv
28.9336 238.194 mo
28.9336 237.211 28.1362 236.415 27.1538 236.415 cv
26.1714 236.415 25.3735 237.211 25.3735 238.194 cv
25.3735 239.176 26.1714 239.974 27.1538 239.974 cv
28.1362 239.974 28.9336 239.176 28.9336 238.194 cv
39.0137 267.235 mo
39.0137 266.252 38.2163 265.454 37.2339 265.454 cv
36.251 265.454 35.4536 266.252 35.4536 267.235 cv
35.4536 268.217 36.251 269.014 37.2339 269.014 cv
38.2163 269.014 39.0137 268.217 39.0137 267.235 cv
123.734 262.434 mo
123.734 261.452 122.937 260.655 121.954 260.655 cv
120.971 260.655 120.174 261.452 120.174 262.434 cv
120.174 263.417 120.971 264.213 121.954 264.213 cv
122.937 264.213 123.734 263.417 123.734 262.434 cv
80.6538 243.594 mo
80.6538 242.612 79.8564 241.814 78.8735 241.814 cv
77.8911 241.814 77.0938 242.612 77.0938 243.594 cv
77.0938 244.577 77.8911 245.374 78.8735 245.374 cv
79.8564 245.374 80.6538 244.577 80.6538 243.594 cv
92.5337 255.594 mo
92.5337 254.612 91.7363 253.815 90.7539 253.815 cv
89.771 253.815 88.9736 254.612 88.9736 255.594 cv
88.9736 256.577 89.771 257.374 90.7539 257.374 cv
91.7363 257.374 92.5337 256.577 92.5337 255.594 cv
73.6938 245.395 mo
73.6938 244.411 72.8965 243.614 71.9136 243.614 cv
70.9312 243.614 70.1338 244.411 70.1338 245.395 cv
70.1338 246.377 70.9312 247.174 71.9136 247.174 cv
72.8965 247.174 73.6938 246.377 73.6938 245.395 cv
73.814 246.114 mo
73.814 245.131 73.0161 244.334 72.0337 244.334 cv
71.0513 244.334 70.2539 245.131 70.2539 246.114 cv
70.2539 247.096 71.0513 247.895 72.0337 247.895 cv
73.0161 247.895 73.814 247.096 73.814 246.114 cv
38.8936 269.395 mo
38.8936 268.411 38.0962 267.614 37.1138 267.614 cv
36.1313 267.614 35.334 268.411 35.334 269.395 cv
35.334 270.377 36.1313 271.174 37.1138 271.174 cv
38.0962 271.174 38.8936 270.377 38.8936 269.395 cv
104.294 243.594 mo
104.294 242.612 103.496 241.814 102.514 241.814 cv
101.531 241.814 100.734 242.612 100.734 243.594 cv
100.734 244.577 101.531 245.374 102.514 245.374 cv
103.496 245.374 104.294 244.577 104.294 243.594 cv
46.9336 262.915 mo
46.9336 261.932 46.1362 261.133 45.1538 261.133 cv
44.1714 261.133 43.3735 261.932 43.3735 262.915 cv
43.3735 263.897 44.1714 264.694 45.1538 264.694 cv
46.1362 264.694 46.9336 263.897 46.9336 262.915 cv
105.734 261.235 mo
105.734 260.252 104.937 259.454 103.954 259.454 cv
102.971 259.454 102.174 260.252 102.174 261.235 cv
102.174 262.217 102.971 263.014 103.954 263.014 cv
104.937 263.014 105.734 262.217 105.734 261.235 cv
89.4136 246.114 mo
89.4136 245.131 88.6162 244.334 87.6338 244.334 cv
86.6514 244.334 85.854 245.131 85.854 246.114 cv
85.854 247.096 86.6514 247.895 87.6338 247.895 cv
88.6162 247.895 89.4136 247.096 89.4136 246.114 cv
32.2939 269.874 mo
32.2939 268.891 31.4961 268.094 30.5137 268.094 cv
29.5313 268.094 28.7339 268.891 28.7339 269.874 cv
28.7339 270.856 29.5313 271.655 30.5137 271.655 cv
31.4961 271.655 32.2939 270.856 32.2939 269.874 cv
79.9336 251.995 mo
79.9336 251.012 79.1362 250.213 78.1538 250.213 cv
77.1714 250.213 76.3735 251.012 76.3735 251.995 cv
76.3735 252.977 77.1714 253.774 78.1538 253.774 cv
79.1362 253.774 79.9336 252.977 79.9336 251.995 cv
129.254 250.915 mo
129.254 249.932 128.457 249.133 127.474 249.133 cv
126.491 249.133 125.694 249.932 125.694 250.915 cv
125.694 251.897 126.491 252.694 127.474 252.694 cv
128.457 252.694 129.254 251.897 129.254 250.915 cv
45.1338 256.434 mo
45.1338 255.452 44.3364 254.655 43.354 254.655 cv
42.3711 254.655 41.5737 255.452 41.5737 256.434 cv
41.5737 257.417 42.3711 258.213 43.354 258.213 cv
44.3364 258.213 45.1338 257.417 45.1338 256.434 cv
121.814 255.713 mo
121.814 254.731 121.016 253.934 120.034 253.934 cv
119.051 253.934 118.254 254.731 118.254 255.713 cv
118.254 256.696 119.051 257.495 120.034 257.495 cv
121.016 257.495 121.814 256.696 121.814 255.713 cv
143.654 242.274 mo
143.654 241.292 142.856 240.495 141.874 240.495 cv
140.891 240.495 140.094 241.292 140.094 242.274 cv
140.094 243.256 140.891 244.053 141.874 244.053 cv
142.856 244.053 143.654 243.256 143.654 242.274 cv
39.9736 270.954 mo
39.9736 269.971 39.1763 269.174 38.1938 269.174 cv
37.2114 269.174 36.4136 269.971 36.4136 270.954 cv
36.4136 271.936 37.2114 272.735 38.1938 272.735 cv
39.1763 272.735 39.9736 271.936 39.9736 270.954 cv
58.6938 270.594 mo
58.6938 269.612 57.8965 268.815 56.9136 268.815 cv
55.9312 268.815 55.1338 269.612 55.1338 270.594 cv
55.1338 271.577 55.9312 272.374 56.9136 272.374 cv
57.8965 272.374 58.6938 271.577 58.6938 270.594 cv
63.7339 264.114 mo
63.7339 263.131 62.9365 262.334 61.9536 262.334 cv
60.9712 262.334 60.1738 263.131 60.1738 264.114 cv
60.1738 265.096 60.9712 265.895 61.9536 265.895 cv
62.9365 265.895 63.7339 265.096 63.7339 264.114 cv
105.734 248.754 mo
105.734 247.772 104.937 246.975 103.954 246.975 cv
102.971 246.975 102.174 247.772 102.174 248.754 cv
102.174 249.737 102.971 250.534 103.954 250.534 cv
104.937 250.534 105.734 249.737 105.734 248.754 cv
84.854 244.194 mo
84.854 243.211 84.0562 242.415 83.0737 242.415 cv
82.0913 242.415 81.2939 243.211 81.2939 244.194 cv
81.2939 245.176 82.0913 245.975 83.0737 245.975 cv
84.0562 245.975 84.854 245.176 84.854 244.194 cv
77.8936 242.155 mo
77.8936 241.171 77.0962 240.374 76.1138 240.374 cv
75.1313 240.374 74.334 241.171 74.334 242.155 cv
74.334 243.137 75.1313 243.934 76.1138 243.934 cv
77.0962 243.934 77.8936 243.137 77.8936 242.155 cv
146.534 243.235 mo
146.534 242.251 145.736 241.454 144.754 241.454 cv
143.771 241.454 142.974 242.251 142.974 243.235 cv
142.974 244.217 143.771 245.014 144.754 245.014 cv
145.736 245.014 146.534 244.217 146.534 243.235 cv
126.134 255.954 mo
126.134 254.971 125.336 254.174 124.354 254.174 cv
123.371 254.174 122.574 254.971 122.574 255.954 cv
122.574 256.936 123.371 257.735 124.354 257.735 cv
125.336 257.735 126.134 256.936 126.134 255.954 cv
47.7739 272.995 mo
47.7739 272.012 46.9761 271.213 45.9937 271.213 cv
45.0112 271.213 44.2139 272.012 44.2139 272.995 cv
44.2139 273.977 45.0112 274.774 45.9937 274.774 cv
46.9761 274.774 47.7739 273.977 47.7739 272.995 cv
135.254 245.514 mo
135.254 244.532 134.457 243.735 133.474 243.735 cv
132.491 243.735 131.694 244.532 131.694 245.514 cv
131.694 246.497 132.491 247.293 133.474 247.293 cv
134.457 247.293 135.254 246.497 135.254 245.514 cv
83.1738 239.874 mo
83.1738 238.891 82.3765 238.094 81.3936 238.094 cv
80.4111 238.094 79.6138 238.891 79.6138 239.874 cv
79.6138 240.857 80.4111 241.655 81.3936 241.655 cv
82.3765 241.655 83.1738 240.857 83.1738 239.874 cv
141.734 262.915 mo
141.734 261.932 140.937 261.133 139.954 261.133 cv
138.971 261.133 138.174 261.932 138.174 262.915 cv
138.174 263.897 138.971 264.694 139.954 264.694 cv
140.937 264.694 141.734 263.897 141.734 262.915 cv
81.2539 241.793 mo
81.2539 240.811 80.4565 240.014 79.4736 240.014 cv
78.4912 240.014 77.6938 240.811 77.6938 241.793 cv
77.6938 242.777 78.4912 243.575 79.4736 243.575 cv
80.4565 243.575 81.2539 242.777 81.2539 241.793 cv
33.4937 272.274 mo
33.4937 271.292 32.6963 270.495 31.7139 270.495 cv
30.731 270.495 29.9336 271.292 29.9336 272.274 cv
29.9336 273.256 30.731 274.053 31.7139 274.053 cv
32.6963 274.053 33.4937 273.256 33.4937 272.274 cv
29.8936 235.793 mo
29.8936 234.811 29.0962 234.014 28.1138 234.014 cv
27.1313 234.014 26.334 234.811 26.334 235.793 cv
26.334 236.777 27.1313 237.575 28.1138 237.575 cv
29.0962 237.575 29.8936 236.777 29.8936 235.793 cv
121.334 250.674 mo
121.334 249.692 120.536 248.895 119.554 248.895 cv
118.571 248.895 117.774 249.692 117.774 250.674 cv
117.774 251.657 118.571 252.454 119.554 252.454 cv
120.536 252.454 121.334 251.657 121.334 250.674 cv
91.334 254.995 mo
91.334 254.012 90.5361 253.213 89.5537 253.213 cv
88.5713 253.213 87.7739 254.012 87.7739 254.995 cv
87.7739 255.977 88.5713 256.774 89.5537 256.774 cv
90.5361 256.774 91.334 255.977 91.334 254.995 cv
63.2539 270.354 mo
63.2539 269.372 62.4565 268.575 61.4736 268.575 cv
60.4912 268.575 59.6938 269.372 59.6938 270.354 cv
59.6938 271.336 60.4912 272.133 61.4736 272.133 cv
62.4565 272.133 63.2539 271.336 63.2539 270.354 cv
97.5737 258.594 mo
97.5737 257.612 96.7764 256.815 95.7939 256.815 cv
94.811 256.815 94.0137 257.612 94.0137 258.594 cv
94.0137 259.577 94.811 260.374 95.7939 260.374 cv
96.7764 260.374 97.5737 259.577 97.5737 258.594 cv
143.894 236.034 mo
143.894 235.051 143.096 234.254 142.114 234.254 cv
141.131 234.254 140.334 235.051 140.334 236.034 cv
140.334 237.016 141.131 237.814 142.114 237.814 cv
143.096 237.814 143.894 237.016 143.894 236.034 cv
64.814 250.553 mo
64.814 249.571 64.0161 248.774 63.0337 248.774 cv
62.0513 248.774 61.2539 249.571 61.2539 250.553 cv
61.2539 251.538 62.0513 252.334 63.0337 252.334 cv
64.0161 252.334 64.814 251.538 64.814 250.553 cv
144.974 238.194 mo
144.974 237.211 144.176 236.415 143.194 236.415 cv
142.211 236.415 141.414 237.211 141.414 238.194 cv
141.414 239.176 142.211 239.974 143.194 239.974 cv
144.176 239.974 144.974 239.176 144.974 238.194 cv
96.1338 233.394 mo
96.1338 232.412 95.3364 231.614 94.354 231.614 cv
93.3711 231.614 92.5737 232.412 92.5737 233.394 cv
92.5737 234.377 93.3711 235.174 94.354 235.174 cv
95.3364 235.174 96.1338 234.377 96.1338 233.394 cv
45.0137 256.674 mo
45.0137 255.692 44.2163 254.895 43.2339 254.895 cv
42.251 254.895 41.4536 255.692 41.4536 256.674 cv
41.4536 257.657 42.251 258.454 43.2339 258.454 cv
44.2163 258.454 45.0137 257.657 45.0137 256.674 cv
111.254 256.674 mo
111.254 255.692 110.457 254.895 109.474 254.895 cv
108.491 254.895 107.694 255.692 107.694 256.674 cv
107.694 257.657 108.491 258.454 109.474 258.454 cv
110.457 258.454 111.254 257.657 111.254 256.674 cv
87.9736 246.354 mo
87.9736 245.372 87.1763 244.575 86.1938 244.575 cv
85.2114 244.575 84.4136 245.372 84.4136 246.354 cv
84.4136 247.336 85.2114 248.133 86.1938 248.133 cv
87.1763 248.133 87.9736 247.336 87.9736 246.354 cv
53.8936 259.674 mo
53.8936 258.692 53.0962 257.895 52.1138 257.895 cv
51.1313 257.895 50.334 258.692 50.334 259.674 cv
50.334 260.657 51.1313 261.454 52.1138 261.454 cv
53.0962 261.454 53.8936 260.657 53.8936 259.674 cv
92.5337 233.874 mo
92.5337 232.891 91.7363 232.094 90.7539 232.094 cv
89.771 232.094 88.9736 232.891 88.9736 233.874 cv
88.9736 234.857 89.771 235.655 90.7539 235.655 cv
91.7363 235.655 92.5337 234.857 92.5337 233.874 cv
97.4536 240.594 mo
97.4536 239.612 96.6563 238.814 95.6738 238.814 cv
94.6914 238.814 93.8936 239.612 93.8936 240.594 cv
93.8936 241.577 94.6914 242.374 95.6738 242.374 cv
96.6563 242.374 97.4536 241.577 97.4536 240.594 cv
37.334 271.793 mo
37.334 270.811 36.5361 270.014 35.5537 270.014 cv
34.5713 270.014 33.7739 270.811 33.7739 271.793 cv
33.7739 272.776 34.5713 273.575 35.5537 273.575 cv
36.5361 273.575 37.334 272.776 37.334 271.793 cv
83.4136 253.793 mo
83.4136 252.811 82.6162 252.014 81.6338 252.014 cv
80.6514 252.014 79.854 252.811 79.854 253.793 cv
79.854 254.776 80.6514 255.575 81.6338 255.575 cv
82.6162 255.575 83.4136 254.776 83.4136 253.793 cv
33.4937 262.075 mo
33.4937 261.092 32.6963 260.293 31.7139 260.293 cv
30.731 260.293 29.9336 261.092 29.9336 262.075 cv
29.9336 263.057 30.731 263.854 31.7139 263.854 cv
32.6963 263.854 33.4937 263.057 33.4937 262.075 cv
83.1738 251.155 mo
83.1738 250.172 82.3765 249.374 81.3936 249.374 cv
80.4111 249.374 79.6138 250.172 79.6138 251.155 cv
79.6138 252.137 80.4111 252.934 81.3936 252.934 cv
82.3765 252.934 83.1738 252.137 83.1738 251.155 cv
34.2139 266.514 mo
34.2139 265.532 33.4165 264.735 32.4336 264.735 cv
31.4512 264.735 30.6538 265.532 30.6538 266.514 cv
30.6538 267.497 31.4512 268.293 32.4336 268.293 cv
33.4165 268.293 34.2139 267.497 34.2139 266.514 cv
91.0938 239.394 mo
91.0938 238.412 90.2964 237.614 89.314 237.614 cv
88.3311 237.614 87.5337 238.412 87.5337 239.394 cv
87.5337 240.377 88.3311 241.174 89.314 241.174 cv
90.2964 241.174 91.0938 240.377 91.0938 239.394 cv
146.534 247.075 mo
146.534 246.092 145.736 245.293 144.754 245.293 cv
143.771 245.293 142.974 246.092 142.974 247.075 cv
142.974 248.057 143.771 248.854 144.754 248.854 cv
145.736 248.854 146.534 248.057 146.534 247.075 cv
138.854 264.114 mo
138.854 263.131 138.056 262.334 137.074 262.334 cv
136.091 262.334 135.294 263.131 135.294 264.114 cv
135.294 265.096 136.091 265.895 137.074 265.895 cv
138.056 265.895 138.854 265.096 138.854 264.114 cv
130.214 249.354 mo
130.214 248.372 129.417 247.575 128.434 247.575 cv
127.451 247.575 126.654 248.372 126.654 249.354 cv
126.654 250.336 127.451 251.133 128.434 251.133 cv
129.417 251.133 130.214 250.336 130.214 249.354 cv
86.0537 268.915 mo
86.0537 267.932 85.2563 267.133 84.2739 267.133 cv
83.291 267.133 82.4937 267.932 82.4937 268.915 cv
82.4937 269.897 83.291 270.694 84.2739 270.694 cv
85.2563 270.694 86.0537 269.897 86.0537 268.915 cv
54.3735 265.075 mo
54.3735 264.092 53.5762 263.293 52.5938 263.293 cv
51.6113 263.293 50.814 264.092 50.814 265.075 cv
50.814 266.057 51.6113 266.854 52.5938 266.854 cv
53.5762 266.854 54.3735 266.057 54.3735 265.075 cv
126.254 242.274 mo
126.254 241.292 125.457 240.495 124.474 240.495 cv
123.491 240.495 122.694 241.292 122.694 242.274 cv
122.694 243.256 123.491 244.053 124.474 244.053 cv
125.457 244.053 126.254 243.256 126.254 242.274 cv
78.3735 259.793 mo
78.3735 258.811 77.5762 258.014 76.5938 258.014 cv
75.6113 258.014 74.814 258.811 74.814 259.793 cv
74.814 260.776 75.6113 261.575 76.5938 261.575 cv
77.5762 261.575 78.3735 260.776 78.3735 259.793 cv
108.374 249.954 mo
108.374 248.971 107.576 248.174 106.594 248.174 cv
105.611 248.174 104.814 248.971 104.814 249.954 cv
104.814 250.936 105.611 251.735 106.594 251.735 cv
107.576 251.735 108.374 250.936 108.374 249.954 cv
107.414 259.075 mo
107.414 258.092 106.616 257.293 105.634 257.293 cv
104.651 257.293 103.854 258.092 103.854 259.075 cv
103.854 260.057 104.651 260.854 105.634 260.854 cv
106.616 260.854 107.414 260.057 107.414 259.075 cv
41.8936 275.395 mo
41.8936 274.411 41.0962 273.614 40.1138 273.614 cv
39.1313 273.614 38.334 274.411 38.334 275.395 cv
38.334 276.377 39.1313 277.174 40.1138 277.174 cv
41.0962 277.174 41.8936 276.377 41.8936 275.395 cv
95.1738 240.354 mo
95.1738 239.372 94.3765 238.575 93.3936 238.575 cv
92.4111 238.575 91.6138 239.372 91.6138 240.354 cv
91.6138 241.336 92.4111 242.134 93.3936 242.134 cv
94.3765 242.134 95.1738 241.336 95.1738 240.354 cv
97.814 247.075 mo
97.814 246.092 97.0161 245.293 96.0337 245.293 cv
95.0513 245.293 94.2539 246.092 94.2539 247.075 cv
94.2539 248.057 95.0513 248.854 96.0337 248.854 cv
97.0161 248.854 97.814 248.057 97.814 247.075 cv
55.0938 261.713 mo
55.0938 260.731 54.2964 259.934 53.314 259.934 cv
52.3311 259.934 51.5337 260.731 51.5337 261.713 cv
51.5337 262.696 52.3311 263.495 53.314 263.495 cv
54.2964 263.495 55.0938 262.696 55.0938 261.713 cv
82.6938 236.995 mo
82.6938 236.012 81.8965 235.214 80.9136 235.214 cv
79.9312 235.214 79.1338 236.012 79.1338 236.995 cv
79.1338 237.977 79.9312 238.774 80.9136 238.774 cv
81.8965 238.774 82.6938 237.977 82.6938 236.995 cv
95.0537 254.995 mo
95.0537 254.012 94.2563 253.213 93.2739 253.213 cv
92.291 253.213 91.4937 254.012 91.4937 254.995 cv
91.4937 255.977 92.291 256.774 93.2739 256.774 cv
94.2563 256.774 95.0537 255.977 95.0537 254.995 cv
53.5337 262.915 mo
53.5337 261.932 52.7363 261.133 51.7539 261.133 cv
50.771 261.133 49.9736 261.932 49.9736 262.915 cv
49.9736 263.897 50.771 264.694 51.7539 264.694 cv
52.7363 264.694 53.5337 263.897 53.5337 262.915 cv
55.0938 266.274 mo
55.0938 265.292 54.2964 264.495 53.314 264.495 cv
52.3311 264.495 51.5337 265.292 51.5337 266.274 cv
51.5337 267.256 52.3311 268.053 53.314 268.053 cv
54.2964 268.053 55.0938 267.256 55.0938 266.274 cv
144.614 253.075 mo
144.614 252.092 143.816 251.293 142.834 251.293 cv
141.851 251.293 141.054 252.092 141.054 253.075 cv
141.054 254.057 141.851 254.854 142.834 254.854 cv
143.816 254.854 144.614 254.057 144.614 253.075 cv
113.894 254.754 mo
113.894 253.772 113.096 252.975 112.114 252.975 cv
111.131 252.975 110.334 253.772 110.334 254.754 cv
110.334 255.737 111.131 256.534 112.114 256.534 cv
113.096 256.534 113.894 255.737 113.894 254.754 cv
27.7339 236.995 mo
27.7339 236.012 26.9365 235.214 25.9536 235.214 cv
24.9712 235.214 24.1738 236.012 24.1738 236.995 cv
24.1738 237.977 24.9712 238.774 25.9536 238.774 cv
26.9365 238.774 27.7339 237.977 27.7339 236.995 cv
87.2539 263.633 mo
87.2539 262.651 86.4565 261.854 85.4736 261.854 cv
84.4912 261.854 83.6938 262.651 83.6938 263.633 cv
83.6938 264.616 84.4912 265.415 85.4736 265.415 cv
86.4565 265.415 87.2539 264.616 87.2539 263.633 cv
133.334 245.034 mo
133.334 244.051 132.536 243.254 131.554 243.254 cv
130.571 243.254 129.774 244.051 129.774 245.034 cv
129.774 246.016 130.571 246.815 131.554 246.815 cv
132.536 246.815 133.334 246.016 133.334 245.034 cv
89.8936 255.713 mo
89.8936 254.731 89.0962 253.934 88.1138 253.934 cv
87.1313 253.934 86.334 254.731 86.334 255.713 cv
86.334 256.696 87.1313 257.495 88.1138 257.495 cv
89.0962 257.495 89.8936 256.696 89.8936 255.713 cv
85.0938 246.834 mo
85.0938 245.852 84.2964 245.053 83.314 245.053 cv
82.3311 245.053 81.5337 245.852 81.5337 246.834 cv
81.5337 247.817 82.3311 248.614 83.314 248.614 cv
84.2964 248.614 85.0938 247.817 85.0938 246.834 cv
63.7339 248.995 mo
63.7339 248.012 62.9365 247.213 61.9536 247.213 cv
60.9712 247.213 60.1738 248.012 60.1738 248.995 cv
60.1738 249.977 60.9712 250.774 61.9536 250.774 cv
62.9365 250.774 63.7339 249.977 63.7339 248.995 cv
29.8936 243.235 mo
29.8936 242.251 29.0962 241.454 28.1138 241.454 cv
27.1313 241.454 26.334 242.251 26.334 243.235 cv
26.334 244.217 27.1313 245.014 28.1138 245.014 cv
29.0962 245.014 29.8936 244.217 29.8936 243.235 cv
123.494 240.354 mo
123.494 239.372 122.696 238.575 121.714 238.575 cv
120.731 238.575 119.934 239.372 119.934 240.354 cv
119.934 241.336 120.731 242.134 121.714 242.134 cv
122.696 242.134 123.494 241.336 123.494 240.354 cv
86.7739 260.995 mo
86.7739 260.012 85.9761 259.213 84.9937 259.213 cv
84.0112 259.213 83.2139 260.012 83.2139 260.995 cv
83.2139 261.977 84.0112 262.774 84.9937 262.774 cv
85.9761 262.774 86.7739 261.977 86.7739 260.995 cv
112.214 241.554 mo
112.214 240.572 111.417 239.774 110.434 239.774 cv
109.451 239.774 108.654 240.572 108.654 241.554 cv
108.654 242.537 109.451 243.334 110.434 243.334 cv
111.417 243.334 112.214 242.537 112.214 241.554 cv
140.534 250.553 mo
140.534 249.571 139.736 248.774 138.754 248.774 cv
137.771 248.774 136.974 249.571 136.974 250.553 cv
136.974 251.538 137.771 252.334 138.754 252.334 cv
139.736 252.334 140.534 251.538 140.534 250.553 cv
74.7739 250.915 mo
74.7739 249.932 73.9761 249.133 72.9937 249.133 cv
72.0112 249.133 71.2139 249.932 71.2139 250.915 cv
71.2139 251.897 72.0112 252.694 72.9937 252.694 cv
73.9761 252.694 74.7739 251.897 74.7739 250.915 cv
150.014 240.834 mo
150.014 239.852 149.216 239.054 148.234 239.054 cv
147.251 239.054 146.454 239.852 146.454 240.834 cv
146.454 241.817 147.251 242.614 148.234 242.614 cv
149.216 242.614 150.014 241.817 150.014 240.834 cv
106.454 231.474 mo
106.454 230.492 105.656 229.694 104.674 229.694 cv
103.691 229.694 102.894 230.492 102.894 231.474 cv
102.894 232.457 103.691 233.254 104.674 233.254 cv
105.656 233.254 106.454 232.457 106.454 231.474 cv
43.814 258.834 mo
43.814 257.852 43.0161 257.053 42.0337 257.053 cv
41.0513 257.053 40.2539 257.852 40.2539 258.834 cv
40.2539 259.817 41.0513 260.614 42.0337 260.614 cv
43.0161 260.614 43.814 259.817 43.814 258.834 cv
45.7339 277.553 mo
45.7339 276.571 44.9365 275.774 43.9536 275.774 cv
42.9712 275.774 42.1738 276.571 42.1738 277.553 cv
42.1738 278.538 42.9712 279.334 43.9536 279.334 cv
44.9365 279.334 45.7339 278.538 45.7339 277.553 cv
100.934 236.155 mo
100.934 235.171 100.136 234.374 99.1538 234.374 cv
98.1714 234.374 97.3735 235.171 97.3735 236.155 cv
97.3735 237.137 98.1714 237.934 99.1538 237.934 cv
100.136 237.934 100.934 237.137 100.934 236.155 cv
67.334 261.475 mo
67.334 260.491 66.5361 259.694 65.5537 259.694 cv
64.5713 259.694 63.7739 260.491 63.7739 261.475 cv
63.7739 262.458 64.5713 263.254 65.5537 263.254 cv
66.5361 263.254 67.334 262.458 67.334 261.475 cv
0 0 0 1 cmyk
@
grestore
150.504 178.714 mo
150.504 173.964 li
118.824 178.714 mo
118.824 173.964 li
87.1436 178.714 mo
87.1436 173.964 li
55.4736 178.714 mo
55.4736 173.964 li
23.7939 178.714 mo
23.7939 173.964 li
23.7939 178.714 mo
150.504 178.714 li
@
DVPWBU+Helvetica*1 [9 0 0 -9 0 0 ]msf18.6606 167.315 mo(\1772)[5.25586 0 ]xsh50.3325 167.315 mo(\1771)[5.25586 0 ]xsh84.6372 167.315 mo(012)[31.6802 31.6797 0 ]xsh19.1338 305.485 mo
155.414 305.485 li
155.414 178.714 li
19.1338 178.714 li
19.1338 305.485 li
@
gsave
155.414 305.485 mo
291.703 305.485 li
291.703 178.714 li
155.414 178.714 li
155.414 305.485 li
cp
clp
155.414 193.864 mo
291.703 193.864 li
155.414 215.804 mo
291.703 215.804 li
155.414 237.735 mo
291.703 237.735 li
155.414 259.674 mo
291.703 259.674 li
155.414 281.604 mo
291.703 281.604 li
155.414 303.534 mo
291.703 303.534 li
286.783 305.485 mo
286.783 178.714 li
255.104 305.485 mo
255.104 178.714 li
223.434 305.485 mo
223.434 178.714 li
191.754 305.485 mo
191.754 178.714 li
160.074 305.485 mo
160.074 178.714 li
0 0 0 0.1725 cmyk
@
221.173 251.395 mo
221.173 250.411 220.376 249.614 219.394 249.614 cv
218.412 249.614 217.614 250.411 217.614 251.395 cv
217.614 252.377 218.412 253.174 219.394 253.174 cv
220.376 253.174 221.173 252.377 221.173 251.395 cv
267.734 242.514 mo
267.734 241.532 266.936 240.735 265.953 240.735 cv
264.971 240.735 264.174 241.532 264.174 242.514 cv
264.174 243.497 264.971 244.293 265.953 244.293 cv
266.936 244.293 267.734 243.497 267.734 242.514 cv
224.054 267.713 mo
224.054 266.731 223.256 265.934 222.274 265.934 cv
221.292 265.934 220.494 266.731 220.494 267.713 cv
220.494 268.696 221.292 269.495 222.274 269.495 cv
223.256 269.495 224.054 268.696 224.054 267.713 cv
183.614 265.075 mo
183.614 264.092 182.816 263.293 181.834 263.293 cv
180.851 263.293 180.054 264.092 180.054 265.075 cv
180.054 266.057 180.851 266.854 181.834 266.854 cv
182.816 266.854 183.614 266.057 183.614 265.075 cv
285.254 231.354 mo
285.254 230.372 284.457 229.574 283.475 229.574 cv
282.49 229.574 281.693 230.372 281.693 231.354 cv
281.693 232.336 282.49 233.134 283.475 233.134 cv
284.457 233.134 285.254 232.336 285.254 231.354 cv
271.094 248.995 mo
271.094 248.012 270.297 247.213 269.314 247.213 cv
268.332 247.213 267.533 248.012 267.533 248.995 cv
267.533 249.977 268.332 250.774 269.314 250.774 cv
270.297 250.774 271.094 249.977 271.094 248.995 cv
182.414 271.075 mo
182.414 270.092 181.616 269.293 180.634 269.293 cv
179.651 269.293 178.854 270.092 178.854 271.075 cv
178.854 272.057 179.651 272.854 180.634 272.854 cv
181.616 272.854 182.414 272.057 182.414 271.075 cv
172.214 261.713 mo
172.214 260.731 171.417 259.934 170.434 259.934 cv
169.451 259.934 168.654 260.731 168.654 261.713 cv
168.654 262.696 169.451 263.495 170.434 263.495 cv
171.417 263.495 172.214 262.696 172.214 261.713 cv
253.094 261.235 mo
253.094 260.252 252.297 259.454 251.314 259.454 cv
250.332 259.454 249.533 260.252 249.533 261.235 cv
249.533 262.217 250.332 263.014 251.314 263.014 cv
252.297 263.014 253.094 262.217 253.094 261.235 cv
260.055 253.075 mo
260.055 252.092 259.256 251.293 258.273 251.293 cv
257.291 251.293 256.494 252.092 256.494 253.075 cv
256.494 254.057 257.291 254.854 258.273 254.854 cv
259.256 254.854 260.055 254.057 260.055 253.075 cv
255.494 261.475 mo
255.494 260.491 254.697 259.694 253.713 259.694 cv
252.73 259.694 251.934 260.491 251.934 261.475 cv
251.934 262.458 252.73 263.254 253.713 263.254 cv
254.697 263.254 255.494 262.458 255.494 261.475 cv
192.374 254.034 mo
192.374 253.051 191.576 252.254 190.594 252.254 cv
189.611 252.254 188.814 253.051 188.814 254.034 cv
188.814 255.016 189.611 255.815 190.594 255.815 cv
191.576 255.815 192.374 255.016 192.374 254.034 cv
202.334 280.674 mo
202.334 279.692 201.536 278.895 200.554 278.895 cv
199.571 278.895 198.774 279.692 198.774 280.674 cv
198.774 281.657 199.571 282.454 200.554 282.454 cv
201.536 282.454 202.334 281.657 202.334 280.674 cv
168.374 231.954 mo
168.374 230.972 167.576 230.174 166.594 230.174 cv
165.611 230.174 164.814 230.972 164.814 231.954 cv
164.814 232.936 165.611 233.735 166.594 233.735 cv
167.576 233.735 168.374 232.936 168.374 231.954 cv
244.693 267.954 mo
244.693 266.971 243.896 266.174 242.914 266.174 cv
241.932 266.174 241.133 266.971 241.133 267.954 cv
241.133 268.936 241.932 269.735 242.914 269.735 cv
243.896 269.735 244.693 268.936 244.693 267.954 cv
215.173 266.754 mo
215.173 265.772 214.376 264.975 213.394 264.975 cv
212.411 264.975 211.614 265.772 211.614 266.754 cv
211.614 267.737 212.411 268.534 213.394 268.534 cv
214.376 268.534 215.173 267.737 215.173 266.754 cv
258.133 259.075 mo
258.133 258.092 257.336 257.293 256.354 257.293 cv
255.371 257.293 254.574 258.092 254.574 259.075 cv
254.574 260.057 255.371 260.854 256.354 260.854 cv
257.336 260.854 258.133 260.057 258.133 259.075 cv
175.814 266.514 mo
175.814 265.532 175.016 264.735 174.034 264.735 cv
173.051 264.735 172.254 265.532 172.254 266.514 cv
172.254 267.497 173.051 268.293 174.034 268.293 cv
175.016 268.293 175.814 267.497 175.814 266.514 cv
288.133 242.754 mo
288.133 241.772 287.336 240.974 286.354 240.974 cv
285.371 240.974 284.574 241.772 284.574 242.754 cv
284.574 243.737 285.371 244.534 286.354 244.534 cv
287.336 244.534 288.133 243.737 288.133 242.754 cv
209.654 263.395 mo
209.654 262.411 208.856 261.614 207.874 261.614 cv
206.891 261.614 206.094 262.411 206.094 263.395 cv
206.094 264.377 206.891 265.174 207.874 265.174 cv
208.856 265.174 209.654 264.377 209.654 263.395 cv
177.974 272.514 mo
177.974 271.532 177.176 270.735 176.194 270.735 cv
175.211 270.735 174.414 271.532 174.414 272.514 cv
174.414 273.497 175.211 274.293 176.194 274.293 cv
177.176 274.293 177.974 273.497 177.974 272.514 cv
165.254 238.194 mo
165.254 237.211 164.457 236.415 163.474 236.415 cv
162.491 236.415 161.694 237.211 161.694 238.194 cv
161.694 239.176 162.491 239.974 163.474 239.974 cv
164.457 239.974 165.254 239.176 165.254 238.194 cv
253.334 277.194 mo
253.334 276.211 252.537 275.415 251.555 275.415 cv
250.57 275.415 249.773 276.211 249.773 277.194 cv
249.773 278.176 250.57 278.975 251.555 278.975 cv
252.537 278.975 253.334 278.176 253.334 277.194 cv
211.334 265.793 mo
211.334 264.811 210.536 264.014 209.554 264.014 cv
208.571 264.014 207.774 264.811 207.774 265.793 cv
207.774 266.776 208.571 267.575 209.554 267.575 cv
210.536 267.575 211.334 266.776 211.334 265.793 cv
166.094 236.754 mo
166.094 235.772 165.296 234.974 164.314 234.974 cv
163.331 234.974 162.534 235.772 162.534 236.754 cv
162.534 237.737 163.331 238.534 164.314 238.534 cv
165.296 238.534 166.094 237.737 166.094 236.754 cv
284.055 222.594 mo
284.055 221.612 283.256 220.814 282.273 220.814 cv
281.291 220.814 280.494 221.612 280.494 222.594 cv
280.494 223.577 281.291 224.374 282.273 224.374 cv
283.256 224.374 284.055 223.577 284.055 222.594 cv
244.693 273.235 mo
244.693 272.252 243.896 271.454 242.914 271.454 cv
241.932 271.454 241.133 272.252 241.133 273.235 cv
241.133 274.217 241.932 275.014 242.914 275.014 cv
243.896 275.014 244.693 274.217 244.693 273.235 cv
265.574 246.834 mo
265.574 245.852 264.775 245.053 263.793 245.053 cv
262.811 245.053 262.014 245.852 262.014 246.834 cv
262.014 247.817 262.811 248.614 263.793 248.614 cv
264.775 248.614 265.574 247.817 265.574 246.834 cv
228.854 255.594 mo
228.854 254.612 228.057 253.815 227.074 253.815 cv
226.092 253.815 225.293 254.612 225.293 255.594 cv
225.293 256.577 226.092 257.374 227.074 257.374 cv
228.057 257.374 228.854 256.577 228.854 255.594 cv
222.133 257.155 mo
222.133 256.172 221.336 255.374 220.354 255.374 cv
219.372 255.374 218.574 256.172 218.574 257.155 cv
218.574 258.137 219.372 258.934 220.354 258.934 cv
221.336 258.934 222.133 258.137 222.133 257.155 cv
209.894 245.395 mo
209.894 244.411 209.096 243.614 208.114 243.614 cv
207.131 243.614 206.334 244.411 206.334 245.395 cv
206.334 246.377 207.131 247.174 208.114 247.174 cv
209.096 247.174 209.894 246.377 209.894 245.395 cv
175.094 269.395 mo
175.094 268.411 174.296 267.614 173.314 267.614 cv
172.331 267.614 171.534 268.411 171.534 269.395 cv
171.534 270.377 172.331 271.174 173.314 271.174 cv
174.296 271.174 175.094 270.377 175.094 269.395 cv
242.055 261.235 mo
242.055 260.252 241.256 259.454 240.273 259.454 cv
239.291 259.454 238.494 260.252 238.494 261.235 cv
238.494 262.217 239.291 263.014 240.273 263.014 cv
241.256 263.014 242.055 262.217 242.055 261.235 cv
168.614 269.874 mo
168.614 268.891 167.816 268.094 166.834 268.094 cv
165.851 268.094 165.054 268.891 165.054 269.874 cv
165.054 270.856 165.851 271.655 166.834 271.655 cv
167.816 271.655 168.614 270.856 168.614 269.874 cv
265.574 250.915 mo
265.574 249.932 264.775 249.133 263.793 249.133 cv
262.811 249.133 262.014 249.932 262.014 250.915 cv
262.014 251.897 262.811 252.694 263.793 252.694 cv
264.775 252.694 265.574 251.897 265.574 250.915 cv
191.894 282.834 mo
191.894 281.852 191.096 281.053 190.114 281.053 cv
189.131 281.053 188.334 281.852 188.334 282.834 cv
188.334 283.817 189.131 284.614 190.114 284.614 cv
191.096 284.614 191.894 283.817 191.894 282.834 cv
279.975 242.274 mo
279.975 241.292 279.176 240.495 278.193 240.495 cv
277.211 240.495 276.414 241.292 276.414 242.274 cv
276.414 243.256 277.211 244.053 278.193 244.053 cv
279.176 244.053 279.975 243.256 279.975 242.274 cv
195.014 270.594 mo
195.014 269.612 194.216 268.815 193.234 268.815 cv
192.251 268.815 191.454 269.612 191.454 270.594 cv
191.454 271.577 192.251 272.374 193.234 272.374 cv
194.216 272.374 195.014 271.577 195.014 270.594 cv
200.054 264.114 mo
200.054 263.131 199.256 262.334 198.274 262.334 cv
197.291 262.334 196.494 263.131 196.494 264.114 cv
196.494 265.096 197.291 265.895 198.274 265.895 cv
199.256 265.895 200.054 265.096 200.054 264.114 cv
204.134 290.514 mo
204.134 289.532 203.336 288.735 202.354 288.735 cv
201.371 288.735 200.574 289.532 200.574 290.514 cv
200.574 291.497 201.371 292.293 202.354 292.293 cv
203.336 292.293 204.134 291.497 204.134 290.514 cv
282.734 243.235 mo
282.734 242.251 281.936 241.454 280.953 241.454 cv
279.971 241.454 279.174 242.251 279.174 243.235 cv
279.174 244.217 279.971 245.014 280.953 245.014 cv
281.936 245.014 282.734 244.217 282.734 243.235 cv
263.895 255.235 mo
263.895 254.252 263.096 253.454 262.113 253.454 cv
261.131 253.454 260.334 254.252 260.334 255.235 cv
260.334 256.217 261.131 257.014 262.113 257.014 cv
263.096 257.014 263.895 256.217 263.895 255.235 cv
262.334 255.954 mo
262.334 254.971 261.537 254.174 260.555 254.174 cv
259.57 254.174 258.773 254.971 258.773 255.954 cv
258.773 256.936 259.57 257.735 260.555 257.735 cv
261.537 257.735 262.334 256.936 262.334 255.954 cv
172.454 263.155 mo
172.454 262.172 171.656 261.374 170.674 261.374 cv
169.691 261.374 168.894 262.172 168.894 263.155 cv
168.894 264.137 169.691 264.934 170.674 264.934 cv
171.656 264.934 172.454 264.137 172.454 263.155 cv
197.894 265.434 mo
197.894 264.452 197.096 263.655 196.114 263.655 cv
195.131 263.655 194.334 264.452 194.334 265.434 cv
194.334 266.417 195.131 267.213 196.114 267.213 cv
197.096 267.213 197.894 266.417 197.894 265.434 cv
168.734 227.874 mo
168.734 226.892 167.937 226.094 166.954 226.094 cv
165.971 226.094 165.174 226.892 165.174 227.874 cv
165.174 228.857 165.971 229.654 166.954 229.654 cv
167.937 229.654 168.734 228.857 168.734 227.874 cv
166.094 235.793 mo
166.094 234.811 165.296 234.014 164.314 234.014 cv
163.331 234.014 162.534 234.811 162.534 235.793 cv
162.534 236.777 163.331 237.575 164.314 237.575 cv
165.296 237.575 166.094 236.777 166.094 235.793 cv
259.814 254.034 mo
259.814 253.051 259.016 252.254 258.033 252.254 cv
257.051 252.254 256.254 253.051 256.254 254.034 cv
256.254 255.016 257.051 255.815 258.033 255.815 cv
259.016 255.815 259.814 255.016 259.814 254.034 cv
227.533 254.995 mo
227.533 254.012 226.736 253.213 225.754 253.213 cv
224.771 253.213 223.974 254.012 223.974 254.995 cv
223.974 255.977 224.771 256.774 225.754 256.774 cv
226.736 256.774 227.533 255.977 227.533 254.995 cv
199.454 270.354 mo
199.454 269.372 198.656 268.575 197.674 268.575 cv
196.691 268.575 195.894 269.372 195.894 270.354 cv
195.894 271.336 196.691 272.133 197.674 272.133 cv
198.656 272.133 199.454 271.336 199.454 270.354 cv
233.895 258.594 mo
233.895 257.612 233.096 256.815 232.113 256.815 cv
231.131 256.815 230.334 257.612 230.334 258.594 cv
230.334 259.577 231.131 260.374 232.113 260.374 cv
233.096 260.374 233.895 259.577 233.895 258.594 cv
271.814 262.674 mo
271.814 261.692 271.016 260.895 270.033 260.895 cv
269.051 260.895 268.254 261.692 268.254 262.674 cv
268.254 263.657 269.051 264.454 270.033 264.454 cv
271.016 264.454 271.814 263.657 271.814 262.674 cv
194.534 261.713 mo
194.534 260.731 193.736 259.934 192.754 259.934 cv
191.771 259.934 190.974 260.731 190.974 261.713 cv
190.974 262.696 191.771 263.495 192.754 263.495 cv
193.736 263.495 194.534 262.696 194.534 261.713 cv
212.534 260.034 mo
212.534 259.051 211.736 258.254 210.754 258.254 cv
209.771 258.254 208.974 259.051 208.974 260.034 cv
208.974 261.016 209.771 261.815 210.754 261.815 cv
211.736 261.815 212.534 261.016 212.534 260.034 cv
276.613 234.114 mo
276.613 233.131 275.816 232.334 274.834 232.334 cv
273.852 232.334 273.055 233.131 273.055 234.114 cv
273.055 235.096 273.852 235.894 274.834 235.894 cv
275.816 235.894 276.613 235.096 276.613 234.114 cv
201.014 250.553 mo
201.014 249.571 200.216 248.774 199.234 248.774 cv
198.251 248.774 197.454 249.571 197.454 250.553 cv
197.454 251.538 198.251 252.334 199.234 252.334 cv
200.216 252.334 201.014 251.538 201.014 250.553 cv
261.494 276.834 mo
261.494 275.852 260.697 275.053 259.713 275.053 cv
258.73 275.053 257.934 275.852 257.934 276.834 cv
257.934 277.817 258.73 278.614 259.713 278.614 cv
260.697 278.614 261.494 277.817 261.494 276.834 cv
181.334 256.674 mo
181.334 255.692 180.536 254.895 179.554 254.895 cv
178.571 254.895 177.774 255.692 177.774 256.674 cv
177.774 257.657 178.571 258.454 179.554 258.454 cv
180.536 258.454 181.334 257.657 181.334 256.674 cv
268.934 261.713 mo
268.934 260.731 268.137 259.934 267.154 259.934 cv
266.172 259.934 265.373 260.731 265.373 261.713 cv
265.373 262.696 266.172 263.495 267.154 263.495 cv
268.137 263.495 268.934 262.696 268.934 261.713 cv
233.654 240.594 mo
233.654 239.612 232.855 238.814 231.873 238.814 cv
230.891 238.814 230.094 239.612 230.094 240.594 cv
230.094 241.577 230.891 242.374 231.873 242.374 cv
232.855 242.374 233.654 241.577 233.654 240.594 cv
185.414 267.713 mo
185.414 266.731 184.616 265.934 183.634 265.934 cv
182.651 265.934 181.854 266.731 181.854 267.713 cv
181.854 268.696 182.651 269.495 183.634 269.495 cv
184.616 269.495 185.414 268.696 185.414 267.713 cv
173.654 271.793 mo
173.654 270.811 172.856 270.014 171.874 270.014 cv
170.891 270.014 170.094 270.811 170.094 271.793 cv
170.094 272.776 170.891 273.575 171.874 273.575 cv
172.856 273.575 173.654 272.776 173.654 271.793 cv
219.734 253.793 mo
219.734 252.811 218.936 252.014 217.954 252.014 cv
216.971 252.014 216.173 252.811 216.173 253.793 cv
216.173 254.776 216.971 255.575 217.954 255.575 cv
218.936 255.575 219.734 254.776 219.734 253.793 cv
169.814 262.075 mo
169.814 261.092 169.016 260.293 168.034 260.293 cv
167.051 260.293 166.254 261.092 166.254 262.075 cv
166.254 263.057 167.051 263.854 168.034 263.854 cv
169.016 263.854 169.814 263.057 169.814 262.075 cv
181.574 263.155 mo
181.574 262.172 180.776 261.374 179.794 261.374 cv
178.811 261.374 178.014 262.172 178.014 263.155 cv
178.014 264.137 178.811 264.934 179.794 264.934 cv
180.776 264.934 181.574 264.137 181.574 263.155 cv
219.494 251.155 mo
219.494 250.172 218.697 249.374 217.713 249.374 cv
216.731 249.374 215.934 250.172 215.934 251.155 cv
215.934 252.137 216.731 252.934 217.713 252.934 cv
218.697 252.934 219.494 252.137 219.494 251.155 cv
170.534 266.514 mo
170.534 265.532 169.736 264.735 168.754 264.735 cv
167.771 264.735 166.974 265.532 166.974 266.514 cv
166.974 267.497 167.771 268.293 168.754 268.293 cv
169.736 268.293 170.534 267.497 170.534 266.514 cv
274.453 258.114 mo
274.453 257.131 273.656 256.334 272.674 256.334 cv
271.691 256.334 270.895 257.131 270.895 258.114 cv
270.895 259.096 271.691 259.895 272.674 259.895 cv
273.656 259.895 274.453 259.096 274.453 258.114 cv
227.414 239.394 mo
227.414 238.412 226.617 237.614 225.633 237.614 cv
224.651 237.614 223.854 238.412 223.854 239.394 cv
223.854 240.377 224.651 241.174 225.633 241.174 cv
226.617 241.174 227.414 240.377 227.414 239.394 cv
229.693 285.235 mo
229.693 284.252 228.896 283.454 227.914 283.454 cv
226.932 283.454 226.133 284.252 226.133 285.235 cv
226.133 286.217 226.932 287.014 227.914 287.014 cv
228.896 287.014 229.693 286.217 229.693 285.235 cv
282.734 247.075 mo
282.734 246.092 281.936 245.293 280.953 245.293 cv
279.971 245.293 279.174 246.092 279.174 247.075 cv
279.174 248.057 279.971 248.854 280.953 248.854 cv
281.936 248.854 282.734 248.057 282.734 247.075 cv
222.253 268.915 mo
222.253 267.932 221.457 267.133 220.474 267.133 cv
219.491 267.133 218.694 267.932 218.694 268.915 cv
218.694 269.897 219.491 270.694 220.474 270.694 cv
221.457 270.694 222.253 269.897 222.253 268.915 cv
163.814 227.154 mo
163.814 226.171 163.016 225.374 162.034 225.374 cv
161.051 225.374 160.254 226.171 160.254 227.154 cv
160.254 228.137 161.051 228.934 162.034 228.934 cv
163.016 228.934 163.814 228.137 163.814 227.154 cv
194.774 266.995 mo
194.774 266.012 193.976 265.213 192.994 265.213 cv
192.011 265.213 191.214 266.012 191.214 266.995 cv
191.214 267.977 192.011 268.774 192.994 268.774 cv
193.976 268.774 194.774 267.977 194.774 266.995 cv
214.574 259.793 mo
214.574 258.811 213.776 258.014 212.794 258.014 cv
211.811 258.014 211.014 258.811 211.014 259.793 cv
211.014 260.776 211.811 261.575 212.794 261.575 cv
213.776 261.575 214.574 260.776 214.574 259.793 cv
244.693 249.954 mo
244.693 248.971 243.896 248.174 242.914 248.174 cv
241.932 248.174 241.133 248.971 241.133 249.954 cv
241.133 250.936 241.932 251.735 242.914 251.735 cv
243.896 251.735 244.693 250.936 244.693 249.954 cv
178.934 268.674 mo
178.934 267.692 178.136 266.895 177.154 266.895 cv
176.171 266.895 175.374 267.692 175.374 268.674 cv
175.374 269.657 176.171 270.454 177.154 270.454 cv
178.136 270.454 178.934 269.657 178.934 268.674 cv
243.734 259.075 mo
243.734 258.092 242.936 257.293 241.953 257.293 cv
240.971 257.293 240.174 258.092 240.174 259.075 cv
240.174 260.057 240.971 260.854 241.953 260.854 cv
242.936 260.854 243.734 260.057 243.734 259.075 cv
246.133 264.594 mo
246.133 263.612 245.336 262.815 244.354 262.815 cv
243.371 262.815 242.574 263.612 242.574 264.594 cv
242.574 265.577 243.371 266.374 244.354 266.374 cv
245.336 266.374 246.133 265.577 246.133 264.594 cv
178.214 275.395 mo
178.214 274.411 177.417 273.614 176.434 273.614 cv
175.451 273.614 174.654 274.411 174.654 275.395 cv
174.654 276.377 175.451 277.174 176.434 277.174 cv
177.417 277.174 178.214 276.377 178.214 275.395 cv
208.814 274.674 mo
208.814 273.692 208.016 272.895 207.034 272.895 cv
206.051 272.895 205.254 273.692 205.254 274.674 cv
205.254 275.657 206.051 276.454 207.034 276.454 cv
208.016 276.454 208.814 275.657 208.814 274.674 cv
231.494 240.354 mo
231.494 239.372 230.697 238.575 229.713 238.575 cv
228.73 238.575 227.934 239.372 227.934 240.354 cv
227.934 241.336 228.73 242.134 229.713 242.134 cv
230.697 242.134 231.494 241.336 231.494 240.354 cv
192.134 266.514 mo
192.134 265.532 191.336 264.735 190.354 264.735 cv
189.371 264.735 188.574 265.532 188.574 266.514 cv
188.574 267.497 189.371 268.293 190.354 268.293 cv
191.336 268.293 192.134 267.497 192.134 266.514 cv
234.133 247.075 mo
234.133 246.092 233.336 245.293 232.354 245.293 cv
231.371 245.293 230.574 246.092 230.574 247.075 cv
230.574 248.057 231.371 248.854 232.354 248.854 cv
233.336 248.854 234.133 248.057 234.133 247.075 cv
249.854 276.354 mo
249.854 275.372 249.057 274.575 248.074 274.575 cv
247.092 274.575 246.293 275.372 246.293 276.354 cv
246.293 277.336 247.092 278.133 248.074 278.133 cv
249.057 278.133 249.854 277.336 249.854 276.354 cv
254.533 273.354 mo
254.533 272.372 253.736 271.575 252.754 271.575 cv
251.771 271.575 250.975 272.372 250.975 273.354 cv
250.975 274.336 251.771 275.133 252.754 275.133 cv
253.736 275.133 254.533 274.336 254.533 273.354 cv
231.254 254.995 mo
231.254 254.012 230.457 253.213 229.475 253.213 cv
228.49 253.213 227.693 254.012 227.693 254.995 cv
227.693 255.977 228.49 256.774 229.475 256.774 cv
230.457 256.774 231.254 255.977 231.254 254.995 cv
172.934 264.354 mo
172.934 263.372 172.136 262.575 171.154 262.575 cv
170.171 262.575 169.374 263.372 169.374 264.354 cv
169.374 265.336 170.171 266.133 171.154 266.133 cv
172.136 266.133 172.934 265.336 172.934 264.354 cv
169.334 256.075 mo
169.334 255.092 168.536 254.293 167.554 254.293 cv
166.571 254.293 165.774 255.092 165.774 256.075 cv
165.774 257.057 166.571 257.854 167.554 257.854 cv
168.536 257.854 169.334 257.057 169.334 256.075 cv
201.974 275.874 mo
201.974 274.891 201.176 274.094 200.194 274.094 cv
199.211 274.094 198.414 274.891 198.414 275.874 cv
198.414 276.856 199.211 277.655 200.194 277.655 cv
201.176 277.655 201.974 276.856 201.974 275.874 cv
191.414 266.274 mo
191.414 265.292 190.616 264.495 189.634 264.495 cv
188.651 264.495 187.854 265.292 187.854 266.274 cv
187.854 267.256 188.651 268.053 189.634 268.053 cv
190.616 268.053 191.414 267.256 191.414 266.274 cv
250.213 254.754 mo
250.213 253.772 249.416 252.975 248.434 252.975 cv
247.451 252.975 246.654 253.772 246.654 254.754 cv
246.654 255.737 247.451 256.534 248.434 256.534 cv
249.416 256.534 250.213 255.737 250.213 254.754 cv
164.054 236.995 mo
164.054 236.012 163.256 235.214 162.274 235.214 cv
161.291 235.214 160.494 236.012 160.494 236.995 cv
160.494 237.977 161.291 238.774 162.274 238.774 cv
163.256 238.774 164.054 237.977 164.054 236.995 cv
223.574 263.633 mo
223.574 262.651 222.776 261.854 221.793 261.854 cv
220.811 261.854 220.014 262.651 220.014 263.633 cv
220.014 264.616 220.811 265.415 221.793 265.415 cv
222.776 265.415 223.574 264.616 223.574 263.633 cv
220.213 269.034 mo
220.213 268.051 219.417 267.254 218.434 267.254 cv
217.452 267.254 216.654 268.051 216.654 269.034 cv
216.654 270.016 217.452 270.815 218.434 270.815 cv
219.417 270.815 220.213 270.016 220.213 269.034 cv
226.213 255.713 mo
226.213 254.731 225.416 253.934 224.434 253.934 cv
223.452 253.934 222.654 254.731 222.654 255.713 cv
222.654 256.696 223.452 257.495 224.434 257.495 cv
225.416 257.495 226.213 256.696 226.213 255.713 cv
165.014 223.314 mo
165.014 222.332 164.216 221.534 163.234 221.534 cv
162.251 221.534 161.454 222.332 161.454 223.314 cv
161.454 224.297 162.251 225.094 163.234 225.094 cv
164.216 225.094 165.014 224.297 165.014 223.314 cv
228.373 275.633 mo
228.373 274.651 227.576 273.854 226.594 273.854 cv
225.611 273.854 224.814 274.651 224.814 275.633 cv
224.814 276.616 225.611 277.415 226.594 277.415 cv
227.576 277.415 228.373 276.616 228.373 275.633 cv
221.414 246.834 mo
221.414 245.852 220.617 245.053 219.633 245.053 cv
218.651 245.053 217.854 245.852 217.854 246.834 cv
217.854 247.817 218.651 248.614 219.633 248.614 cv
220.617 248.614 221.414 247.817 221.414 246.834 cv
283.814 206.754 mo
283.814 205.771 283.016 204.974 282.033 204.974 cv
281.051 204.974 280.254 205.771 280.254 206.754 cv
280.254 207.737 281.051 208.534 282.033 208.534 cv
283.016 208.534 283.814 207.737 283.814 206.754 cv
261.613 254.395 mo
261.613 253.411 260.816 252.614 259.834 252.614 cv
258.852 252.614 258.055 253.411 258.055 254.395 cv
258.055 255.377 258.852 256.174 259.834 256.174 cv
260.816 256.174 261.613 255.377 261.613 254.395 cv
231.613 263.034 mo
231.613 262.051 230.816 261.254 229.834 261.254 cv
228.852 261.254 228.055 262.051 228.055 263.034 cv
228.055 264.016 228.852 264.815 229.834 264.815 cv
230.816 264.815 231.613 264.016 231.613 263.034 cv
199.934 248.995 mo
199.934 248.012 199.136 247.213 198.154 247.213 cv
197.171 247.213 196.374 248.012 196.374 248.995 cv
196.374 249.977 197.171 250.774 198.154 250.774 cv
199.136 250.774 199.934 249.977 199.934 248.995 cv
166.214 243.235 mo
166.214 242.251 165.417 241.454 164.434 241.454 cv
163.451 241.454 162.654 242.251 162.654 243.235 cv
162.654 244.217 163.451 245.014 164.434 245.014 cv
165.417 245.014 166.214 244.217 166.214 243.235 cv
223.094 260.995 mo
223.094 260.012 222.296 259.213 221.314 259.213 cv
220.332 259.213 219.534 260.012 219.534 260.995 cv
219.534 261.977 220.332 262.774 221.314 262.774 cv
222.296 262.774 223.094 261.977 223.094 260.995 cv
171.974 246.114 mo
171.974 245.131 171.176 244.334 170.194 244.334 cv
169.211 244.334 168.414 245.131 168.414 246.114 cv
168.414 247.096 169.211 247.895 170.194 247.895 cv
171.176 247.895 171.974 247.096 171.974 246.114 cv
208.214 277.553 mo
208.214 276.571 207.417 275.774 206.434 275.774 cv
205.451 275.774 204.654 276.571 204.654 277.553 cv
204.654 278.538 205.451 279.334 206.434 279.334 cv
207.417 279.334 208.214 278.538 208.214 277.553 cv
204.014 267.954 mo
204.014 266.971 203.216 266.174 202.234 266.174 cv
201.251 266.174 200.454 266.971 200.454 267.954 cv
200.454 268.936 201.251 269.735 202.234 269.735 cv
203.216 269.735 204.014 268.936 204.014 267.954 cv
234.613 253.315 mo
234.613 252.333 233.816 251.534 232.834 251.534 cv
231.852 251.534 231.055 252.333 231.055 253.315 cv
231.055 254.297 231.852 255.094 232.834 255.094 cv
233.816 255.094 234.613 254.297 234.613 253.315 cv
189.014 276.114 mo
189.014 275.131 188.216 274.334 187.234 274.334 cv
186.251 274.334 185.454 275.131 185.454 276.114 cv
185.454 277.096 186.251 277.895 187.234 277.895 cv
188.216 277.895 189.014 277.096 189.014 276.114 cv
286.213 240.834 mo
286.213 239.852 285.416 239.054 284.434 239.054 cv
283.451 239.054 282.654 239.852 282.654 240.834 cv
282.654 241.817 283.451 242.614 284.434 242.614 cv
285.416 242.614 286.213 241.817 286.213 240.834 cv
213.374 272.633 mo
213.374 271.651 212.576 270.854 211.594 270.854 cv
210.611 270.854 209.814 271.651 209.814 272.633 cv
209.814 273.616 210.611 274.415 211.594 274.415 cv
212.576 274.415 213.374 273.616 213.374 272.633 cv
182.054 277.553 mo
182.054 276.571 181.256 275.774 180.274 275.774 cv
179.291 275.774 178.494 276.571 178.494 277.553 cv
178.494 278.538 179.291 279.334 180.274 279.334 cv
181.256 279.334 182.054 278.538 182.054 277.553 cv
184.214 273.954 mo
184.214 272.971 183.417 272.174 182.434 272.174 cv
181.451 272.174 180.654 272.971 180.654 273.954 cv
180.654 274.936 181.451 275.735 182.434 275.735 cv
183.417 275.735 184.214 274.936 184.214 273.954 cv
203.534 261.475 mo
203.534 260.491 202.736 259.694 201.754 259.694 cv
200.771 259.694 199.974 260.491 199.974 261.475 cv
199.974 262.458 200.771 263.254 201.754 263.254 cv
202.736 263.254 203.534 262.458 203.534 261.475 cv
0 0 0 1 cmyk
@
grestore
155.414 305.485 mo
291.703 305.485 li
291.703 178.714 li
155.414 178.714 li
155.414 305.485 li
@
gsave
291.703 305.485 mo
427.984 305.485 li
427.984 178.714 li
291.703 178.714 li
291.703 305.485 li
cp
clp
291.703 193.864 mo
427.984 193.864 li
291.703 215.804 mo
427.984 215.804 li
291.703 237.735 mo
427.984 237.735 li
291.703 259.674 mo
427.984 259.674 li
291.703 281.604 mo
427.984 281.604 li
291.703 303.534 mo
427.984 303.534 li
423.064 305.485 mo
423.064 178.714 li
391.383 305.485 mo
391.383 178.714 li
359.713 305.485 mo
359.713 178.714 li
328.033 305.485 mo
328.033 178.714 li
296.354 305.485 mo
296.354 178.714 li
0 0 0 0.1725 cmyk
@
321.734 273.475 mo
321.734 272.491 320.936 271.694 319.953 271.694 cv
318.971 271.694 318.174 272.491 318.174 273.475 cv
318.174 274.458 318.971 275.254 319.953 275.254 cv
320.936 275.254 321.734 274.458 321.734 273.475 cv
357.494 251.395 mo
357.494 250.411 356.697 249.614 355.713 249.614 cv
354.73 249.614 353.934 250.411 353.934 251.395 cv
353.934 252.377 354.73 253.174 355.713 253.174 cv
356.697 253.174 357.494 252.377 357.494 251.395 cv
360.373 267.713 mo
360.373 266.731 359.576 265.934 358.594 265.934 cv
357.611 265.934 356.814 266.731 356.814 267.713 cv
356.814 268.696 357.611 269.495 358.594 269.495 cv
359.576 269.495 360.373 268.696 360.373 267.713 cv
362.533 272.274 mo
362.533 271.292 361.736 270.495 360.754 270.495 cv
359.771 270.495 358.975 271.292 358.975 272.274 cv
358.975 273.256 359.771 274.053 360.754 274.053 cv
361.736 274.053 362.533 273.256 362.533 272.274 cv
319.814 265.075 mo
319.814 264.092 319.016 263.293 318.033 263.293 cv
317.051 263.293 316.254 264.092 316.254 265.075 cv
316.254 266.057 317.051 266.854 318.033 266.854 cv
319.016 266.854 319.814 266.057 319.814 265.075 cv
324.494 285.475 mo
324.494 284.491 323.697 283.694 322.713 283.694 cv
321.73 283.694 320.934 284.491 320.934 285.475 cv
320.934 286.458 321.73 287.254 322.713 287.254 cv
323.697 287.254 324.494 286.458 324.494 285.475 cv
338.773 284.633 mo
338.773 283.651 337.977 282.854 336.994 282.854 cv
336.012 282.854 335.213 283.651 335.213 284.633 cv
335.213 285.616 336.012 286.415 336.994 286.415 cv
337.977 286.415 338.773 285.616 338.773 284.633 cv
391.453 281.155 mo
391.453 280.172 390.656 279.374 389.674 279.374 cv
388.691 279.374 387.895 280.172 387.895 281.155 cv
387.895 282.137 388.691 282.934 389.674 282.934 cv
390.656 282.934 391.453 282.137 391.453 281.155 cv
330.254 288.354 mo
330.254 287.372 329.457 286.575 328.475 286.575 cv
327.49 286.575 326.693 287.372 326.693 288.354 cv
326.693 289.336 327.49 290.133 328.475 290.133 cv
329.457 290.133 330.254 289.336 330.254 288.354 cv
308.533 261.713 mo
308.533 260.731 307.736 259.934 306.754 259.934 cv
305.771 259.934 304.975 260.731 304.975 261.713 cv
304.975 262.696 305.771 263.495 306.754 263.495 cv
307.736 263.495 308.533 262.696 308.533 261.713 cv
389.414 261.235 mo
389.414 260.252 388.617 259.454 387.633 259.454 cv
386.65 259.454 385.854 260.252 385.854 261.235 cv
385.854 262.217 386.65 263.014 387.633 263.014 cv
388.617 263.014 389.414 262.217 389.414 261.235 cv
391.814 261.475 mo
391.814 260.491 391.016 259.694 390.033 259.694 cv
389.051 259.694 388.254 260.491 388.254 261.475 cv
388.254 262.458 389.051 263.254 390.033 263.254 cv
391.016 263.254 391.814 262.458 391.814 261.475 cv
366.854 296.995 mo
366.854 296.012 366.057 295.213 365.074 295.213 cv
364.092 295.213 363.293 296.012 363.293 296.995 cv
363.293 297.977 364.092 298.774 365.074 298.774 cv
366.057 298.774 366.854 297.977 366.854 296.995 cv
338.533 280.674 mo
338.533 279.692 337.736 278.895 336.754 278.895 cv
335.771 278.895 334.975 279.692 334.975 280.674 cv
334.975 281.657 335.771 282.454 336.754 282.454 cv
337.736 282.454 338.533 281.657 338.533 280.674 cv
368.533 277.553 mo
368.533 276.571 367.736 275.774 366.754 275.774 cv
365.771 275.774 364.975 276.571 364.975 277.553 cv
364.975 278.538 365.771 279.334 366.754 279.334 cv
367.736 279.334 368.533 278.538 368.533 277.553 cv
304.693 231.954 mo
304.693 230.972 303.896 230.174 302.914 230.174 cv
301.932 230.174 301.133 230.972 301.133 231.954 cv
301.133 232.936 301.932 233.735 302.914 233.735 cv
303.896 233.735 304.693 232.936 304.693 231.954 cv
394.453 259.075 mo
394.453 258.092 393.656 257.293 392.674 257.293 cv
391.691 257.293 390.895 258.092 390.895 259.075 cv
390.895 260.057 391.691 260.854 392.674 260.854 cv
393.656 260.854 394.453 260.057 394.453 259.075 cv
349.334 291.475 mo
349.334 290.491 348.537 289.694 347.555 289.694 cv
346.57 289.694 345.773 290.491 345.773 291.475 cv
345.773 292.458 346.57 293.254 347.555 293.254 cv
348.537 293.254 349.334 292.458 349.334 291.475 cv
413.414 229.074 mo
413.414 228.092 412.617 227.294 411.633 227.294 cv
410.65 227.294 409.854 228.092 409.854 229.074 cv
409.854 230.057 410.65 230.854 411.633 230.854 cv
412.617 230.854 413.414 230.057 413.414 229.074 cv
314.293 272.514 mo
314.293 271.532 313.496 270.735 312.514 270.735 cv
311.531 270.735 310.734 271.532 310.734 272.514 cv
310.734 273.497 311.531 274.293 312.514 274.293 cv
313.496 274.293 314.293 273.497 314.293 272.514 cv
389.654 277.194 mo
389.654 276.211 388.855 275.415 387.873 275.415 cv
386.891 275.415 386.094 276.211 386.094 277.194 cv
386.094 278.176 386.891 278.975 387.873 278.975 cv
388.855 278.975 389.654 278.176 389.654 277.194 cv
347.654 265.793 mo
347.654 264.811 346.855 264.014 345.873 264.014 cv
344.891 264.014 344.094 264.811 344.094 265.793 cv
344.094 266.776 344.891 267.575 345.873 267.575 cv
346.855 267.575 347.654 266.776 347.654 265.793 cv
302.293 236.754 mo
302.293 235.772 301.496 234.974 300.514 234.974 cv
299.531 234.974 298.734 235.772 298.734 236.754 cv
298.734 237.737 299.531 238.534 300.514 238.534 cv
301.496 238.534 302.293 237.737 302.293 236.754 cv
379.574 269.395 mo
379.574 268.411 378.775 267.614 377.793 267.614 cv
376.811 267.614 376.014 268.411 376.014 269.395 cv
376.014 270.377 376.811 271.174 377.793 271.174 cv
378.775 271.174 379.574 270.377 379.574 269.395 cv
299.174 229.074 mo
299.174 228.092 298.377 227.294 297.395 227.294 cv
296.412 227.294 295.613 228.092 295.613 229.074 cv
295.613 230.057 296.412 230.854 297.395 230.854 cv
298.377 230.854 299.174 230.057 299.174 229.074 cv
420.373 222.594 mo
420.373 221.612 419.576 220.814 418.594 220.814 cv
417.611 220.814 416.814 221.612 416.814 222.594 cv
416.814 223.577 417.611 224.374 418.594 224.374 cv
419.576 224.374 420.373 223.577 420.373 222.594 cv
381.014 273.235 mo
381.014 272.252 380.217 271.454 379.234 271.454 cv
378.252 271.454 377.453 272.252 377.453 273.235 cv
377.453 274.217 378.252 275.014 379.234 275.014 cv
380.217 275.014 381.014 274.217 381.014 273.235 cv
401.895 246.834 mo
401.895 245.852 401.096 245.053 400.113 245.053 cv
399.131 245.053 398.334 245.852 398.334 246.834 cv
398.334 247.817 399.131 248.614 400.113 248.614 cv
401.096 248.614 401.895 247.817 401.895 246.834 cv
347.654 288.594 mo
347.654 287.612 346.855 286.815 345.873 286.815 cv
344.891 286.815 344.094 287.612 344.094 288.594 cv
344.094 289.577 344.891 290.374 345.873 290.374 cv
346.855 290.374 347.654 289.577 347.654 288.594 cv
305.533 231.235 mo
305.533 230.251 304.736 229.454 303.754 229.454 cv
302.771 229.454 301.975 230.251 301.975 231.235 cv
301.975 232.217 302.771 233.014 303.754 233.014 cv
304.736 233.014 305.533 232.217 305.533 231.235 cv
323.414 284.034 mo
323.414 283.051 322.617 282.254 321.633 282.254 cv
320.65 282.254 319.854 283.051 319.854 284.034 cv
319.854 285.016 320.65 285.815 321.633 285.815 cv
322.617 285.815 323.414 285.016 323.414 284.034 cv
358.453 257.155 mo
358.453 256.172 357.656 255.374 356.674 255.374 cv
355.691 255.374 354.895 256.172 354.895 257.155 cv
354.895 258.137 355.691 258.934 356.674 258.934 cv
357.656 258.934 358.453 258.137 358.453 257.155 cv
337.334 272.274 mo
337.334 271.292 336.537 270.495 335.555 270.495 cv
334.57 270.495 333.773 271.292 333.773 272.274 cv
333.773 273.256 334.57 274.053 335.555 274.053 cv
336.537 274.053 337.334 273.256 337.334 272.274 cv
341.654 282.834 mo
341.654 281.852 340.855 281.053 339.873 281.053 cv
338.891 281.053 338.094 281.852 338.094 282.834 cv
338.094 283.817 338.891 284.614 339.873 284.614 cv
340.855 284.614 341.654 283.817 341.654 282.834 cv
328.213 282.834 mo
328.213 281.852 327.416 281.053 326.434 281.053 cv
325.451 281.053 324.654 281.852 324.654 282.834 cv
324.654 283.817 325.451 284.614 326.434 284.614 cv
327.416 284.614 328.213 283.817 328.213 282.834 cv
374.293 288.594 mo
374.293 287.612 373.496 286.815 372.514 286.815 cv
371.531 286.815 370.734 287.612 370.734 288.594 cv
370.734 289.577 371.531 290.374 372.514 290.374 cv
373.496 290.374 374.293 289.577 374.293 288.594 cv
399.734 261.475 mo
399.734 260.491 398.936 259.694 397.953 259.694 cv
396.971 259.694 396.174 260.491 396.174 261.475 cv
396.174 262.458 396.971 263.254 397.953 263.254 cv
398.936 263.254 399.734 262.458 399.734 261.475 cv
418.213 212.514 mo
418.213 211.532 417.416 210.734 416.434 210.734 cv
415.451 210.734 414.654 211.532 414.654 212.514 cv
414.654 213.497 415.451 214.294 416.434 214.294 cv
417.416 214.294 418.213 213.497 418.213 212.514 cv
340.453 290.514 mo
340.453 289.532 339.656 288.735 338.674 288.735 cv
337.691 288.735 336.895 289.532 336.895 290.514 cv
336.895 291.497 337.691 292.293 338.674 292.293 cv
339.656 292.293 340.453 291.497 340.453 290.514 cv
396.613 267.475 mo
396.613 266.491 395.816 265.694 394.834 265.694 cv
393.852 265.694 393.055 266.491 393.055 267.475 cv
393.055 268.458 393.852 269.254 394.834 269.254 cv
395.816 269.254 396.613 268.458 396.613 267.475 cv
330.975 289.553 mo
330.975 288.571 330.176 287.774 329.193 287.774 cv
328.211 287.774 327.414 288.571 327.414 289.553 cv
327.414 290.538 328.211 291.334 329.193 291.334 cv
330.176 291.334 330.975 290.538 330.975 289.553 cv
424.693 183.474 mo
424.693 182.492 423.896 181.694 422.914 181.694 cv
421.932 181.694 421.133 182.492 421.133 183.474 cv
421.133 184.457 421.932 185.254 422.914 185.254 cv
423.896 185.254 424.693 184.457 424.693 183.474 cv
400.213 255.235 mo
400.213 254.252 399.416 253.454 398.434 253.454 cv
397.451 253.454 396.654 254.252 396.654 255.235 cv
396.654 256.217 397.451 257.014 398.434 257.014 cv
399.416 257.014 400.213 256.217 400.213 255.235 cv
308.773 263.155 mo
308.773 262.172 307.977 261.374 306.994 261.374 cv
306.012 261.374 305.213 262.172 305.213 263.155 cv
305.213 264.137 306.012 264.934 306.994 264.934 cv
307.977 264.934 308.773 264.137 308.773 263.155 cv
323.414 275.633 mo
323.414 274.651 322.617 273.854 321.633 273.854 cv
320.65 273.854 319.854 274.651 319.854 275.633 cv
319.854 276.616 320.65 277.415 321.633 277.415 cv
322.617 277.415 323.414 276.616 323.414 275.633 cv
334.213 265.434 mo
334.213 264.452 333.416 263.655 332.434 263.655 cv
331.451 263.655 330.654 264.452 330.654 265.434 cv
330.654 266.417 331.451 267.213 332.434 267.213 cv
333.416 267.213 334.213 266.417 334.213 265.434 cv
304.934 227.874 mo
304.934 226.892 304.137 226.094 303.154 226.094 cv
302.172 226.094 301.373 226.892 301.373 227.874 cv
301.373 228.857 302.172 229.654 303.154 229.654 cv
304.137 229.654 304.934 228.857 304.934 227.874 cv
398.293 267.713 mo
398.293 266.731 397.496 265.934 396.514 265.934 cv
395.531 265.934 394.734 266.731 394.734 267.713 cv
394.734 268.696 395.531 269.495 396.514 269.495 cv
397.496 269.495 398.293 268.696 398.293 267.713 cv
396.133 254.034 mo
396.133 253.051 395.336 252.254 394.354 252.254 cv
393.371 252.254 392.574 253.051 392.574 254.034 cv
392.574 255.016 393.371 255.815 394.354 255.815 cv
395.336 255.815 396.133 255.016 396.133 254.034 cv
354.854 282.954 mo
354.854 281.971 354.057 281.174 353.074 281.174 cv
352.092 281.174 351.293 281.971 351.293 282.954 cv
351.293 283.936 352.092 284.735 353.074 284.735 cv
354.057 284.735 354.854 283.936 354.854 282.954 cv
408.133 262.674 mo
408.133 261.692 407.336 260.895 406.354 260.895 cv
405.371 260.895 404.574 261.692 404.574 262.674 cv
404.574 263.657 405.371 264.454 406.354 264.454 cv
407.336 264.454 408.133 263.657 408.133 262.674 cv
330.854 261.713 mo
330.854 260.731 330.057 259.934 329.074 259.934 cv
328.092 259.934 327.293 260.731 327.293 261.713 cv
327.293 262.696 328.092 263.495 329.074 263.495 cv
330.057 263.495 330.854 262.696 330.854 261.713 cv
348.734 260.034 mo
348.734 259.051 347.936 258.254 346.953 258.254 cv
345.971 258.254 345.174 259.051 345.174 260.034 cv
345.174 261.016 345.971 261.815 346.953 261.815 cv
347.936 261.815 348.734 261.016 348.734 260.034 cv
412.934 234.114 mo
412.934 233.131 412.137 232.334 411.154 232.334 cv
410.172 232.334 409.373 233.131 409.373 234.114 cv
409.373 235.096 410.172 235.894 411.154 235.894 cv
412.137 235.894 412.934 235.096 412.934 234.114 cv
340.213 287.633 mo
340.213 286.651 339.416 285.854 338.434 285.854 cv
337.451 285.854 336.654 286.651 336.654 287.633 cv
336.654 288.616 337.451 289.415 338.434 289.415 cv
339.416 289.415 340.213 288.616 340.213 287.633 cv
397.814 276.834 mo
397.814 275.852 397.016 275.053 396.033 275.053 cv
395.051 275.053 394.254 275.852 394.254 276.834 cv
394.254 277.817 395.051 278.614 396.033 278.614 cv
397.016 278.614 397.814 277.817 397.814 276.834 cv
417.254 217.794 mo
417.254 216.812 416.457 216.014 415.475 216.014 cv
414.49 216.014 413.693 216.812 413.693 217.794 cv
413.693 218.777 414.49 219.574 415.475 219.574 cv
416.457 219.574 417.254 218.777 417.254 217.794 cv
405.254 261.713 mo
405.254 260.731 404.457 259.934 403.475 259.934 cv
402.49 259.934 401.693 260.731 401.693 261.713 cv
401.693 262.696 402.49 263.495 403.475 263.495 cv
404.457 263.495 405.254 262.696 405.254 261.713 cv
388.453 265.553 mo
388.453 264.571 387.656 263.774 386.674 263.774 cv
385.691 263.774 384.895 264.571 384.895 265.553 cv
384.895 266.538 385.691 267.334 386.674 267.334 cv
387.656 267.334 388.453 266.538 388.453 265.553 cv
321.734 267.713 mo
321.734 266.731 320.936 265.934 319.953 265.934 cv
318.971 265.934 318.174 266.731 318.174 267.713 cv
318.174 268.696 318.971 269.495 319.953 269.495 cv
320.936 269.495 321.734 268.696 321.734 267.713 cv
397.574 262.674 mo
397.574 261.692 396.775 260.895 395.793 260.895 cv
394.811 260.895 394.014 261.692 394.014 262.674 cv
394.014 263.657 394.811 264.454 395.793 264.454 cv
396.775 264.454 397.574 263.657 397.574 262.674 cv
352.693 294.114 mo
352.693 293.131 351.896 292.334 350.914 292.334 cv
349.932 292.334 349.133 293.131 349.133 294.114 cv
349.133 295.096 349.932 295.895 350.914 295.895 cv
351.896 295.895 352.693 295.096 352.693 294.114 cv
317.895 263.155 mo
317.895 262.172 317.096 261.374 316.113 261.374 cv
315.131 261.374 314.334 262.172 314.334 263.155 cv
314.334 264.137 315.131 264.934 316.113 264.934 cv
317.096 264.934 317.895 264.137 317.895 263.155 cv
410.773 258.114 mo
410.773 257.131 409.977 256.334 408.994 256.334 cv
408.012 256.334 407.213 257.131 407.213 258.114 cv
407.213 259.096 408.012 259.895 408.994 259.895 cv
409.977 259.895 410.773 259.096 410.773 258.114 cv
384.613 280.915 mo
384.613 279.932 383.816 279.133 382.834 279.133 cv
381.852 279.133 381.055 279.932 381.055 280.915 cv
381.055 281.897 381.852 282.694 382.834 282.694 cv
383.816 282.694 384.613 281.897 384.613 280.915 cv
330.373 289.915 mo
330.373 288.932 329.576 288.133 328.594 288.133 cv
327.611 288.133 326.814 288.932 326.814 289.915 cv
326.814 290.897 327.611 291.694 328.594 291.694 cv
329.576 291.694 330.373 290.897 330.373 289.915 cv
365.895 285.235 mo
365.895 284.252 365.096 283.454 364.113 283.454 cv
363.131 283.454 362.334 284.252 362.334 285.235 cv
362.334 286.217 363.131 287.014 364.113 287.014 cv
365.096 287.014 365.895 286.217 365.895 285.235 cv
353.895 283.315 mo
353.895 282.333 353.096 281.534 352.113 281.534 cv
351.131 281.534 350.334 282.333 350.334 283.315 cv
350.334 284.297 351.131 285.094 352.113 285.094 cv
353.096 285.094 353.895 284.297 353.895 283.315 cv
386.293 272.274 mo
386.293 271.292 385.496 270.495 384.514 270.495 cv
383.531 270.495 382.734 271.292 382.734 272.274 cv
382.734 273.256 383.531 274.053 384.514 274.053 cv
385.496 274.053 386.293 273.256 386.293 272.274 cv
307.814 254.514 mo
307.814 253.532 307.016 252.735 306.033 252.735 cv
305.051 252.735 304.254 253.532 304.254 254.514 cv
304.254 255.497 305.051 256.293 306.033 256.293 cv
307.016 256.293 307.814 255.497 307.814 254.514 cv
365.773 274.915 mo
365.773 273.932 364.977 273.133 363.994 273.133 cv
363.012 273.133 362.213 273.932 362.213 274.915 cv
362.213 275.897 363.012 276.694 363.994 276.694 cv
364.977 276.694 365.773 275.897 365.773 274.915 cv
410.773 242.274 mo
410.773 241.292 409.977 240.495 408.994 240.495 cv
408.012 240.495 407.213 241.292 407.213 242.274 cv
407.213 243.256 408.012 244.053 408.994 244.053 cv
409.977 244.053 410.773 243.256 410.773 242.274 cv
300.014 227.154 mo
300.014 226.171 299.217 225.374 298.234 225.374 cv
297.252 225.374 296.453 226.171 296.453 227.154 cv
296.453 228.137 297.252 228.934 298.234 228.934 cv
299.217 228.934 300.014 228.137 300.014 227.154 cv
331.094 266.995 mo
331.094 266.012 330.297 265.213 329.314 265.213 cv
328.332 265.213 327.533 266.012 327.533 266.995 cv
327.533 267.977 328.332 268.774 329.314 268.774 cv
330.297 268.774 331.094 267.977 331.094 266.995 cv
315.254 268.674 mo
315.254 267.692 314.457 266.895 313.475 266.895 cv
312.49 266.895 311.693 267.692 311.693 268.674 cv
311.693 269.657 312.49 270.454 313.475 270.454 cv
314.457 270.454 315.254 269.657 315.254 268.674 cv
409.814 251.155 mo
409.814 250.172 409.016 249.374 408.033 249.374 cv
407.051 249.374 406.254 250.172 406.254 251.155 cv
406.254 252.137 407.051 252.934 408.033 252.934 cv
409.016 252.934 409.814 252.137 409.814 251.155 cv
369.254 294.594 mo
369.254 293.612 368.457 292.815 367.475 292.815 cv
366.49 292.815 365.693 293.612 365.693 294.594 cv
365.693 295.577 366.49 296.374 367.475 296.374 cv
368.457 296.374 369.254 295.577 369.254 294.594 cv
329.895 278.274 mo
329.895 277.292 329.096 276.495 328.113 276.495 cv
327.131 276.495 326.334 277.292 326.334 278.274 cv
326.334 279.256 327.131 280.053 328.113 280.053 cv
329.096 280.053 329.895 279.256 329.895 278.274 cv
382.334 264.594 mo
382.334 263.612 381.537 262.815 380.555 262.815 cv
379.57 262.815 378.773 263.612 378.773 264.594 cv
378.773 265.577 379.57 266.374 380.555 266.374 cv
381.537 266.374 382.334 265.577 382.334 264.594 cv
345.014 274.674 mo
345.014 273.692 344.217 272.895 343.234 272.895 cv
342.252 272.895 341.453 273.692 341.453 274.674 cv
341.453 275.657 342.252 276.454 343.234 276.454 cv
344.217 276.454 345.014 275.657 345.014 274.674 cv
393.494 260.754 mo
393.494 259.772 392.697 258.975 391.713 258.975 cv
390.73 258.975 389.934 259.772 389.934 260.754 cv
389.934 261.737 390.73 262.534 391.713 262.534 cv
392.697 262.534 393.494 261.737 393.494 260.754 cv
328.453 266.514 mo
328.453 265.532 327.656 264.735 326.674 264.735 cv
325.691 264.735 324.895 265.532 324.895 266.514 cv
324.895 267.497 325.691 268.293 326.674 268.293 cv
327.656 268.293 328.453 267.497 328.453 266.514 cv
321.975 284.274 mo
321.975 283.292 321.176 282.495 320.193 282.495 cv
319.211 282.495 318.414 283.292 318.414 284.274 cv
318.414 285.256 319.211 286.053 320.193 286.053 cv
321.176 286.053 321.975 285.256 321.975 284.274 cv
386.055 276.354 mo
386.055 275.372 385.256 274.575 384.273 274.575 cv
383.291 274.575 382.494 275.372 382.494 276.354 cv
382.494 277.336 383.291 278.133 384.273 278.133 cv
385.256 278.133 386.055 277.336 386.055 276.354 cv
402.854 263.034 mo
402.854 262.051 402.057 261.254 401.074 261.254 cv
400.092 261.254 399.293 262.051 399.293 263.034 cv
399.293 264.016 400.092 264.815 401.074 264.815 cv
402.057 264.815 402.854 264.016 402.854 263.034 cv
390.734 273.354 mo
390.734 272.372 389.936 271.575 388.953 271.575 cv
387.971 271.575 387.174 272.372 387.174 273.354 cv
387.174 274.336 387.971 275.133 388.953 275.133 cv
389.936 275.133 390.734 274.336 390.734 273.354 cv
336.613 275.874 mo
336.613 274.891 335.816 274.094 334.834 274.094 cv
333.852 274.094 333.055 274.891 333.055 275.874 cv
333.055 276.856 333.852 277.655 334.834 277.655 cv
335.816 277.655 336.613 276.856 336.613 275.874 cv
375.014 279.475 mo
375.014 278.491 374.217 277.694 373.234 277.694 cv
372.252 277.694 371.453 278.491 371.453 279.475 cv
371.453 280.458 372.252 281.254 373.234 281.254 cv
374.217 281.254 375.014 280.458 375.014 279.475 cv
309.254 264.354 mo
309.254 263.372 308.457 262.575 307.475 262.575 cv
306.49 262.575 305.693 263.372 305.693 264.354 cv
305.693 265.336 306.49 266.133 307.475 266.133 cv
308.457 266.133 309.254 265.336 309.254 264.354 cv
305.654 256.075 mo
305.654 255.092 304.855 254.293 303.873 254.293 cv
302.891 254.293 302.094 255.092 302.094 256.075 cv
302.094 257.057 302.891 257.854 303.873 257.854 cv
304.855 257.854 305.654 257.057 305.654 256.075 cv
357.494 275.395 mo
357.494 274.411 356.697 273.614 355.713 273.614 cv
354.73 273.614 353.934 274.411 353.934 275.395 cv
353.934 276.377 354.73 277.174 355.713 277.174 cv
356.697 277.174 357.494 276.377 357.494 275.395 cv
338.293 275.874 mo
338.293 274.891 337.496 274.094 336.514 274.094 cv
335.531 274.094 334.734 274.891 334.734 275.874 cv
334.734 276.856 335.531 277.655 336.514 277.655 cv
337.496 277.655 338.293 276.856 338.293 275.874 cv
336.494 282.834 mo
336.494 281.852 335.697 281.053 334.713 281.053 cv
333.73 281.053 332.934 281.852 332.934 282.834 cv
332.934 283.817 333.73 284.614 334.713 284.614 cv
335.697 284.614 336.494 283.817 336.494 282.834 cv
299.414 224.994 mo
299.414 224.012 298.617 223.214 297.633 223.214 cv
296.65 223.214 295.854 224.012 295.854 224.994 cv
295.854 225.977 296.65 226.774 297.633 226.774 cv
298.617 226.774 299.414 225.977 299.414 224.994 cv
356.533 269.034 mo
356.533 268.051 355.736 267.254 354.754 267.254 cv
353.771 267.254 352.975 268.051 352.975 269.034 cv
352.975 270.016 353.771 270.815 354.754 270.815 cv
355.736 270.815 356.533 270.016 356.533 269.034 cv
301.334 223.314 mo
301.334 222.332 300.537 221.534 299.555 221.534 cv
298.57 221.534 297.773 222.332 297.773 223.314 cv
297.773 224.297 298.57 225.094 299.555 225.094 cv
300.537 225.094 301.334 224.297 301.334 223.314 cv
364.574 275.633 mo
364.574 274.651 363.775 273.854 362.793 273.854 cv
361.811 273.854 361.014 274.651 361.014 275.633 cv
361.014 276.616 361.811 277.415 362.793 277.415 cv
363.775 277.415 364.574 276.616 364.574 275.633 cv
420.133 206.754 mo
420.133 205.771 419.336 204.974 418.354 204.974 cv
417.371 204.974 416.574 205.771 416.574 206.754 cv
416.574 207.737 417.371 208.534 418.354 208.534 cv
419.336 208.534 420.133 207.737 420.133 206.754 cv
397.814 254.395 mo
397.814 253.411 397.016 252.614 396.033 252.614 cv
395.051 252.614 394.254 253.411 394.254 254.395 cv
394.254 255.377 395.051 256.174 396.033 256.174 cv
397.016 256.174 397.814 255.377 397.814 254.395 cv
367.814 263.034 mo
367.814 262.051 367.016 261.254 366.033 261.254 cv
365.051 261.254 364.254 262.051 364.254 263.034 cv
364.254 264.016 365.051 264.815 366.033 264.815 cv
367.016 264.815 367.814 264.016 367.814 263.034 cv
308.293 246.114 mo
308.293 245.131 307.496 244.334 306.514 244.334 cv
305.531 244.334 304.734 245.131 304.734 246.114 cv
304.734 247.096 305.531 247.895 306.514 247.895 cv
307.496 247.895 308.293 247.096 308.293 246.114 cv
344.533 277.553 mo
344.533 276.571 343.736 275.774 342.754 275.774 cv
341.771 275.774 340.975 276.571 340.975 277.553 cv
340.975 278.538 341.771 279.334 342.754 279.334 cv
343.736 279.334 344.533 278.538 344.533 277.553 cv
422.773 192.354 mo
422.773 191.372 421.977 190.574 420.994 190.574 cv
420.012 190.574 419.213 191.372 419.213 192.354 cv
419.213 193.337 420.012 194.134 420.994 194.134 cv
421.977 194.134 422.773 193.337 422.773 192.354 cv
340.213 267.954 mo
340.213 266.971 339.416 266.174 338.434 266.174 cv
337.451 266.174 336.654 266.971 336.654 267.954 cv
336.654 268.936 337.451 269.735 338.434 269.735 cv
339.416 269.735 340.213 268.936 340.213 267.954 cv
395.773 274.915 mo
395.773 273.932 394.977 273.133 393.994 273.133 cv
393.012 273.133 392.213 273.932 392.213 274.915 cv
392.213 275.897 393.012 276.694 393.994 276.694 cv
394.977 276.694 395.773 275.897 395.773 274.915 cv
352.453 287.395 mo
352.453 286.411 351.656 285.614 350.674 285.614 cv
349.691 285.614 348.895 286.411 348.895 287.395 cv
348.895 288.377 349.691 289.174 350.674 289.174 cv
351.656 289.174 352.453 288.377 352.453 287.395 cv
346.453 300.834 mo
346.453 299.852 345.656 299.053 344.674 299.053 cv
343.691 299.053 342.895 299.852 342.895 300.834 cv
342.895 301.817 343.691 302.614 344.674 302.614 cv
345.656 302.614 346.453 301.817 346.453 300.834 cv
334.453 295.553 mo
334.453 294.571 333.656 293.774 332.674 293.774 cv
331.691 293.774 330.895 294.571 330.895 295.553 cv
330.895 296.538 331.691 297.334 332.674 297.334 cv
333.656 297.334 334.453 296.538 334.453 295.553 cv
370.814 253.315 mo
370.814 252.333 370.016 251.534 369.033 251.534 cv
368.051 251.534 367.254 252.333 367.254 253.315 cv
367.254 254.297 368.051 255.094 369.033 255.094 cv
370.016 255.094 370.814 254.297 370.814 253.315 cv
325.334 276.114 mo
325.334 275.131 324.537 274.334 323.555 274.334 cv
322.57 274.334 321.773 275.131 321.773 276.114 cv
321.773 277.096 322.57 277.895 323.555 277.895 cv
324.537 277.895 325.334 277.096 325.334 276.114 cv
349.574 272.633 mo
349.574 271.651 348.775 270.854 347.793 270.854 cv
346.811 270.854 346.014 271.651 346.014 272.633 cv
346.014 273.616 346.811 274.415 347.793 274.415 cv
348.775 274.415 349.574 273.616 349.574 272.633 cv
353.055 273.475 mo
353.055 272.491 352.256 271.694 351.273 271.694 cv
350.291 271.694 349.494 272.491 349.494 273.475 cv
349.494 274.458 350.291 275.254 351.273 275.254 cv
352.256 275.254 353.055 274.458 353.055 273.475 cv
318.734 267.114 mo
318.734 266.131 317.936 265.334 316.953 265.334 cv
315.971 265.334 315.174 266.131 315.174 267.114 cv
315.174 268.096 315.971 268.895 316.953 268.895 cv
317.936 268.895 318.734 268.096 318.734 267.114 cv
320.533 273.954 mo
320.533 272.971 319.736 272.174 318.754 272.174 cv
317.771 272.174 316.975 272.971 316.975 273.954 cv
316.975 274.936 317.771 275.735 318.754 275.735 cv
319.736 275.735 320.533 274.936 320.533 273.954 cv
417.014 225.714 mo
417.014 224.731 416.217 223.934 415.234 223.934 cv
414.252 223.934 413.453 224.731 413.453 225.714 cv
413.453 226.697 414.252 227.494 415.234 227.494 cv
416.217 227.494 417.014 226.697 417.014 225.714 cv
0 0 0 1 cmyk
@
grestore
423.064 178.714 mo
423.064 173.964 li
391.383 178.714 mo
391.383 173.964 li
359.713 178.714 mo
359.713 173.964 li
328.033 178.714 mo
328.033 173.964 li
296.354 178.714 mo
296.354 173.964 li
296.354 178.714 mo
423.064 178.714 li
@
DVPWBU+Helvetica*1 [9 0 0 -9 0 0 ]msf291.223 167.315 mo(\1772)[5.25586 0 ]xsh322.903 167.315 mo(\1771)[5.25586 0 ]xsh357.208 167.315 mo(01)[31.6709 0 ]xsh420.559 167.315 mo(2)sh427.984 193.864 mo
432.734 193.864 li
427.984 215.804 mo
432.734 215.804 li
427.984 237.735 mo
432.734 237.735 li
427.984 259.674 mo
432.734 259.674 li
427.984 281.604 mo
432.734 281.604 li
427.984 303.534 mo
432.734 303.534 li
427.984 303.534 mo
427.984 193.864 li
@
DVPWBU+Helvetica*1 [0 -9 -9 0 0 0 ]msf445.075 311.167 mo(\17710)[-5.25586 -5.00391 0 ]ysh445.075 286.737 mo(\1775)[-5.25586 0 ]ysh445.075 262.174 mo(05)[-21.9419 0 ]ysh445.075 220.807 mo(10)[-5.00391 0 ]ysh445.075 198.87 mo(15)[-5.00391 0 ]ysh291.703 305.485 mo
427.984 305.485 li
427.984 178.714 li
291.703 178.714 li
291.703 305.485 li
@
22.1938 125.164 mo
22.1938 116.944 li
114.804 116.944 li
114.804 125.164 li
22.1938 125.164 li
cp
0 0 0 0.2 cmyk
f
22.1938 125.164 mo
22.1938 116.944 li
114.804 116.944 li
114.804 125.164 li
22.1938 125.164 li
cp
0 0 0 1 cmyk
@
89.2539 111.474 mo
89.2539 103.254 li
137.814 103.254 li
137.814 111.474 li
89.2539 111.474 li
cp
0 0 0 0.2 cmyk
f
89.2539 111.474 mo
89.2539 103.254 li
137.814 103.254 li
137.814 111.474 li
89.2539 111.474 li
cp
0 0 0 1 cmyk
@
115.954 97.7744 mo
115.954 89.5542 li
164.514 89.5542 li
164.514 97.7744 li
115.954 97.7744 li
cp
0 0 0 0.2 cmyk
f
115.954 97.7744 mo
115.954 89.5542 li
164.514 89.5542 li
164.514 97.7744 li
115.954 97.7744 li
cp
0 0 0 1 cmyk
@
138.164 84.0742 mo
138.164 75.854 li
248.145 75.854 li
248.145 84.0742 li
138.164 84.0742 li
cp
0 0 0 0.2 cmyk
f
138.164 84.0742 mo
138.164 75.854 li
248.145 75.854 li
248.145 84.0742 li
138.164 84.0742 li
cp
0 0 0 1 cmyk
@
165.054 70.3843 mo
165.054 62.1641 li
321.293 62.1641 li
321.293 70.3843 li
165.054 70.3843 li
cp
0 0 0 0.2 cmyk
f
165.054 70.3843 mo
165.054 62.1641 li
321.293 62.1641 li
321.293 70.3843 li
165.054 70.3843 li
cp
0 0 0 1 cmyk
@
248.383 56.6841 mo
248.383 48.4644 li
424.924 48.4644 li
424.924 56.6841 li
248.383 56.6841 li
cp
0 0 0 0.2 cmyk
f
248.383 56.6841 mo
248.383 48.4644 li
424.924 48.4644 li
424.924 56.6841 li
248.383 56.6841 li
cp
0 0 0 1 cmyk
@
401.193 42.4341 mo
401.193 37.6841 li
320.953 42.4341 mo
320.953 37.6841 li
240.725 42.4341 mo
240.725 37.6841 li
160.484 42.4341 mo
160.484 37.6841 li
80.2539 42.4341 mo
80.2539 37.6841 li
80.2539 42.4341 mo
401.193 42.4341 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWBU+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF327C102745695739194BB3002578E9A13B5CE2A74FD48894F71187E1172491C0FAAFD20337D17EB38BB138C76C05944382F2B2611702A5DA745406DEB5C33C> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWBU+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/DVPWBU+Helvetica*1 [48{/.notdef}rp /zero /one /two /.notdef /four /five 73{/.notdef}rp /minus 128{/.notdef}rp]DVPWBU+Helvetica nfDVPWBU+Helvetica*1 [9 0 0 -9 0 0 ]msf75.1216 31.0259 mo(\1774)[5.25586 0 ]xsh155.356 31.0259 mo(\1772)[5.25586 0 ]xsh238.215 31.0259 mo(02)[80.2256 0 ]xsh398.684 31.0259 mo(4)sh19.1338 131.194 mo
427.984 131.194 li
427.984 42.4341 li
19.1338 42.4341 li
19.1338 131.194 li
401.193 131.194 mo
401.193 135.944 li
320.953 131.194 mo
320.953 135.944 li
240.725 131.194 mo
240.725 135.944 li
160.484 131.194 mo
160.484 135.944 li
80.2539 131.194 mo
80.2539 135.944 li
80.2539 131.194 mo
401.193 131.194 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWBU+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/colon <1C60D8A8C9B854D088E8E1B4A929D159FDB3710FCCC02057052369676FE7E3F7F79CEEE30BD023CC5123F5DD4F72E8838E> |-/G <1C60D8A8C9B6FF867A1E519166AD852ED2D238FC9FE1FC084F04D9E36004B397AC0709489868433030C233EA40313B6770F2FBA6AC8B2414BB25BA59D5FD807989151AA9C629866E3CE226ACBED3C073788232A7114C892B58478EAB25FD2B5FAFB5A7A36C98166D31139DBFC4CCF79EAA40F2F350B8A457081F9727553FEA93CA1BFD488C9BDF0A93497544EFC1E92BB497D5AD> |-/a <1C60D8A8C9B7EF32A0B922DB529D708010F72F0E62F6CA36E98277AFD8C536E6814BFC8F2509E1B2B1B62A6BDA8D1A6ED67728D80620B28FE439D2F57DCEC5483105FEA93379701773DF23A415938C688874994BCC9880105CE27AC2270A13FA38E952045C5E8C52BEF83397E5FBEEFAB993BE33E385A5E36620F7427AB5E4423C6A4ED6DE24A89F54E52C8FAD8A45FAD4B8F6CFD50EB7D35BF120B079B932E0EE2F7685462C7EC6E9B818F0F9E1F7814D04F2B9AAFA6704B8B745452B73181F38CB34F1645F> |-/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C2021D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495ACA0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCDBE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553A431EECECF30F5581F5F0240E470E520EB9771> |-/i <1C60D8A8C9B88C082599D5E95652E4745C17562AE47DDBD30E7054F041D72A7354004D800853CB28271AB7834CF7A2CB132BAFF26EF4E9D89B> |-/n <1C60D8A8C9B7EF327C10274A017D50E5277BF0D0EBCB370A96BE9DA563254EC441C4BC3817B6ABCAA45C3FADDF2A0C1F1BCD1456474D7370B95E3791CB0774B8A788FAD31DAB8E43BE1DDCC8C2722C438CA874C21003F548D691EAB87ADC2BE2D98ABE47C6EE8D76> |-/v <1C60D8A8C9B7A73DC53FF2C839B947F31C11DB63CB8CC0B0E0518E01B2A8090086BA063BC631F5BCB6255A1F02FF856D> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWBU+Helvetica /Encoding getdup 32 /space putdup 58 /colon putdup 71 /G putdup 97 /a putdup 101 /e putdup 105 /i putdup 110 /n putdup 118 /v putpop%ADOEndSubsetFont
/DVPWBU+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /.notdef /four /five 4{/.notdef}rp /colon 12{/.notdef}rp /G 25{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n 7{/.notdef}rp /v 8{/.notdef}rp /minus 128{/.notdef}rp]DVPWBU+Helvetica nfDVPWBU+Helvetica*1 [14 0 0 -14 0 0 ]msf195.536 12.0259 mo(Given : )[10.8921 3.10791 7 7.78418 7.7832 3.89258 3.8916 0 ]xsh243.778 12.0259 mo(a)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/DVPWBU+Helvetica*1 uf/DVPWBU+Helvetica uf/Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Manoj Bhatt) ()%%Title: (coplot2.eps)%%CreationDate: 10/4/10 1:58 PM%AI9_DataStream%Gb"-6pO4<uZT,HJ^cNCff]5dq#;Fi`39P9,fuD%I&C16Gqo:ntWh`ZgSXV=J\T`8\Hk(ms=s]H68l_];.1dm;B7irtn512)B4ie@%Y=Y_S>#Gsa;KCJ-#TWOj]+^)PECiiuH?(nrB!Wpc3>E?!0o=a8&)4F_mU1?)*k&\E8SQg!N[Ho(`I>/lbnX<8K.2+of^8^fSbCc3%Y39UY)YJI5Nk%cUSp[[6qVCFUr6q1=+lMi`P$a-R?GCPBqe:2n4)5-W"cnpM%/XYbr93RMiU>iIIF.E.3o+l,UMd"/K8M$QOFG1+%YI`13)Ckk?Tg"`:*fg&YTVq()_8jae7rL.'2lF@Ji&O3Z^@(uZqTW^jUIl+sn`6.%9u8:TY1?#$^pTsHlLA%5Roi=]';UTGYkq5"%qd2F#-d?gQ0HEnPadCA#D1[_`G^@p;D`#+k,d4&N13n1+lZ^B.K-"D25K]/@:55<W?[[UbXnJ5<:_E^TBqH$;E8;L`FJigOL]&*L%&^A!;Os5SE7e>O*Qs^4#S;k+4lesG`D+m\rBJ=/9PGDa9=(P*$iT??`=urVaP'CC(5.jUZ"l_U6dr@;6IIm_*kRB:;[;iCfVC4%"%A]P,EI6>FGT;DRO%\g4'VqlpX@72oJ'@r0l`_W`CJEp!!7Y>:`+\In2kl8k1#5+gK-@8R,:7LHe1*Oer/H<%Wr-&LTK.()+'_k@u%i%pjVcVfT`<>>5/-r?ol:oYq>Zs&0ma]k_Ye4QRq="4B];CSQ08l_q!c"n0\+HB+2B/U-9B<tDbRtY&8%6gIdW<BV$-$ZaqJs'"<%l;Xf\>-4Z"n922Hjjbi+L\-u+Qh6%u,c0uW/QWWn!'[(lN!V\A(6"*1Pa'"?i"PCkLu8rd9eerjKe^Ckr.5Ns-aZ;26s><W_'b0\%rk_SN'>PmG,k.KCN!hhC::1GTkkm]l$'#<-$'sM5]LbRfH;FB4qF7,FcflFs)WW!iK(6Z)Zp\MfN1,un)2#\#$cY\LQsbW\$fck8%p][E;o+.IhkO8U<Tb`Rt505>g.Ns$_n,X`0!U)P?+$+&1Ig#(6Mr9TSKoDPo*dUTX7Gs>pl$SU3oH2S6d8A&>dD=RJe>*eu#G4hN%co6oEi.S`NT25b^k6k,/VS#8M7j&B.VDLt\Ki/l^S59Qd"j.X':'ocKmg.JN>_4ou3LpaC2UZfJ7A5pranqm(r$+?PS4TZIbW3KK%Bq^Fa&c-(o:>YLE.(:tWU3L.S:T0c24ek5dS'_f/F>h;VbA85m7hh0V2T#ad/+#!D9A1\18s5#1_-\B$-2!l]P7mSUr(A<VDt]Oq%o*(:Knq?rfs3bWPS,FZ51)]XEPG,3:lG#Z:Pd%p`?a3.NZbPRn02O9b-gWM^=/h;=lnA/^CB')PLUi%519]atrC-^[n]?Vc,$?KJ%l"W)D/S#3VC0=52X7/&"_m=GF>u&O63F.q,8Hli%1+5Y2bNX,Z>#(d%J6M0]'\"?bTT5O;b+u\3JK"$7ria+][*/QXC:Za)<6J:/%drGN7@O=r(91`e3rCt)^cl_ff5>)&X^c,CAV9gmf>_.+L52oqFL[_0E,6@7!c_6*i2Y7%%L6h17ikC^/'#;Lu.\7oBe8b8u!^4Js%6M-d#6Qb98^_O^i!oX7A`;M?8gU/ABOc5"0`cG(/)+3;]A8^c6gAMO<k$6qrb1h17Z=qH"166+gb"@Ac_G%iD?\%NM'C\ft&o7Ye%-l#'#Qr[5^W&.03MtG/`#%5HlSB;K%Y+0X+6h2%$]?R>nGP&(2kH=Hori5N66X\r'VCC*0dl>i)is+:"rPdPn;DC]sP?-q\//M=3%/a7W%pWGO;.dW%8M3gF%!e_a'>hto!C/7-5W:O["Mm-eG.4__#VFEKe\WU*G!PJRaU.BC])E\ViB+j\<)6<@9,*>l>OWYsK?-r_#%,03p#N!%]b;Gd*PkqSAq(h3^N!MgJnLM)I&)*ZPkJk^Q_8<]<lie+lInrWR9quta6RlrTc.H@A7FUUXtYn-.,HNQE,P>NVpIP0/j%b@Cda`Y=OQBHbg50,(EI@@=c>(lp'D7eNhSI0S4]DQ!/fTBTn/fF)iA.Wi,4r$<R[-DBUE?5`3WQg05sN.&RDF4"8[;QMJDs6AL=%Z\*QWWhW+clOB,/8b*\^KNRQ&MCJcU%=_=A?VUD@)B&?=QBPK)WpciR'm`>tc7fUR[7\1GS26S6Q?/np$%#.8&7#e&(6`:;Z,W#[%n#/CW2Fp107W^a1Q]gfHP&^lV$&NQ#QJjc9cV]$([Z7S@;Z7F@oYU?/:?gYEV1cUodA86$ZBC)^,3Q3fA9E`0WP2XpYG$'GdBB)p%)SPR#<2a[8A#CiF?N-Am!l#<Wje%oU)HUh-.ogMmmVden]qe_oQWM9T(sDag4&)YgITuieC>Z+G^Sr45eoG50<.N"7]$aM,b%`a;%l\SBGPZ8)_ID:_d/4"VVjp:HMi:%An@$(/;W_()di_&qLYp/u+gtNT]4$=t>_+RM7^7i$D[a_],9*^EV,f=,CY2qds.Tj,i%D2r3%0h;C_:#`R8=bO@(@W1k$:m)Yp<>W$4=-^P,<q?VoAIU,eNG'n@4-[Q/USC^6.;R:1MUA5\$Z,a#BP1:oW+pFD+QK=p(\ut4,of?*%c!s0)?1`!J:F](=#T^_Ed2JJGMD=r;UE*]lc6ug9-)q@<edO<Ll>186LA@><;J20d!p5s%-?QBd4">mraLG6,^h?;JZV.,!>HJ5M%\uP8[2Y)b%=7$09Ld616f-,'2^CW'u(r(Ua8/kicN.GAhXP]NgVrB(f+R;-AJbhhdPY`iDS!,3>VTF/&aW!rETQ1L7bNXs4=Y9Vb%q)<T@`+YY6RS]8E[UlRF,uRV+'r<\qgG#6\.9FKucOs"pTba@9&.Ds=Q\JQchr#T@;6$C;&[/Z/)k;$!E3*gKA-U5YQ^J!-c`<:b%2>X4W_B`urO<s9>AJb[J%Wn:Am312)FUVF4LX`h3e(#kdkpjascukhj8TE)N99[r\N3O8[='J\j-,.MOpbiH([+82N'6o&P3gBr?%AuN.VXJ'Wj_J#I+N0j]&>$DaX'q6@?^"G`<Ver@7rn'Q'au4iEnu5N%Ksa3pPH#/$9#jR$75[e/kLsYq1*#itJu=#<ZW+B;nZl=d%UJ9`*:XqJKcm(FueX+Hh;Z"E/P"(dkOsgJG=O;+L9t\=-l<)HtVCZHp8!@+Je]L]s;i92M<DnbG'O08SglN+&]0mYU-U2k0@(I_&%M-@/,D+Rt$0&[ADY>t9jjm++SH#tXsED>E=GPJXml)*-%WYD-O-0m12Vtcs6kPIY!$c;pcKOfhj4>Pb@Xc]$I4]`q-<Pr$mboG8\%1ch[Pr1hA5IPh,Y6a4YcU@M-GH^ZK1o<$7fo5dkfWMHq,W%pq9a3CQKe>%$pShoV#G>L+J5c%FCB2GV*\0O&P<\^k.(#uf(Ma3bI%.bQ94EEJq272>0tUoa#FZR&QWW7!d(X%>^R2^B+n@mh8K&e2$5=j!"ocPWek*\^p#KN\]eRDe0>3_.E2k-Q#SF#cThF/4pIr/.<!%A$T:==jf\.2T;$&Qe47>;jI29bKgOC\;XObCCk3FE38sHRI;]UYE2`EE'[N,NBSljC8U6F)BTWL9ZBVCa]<I<]1I^t:#bo?Scc8r%dX;3Qqs#*:E*O^g!+)uXZ@QE$A5Q>alrNa92-R)ceX3KD<$1&s/7O@Z"i$A`<\!/:oUOnF[n>O8>(fo3ghV3cZ*(%66fijP:5*HL%'Sh?kaN@+d.b-C6fh1HsV%:j80\DW&`ar^[E_fU"M2IW6PDX[CbbUEI"/*A$J)_Eq=VOim_.-6(eX,u`8/Pr]O;Yt)<(pP1C&+dh%-u#p/N(S?\J8)Wa4KmtNH<st=jHbLB`kg1^GsX+X4\\fnV*=@?dHkQ'HDdfp\moS^0f<kekK?p)CYTS5%Gf;<pR?HkghIc+k<&kS%S*JYghQ`?*EinbH_ct'kVs+]Fl='Acs.3M,mr,7B@6%'V,$!@UpI+0"+#CZK[m/s@D<"P=.2I?dpcm6i0t1[2n#:Z=Nh3=eQ*#G@%2PDBAOZB#N1'lW*F9T)7FUF,nkFC()p-.O)Sg#Pce\"(^^"7"E%li&'GRMq0=$62UQO6AJH[g-h=`Ji4r7f4oB.\.%6FYP1I@=2U%Xa=%/G'Xui'$HkK5E`sGgu)JW<\DqS(riR&?Sg.j<$(&N:gFP(VV7Kt\\9+,WF;MMm^^W7eEUbt;Dn0r#q!V1=TteLL@HUk\f^SU%;U+&P0>oJ?qajh.T)YhE]^*4#9`N)t(]m-Lq:%9#ZNZ.,Ja-?"Xplm8Kb*fTV%te()0/]N;QEnDd;PKPWDF\)\q6pAV0sb&W0`C%%;iS2`;ES?7;GF^GT^oZ(o)K>;%U,qh.DflB-!jc;ftgNqe.+?T"fY:3R:6R]r.=4GdPSuoV)::LM?U";123_J-Hg?tX;XtH4!W6:%b3@t,Y;?1bR<]]r8*s&`\`pM2)J,l-`/MMWW_sIDNS46ZUV\8WkpqZoY`bCOqB/_?[u,IZ*j`UQHdk6gDN49V[3$ki"gFlX=;Aur%PR$GTWF!d/$cOFR0rbg%FS7q$faQ3bGu[A!-$h](O`d64*M-:2<Ebm$+r_]c'$\$b+ld%D)`k#H_gc/O<V>$bSd'YQ:8=C15BaIB%C@>41V=LreqOlPF*-REL;IG^oOI7t%]p`Ko_9\e*,()gh,rmL&W7u(6Z,`0tEg%./m51L[SZem4nAUB<N(Y=r&8dK;Ii3B,lON88%3]9\;;kmR%Q_V]KOE`dUU_9'b%50/Uqj[;?nqXIZF^,9[\TrO\lnB!sQJ)C!b:5D-q],8bMoT+sHNBAKd5\1;]L92\^Ol&KCGS;$%4@oK;=q[6/i-`sH-;_j['M0^<NX+1X178PW,duQ.531VPc`%sa9^YgrA3<iZe,;"-lLC$pm9oI278,3%&s7FF$+6bZ.RXKgfe-g7%<26#e:*+-+2(DP7I:T!Ioj,Ell<XpXB[llE3'lSm1rD0!R].s,E3rBXdJPO0+$=^$pLZZtA#gW0rmo2Q$C)Bk6c^8,R$a[u%FnC2%8X='S,_CM_s4amg9)2U;`N*hCq:2*O<r?,rBV4[I<On]#q1tgrP@YZgX&1^dhiW.>e6#\_2[<68c7CRuZ;l\H)`*@_d>q7uX.Gu;%[f1"2?ksfT'_Td]Xh@=iK,QVh"@"AsE`'!hdc4C\ZFd!uh0?Du[mKoHEaHm$hl/MD7f<BO6,0a"dkL>/dld!rB=(UY;VcnBKtV?R%[afFG!U5'3;t$7Uf608UO!QHo.,JL^c725F8R(Y.cDA&bc8HlO"aS7d1Eu.d0nZTqd*":.(co:GA20gMHa4NW0>Yeg2;<se&gI]a%0k-)F`gU]uf\b8BG/i_Aa?/,n4VC\+MSN_aG;*A&YJ0/Y;1HU#N)s#+/286#](6cf[+Tnqr\r<PR80@)p1gOmdN87:rYAN.!4c.W%,!5Jp/F47oPEpDX,*93W#9'qF0M^_>;^qAP8XW7fZ:eK<<F*Sj#8R]E;C5FcI=XXpd"*HOnuXbHJLp6r9eS[P&,X6T;Pnl_-!/pe%Cufs8.9YX(CcLfWH@q9-G:f9s5/tis\r`a>'KWqq(mRdJ_AF!qV09>slh?l8V:hG7]>Eg>fC*g81Kr$Ngh:U_8X1W?9k^t^j7_j&%^#/dLct%:?qb>jjRl9-BDu,,>H*ti/g=9NsOlh"d:62I)e*7?\o0-SRl4-DA+]ildeK'gUbXg8%WB+NhIDS[YgM)+aFN6]QFg0U8%g'HTQAD/'u@2+oC)\UnZeu[ct:5)Pd$lBh0$L!JAk+L2g,:ngoRQkPh,IE6$J&f6`c`&T=2`oifk4i.'IF,dK#K(8Rq^rR4_V(aB%S:(1?8#-'"o$\Q%==*h<hsNc)R2I+D9_IW,iOJL978<FZ?24EJS?upWpd$Ded;p'!moai9KBs$HCERa!e*]/En5i"`]lp`C?I7PT%mgmh,R_/)E6W;h>),C(bpF5u.0[]:^HQsC'ACPF>K`[[$JkBkET8G<*)B!WnQ\=c;rdtLpTbo^\IulSY0D:num.C;A!J+oTdr>;Z%I=!%pac'84j!!h>jqOrTp_Rhn-bT3#J5u/*OG+9u1[G*mi43HIenRsk=pOR.<-A$tS4sQOpk/]=U)!*CJP\g)lWf.:VG<`7H#g$&%Q0P0n)6%_t[7A8c7V^_?)E3%"2l*AS1GtTm"R^+^&O4P6)!HD'-.SH$bRfH(#tOlGce76O3M-3AS$OR'_r79c/[V#24l:Ac+4cN9%HG,ooI_%UVVl5[s=b4OkA^DL85p8=*YM,rrh"_tO!dcK&$KO%"lX-G2,l;72CPC'<e\1s+eFbss.7rX[2(>X5#T)=SZXt<X8-uuG%45ttY^Dr$Fpi-H_+M1@8;>B+61(l8Z@e=B<g$eRihZYiu++/`s0H(H`ZSiEu4k/I*"<)#=P82Al\f]0ST9N%WM!KV+etd+cBTCFI%s&"-*bm<EKJ(e.kV1_I?Lr95(48A$BaU&P/pCZf,?N'cM)YRMAnlIu"K+'n7E;5<0HB'<T:8[NONh@ZhHJY9fU=siO)q>2^6XLC7%B'm5krELlH&RS7!C[*_HF,dh`Si1opFNLk6ZSr4O[WalhF%/@Ec<=RG18:,c#OL3qX>fOX2g!T)_`#MM`URd8\TU+Up9jnaMmRB%%O7?/Is$$V*3IYCU2B\AF6W,EO+Vi#Gs)Ck3D0lPen:,KEV']AWnC$*->61rVf-$3]3Ik-,c#K)`O+5Tm*lnt8G&QrhW0)FI%[*aG%mp>sN</Mdlf#lhCiV80q)h(s.r6t$D7pIFL-YQ(T]5*Es://V_+c4l<*.n!STlKi`K!V'"Y!/>M0(/0"Z\iO)Gp)-rF3ko1iTFC.%+FXn#,'g%%8`Z;jBG0Ai0D]-4B:5,5-#`k4oNrm2IDYLSWAXIkg(*Dr@#.&SVp1k%>1=p)omVu&VPW;+)>aBN7h7`qfC&Z-5E=*W%0D+JCee2aGCQHg$=pI4(^Vog5d8Ec[Z0PU]_YtSS[=Gfb,l\A,eDC:rr]=LDIg9f`YCK?'Ig<(IGJM@N#H[K?^aB$jfY8Z-&q<DD%-2rph9)K\YQ2!F=.f":a<:]KKWT;s!;TZZuV36<u8gXLtPY1oq.@'fm;C_KdUf?pR8?(,=E@LR:Si16[l*Cb*o%uD&G3PbLZ6"A\%N+CBTCapU_MA]$hf%,,QhjmNS\.e$WTA>(-d%uTFF:@S_gNQuRJC(aeZ/ln&3?E%71#NCs(la\LMMO\2c2:r6A(6V!ThXQ^?g.m1%A2ECKTYJlj_QP$S68usbP2H!]NRM=6CK\0Z(AuKSIt3Ddc09?*CX&a48I,n7W`g7#S,[,i=@)ghXnHD2h\gVCUlN)7e.H<";YZXY%$iU;X%;lV%YQ$H"P?l*K=&X',l`:$6m*B?NGWrC32aG#EWi8.Lk^NI``=A&6>n;bU&)6!tNYfpdRaJl3Y#Z&T.5#l_)^:<Cmdq2(%_L6fZm1i@qP*h=N1#ZjE]k4>&og8GVZhhFnd<GT[bj&$t02j\9Y<A@KLHg8iP5RC%gmKubD1OPTZ'\U5r8W0UqXQkL/,sPGd`MB9%r=<4os"YNeqRuV&G$1>+UrgRr_I^40[iapcofCPt0/K\1r4=.4OV6]BCsm/sT3V^&nM2RtoC!/>,J/s!5G"83Di[8t2TB;bs*>R-%^OLYgCI3##F;RJ_3(:DDU\d5$GF3UmQ2.!N!UDobGZVf9\D>+_!WD\F+"^9<]*gjZBsWHaTOn"_?*YOk*S']<Kt=e:puTP[DPoGj%=^tP2J</u-ctfC8BkrF6,cteK%3128VV\/u*Nu#p]9DZ)NL<upAIJDW"h<,N&=V)9=plO:E't;0Kqq7n6(slU46]L(f.NO(Ct\](%lqcWPk1KV+!*Q_IflZV6"<Tm/7FX2D2Of_'"m>#HaeY)!VZ^=@Ni0!fF50o6_u3/B''_\M^!'KGNgk[CW/5,or@dG&YHp.OrHHk'%P7Z3?JksMq3FcDtk.nT0SYt-qFU5L#<i[\6-3BCIpn.!.Fn\,L[7[>UD74chhXk/lf$l%k[+&b!5%`'#mb7JU7&S<Ya;%EH))XJr%""!k%-f9YB9h*%"TiSMW;ak;ec<P#3MlR+]T:f&A2/Xkmf*\kK:nnj`JS3S(bn4E:8ag<CD_`f*Cb_lSM]>(%[<IV"`Y_\AT5K"5%Yha'fRtJ-Q?h(<BU5-hI[4+GT\!iNFGkb"b&':\h]AFR$/q^_/T/DFT*Y)H3(f:n_rmMmK^h9Z]r+PNP_f;U/0i.5+E&sNSMBs=Y%K->#JXZ+$Y)GY7mP(Nnt7$kQ@VU7\7nY<pC9/,ju3q,dki+^1JUadMriKh\gOe44r?mE'p&3C50%hVu5dM[_!qe2e5b5%=OE-*jr%^hplW6NA1C`U%;lX(Q!o@#kG3h(t=tY'@83ECHmQ7M_ukN\13+a]n1CFWis)ArU4B'U\;7+D1&*g]8EEi?@gc-I[FV6X%Dbgf5Xc%d(+FH9s)_WE%g[=3^9RQ5OdI-;9*b<`4)SV+_<(uq21rp38T:'']TaGn#b_oW/?#5"4=C9R$hIKV!M?QW7%,*1fnN]h>\D-^JDF>%[q_OiC*oI"%9j+9PMX?QWDchK/)mOFWN*=@`Sl0Iht9gL3GJ/`5L#=3<DmIG<i\p%g\l-)4WGU74,*@WTrV!g'@SPCkgQ6n\.]sE%J[Jbp"VopW*;UY8s'*61)f+CIJT&_@&cjKI@D=g[IsS3jO+#nT+$\Y&Ug#'\ef4YI(C1,Jg%=hFR^-XGWm-#u:0LOY<(/>IJsc/J%fQM[r(o0*8+1bDjF$$ud<O$_rC5sYOaMel+b.8V39q6V#:g"GD*pRc4_F&0H9VcL*6`/I'heNaf[9e3YbOsRVD1cd`c,oij)Xm;g%j7hNJM/c%L3+u9$8/?69i^k+]5LB'-W%,:URVMh7'H\9J$XV_mC4:C>6`?S+Kp[a5[ApKX7)?9LESMF-o\:s"@2r@DqX%g&&%VWP%VoirTk?fUia!qRsT2ZW2BbD2%<DM>fYMs>Ah%io1O:C#KHO=*8SXi!!f)Ce;e._o(XWOi+-r;aH",GD9Q9ZY-m(3[K<38J5A'&nJ%k%%FPCKl_k^'9^+L4icDXnD-dH//9%OQS#SdJF%&.:K^bl_LB5lJL-K'Jg)i'(u?N''uh2lhY5(TX+C&?`D$em].5*o+,JW>1]4M%S,FsVbI*qZb"+"AqX&bQL`=r[%jk%"7<PK@^?-lM?$I\-&EH^o$[]>dCeTPj<L8P)eP1m3S]Rs%8#9>2d=1h^DVn=>[X)>P3*$o=%5L?/&O41U)Z6S1Fi*<05Jc'H7/mD+68H7"J#80uV`8ud\9-u.;<r*_tdQ4jlSKp^_TAu(g*46fo(L1D.0Q^Qn1RlDqC3\R&J]ZV#%)mha7"C/Q!(f7+FZh[>'GU^;+3T%V6;P5o!^r/+BK(RXj[:q4(<=JjGPDdB-icd,YXbVRH(Sls5dJ;`d&5[67h&@Nd@c4K'68_;M%*`'?IGjJZK9_dbWCPBp+@12Y[C_3S`JL)@/%C7"tL_LVqW=LA0Y)k>)BV(Oc"F/3V!CRa,9(dKW=mc?26*$,Qngtm(hmNYbLn',C%q9Q#AhrM`4`K$Z->\N#6_6/s9SefN<g"Q2Z`oVZUr%:1oZr/oiJ!p0*#9UjQrohK&K.l/D[,^?KW*CqM,6rRE;:p@(@SfXG.<L]>%aHI:eOn*]?J+f1,MA[_(qN^pQ[241j%b#WZfO:W9iG5nZ*p8uE>6";s<I?m=-krBXl.Hm*btGO6nj[7m.@1O:Su$BL4\u/-Ru<55%HZ]5@+8u*uK`25SdFZYg)@IJ'Ps9LQM8Fn#\C/Ip,J!bM5_XeZPoGGN7]=L#5AHOSQUUT%gJK#Q,q_lS^X9NkOf8[+T._n?<!V#q%0`/('G.&YYN&0%kn^HPDK-4f=O^-/G`=Rioc.%uih2QXNZdqY85*Y<I)jBf:GOfPI]R,)S$Akf+RXOBO",l$$SeCdiNMn/MkE"Vr%/^Ta[-2=Tmq>pZ*21?,]G8RCfk\2cYEAQl=XFO&(?;a3RTSL(9o\^Jeo`\$!9n_pZ]Bup<9;(V$Q\6qeZ!'7RYQF(t+L%i)c+uBH%DiN\n_i%WF5J=?,>4_3"8Oou9Q9]5@nhgUY>\Q[3r%!!iL4LPcDH6>8H8g;AjVe+UA=h9.KC[Z]63q76aFGH_A6'Wn7I^-H[K1%s%q=?YQ"8Y'-rZ#1t!'P"mda_%ucO18L!.Du(?.o<Bgf/m;:Y%f*r6LRdcgIV1."Xe$?BddehjZh>/"i$\r_C`CBPM&;pZtu8)JJ-h%;61i-SKfO`@pQ;;A-7\;nq@fTYr_4lf`Ktj3U>6)5QQ`L[O]o]2L\dRq".;iHjdDb#\\NpA=Do>X.fZDL]n5QPJ=l90!XJ-?n5%1%<S^c,jhsVOWrUMNBr$OA^XJ$K5%+UoD#Cqi%6uW^'l<$.o$XfGqBDO(c`X@#*cM'>N[)`c''Rl&P"&\j2qCGMELa66qNqhtlW55K%TX3l_U\:'e5^`YCm&`87f`JkTSdM*55jRFsbBD/LBHt.V$etsbVg6IjhSjBACk:FXK"DtF5^VLokl(qlMT3Ma4frqCr9\IM''OCP%rPTK8pJ-58a9Lj,*`;LO9-I_,f!EHo.#`E!''Pg*+1)3_rpUO9(f4>RGQHbFO/qI$!&S.oRPXa^ZC]`b,G7-5NA>2p%;o1=hq>47%W%[Z;2>o>N@--c\n5-mJS4@aWdg?)7RQ:%E#b:Q_/eQH_M/f>VdugR1S`V/1?M'sG+E"n+VNILK4%FUrF<O[72cThr2ZOlEh?*]D%DD;$>J6$:eTHO&afGt!^Q]>P[T^13"f9[>QP.t]fGbFVLi0R*c2?4Id,J@*K^@'0k@0H5DmgBsE4<@QJFB(L(0pMOrD#N2(<,'ro%<i,(2L(pk#htCn4HFLo&V.+#>';_O,VId;XE;6A'R+eZ6^c*mL?QDa#Df,C"'7^%7Q'sBRSg65Sp2?SJ^;'#-YAU[LX&9[Bimh\<%B`If!jm^L&F?GQ*FA])%R(2na-N0EBm)d=^ipB6MAm]knH+rN>RX,=H;DZ>\%R8/1DuWEn7dNd?^Op0"V%dDm_8O%cgFjX%?/&8a%]]X>/V2<r/dfEt,If0/a^9j8%,j\0"F3;i1A(''!SR(!ZGIBuY=5-XQ<httUV6=AB`r);R\Sk[.1<Meq/=(d%9-\e(U[1ggHWans%,NU0,UeF1]P'EsoI9Sb]lt#$fRN:g'QbT@p;)l/Y"j.e?UT8E!Ecmq0q6su">OD>RQu87jpJ9<L=q0'+pdN]N`jUTC]HQq@>9QB9%lP6cFj=bXrF1a,Dn"7X"N(l3J+3qF%ju/H@Ce,1[B;bCs^kB+7Or8'\>P`f'N?*\2pH:%"BJnG)%-tV7<n1'dn;.TNAF-*F6dIYU%+.fQaq>t3/ld_,,2-/8_g%]]"$Zs#;MLSHq[6>+CcQC"h[<4]R[E0Zg4=P>:4'Po.%-V4`]uA&ld/csjL4]6A^&]Wqj!oYQq6B49%Y#h*4>G0VlYQ:3H!6a>\Xo%t"-6?J6JCZVWp-?H70EB)G\4TAdOYlHU?J5M+S0$SA!sO*@-XdS=9dl';hdWUk(#B`hePf)7<BV1W%Y,:t0hC3\_&M%Ti>(A+Q6/F:Om^?jVjg'Z2?^U\2g"LjGhTh%%5`B/oP3&F'./-SrKhIl6YBlnhZV/;4#cUD609P75E_:Y/^6QP4%Y@,EUd=f<mS>2]\@.2CX'ED"'%;r<Vd!A0gb12&XM_VIa*[Lmhp5p9t44gLH9c[B<1@")>Dc0$e8&H?"$D6-p!'ZL9XC3Jmjl&QO%GUuM4c0[k-JNW(9\Oo-cLn5#l]*.gkku;fbfVo</H6Yl;j,s)fW;Sd;:nA1uNX[C<0ubFYIl-W;bU0e;T<c"Sgi+2SI)+fN%uKZ^%DQgAa[%0G>cTBtl1QN(DPg4b@bb0ae'>%W->:]RB"mh?4eC`jZDD#BG'#ogaLJm5Z;Hnm]-sc5[I=]pV*ihc=GkVC(_u+j1r]%Z'%n-(@s:ZX#Aer-,W;=nOspE4dL,nB^!LlQT`e@M^t4l,`)(/`5u\>t-+?8qLGc]t]?D'[k3U)NGNpD$NdQ\t]'.iqoQD&]W'hE3Tf%4iGp<+'O-Vi^@'Z*)QSLg;5s_duiibj"U@-@GX6*;J4m=gac1^f[9l=:``(gV/'nGP;$51EG7L/ik)Ss@#Ge-^aila<p='i-(=cG%JI\20KWHVJ,StrANtuQUaE>c#=p/meodHR'eReN9mnHHH).ldqq<;,k]oAR2r_TF6hJ9><Mrsm%])-U/&'^_?gt3t=W1'M)hq3M4%S_aXLI^PE%c+;e;5ETdh<qmY(p<?d._it]q;%nUN+02qd@@fn`V^@+U?WG"LK`1i*F@L.s^GAgOA]]HkD(j!n^Sp`WZ^#3"21VEf%e7N6Fq1[G79AOa&/g8??ouB_'XAh77V6`gSB8uM\Bc">uFAqEdcX2uB?TcT+'=)LccG\Y1X0MG)Pf9*>mj"lm#n&Y'd?M.5N(L(g%R(Q%M.Ec*m?'\JWMlMqIB=NC1MOj-HASLO60&Ce3\O#;D]d[C7#Lg?CZ[-K/PokeX21BPJSE;cdBZt!8j5!s5lq@N,AsUaFG.-PM%NYQHY=Luc/)ir!jV.,8#o'4*44tg30a2G=NLbAa6EFE-+*AQcDqMo7#V&N0737V[[2V4ia[Qnh9h][/KcXW//$ncF8aiaq4A&R;d%-!jN5T-k`0GlZJW288?VVR<;==G[PM#'lg<[U%oF];/%lX%ocf!$FuZi5sjM+on44_6*P"I=%b?q:k3Kmh2+5ah5>M:Hi&DfgrM/%RX?,o#ZBK!=eZPd[t!9s9*V$Fn?K7?&bSr_F=ZY=O118P=c&CeMe@"<[F0^Z",ffB'?9%A2p,`U1c*caS:m<NYP3+6B5nk$$2#S=%!`mgSD!hEb*K<Ol7`>tjh`Z3T4LepONqE1[EG.Pri,".6#VP/o^u!J2,NH'l^Y]:D_+\cFEWbk9XCfY%5hY%PXVpNmpYffP#]C/*%l1[JWH/Ar-EqK#BI3:S/?B6*3IuRSF!#2!-6*ErijuoBbZ!N]=!J"0a)h,od6oL@Lh<:4XK4J<4rUIH1mTaRTTEq0VKb+]1B6eqD%*UD<B(TCroOapt(.UTuZd^:\LZ^#J.!AR29Zt!51((^I-(Ol<tVqC6DDMUl0Qu7O/bNWM_m-&RpC[?;oARVWs7,)&=duBsEcZ`Cl%#8%q1=F:MO]Luq,'$cZ$XEMO'jh0G9@lk_C8GoSjC'Q,MTs=R\P&f[`$?&hPb@G6m4NuO79:dI^%IN?gaT]+HTG<IdW7JFk4&.jP%X;,*XXW@#U2ugIemdM-=#j5qrmhU[qhOm0l"L#[D2sr4R]XlI_.FG.EeU!e0mXiHq%\#X?H[I_D"@Rif67&ga>"UWoQ*>M#,oV*<%&r?ha1AP7&(U%?VWR/`reT9hLK87Gb7cVF>7'g-*TWrS<Z4cPZ8[N&R+3g6EM<<%Zd*D1p%3gRof-tZW<jDCVgX/YNh:BaQgVpGG%"o&pZ11a3U1>UNT[E!.&ZcZK#@c\QD^Ko@oD!bZLb\0(Tgf6._l*Q\6<^P@RE"TFT1&L?9Y<nPtACT8+7O,stQ)?!&Z\Rn\H=c8D%;c&Z:TjX\$gLX?2>q::&"OUTnCWF%QD<i4]m5Tb?\Z+Z$VQb6K11)ntcb(#[FS^meHR-XbjXn1Z&g[4s$^glrW/H:.)tP+HiTO<q%VHOpb+7(2)G%[Z/cbG@2\QmjbV9]&I<^Y@Ua0j:[.L,9be*jDBd4B:mcJkmuEPe7Ean)]j0sbrernajpo"1XfY(j,i#H'=!3Yga#%LMb(]&!"4gRjm;naV`HTpT9+a[[]3Ic^HJ$l>sk$jS-OIW3L8R+1`oPg&Y\i=PV$.A<d!Qp;H,h];NFOE@]WuMhZ6]Vpgir'9elP%Mp.+>_UP$A(T,boY%7pj9&#'!'Xr9THAPnUg\\+0PoJ)-^"c3@@>3+;W%g[3Q)!lnB@^9G-65$Giur,24Sb2/MIDN3e7MU_$GNq&%'=Ugn+J-ATe(7G"h^.UE"PbGe']Bb,W\Ob*P8e4Ob<hOKQ[XF3:R?Q2Dm'Y(BsCMQ^[/_@*'36k3fmjPaJ!\#TYkDdX<<;D$7O)j%e%@h:k0Q,$d*[g%ATR(Bou/\=Nd40]bFs"&TOZZ,bN7)2B@,=B$dP;1(NIZlA(cIWjj<8Te<n9G:Ms;nLX%o4Nm"Y2.Yl;9_(7V7%="]_)kF=hnFahA]AG]&nrK4_>X,hh@cNJQMeSORPmp3g.;K=\]2fo,X5!<jo)s*g5om+ar0RA&9nDrTn/K7dgKr=?Rh'Gh</"VLl%L#+$!lt#>OQje-qQk*!hVE"ILCiW]25!D>QT0E:/NmQPUSt+7t\LomT5&Lg8KDRcRac#?)!Dab8jrEEG4;)JlWG\1L_ab3K,Z)&=%J[pMeBH$5)beLO>Qk&N"kk_TD;KE`0r1P7184Z9pMl\$U;9*tjH?pafD2rHP]=caNkf?'QpU9#\BJJXPGVV\R)KW0(I0&NNoH@=F%ZP(Ze]%Q-cATH>Dm%)>`AN"S83`hKD6],SNrb^S']hG$D[R\DZfZWF5,^cDFPN+?*p>:@4`jY0NS3'bb<;6)jIU9@rZogN2[EEn<%T1+F<hVS!u#Nh3L!e_M'?*`;Jl.#@1Nk/eB^=:$dL-lA3RlkW";0ibM71?ilj?fUHe)U@/kOH+E`6:LUp_3ke]"_3S:+7qD#2X]:%/lD<5@E^H=B$Pkm"FmN^@ua&&\7<b@pmpPr)a^+Vir+dng'F9#%gr"e2tP2YG(**9Ho^@:TE1CC6t!,Z^R+GF$[3EUJ(o%Ro2^Wd%=7jkOZ"L1r*En:)UY"5%$.kqLR"<%e:V*&.pJa0))9PYno>L;[O#:-,MOPRR>9^tHQ0-bURkI9lO6b7JE-@ZX%*87c'8(:9n;Zc,%8;l<LYI[q=XPV1.V<%KCmN$61EL%J0H?7Up,HA&S14AM7)K88_orttuoWe7_mN)0]]?%E\Qad;FO*E-M4h,\E,[flIWmC!nECsgF%O,VAeoLP>20"E^C@23kIe9i;TgZW`h>24LMdX,Mhc0VoI4M0Xp/Xk"T7n21e=gs@BR4Cnsk@d/BN&_(`ER*-M4>LS`de;*$6pF1J%4Yjs]YY@K+M03q7a;h1!YU`73F7mWL4QY`Xl]L]@!&;UkdrT?0A"B-"Uh"DCju_a)@ifCa-=@ogURcYfXt1f7DIYtAi$?P:dS:fd%H$!kAkud`#4Z[`4d"5SZ#*`qjL?:4(cT-E4Mn<(<YKfchYg5J9DWu5[7`Q&B^NdC46]A@Uf!9'sSY1M(oRbjkFA#!"?I3./okKnK%:3SI\Q4^UkHoRmnhfDKI>kr=kkDu_n*tEOF=lseOL[uFX\m.E=MsKCZig(LJ"og0=/N@r<SDDK3C@gCTm[GpUDUnQ%"s<3K)P2"6%SGn`QDXCVA5+LJFD%*gW/0E0MlYDtCG-L>4"H\"!oa&0W1%-iZ2]cEPI0LD>`^J[.MMZH:rS-;Zl1H0P+s%sP?/)VIf#%:o055'j%UJ1$$UFG_kB6$:"%X,02,h(r%L6,YQmgsP9-U:A(5G9+^?=l)`cfSh,95dVJ6WA]9N$oWf?9</\3ud&%'q1)Lcmd"M#rZ>H`_<n4%2@aMIe;=\EXgjo+N8'bm%8GD(BkM-<`3%\Fdb`<]_<lKi%Q>p3AdO)/ZeoqK%3sJOV75uW^rBRY+N^\CEk$e#h5AuUn!.FZ9'c1*%*HPkh9'`(38A/T19'_>19c&KMY%?&+Hl8o-/':Dr>=h<Lh23scmoG[8HKY5DBK)8YaVQWQ"0Dr5E0"*VYbC"mBGCl#HK2YgH"99t%<&bj,2.*f;!i^,UA(J_+@4E8:fVaK\Xd2S5oB<Yg1)8*cY$>ZjSDCckg/L'2oPAG+g5DcDq7O`/Q41e>4,<t0M=;92E[e`XM=C@-%EnQ&&7aZ793Q;3eF;U@C5fd8Q4NMI_*MsNXe3.N;ak+&#e$PW3(Eib)@EIOX_WS=**\"sPEM+@t`kQJ.S0^1rF+>pbS:(*AK8Wf\%o_,-@NtmlqJ*\RfnKS.5"Q(9Y54NF`3.OZ@O5N4lnmr+ki'P`UVDb,PL+]OaFEqNZM%gfu4KHY%9!$2t=[#/PQNFV0jco*IO7Dk:%!ufjV5;'$fWjcKU[G$[ba_nk`P23jB1@3jnYB7B=q@kWn<kE2R[,[C/<P7=AC:RI#I=.Ym-5;Fg?uXZ'2H"%jgOh(SK\h-T$p1__%'i/[sVD^=cJ)hEXA2fh`]1KkSXD5%Fo^13F.,6-GBpVI0GKd:l2R[IRN[HbG^F`:^_/nsH2lGK5lK?4FfgLKc^H+T6R[3VQAj6CL%HMFr+Qcf8pCX(q<8pBRK#t[W_"bS!k]emPI_f?)oWQsjK8b*F5X4L`2G).3_`\UU1c(b:IXD6d=iqFud?2EZ+:R=eBN%nCFUCt4Y%W`[g=Pief[P-a^3q,VL!S4>5;ffb)D,G'(r<X+n=>i,ULaOtjt_R=Waq^$:>`treY#N#(I>jiU#hC6d5V1pT?]F+*$a*I+dk6nT0%=jf(\eRLM.Ml1bfflS;50It5AZc],na2"l&S'Gb^^;-bTl-(.s8%e4jcBCu3E9?3/gXu;^QBc(2=eQ#=ZJ'+U[hD)/P>14O7:&0I%Ncg33c&Q,rKsKsEr%'*'G*Ua&<k3<QYs$9Adoe,S]%ht(ACF]CdTN0BYZ*NOQ"X_AAl[N+<aET.b=],**&OK,B%'m3Vq;NddVLtF%q/a;ZC>NbfX/>%:iH<>@ZYIW+^N./,3ZF$[31Fes(ir[cSM@R1Cc\V6'T7%jQcu>5b,)GS,B_+E3icLHlSH/=aemPY2T_e:afeql%S'J#7qtT5@ZfuQKGngbejAfd?=fF6d]YADDSIQP&`i5;'BGS:$NZl="KYo+Bl)^XATMrr9fMHJdb0Q8P>]0VnR/s7+je@TR"2>'r%oXT_D#:lt$c>+5^hAe)1=*e5ERic6"pXNF.@bL+*U/#PYN@0mO$#5/a3T`X0T-!EIp"1_>U;5P1j6^lYg"EK#3Xrn'PVWP,H"L[O%ZT=dYNPs<$,#`Cjm8)!9s$0JI>PsU"cQ%GZh87Q9F'Wjb;R2icIPcO:U90)g]BF.sC[S_0/):j&Q8fPJ7LhLdFLUm"G@kRRQ=7;E%20T7cU@gs!-H+,Tc(-(*HO>8nEm<F7kJA5YF5n&sk6bq#0!7[I#.9W/8T/st(%n5A+$0]-HctM:6OPL+74#Q.`s]m.)A;:NPDV3/%dc1LRMoG\dCF/&gH-(SZbqCmW*P1$gC8X>7jaD42':Ed+dd+Xj,I^DC7*SdL@PB?Tp@4GMF7Gf<%b1o]Tho7"MhX:m=`Cc)Aj3d/%2LEVp$lP7U9jS!am=aZfNHOrYLi5=X`MfN&,.lXbnT$RVVoUK(bU)5n0lh-,O+hogL!2()rUgLn"[n?P7)Mt#V%[ItDORduAS4ZE%^F.(i^/r?S#4l9IOGUI,]Y.sb`,0"_DhgtuP`T*]>Xn*D@rq3X.6JBX_/Su4l(0LDhIe2X09J;7_j$"SmMNP*R`OF">E.B?qNQMW%lr@0e[VFS:ql@+7JB$_BAUo"4dFS;'@#&s\,-h8*nOh(4o]h"Zh/Tnl@M^t8l\GhmD!:DD4&>TO07C_YbC$\2j)3/d7iS"JrgWHo%aX=C*.;sJi1u<2\bY<B>Dn'l^NT8#ZE5N^.n(%8p];60V=n^=@LZ:*o'>'daS@QocL$Re8;KJqb*JMM!:TT!@c!m3/b'].n8??qq%k6e])Zo8B%JnBLXq$XlU%!;&cDT?OA]9Q#^mo.*TjXlnXc>Q*<=qiZa!=F.a&iN.QHCW^40pa^D'.S3X?37h(g$.oB@ESd,RP;1M%UWlY7b\UY)DlLcZC/oF'R`eng7]L;<'D@LGgCl`H0mW,KOWo%R_?)a#`VYFX5qt3MAltVXj=SE[2=Z"KUR)_k@Hm)!H$p)1o@qqL%np]Di0kS>KUZa/I[<Oq/i/@<)_`TJuh4k_j$`T`@kIABWFEU<K1$dLU`t``2T'IFPW\!1pR*#ot[>g"H4B;',1aRYHGZVa2HB?^%%jc@-!Y5R>F641Gtj4lh*^`PXe9o?gdG?S9up4qOQpS`:-T0!dpc\K]6$R1YXfC:n^:t=uBgDl7KV+u4F>HkM\q/(?#S`>]N0/:.i%b`IQ\9V'i:9l4\VPhfEQ,eOoq:a2+2HeA6fH_@e#pd#!s9Z#QZSXM^pV5?EQ!Y2bj(C0k$K)4!(aDV$t/dX3,)*YP<Nu1\M(>W*[%F8lf'5=A_K@eKQD0&7)EdK8=CD9FR+YNZ%o-LTLf*D\kZ2Af82mi.mRpU$'oYsWK[Br(DR_jgdD`\;Y#N?4idR'Vfi9toK;7b:;H%os9(]hTp+=F$+gJ%WKT:N7k"K;T;/o7Y?Gl':Ve+G<_X(>+Fg7F:#eZerO5uM"sf4^Vt$M*9(Dc+gKAn3UhF>QW9BZPJPPR>bg)f%AQr;?+H,("Ek^WJ?>=HB_X-#'l@]Q.?:*"DVf$j0AQ``-&_lngV+'O`'5Pa<-PpMK\t\_/;-G$9#9Cf#pWt5S%W81>fj=aJWCuMo%K!V(o:-=r>[+LDhfo>Z!'*`IL&02V,Q+N+1j..V0;>\:FcT^"(b-I.9.TY]8`<h;@%,conqHQCoguYN:i$@$3k_T&B(A<eTI[V(b%g#ZK)asoNsO9::I"NT76]ckC:^6ktO!fcH-MWR"]8+S-D=gN'NS6c`*/q)UXPq^JUHeUo5k-C,M<mG*RdssUJH:,Q?IE\5'&O=Zo%[dg@sD%FPYlE\mK;Otg`3Imc$F$4Z^P<K%Xq9IXMdlVIlg#LRS+5uZ^nX^*OG4`Wk3EC3,/E5$QC&Z13DVSM:f69e6mu<0S^,\$m%n*K1gWLP;0$$C^THkF[Eo4Qe7?`GiIH]9too>fW*F1Xl][OG]MEm:tk/2]um>b3qoF4n*o%qBMOl-+jdY,.Ae9Gb.h%Wsd^lM@eo%(808!5jNJ^CmnK$7QjK3>:9m+CC]9sroElme?dXV4_FeAblMps`QTV9d-D*Ck)+K1!jl)99K@W`=Z3EcJF6rdF/o%@=b'h"!'T&W%2S3nQ3Ikj_[(*hCKDqZT@RZXSg"j`Xg.V7SHJt1%Pg:08U<P9:.A-#t[QepaTCYh;W\3DNBAD1sJ@DOOq2B;0J*'WmX4sp\Ijq#/%rKU#\b%Kq$iT(cfp.Y>COrA/Hf8jNOXlO:HgO&n]biDsTfhhNLrK]MaMV[U-9XLqrHi4qjmQB?;j*n2hdUtpm]%>:$CoEWSlfWYr%T9#K+Aa]54%U%:*mZtN;cWO].71_%jYFc$FnlA!8?-eGclfT86K_&POE3Go*XaWq>/[]s(S4D[a",PQUrL=+GTrd0Y5Nc8L4QfeW%h!=,CEG!Ed>iss\qcj$/N1m*9p#@i#bd[F#R$D9pf?`-b@"/7.I/!Itl;8iiq^]2.cZq0TT)8;KcZrmk?9bS-M^<;HqtT<e=48X3%A<D6;*4ges=EeKDm9W$?>Q#Ns+2)<DI<Ah53;1UZ-0B<QTC]16<qEW<]m`]Wf5M,(3U^C=Hi:$*SqWaeS!E,QA!l$.?g:r^kD_)h%nh5-h+2bOPrk?I%HsZCc*'@:1hWnh-apRRAlK[g1F)JrGS"i'c]m_#sD-(\[T8j@T\,**#fS\>.mW@R$ZdKVHc`kV1>2W^OqgOr.%dT_A6eU.7\e&K)XlfX`0]TRX?S8\(io00klD/#OFCVJD=^8q$f9c6^U=oM_l@hu6H<^4dO`s(o(>?m35F0D4BRR9h/?2e.pX^@C'%qTX5!PPr1DoB!Y<HEWt4Xa\IKa629cG.s#Uq.+_jX.R^]04MYc-g+_44Ir&2iEeb3>Q(Wcn;H)fkBs>&jXR^S]me89qRN,;jZVeK%nQ%mB>e$Wup%.CV>k22cgR0mj4Lm`&'><"9-..@Jp\Hm#L*4N;ENc"@@`[s,/Tn7h$'i)+rCf9t$f:44]OPHmY$Lg/5Nd9!6[%k6%p\J$#/F@tm"n2,*?Hmol.C$F/me(Yh'$K9>mTr-<ih/MfQpQ(iI+Z"F%g_4,*F]p"c%->uO4^^QT/#CHGcsnIX;Y>I-/OFM(?c_*%GmC0?M]jF!=[bZ56VK+X5%OFF=JCoSG*n-^[q:o;igh/S],IpoX);W6hNs/2S*,R"5;5VUr7a;BeK5i=?23NPX-:VBJ#=.*m>hc%%2ohQF@c_^-Lt->'5cd.6+,[Jilr%YqMiV?-nQ/pW#uBR?ea@TY]R%hTDL(j(lA2q(K2;$G+oN0p7n9'.?+s;ST?k64`TLt5?@8lq%#3&k^1*F<u]nFDce(FA=;Ktrr-c<(_Gd]DVS8=.Amr>1dRAlUF+2d\TC>45Y;[g`]?Qe"Vm[e@PrjpBl%`UhX92<-kDSKKEACdrF%g9J_AomAiFZ.D]=ZrFj._sUGLQ>UMeTdbgt+mglD+8;@\^fg-e'!(nqSmFUq1t:i(rK2Qg6?`SYgaAKq4[f#;@QTms_T5![h%JU?%Jes0(q>uDV7X!MmoX:.5M:Lq(W`\!mSrY7e]+3+3eWN;',Pse9haP(NEY9mf04?tg)XbJK%F`G=KM.\UQ.mC#\hd22<.A[.bO<R:%ogCPScd`ogNHn=&c]"INh>;i0k.32G8[_.YYmZn5T)3$7edJ-&#IeP6_,Zq,kT5qfgI.Oq:(K+)XpRD2`h[R$GP;_!7g$)4n??4h%p?0b#oelAdN&^YW8T^=oO>+c6IbTYjj"m$LR_V]b'uJ)1D=(O=DXctE0*j2\3=M+Q?aO-0iFc-g=c18YB3_e;PD;K#EdN9ArHV<3%\"dE3f+]K-a<cFA8"[aq0XsIXG/C=GWk@]bd=R!!.mV9^,DQYW`cBTh=7eV%3M>gt6rq*UYO.!NU`ge"m3'8ba$["0A%hpn_AY:X%g(;?J+On\)3"7L7ChA0oki[p6D246YR:atrc:\bJ&k*o,!W#r[;->Y!WCuGX,E?8\P#6Ud%=2tBK$9P-7gFM"P@g*XocR#l0=2T-%@A?X5*pRts&X8HcWrd]/Mdn/-0r&9&].]lPdV#S;FI6N%Z]X3;;G5%UNTmQHK@PgI]bIQ:2)L2s"m9Xo7V'c@DYA9HKq#4#\'epc%GZ;1*%.5fVai2<i$_cWXqnD5$*:,T]@mk"^MFM8tr(OR<N,4r=8`N&!fju.b'nq=4&Gam^^Q%2j#l.P1nu_[[3<Z4/5T9"\Cp._]%"8.QnH3_\M'`^>e$NS-BU!m@7`:;SQ!6fV*^AX`i)TlDk#QWo`\LK3!56N]XTV3*PQsM0K?]F:KMpVA2Tnj6##WPT_7:@);Y'ljA%/+Q8$AUB5ImXB:%iSuU[B(CBI2u\Xt*ekM_aP]2M5NCDshN).C';GmkV>FtsR+/h5:':r#V#")OXILMK_G6-uQ"V79E.agZ&[1<E%+\jEs*m3k?Hi_s_@j6K>3e4ITa#VfhrR_q/7sdT8b6'KP3efNk=Q6@1MSE)'E^%cF_.d!j?O5P0WqS!qW$"cJ!IX<K.b(H>\$g9"%.#%3]+VLB5`CN2"S!R<<8#3uDYFW?8*jo1"s5?S@]T'T6eH\aKZ>iS%4a\5Bd8D)67D@54;XGh+@&931)WPQ"$uTJAT%C#`q59UB%hsPel6EaEAM=3)&0+fc`*8,G)1=;XgY.bWnE?H:4N[S,FpG8<H-[`W5GHh24[-f.ajHZj\iec#TVXlK/8Ymj-NoY4D<`Rtqq[X"3%SC!5SFcI;X7nuo?Q*%Ys#R%^HMFXd<hTj`nm3X[XUg!"/LT8,IUJ1BHX\,T?^,J7@GS96m[RWR3%6nHB+T)\Na@[VG4dF3WgG3)G%V:nR4Yk5fs-92R/M?K/%agP.7>L=]H>@F@e?G"%?3@Rkljm)mi^N,>td(Y#OeKqmZ"-7bVJ`5bQ:eI`ZBD_8Skpb%4dEqWJ:bV5e%9&]HDBr!;tC&gK#k1=m%aXmLR8oa1V"C"oV"K5>Ups5./55a'"bFL=Bh.0ZN?gHH(3UAuUR\lBjNoo?1i#u4sc!7(-TfQ?n`sk%.%=&'q20nTVsI1Au\=>NnHr<9q@KLlMJ'?K81l,b#26oJiY5^no(G/`nDjh;H-mAIu9R&S2PDo,uU[$=$8[(e9E5"7:GA?:O^:cb8p%41Kiieau6V[\E,R`T,D1(haiPQ?#":XC1U&E,+2Vp'Aol/<I%[hK_><,Ebsr:T]D/2;MPr`'V1uqRBJn3jg"UegB^NT3>Z)IQ\[9%j\UCM>"u,SM$42AhpeBS+StZ60>7ZE.nBuJ-)@J=.`g_(fTGPfi%lth$SDQ[D$8$rX-s-)!JFa^+<$^p0M-!XZ'DNdNB@7gm>As#%(D4jO@TDX"50B2NEJ`6&QsGVNqs`I1coZ`V9't8[>&'$XHV!8/3)d:P(L$4ni\#>:N-)(\K"Bg@\'c<Efli8Cai9pk<<D;/NL)l*%<k[B67$$W!C6bBfIERGI7mmTKH[srkW#.PEq7Ui+k)Nm^<cmMQ-/o74\DJ+7Xo06jW6fLE:R/f]?:0^'?]DQN$`i;dTpNAZg:1*t%XNP;5+.o8RZ.H3V+d^er[!R)Z:`B#3KI"TT$oI,?M:\a"0X8'Nr:;1&KDSWe#jq&T((Y.\;sRk$6&o)A/L)p,80%I^1=5E]J>5l2%*,of7XlQ^dgDRh'f1Ug?o]"sHWo**e6R,<Ypa2`K$AX)s_(0Bb8Ph*a`6,p_K>Og$q!%X$/mf8RJO+QDhB.Jt<5*NKPP&ZJ^mYhH%lUcY)(4LFVIpUJ?kQRAmR,2>,9Y_dU.k=E-0kG.p;*o<"*(@4J-h0t,)<-;'3-k3[Gu_'jN>e[t;k8\OA"/Eq:]@l>g,O(@4u4j&%A@HuAaSDpLNd[YuZfJR&!TA[aRd/R4Du2:>3#UY+:b_qEN4PFUT`QZ\TJ8R&G[>!2!9tqQOI/.JM*gmc%m]T?s3l?T*'FT5A#pM.%epPBVZ?VD5J)+MQ0EN2S@J@@aT>'hl%t]K*j@XVqT8%sNj-bXRH\MU=Pn=K4O(5"TOg$'M81=H%]MKlHhXDonLOp0HHiX@.]ZD<?%?huqH"[oRW-:gsaEbFJk4eMdfI%bi%@$UB;[u(<6-@)BhJJ%UhIje8%$HC&?7tq())"@p)SuknB<B*2,G@8bsAjo>%$+gC.X8u[9%YpR>/o`<<q\V\E**2.9nC?Pcn_9Ouuf_h[)hTQU>Fr5g2+#(\s%n#t]</(UEN?")sCk=PV%GC;1QH:2X3uVEp4Q$X(kctgJ)RX9E%SI8f?*>>\hq[iK*4NrP#E"NMY9f2HSqBdbMb!8k=JE&?%q0>?b!$Nd+@ogZmjc-34qiKN>bV`P,*LCm@KJ::\3TB_%T'uJ"lYA6W%3@*p^MHRS;\r@'GR'>rT$?9_&HD!"/bPXCZ+EB<Ii%Vg"$tgIlj<a[G7r2n`Etb.CPHDpG-<qnIFZ*c*/+<]Xico`4G3)e9]T4:\%[LVd=dm`*d#T$J1[FK0OFi;Gj\W$9YCa1X$-LV=9r6O,/GrrKASnkA7Dt?:W-a4h^7\.^nn:j7fkfE`d21Y2/9P[rmnG&r9EXtp^%"p2C7c$"`TBG0ubliOXD:5fN?PX!fS(3c&AosC*VSo8dfcbEXjl;$XCpBI!W9l^SboX4Y@^K%thJE8UFD#Wsj[cq*q)G$V,N7!'R%A:0ki=b<l6LOQ)urB!Z3n4(h-"^B\kh[j_PWA]@7e4"R;7tq4PVee:NIG2p6X,&Lu$XI!C^#Vp`4:VQ.L4(6#CE,JCgYpE7GGH$a%BJUmUDo8"Eb&6b?p&o;6)@Ed*%l9$M/I4]3r%bGi`r74d0+,cQ%d]$BPA(/?hdE4JGb:-\#?%\r;,c`Dr*ilfhDFcbDTN1Vq<.F,%Os[VTVDV$UeEhNL<a[BpUN^dXNj[>tr8s%\5mX\?oJZCRTWqe)57a-;ED.8*N0#0%M^1/h)LSdA7*Nd7f]60->esHJ%@hopYk+^,%7c03PX.:!Dj&5_V[7\7_H?bOT8Ze&7"4`[CQT\6;'aT?f<llFUX\\sGhS;GXIO\5Pp`cbABjrH7q*6if]9D]#q6dq>`I:NL=m7Vb%G-Z.%o1*788),\L_fUH9I"BT1`-W4C^RP1tl<;OET/U\nEkC]95'c.&Rn/HV+g[.eGH%r/+4?ZIi+,a-H:.J?KVt,`,<SATSu"/Q%RM7GK1d6@^Q"^&]^O`UF1nY*rUjjZJn,jSmo/]l5Q^!(I`1unQ/Q0^u*G$k/R9I";;0jc8fDSd<?hP#Nj4o*aS<$o\Qh/&=0<(<j%^?IaA6qCU(rZf+kOcohlkusW3S8+VAmXAom6Rc8dquq33bN)FXO:_>`5ni/njET^T&3Cc9:8!^46&8!\cm+0)s"M0DQtECCBsFkB%L1"/?!g""lH71b>#B^#5DrUU;d,lJ+J[-f?;Zn;CU>jQf,H$7M'.5]Y!&.i?!Rqr!IG5;lIMaq1-5r_NF;`i>(/2,o/Lc"XIBMXL%Jtgs<p"#*!Dn+`+Xe>2K$k5NjIVk.GLsJlC$pk%a7KnX-;GOC9++$Nk%i]Q",F4.4<=HlsYm(c!fecQ,!pri[fd\q)N(j<NC(Vd9%SIDS#:"R8I0QOus4Gd<2[u:#8Hf^*Nn_Cm%s45akb?4+6R+Lpd#u+G(`6jXgJV_C(G\F6%iOGQeX`>>sXcS(`>%9^Ud./$i57u:*%N`eKZM4`kg6_pFh2Y@bf-r.N;0$u?O8g3P^j.IGNXq)"KaXCAe1BC@n3f2?`,G0'$@9ScCi*]X!h8B;tp6b3U3a:]QeVEH]2BbfV%Qf7ZS0?8kn;s.iGjigO=@MY#\R;(j%(pel>GTDK"l%l'd"S%Z"Kjpt(7^1A;Q%.0!W/bragUeT-_@^i'9F3U"%hR"*&jXS8-lCD$%qsTnt'u/!qC*Ao.8bfdqd?,S''G/9EbF9s!!rGhA(0(*F<!Y0h7CO.1S(d;T%RGNb;O8q2'2hql&uJ9$6aG5W;3dd*YDcGEm]2-r%>;70+OW1EZ'GUj]<S&sg-J4Tf4^F1ZS+QkW`9K&7oJmih6tD;,Y&BVg?M@R1&/9DG(Fb/1[JboHH@hnR+F<3lZQuqb5&aEFSmF][%,AbG=]idYkTUqh0?WKJO2EeJ]opD"j@a)#\5XFq5Sm\^+:-nECT&;CKQ;^Ure<@Q^ed"='jV/C>lA:s:8WaQ+cEEn>l3V9afS,k>%)I$6.nXuJ(**Z<,nXuJ8fMTs%$KCKbTSIP`P>4<*@"3gVoJEhmR$$'a\Pksjl[@04fq53#R6$#7c@Te*DY9%S2J>RA@Y&JqC5kDl%=I.k^P%#FpBN@\iBD8J(K+23Vab^Qn(*)eG=b3.J"Y)4fn``qB>*ng"+IMlf#dJN)W9aFt*$HTfc,'p!4qVlC7u48d"C]ND,:)6a%&Rsc)8WUs*/E7!B1Im8')[%SBdLcOW%#tn\n3m$k#'6GkA?6ao[VcWiP[tgX[VcZ6S;n.S7<X\&$TCTj;9<q;$tVLB#.^.`YQbL1%I^I+^T%Tm2RqNsYh3=2LSTs#,lA50Xi#H4%W`#nFfYqj@&@ce`Kr0M7JBFS4bO'p.'?e^?c@At^B@&2Bc6S'Ys4726S&(Wb_Ni<6%1H6#12e`2H3MZ!h0S>+I1WpXj^Oc[)#<fKZO!tiZr]Z%'pq<n@nXUPc6G=@t!eb8gE9K#e%C"c#U>]8?$5_:UN2<(DQ4\9.7$mrs%I[DNpc*&?Rb9?s#[]OU\)VTY]@Ok!QF;;&3;)(NCjk'37c;J`J[LsH7gg>9VJthn4M!m8aj:F):Ddj!/pB?XAEK`iYe-kj=1^N&s%O1WQcg\W#2."mF7`:r1a>Z326d*K$=&3*19Yock7YDJp5kp(k2LD"XsUJmL0iTiW46#RlBbq_\d]n"9/<]M`4%aBnCdu^CkIps>%%G.`\;(:7\2:1lX>J])9uJr*tJ]L[*cKe51MM224LnI^%ded[h>S>Ji283:>oXmLli"=0m*ZD*(2QX=_iUOpf^[Pa/fQ3*=%`;>YR%h22kU#D_,l_75"W#AP5H&R<A%2-&:rlpYf8a1f@7a'eeA\lVH3M:K$t]%M['XD@iJ3O=`udJ1pFm#onqYj#X%0<>j8I&9L\afl23%6<'e6HZ;D/bnL6mi223aC/mW?+1KUhY<O]EMk-T!R7`KK*<rnN.'KZ7dP?dW&KVr5B_LV/F\iHMF*&Ct1*.DUg?E\8>TFk+*D&(r%OZfP.7B78<mrO4S\UUC4r(9\g5g3R25a^;r*90;(4gV$u5&VqARrYdWR%:NDhGsAsKXLC&Ua.!S'9XGhH4`imTm@'j5ra?DoV0ln%eBZ[P8.po>82iQ3Ws>]Li?HgXT9aY_-4XC"?).\^`?0,_@Z0[cknHgd:bs2mMfcO_VQ%9B(MUmM2q:@bDS\R(,1Xt9V!(':g!7uS%/lKOD,"4n'3CeaNH%>XP^,(S.D\/'2()qbOGCbTUo3E''P5(Ak(UK+2<;ZG'/U\H1/eHQW@</6]]a7Il=m4CR%Tum:]NER#\#5+O%=0YA\I#KgI.39\N-BT[u`c7t\7Ac`m9N2oa>ekPLkD7=n0;P=(W3J<MeTXEfORfQ8Gi+!Z9;9rk)Ud4*<l3G.U!HAPno?;AirCKR%0*g<2=Cn]AQ=HN!*1hNtpW]e)Ns#:!4a8t"_e"38,h>$E_969Ij4Kum&k?9BOKi-g!Xj%;`DQm3j?FqlQrLnBCuo[`B\9VeRZb?h%q/2r2r+ckMM">l@\O0(?VG')PmjgirI&'D-EGIXS<$Lg4/Wp0L#QWP5bnCDZ!*Y/4JR,7'Gd\hc?Xm+3X`AUm#1/Ar_I,U,0<f1e%W0JG=hnn/#NG%;=)eUV)N/[8.g_4EK,;?m6e.ZRC,9Sq],UL*VK\:Z<X^hRkJ+;k3'c*#G(s9[2Si#U6A-=nkjUVQ=E-lt^0X(Xt%cf.&N#jeL<cFCZMHt`7>%Xp6-E^ff3O,sMogUTcpp1TR@:cm<,[f!+78;U#rml)9>*k<pYF[CPhlee?ol=FP-\!`#A`7AKp%UEtI%nsc0Y#REEWn"YK@U6S!aIt6V![c2G%eS:H$h0uW^B8&#na_M`\RUrhBI9*CS<oQt]jZ]`q0!",i=aZiAhADiqKRoOdeQ@emPfl-4%(gBP/#jH`IY3-I[>orm6PL]#h^q;YoS?->[7.XSdm%!]+Ft.A1UqCm@98\1G*/O'mi<F8.LcB^mL1JQB%,-D"<Yp)(`h=AEmA(:_%n+3bB>9IBGeLn9Uq=X5-YACm8n!XC)G6@(D]Da$ZC#KHtiNQ1Np\f'2[ai[FCA(@m1mI/g0V4d'BoUts**h@$QU!7]a3d'a^%s_H%1bC(.#NXi]1-%7RO!A,TY4WhA`oYMjbr!,<GEc?]U>&E<"^6(8MO']B9WS)*+5Z]h(_k<..<XHQ9!dSe082q6pY?Nt`-,'Am%l+a%?DSnf*ZX%phV_V*%D+'/!Fdq7[f-d%mC5*"4/tbg#LYU*O?f45E1R6]6]Q@3Mho\@fWCT1R/a0Y[En4S*!q5X:K5Ka>BG[*eM('p%bX-6`iDSht"c-EIZ,?^U;Nk7)8"P&"Hg&`qFl03):uM,7MELRs<7UkSk)DLr\l%c$G]9NPc,oe$@U^[cBc$B\S+:$#nt#:nAls_d%?Hc*W6_`VG6?@u$"-c"qB(-ZMMeq+m[:O+ih-m^*Wt`mqA!*)f;b3J+)'h<7gM*K2=8%Z8/Q@ZV&dNb/7:3qI)?PL!8RC=CZfDt9%2l2Zq$QMqp;Bh;@fX.2bbLVY'D)Z=pg9O_bdHBDoSSQCaTIdHalaUNlpMV'i*U:rk?"h]1Xt<j1esbA[ZuCg+^;!5--e1ro_u=3,%H!p[0L`NnrJPZkJGKP7tjQI(WN)D$B>2rpQAM?^&\p0W3G"M9B[T!qk*s`K=a&e)CRjSb/Ra__8?1C'[7?XO34]Ka]>E'03=kPLc%@Af#@#Ff<OWGoe)=l'DCliAh0W\!35H(#l480(4e@a:B"maW7SHueq8=SY;5k`1pQ6__$';d[>r)\P#R6_'2/Zgrh6U-&?V'IhVQ%=6^7"nqCJpi[KGEo)5)<Sq5-('(#-rd`\\p&Vqp?Z)r+1%(rWmEJHCbn;nKkX:l=f+DG,]rSFV[kpAg6f3Z2^TFN$Zk&""oRE/bC%rP0jpmC8<^:cIpERAfHN1>B8Z2J.=ecdfMY][]bnqkG>"&39**qc7$B@tqUJH^PH<D9\f_$jsh_U@r"=+j^35Sr`<H$RZ%E]QiS/%f=X,fqf?Dqi<p^>LQc:hT#EO%/R/_XbML47cqB\/9s3\k"QIa_oWH\mgcKV`?OdU(LI_bgf,tPtdRslMXS`1rD6IF-0_nB8Mq+LB%md'j%i]Kd2Mm]Kch4Yn."2FaTY(`O1R%PRBCn<fF71SuE9$;'^X%@G<;;i]I$ur2,XsKG+bro2'DakJjZ+$cn;tgIf&IO"3:0edc%]d0dVO8#3gIC]9C^N=F?1_M#+dBTbg'&?Cu5)8Z6aPb@Zko;]4>.Q^ZR`gm=72m>1c-edS&%F3^_==69a39]tX;3eA2jad!:KFnR%H.X95lp0omJ=>Ar_F`Z)qtoqgk^H$:NP9Fpgi>-!%'$r<i\dpY2,2uZ=fS$lZALJe>A#Bei[[[N[rn#-)%bXK:D5N"H0Wp_Wd/q,%:X8-nV20s%Xdl4Y_H?0I(nIMemC4ln2HoD,jk%Pt,*%0&TAaU.Ide1Y3_[aU8.9.a/Ed$%i;Cs',S0;Re&`Yc;oTJKX)XF=O1nsD%gV*^I+YSZ2?UbA_#olNiek\XL\8K/Gd_ZoLW(Zk"!WYpt'!e.g'.hJ+Re0]P!\S*L!RY=l`V[68#6_1+J)iR3K*MPAjUW=9AC,uh%D;<)8!_6*0g%mt(4Wk;#VU)o)^-6G[mfRS'J:L>emK4&fM''X5Q9$"5D`m`Bmc-Isc6$7ZedF93B_Kn)Z<m%j*et$NH,M1]bjBok%EkKG$Wo8?<7pPD0mpmQRZtp:5q#%BX*4#,=&S\.G#D"*WZM4\]$\8tDo0X!2?FXMlE;n1U5A#8Xa8^YgR/?\hce!r%p\_:X1r#FJ%"Z0;]A/6uo&o9Qbe2qC\(Gh^5rR'[em:<Gd-eANb&7d%gSNk\rP3X5JQ\ZMhHFkGm4[j3PefZInA$eklq-u.iZ<'0.4'(%G=ja2b%O[B(GO=T;-N*5Gikr\"QLfcA(7=;`)QCUronLF6fp3#&k/pE*,b4g&3Y-*)?aX[",dkh#)4*,5'MG'Z@M1&Z85'$)hG-LJM/pc,k%`^`"2X<lfaHX#DB)XV"(58:/UW#O%KUAHap@K'1(,I+7bpW`)i&+=.Y(bk[R!?$'L2ai$(2@inr^5Y(I?=7CkR&,fE:@*3kMDcYM%-?UGlDmeF5.pn*4FtIr+c@30%(op8)#Pqr(@s[P%:PFgSLepgiQAAB!oVdHg<'dka&isVFTaG]W6H=PsTi>Z#9dM`'nasRN6?V86%1"uua+%;')Itma#(V`iO0s_)pe?i-/HEKR!+gs+9\U<q28,C'l"hBm3ktr>ooeD_DgTrT"km^MnC=Of&j>&4bJc2"S8I=9J-jMuN%O<N'*K<)_4(MNa4qt/sds5Ve?Yk@RfCTCo(E9.F,%&-u*_9ap<@UMf7@H\Q,(`1T26,fKEJcAjf6aL.FT,%qX6gkp[a5DEa?*oii%<AAue5/=(cWjf>5\J/6fV=l9(a35Tfj[.#[a`DJn6!`4%a&3X^m/7p47psppO?gf%"KlZ$X8(10Uhk_U86+montBQ%V1RPpn'dKA%3.[hqmJQ#Fp4(7Zi.-#N'fgajFA2;t><>U?/+d;TrKf__3bG[\((;49CE_#or>@Rq_:sO;ce!LOKT9J,!Do'm*K/X,Na[El)@($k%3YjT.N[Y<O3sO,RkgsCsE4r!JBgR4aJ+`k/NQ1tY!JE6%_FZaUg:<<q\]?>?_ocgG^F;cHMIrbhHad]qNZolBJ%40#U]+."Z:6m6%Me+nj.3<!,_ckV.VhpTp.63Xmb0+^g;n.b7XPU$`f'%0DX^o[+//c\o\se%Q*;!aLAGGc9s-tCq$[CLZPp6)cs'h9f8/KmeW$ToK%loJ?+W]k%&Y7#8=op3fX0LurI0$\%M=@$*',suM0Gp5R!K=NNN`:TBX3(hH&.mn\Q]LF)U+e?@T]=AN;N(@k/aIuACNf\CH[?;+]%6<1]NQen"N8Vn]V2BBY.lH@8)3P;-41*UtR\a>G`jY'1^e@$(J@d49MPQ/S8/lPP"NO^GcU9fI25s<V;I\NLVZ.2@-SNW]m=o:+<%,JVi$1)^75(@+9LTMt$s)@Rde+NGHT@%M^(f1q*pgFVE#BOj@JWflE$/qh=EV4s:rWY#p<(K88LWC`qVGZ8I7[PeSmN=0&:6;F]8%P9;7rqK"Rrk!`$o.t;-gA?]A)DSR_#0*i)^OC-\PrPA$G2sEF9ciC7sH:pbhb3(;-Yr]`6W`!s%/1Xg"LIA;djj)uh4#!)V3I*S%%?lu#3hV1FBr9a:cl#?#GLesA!KPBT=JIM=rC,f<UB6tYO*mnC+d;tfh@WSW4HG"R<*qO=XW[Y9'eQX\3VQfkqY%@PU\_;+lff=:.%X142Kq-&'J[;Mp$DSKPZ;m@+ED?N[h=l>[/W;/tO,uoOaq'tH;JAV)UN3+%H'"HZslZ68h+\k.McJ[^cK[0MJ,8u>8.,X'$LS0[>%k>X^n==dD_Nm[F6T`S:OV9C^Uj4SDNR/[*\>p[ip)KPXn>J^uPYUbng<C"e2A3RmoFS@f`W[MEB^mScu!^;+X,\p"H\FAs@*6rG`%2<OMNGYo:e,'#l)+S4iH+,RQuA+!V=ibDt0L#<J88J%b8)cjM9KAD93N&eWA1Mfb#Qi!e.Fl1QapZ"<d_S_a#$^$O1lhE-IXl[:t%0B194$g@]CUbMfm@]>FXXQ#j?@LL:US2O4Z[,!)a;N:rne_jlL%Nb(?g<JXh0(9%oU?o7d'h.nA)NhI/&E=.)dTrt?i!W#N&$8+F%5s_MLR-75FHL3'3U=E&7I)/=IUD:`;D/Mm6*frp=kqH.<TKp@6%GR(+VDie:\)$n:!,aHaUf)Oq]q^ILkR#p?OP6sf#h$3o0PeQ$%\q%3s[Ft8m%7%I#JEo+t>f<PdNQL=M*/Z%-M7D[ZUK>5`MuEE@\8^;RDd^+iB:<]%9f%SF%NSUEQ>T2&>r;9"l<rbLE&HD:+b'7;%3JU_HCPgH=r&f<d..s$\KZqdZKp'l,JfA5\T@V*C/k2XOq4\!)oM2&)IYV*E4_%i+nkPoPiZ2@6L@@n\hoMNmI8/u`?-b$8'[m9'%f^n/[#0*<lRo&["Q):QB1gf:CMMrl"1l80256*+-_$Scba"4',:(1&-jsq_3cL/)?XEGSXgUpNP<UR)K9_Dpq:`$,!*84:TE'Z)g%"LiRpkr$9t(!!j*4:EL0?94.W_m!Y$Lr9SB@6uei>:t>N=F0isFHk&:GJDd;+&jCpq,?;i9@!gj1CbUD&e%on-i\D9Qd0-)CRJ][%]d@"0qVC\p\G+AiX@7QL5+tf>UmjY_=<2UtfA6I#bJX&?V`U9KmApVJX&?X&8X@!U@Ag^Q,s-iqc=]D><E2U)4'rI@bjp+hp3jGj%\_esQM[qhC[22^Np\cgTqpH;M7rmL6r]jOGL)l[4pfRbpa3UUOR!-148f6D5GK7[*-$%GD1GBD`V,Vo1IoYGKjMG>G-\,0ccc>&"%WI0sp50-7AcZT^M"3edF[5**D3'K0G]&aIiSL._]\'XFr)Tu_Q,P\%-K*-@EjH!QITDBf"paHp<rNUt&nOHCC&,kJE)e64\>#m4Q%A2EVQZrDJ(,lIHLP;9hL1A^O'j*&:mn+AY'n*+K-Di?P\KA%(Y88AK=^hg=T4/20%i1E*IR*$ads6I@\:n)^EfpU9B\1VO>iA9JE%BpKB[3lDC#&`iX1>X<G;Zqh'%0f1Oe&^k')o!G>JYQABWpS0t]c6TOM79)m@Y0ER.ODC[@/jN6P&I5pKO2F:(7_JU4_:gs`2IA7>%E%0b<8?)*RTB?H\m8pBtUM!T>9S]T6?2bUcqlL:3KemBo5=8@rIO9U+MS^B7S*9#EDDk087lYutKTiHT=Gj7+Cal*]_F@3$qPI3G%Ij'c9L$%6X[\<N9Ejn^X^.sDsMKp!1E):!q>.$lk_E>:u9e2cKENn940%W2^I[-BDmNl`3Oa/NF%eX0f<:Y?K-FBI*H1G^@`UM<K%C/1lM5pcEZ]nfA+H3eqGPggGEKoF8m>t/ncC;MDbn=B/nBK=nmXRTn]=gL9\p)]?+8+;Wg]H@)83jWFF9s2^R0EU^<V=>'LN+>Z<%qSN]9HMZM@?5S(k]kof.Bj+/7_NLPEYac_KnDpPa_PN80-3rI@RqZLD-APSR]a[1N:<^Z<'WU&blL0)r-:53K[=N"p@V?l^g<:5F%P:qHQ2$e(tR'-TV>@5_<O^/Y<PfMh_@@1CU_#q5SXcbc282t@.4Xh3d\A(6]O9QgdAA8r1q)N5=PsSo6.SmZ2AS_$;6@u!QKrE]R%U<jPS5=9L@)^it'-a*lc,UoEQ\3GmB+aPa^iL]seJS_Ldfm'"m4i?9o:'u1!B.(J"lVR)D_jr9JT_"f7K=c(9n\]Za4F>hL0b<4E%?Q^',5GD.j4]+R8;I$+k6j@a>Aq$Ioi&O>%*k,P9o`NQf.+h@Ce%[p)-3rH&824-R*FheF,P*q0rcNk_'WE:LnJGTEEIXW?I>3"e%5,b3K4Lrm:nAM)0p3;<h!)Q493$^mO,Wq*P(.H*#`/kN[rT_$l'VO=P-qKC..%lgK,9a_A+X(4h4leCYKB4h]3u'/0JN>*#.)9Vp%M?I='JH/]uBAY0OjI,(k%Ko8Rp\pj_+Xe0D+!,h2L4irMoCC"X%e+JD'T7N*s-j`Pfeu+dO$_#H!=a^Q)^)f^gdK'_7l^$+.-_0k%4,fP^#(-Hl-K<2Y6f=d%K#8.:M9=0FhTN6A6Lri`9`n7QUjR`I\2tV#90=='@r>aY$%kT=p]g4ZluUE@1cBh*<55]h7,5[ri#HL>%M.Z`\hgf*'fGJ+iLES:k>V(1W.bS4H.rRgeg-BD*1"TsLG$He19F.tnRfd6r>ch0-OnJAaJZ.n+MHRS7RRVucB'>J`_#3I:L`8$0%5E,u8oBY1^&S'h+_lsgm=M+&P1^&*?4tmn=QfWJFIQI9>fs(kDK[.=VbP$752ia51f[XD!<d-U6%OT+H#oB0?&Uq4W/kGVKk1QoM%m-L]PdTLde>/U*l0o-E)lpOua&[qYrmC6p.BlQVBBndjmU]K=.+hJ,IVh6-&L`sA<AEuC(&0jE3-f(`$N@UKFHZ-iaI"+.a:4L!Q%;/u*&(%As5BITVMrJu6=J+Q2SIXaKWa)SiWA,fh]LYpc=R!@9Opj[O8s.4(nUJ1"f]\h[R-'n$e*`#T+r%bl4Rt][P2,77,Jq1Xg%a&W9#(kQQ9rlJg!<7gf<m^WjqC`l&Hk?OpVX/k]Wl)q1hY.@DQ$>KFBL,A>IL4%T;N0V0UVn`%V4N8HmX5\n-`Wc@jre#HS5KlK>%qt!&NNjsT-=&\2+s/*c)r-SHr9[3T$P8\=TAtdQG_Z'"VkP(9V$--nWq6-Iir1cJon5K7gs5@&@o(b.RG3n*f5ia50IJp2gIHS(g%mJ?7CqOYn-1"7)<rh"LsrNG,U2TB[qHgcXb%koWnQ<V-(`p\s1rk%2dIe"up;#J_%rY<+,J%XKtp#S8a^"2ZOi[=b]_@=7\it27T%ho</*#9O4;r6]GlI-lFTo7,Wd:Oi'7/,ncLJ,H44M>:B5rNdT4St!bFn)^0J<U0S-IMK-#nLKX]a]EM4]g)OVH,K/*Ilb9@hb?m>%EMd@A:jcsVj1kF(HqjWiSrs&>qb[3KJ+MFPqhm]:q*tX5ro2PDs/U4KR!2S/#Q7GAa7uholQY41rQgFXj8AW?]MALZDuA?sV98fU%_6Wqor:lTHmsAEUo:*MdDuP'ns5jR0ZMjTK%]9QKHj]Fm9D\@3pYB***;'9ss8+ahr;)cK7#9gB^\+q*eF:>AmsO:fIe;*]s5Ir`%@/KKoo[Ej-07NVI5Pt>Mrp?'G2?.U*s"FBG\A#EEr46e#r@_BJ5PXh'^G9B8[dS\D_7f@;pj<&/Dh%bUJ+<@+^\I,erRp*-rR^KC%oS:3YKAZ^rhu*?LY:9A/>P?[`rlV@fo&EsNr_MF2R)Y2*%=e:eq>0RJs8U!OqsoXus6#_urJUQFs3$bjj'7Z4l[Si<5abj7mr.TB%kPj)Jr47:2s6]9h[cQiDIf8:k=hak\rr0Z[C!63i>l@_!*$8tRqq#bFp!u=pTCi!V='pFKV=ikY*.<=!,k`^u?QX,I,`03*Y"L2!%O")UF<O/eMg[_ABYh.9hp<e1NDoqsQSbH%ga]m(L2$3Iq\M!&8CWBU)KtU+Pj^[!;rC)n%X5qhqXqQ+ZP1Zhrd6FdV4's7i]h2Vc%a0#9_N.coG^]+1V);<^"]H?Qkr6gVk@ls*cnpV<66G`AVCH:"Mm5R=j@imXMHlU?./<1qs5Cq/XYP+$`[3Do+/FA]k#fb$%!]E6F%dDo>[N;IJE[lP:dpbO?E.4HjCkL;]ULPjtJ?H73W+!Z:5JrPhrTD*\P,I\lq7^eBTs6mF+><^aU5;84(MfF0HXc4M^:Aj0^14o&U%mtC4j2,h\*cbhX>^t+>t;O]L]PFGLb?g*acle;+/N/aD&cZS&>kM/8@[Drf-I2q;HL\Qh:Ho=6---lLpp"$1nqJl./-6X3Zr_D,E%2OrfV4D)J)<lP4SIj_?D--aF$S6sQf]mirD[HBJTYj3M:gY)!BEPF^'^>.%M,54=oq%Ei*S0,]%g01<?pM\sO-O_1$(bK)m@.?h\%p=2S&S%,)OLEdFQVG`_ChILr%h44*8m>Pnb%@`rrYoV0Rrf?fsHN3R+A^+k4N0!q)lcc%MI4m8N'sFF0erTEKAJ2<58K/Un5%Y^X%L)t9s8R!]:8TQULk;R%egqW+hmnI"Ng3V!18PoGss5j7/H`c/.TYHWe;3uW9o-Yf(/$\I8CYGf84j\R?-5)K:I=<WlrJ?PSX"L"*%UQ=f@K)pfnP=h"$g*1jeNGDXJpU[\irPBHWls<QXcXAFL8UhuJ]gg4G-C#^:CXLY]63eh^+sRpWr_1u>=SC*@7%J+e7dF54XV7P4%2i6C'Q`p,]T/WFt]u\N$>M+BXJCceg[<92Oqsi(#Hc(ipn_P]J,OqeAHbjAqB^q,gU;]aKiSr0!X1F;fLCm>V(P9JLrJmOKpX]VW%an)%Wk;6iJa)]!i3*$k1_X@)=\Hf_5S+W3hiOtb9IC&Y@d9?W8^P):-qqP+![,-.>T1^b\$t-=:c]$\Gi>Cs_M=,#'h,^(:,OkNJ%.To;GMs*11:DeepMV$@!/2@Q`NK8O[pIDOH]B;)=`siEq%MMd^rNkBWEa3[bQ.3L_jHsBhK(7jhKWQ>+%3*\gm:0La3a;aV=42p\%;Hl!(ah</Gj8RcXmIaDl5I+ib8,8BfjP5gm.2+/&ZA&(9MT?'XX.SsmJ#T92:O*@r+!,:_,I1(/ZJHjQS)&Isf@tVd?h/HVc<J\@%Y6j#<fX]$M[8)@"SM/X0a3o9^/CU$iE5-)R]O.DaMp)2h5Vtee<rAAigL+/RXM6$lOaAh?b%O1,^K;dRBd+gKc7BEe"lnENg(A,W%2\h6>iCqF&g,X4K\/2i_*mtrN&o5SiS&nPilm`SR^h@Fm"1u=VZ`d^Dd?;P01)pkX4fK-lX>cR(AiJm8f7<Z903YK;2(Z&HJU^tq%$Jc4F[30L*0peU0F==PgR#dVn/6]31h%+QZZQcuQGHSk&Nl_03;T_m:S4%;%b8k?6GpCNX*i4N13!A'\5b;6?#d`T4QH'pEZ'lYX%"HpiW6]tT*loI`VgMd3,c\=fMa4bX"Z9je]dNj..>(4LRcCC["+W"t>8$fAQ]k>RVT]b?>f6b?d$4u+GrK#"S=<t7_8.u;Dr7)1`%bXZ0;Nq8)slT2sd,n!:]niZ+/plt79BA^bqVgNt[j*^Zg0A(FH\1Up6rWFODcW!S)0](!nI+p-UVOM82^WE8$iIJRgbET<l+F9O5%I*/p<H;'g*C\]G^XublcVHucsG:ZGH)nG+ZhmIh8[^=[Y/Totg,9d.l:'u_EV\!9F.`5ur.S<R\HB[T1G4R_TY]Ih6F+a_g9nD^7%l$D/]X2es1g$dta3Z#!sB:icUOjE:jg5`^68S[FE@M4:OipV'j_IHsAQ/54#h!N7'.sAk*'4dmr=e7EB,@p:Th_ebN#LpER(4=1N%VK1ELq&uB!n%IcA6^A;8%MK0%2.'i41c<b'\S/@dkuo<h885=kVj?fD]d=`.JJ+UPrHc^i>0q]i3j3ClppMF@qpG38goJ\R7=d,F%I8\g(4;LTG7_gj;7787'qtqZ!IU;dFPR#6>\KC*m"kI/qM*Ib)QD2rBH;#n"lY^LFa!pJHMT(a*hS7p\K>WKcC#H@FQ\VD!BEkm6%JYY;"WUPJcN(t]E(bZqrYku7sBb?8;JMlKX(>1h$8lF)B9[EOrXLX)Sreuj,leArfm/01olkm?!j.4q^Kt-`A8;KK?A,H>OKMPRB%kps23'TpgQGtorXXTmBMp\&-VS'$^Af6iLdn_C=jrUQLKE[b^D=-;!,O@oh8"F+u#KIt.ogiY`FpEjZ$.;96c\#IX@GhHKqgoU#8%'s(-]gq&Gkqj7VR28+5"Eka5J$RHFT`GO(@XU6r\R`$FYU!(\_=;'S['2LjAKB0k)`1KmQ92TI<4m/,lprX[<lm-u"Jd/s'Hg/d\%@%P9q$b_n`ga\,uO1o*gZ.+Lka%Sh2^11Y'^-4>1I%_UbkrZ=SP+pq[H;#s9l7L=][fOAK183H1a^a]IjO*=!E:aU+b5CabUaILM%H'Y0JD^HYJ/j5XR/bD0WMWp3-M;oVqbs\Zb`OUfg0tFZl#7fh\_%9&Oc3u6,Ea&k94D[bo>1gQ+qO<>;J_Z8DW`6k?@4!-&UBUnV%1U^,I[Ws>O_ehBC'V-Ws[70\W**iWuVMC3FM`:5i!ORd^rJjgnI7?l!@+S9852O1pOO.n"!^oA0NY9?X*W\sAifp+`<ZNKf&r!DF%Gi%RPV_q5I?#-jQJL*4ug)c_jg[%JFk))MO^"1dI)l]\%rF%b>bp9*#[5PJU.Vkc5L"O:#/_=#q;Gs#Qce7EXN:6Z#k0IU"1_&8*%hg+2I17*iEYM8'#R-0qJHg&IFP"Uh3\1F%>#_pMu&m.P`7g:9UF>![bFNShn16_mC,Xo[@oU$U/'"L7%;_AnN^t9qhoYHSFp<a;1%pf!1T5_`,e[:<,lP7W.J"iE9$R.<$b_spYX3^Lc#PNH_&F3<,!B\^=4gs+LM4.bE8\IM+KHaq5P[6**pds9NIc-]!O%7_AR1`UAf%Z*tV*5PDL7/OUPp*$/ur/At.Pl?'6bM4V&s(RruI`'ES`&U#o.9f(s]B/2kM>6mK?@i?A/F:ZXJ8h:$=H[Z5@FSq6^7c`%?Tnm4r%,k\F,F=,JkbiX;jmkl<lM[`BjZk$@l!n4ZQ#oPA'Br<UB2",#L3*I'N&]?Si&6kUC?m1D_2P^SaV.l2CA[TAG2Rf4H>2F]f1lWMt%6T0BM-XDuF^T:@W6+cpf;<h1^T5?>$g#^R;[\Y(o6j'Sa%l`RrZr3'MiZNQ:?(R4I9b>^@AXZpYfQEcK6^9GZTo]+Cj)gd$$UiDZ%P6h_^>*oF9VMZo1>o?l8Kf<=Y1UT?&Q15b'CdfjG8TQZ#bqG^]Kh\g3IuNp%(Q\!?4]$TuqpBO-=a4bqJ'QGFob$#pptf>FK_X25%N!DO&iCrIoFDeH\P`a[oGtsB>[u8:E6t?YU16s[3Q2-V]4I2T6h)?E]%m6B,7p"e0JO[_t+Gm?/)+Gmj6oP0S"@j\geT.[#.B76^%kN"ghWJ7'Ie!,iod.KlVT"T!O*R;:(GlbiQ\\TnaN'&eg.D@*'\JIJ).Vb[]POW=EVJMMC-+1_aS6UC9G(t(!O#'hjD^oq6/aI]J%H>e5B6AE6%,+73$1(#0&DKDeBaNC,W/4)$kr0=M@+PD,AC7bAfII3ei"XO(@$;!i^Ms*1/gm-JR>hs="he25GU&4/d\,(C,b;3>7%?JGYS,Y'+)s*<Ib<((fl.o.K:(bX]A@(0Qns"[phe"G["nV5:mBdG2X/u$DIde5`g=f!-JN5;9)8&T$_^2tNdP<`;J-eu3\1?a]/%M\(Z:N%o>u*X7rnQ:"JL85b5(C`n%!N?0`h%i9:4N/_E22M@X42`PhjqSP.-(#?usJ(h[Wr3h\Jng>aps.*Z]f9jpQM%+'RD_Mr/%O%&.$M`$Z^-UO]>WQbb,<_h?KiA$@blC3[eMsbmtdhYR!mQQ(o7ranhC&\bOHX_VmBW7,KUko@b[.l.<pDim'<&F?pS8K&N7O66k%<68$9>>3AbV&=:sNUGZGi;kF\RZ<jsS"JGol)i&LkP$c\j"%Nn6iMKlCfP4?-An4E1cf1T[\W*+9_Xh[2Zq)FOspa;Q)1:eR%Eom%=a05^@skXWr\5+ZadLI(GPq9)*,1D/=[47-%;@mpl@&qO?\lfp%[SL]TR5H-%gk^?*llEB.h?Jc.7m*N0g0-8ml$K=<V]CE1/04s%*B=tXA87+IkGip-f!rdnC>hKQ+p1G&.N$Tu9[o0HjPcO?Sue0QW4%L';p3]p;2[m#nl9-<q$CAbJ#rE;01AH5IERsd.?lkd]Hru)%/GbfhN=-i%R-pe85?*V4,fZT[QD3MRHHqTN>f<g)c.^e[>pJHPqNrJ[C<e3Th<,Z08FD]+YHlZ8(X#K=2U0t.J?EMLoF5TKD@a%[%P*@d>drTt`W]6NAZGu_'Ru6$7Pl9=5Q(S!?$<u[W$)A>)_Tj7MePZM@0p<0-Q[]6a?S"\,phH[QS]VI3it9C3%/bO:3h0@UVW[kt%egD^:Ve7UJU94alS]AVCm)Y&2P%UN5S[R&+_KgFX5gDE+?jCg#;ZrG-4rfX)k8.oF.;:E3kPXPfhAK'U(:LJ%dN`rsI_)lQBlD)+%I.dW;1],s2X$R&37861'_r]bV4#;$59K+`u+Z16joOb!r'(T9uoJX>*N7ft\]f.=Y&6e&43?t7%f5A0GcJ)[lE:)'qFP_fC%B`u-%X]S*;,c&O*A8FOm$]3lC6>!lL3$NXa+I05Hod8!pC)M<PEQ#Fif/4Vn2\ir)=jLs]Pk)&%T6-sb3;cNsUa)&M^c_BpWoJ&3-6X3Z%r_D,Ec0`tk7AbD@7MM'H&c)?6XXkdC`UoZBDj%naIaKD4Jk\I)r*Yq:F!#St_e4-&Ondl?Ed0.cnMQ`6+Rm_llqBX(RDNYl]dt(_%83Z7eb#6Ym9[EO2?.,s/3+:>S;bb/1J,u+lW*rH:raa#`6r%-=;Wb>lR5@7#6Wu/hR[T&CW#j2$X&_eiSdLnB-C7YsCO_T_bZKYd%C:W\6bb&u;m=41-^DurF6:qgr0aV"E">eWe]e\'2T5WmF\''S[:6;a7Uj8FL4[PR#dq*q7)EIl\>1#8M&U1<)7+*6Cl].eGQ6m1M%kWVTG>BuMK;<(eW__kSh<_?7h>==OOjU-2+%An?Y@dqM-I]MG:h>CI"]0#ps6YcD8##dhKh&UstiS>N'Z.!WlnQ'4h=Y!,cIZ;29%S6s"_S+"hQ.:fNtQZJd=EANC%$h++Kq`DNFfN)8JO\kX\+V6M<(8=aK=G&7s6jpXj*c7$8a>un-o5,W^4_L+"p;/)[SbJlf*OsZ7%ajC?!'(bD;rS&LumEkg1gF,C[R\Y,>>9Y8qo6QX_%@<O-19e`EX<BsH)H"X\PNb*8]K!7U9QRu;gma94m&72G?$harXrD.cH<`Aq%c"jgegKLE`hX_JGOKQ:MfSU^"9F\V:a(sCuXVI\63LSadQVVn)KmD=G/aT8`HDB#9a]k<*k9Yn,Vp.eq:6SU-64Q)aL$`tLMeK#h%RY1#$B1nrS?>h5DU?C$NUr#p?b8@3\RLo5:LKs;#&\eb]iJ263a:Zb"E=$ct)bj9Cg*4Np=:f'_Nqh[SUP=Jqdr=d^HAguI4/N3*%he_B`WIjfUf+ctSmX]f5N*iheG$VV:r@iFo9.`iC'9eNCQ^/!0nnM*3>%U$m%(@?k:irFje/$;MEm/c$1i=]cCglZq^gWb+^MUM!%PIOtb;uo6r]VV'[fe=)g#h]s%0X`.[@%n*#;3/0M^hT,[-+1_aS/`>!>jbmCROVFc6Vo<K\0d1-EMe;/V!DJ)S[fUWdWH_@o3/Ge%KWI;q'WfPh:a(G(?A=YD?^.:L'aN.@m!-bTDq2_3Ob0u7p/n4[DXIi'/`-1Bnk&5"N4KE<WUc-3OI&Q`!=R@9"Kg9Loe=R8Ai>Ic%,*L7%e4<KcRRD'mHVM*/%Tt!q:)FO7ESiAc),,Z1:m:<!`,p;=#ruOQ(u&IaQt_28U#@n4,1]=PdT],cfql`1d+d2qX=uPO(q;X#%_#)<ujmcNZ;\BBIAA`k2WTHT10K&%QnQ949`Hf6m30ebKS_U:[AYcbJSs/3C/5(osX2[o1S]4NXRJlAPN%6[-s/5ba?C#_,!)b=@%.hSm=a-aRjBLgLMBf9;0dpSZN<327Yp0qhadrTQRar\4lK-]Q1D4+TJQ@@Po*?0M'1XbRU1(PS"HCDhhU@i=H+bOLH"m_R\Cnd1r%O#5SU$VJi=;USc;ce5.-Uf?4/naS/A7HUlD/6,.0A9aE?,!8(2V5d'Y*ModW,W\Op&Y:)*;H+p&I7G_9Ose/R<#+BfnLS6?+B@]a%,h(N7ElgM5aud*h(Mq8H2%\gOn%%ttK6b?rNIqKRAo9>72PqRS7`aL_=g4LpBd)cPkEaLVGNPW_UnkGdSs+N'*cl8f3(b("Durq2%QC3B2pJT7iaCcqC,:Sn3&X/?@LFGRqc9N`1EDH(D]1u:*8lAQW9[DCgRGI)[^Jo#9=IcL+NJQ=;bSWW*Z=`B4"N*.aH;(Q%+8*F_%4\2,;80X6/NgG7IQpm?1,/eSm-(,1BnVDRAYu[%YCrl6,^O3NT$&n?Sbn4A'bn9dd_kPIR-U!MY53LJ%oM8YJ5"ma=))=aAFVk`8%>%qbc\CD@OP`h7F-dd!Y)4BN!VC'Lm.iC.2XALcc%c2^f))F);_a4`/6VJcD#rBRn_FtT-Hl7n:OtQp.,h7<+$Ui=ojgmTo[(P!O%7];8g`0JW.6g?4#&uPT;k"1k(/u3dJ[8:@=%hT+N'qd>5&6:R8_L7$R/_VPQPD#a@Ln:q_[PE#`Mi3sqa:k.<cbU<\A&7`C1QdA^%AfbTrMkuLI,9d1+/<^2M3O/".A\K,<;8sfCmm_%;.8PUjc`,=@WFQ*;/ht@-+j80<"l:3/GBtMnpiabr+WpqT;Vekt@-Z%6i9_.e%\.rHs?6&KS^0Y9F,]u)5,)MntHb!m2.n/>dJ^U<e9+CW#E,f.W[WZ!tfBk1^km!NB$:<Xk;/VSo9>aFD(;%WQZKnWXUjTuf7$#GE%gCMh[/pdJTh=&Y]e\qoZ(1*fmj[G15Fs)pkgRH3WKQ^N$+qhcOnnS5KVQ3H[Oe7_X_DiHrbelqJ,Y;]&,^Pqc^=eHjDS+eB@0b]1%`XJ#on*In"&ne%J(GeULQ%#:J(L^@U&SIpZ6Sc3/#2e+Qf80*32d\ItPSE$EAj9pp(T1"ZQ]"fAKJfRj7EL)EHYH19]>(-mc.&9S%GCOV=IZoHirTE5bYW1gl(fU+KZS7kEK.YCEP=h.h9LSNC>K/32MiA)V\9hWMif*t.FebC-hC;q"QUjRXdQk5TUW@$[Er,3TYQK([%8/.oGk,e[o7jN"eUf*MAiZriqNlU9`TDCJ]KBGDCW,SQL4$V2o[fYWi)(o%unQ*)TKZKur0K@ns':eY8:*0>-PD&X"/Dtr"bhgTU%9p_7WjW3E-CFL&i>Z74QRl8bfTaKE067]%\`L'$pFM$0Bmi\*UpQRh2D_kTH9@:?uU;tdS0X^J5I^p.?Z++&)V)VOg.l<TO6V^"L%L#nElcs2#p$2,dd8VH-c.86l]eBfI>5?)7$0nG.W32r*P1_nD#-cbhRP,;5nUH,_c"Yt%,SOGBpN7X2cc&FLXEN>?_ipSfGk`X#C%.r?,5N=6DmMM;@WV%%.W8fQ$ChQ#2t3jnmG7lm87:8aab_=.k@.pFer8c=e#)<n]d929-Tm+H,KVZGt&)Ik7oLm5$@iCZkCPd2"R%(=?W,q1&uWe_jVJCg_tQG*fF#mBk+alr7D1\:blu\kC\,8P%H:D/@HCejRS'/&NgfX=,Bo_dt]gkW-8^]P)j;?FYr&_)Z2N*aFm=%g:N,AY(Kc[V._iH8:Xbo@658F&a`he1u.Ma91i?EHCO.Z]=]nA\e#eK1)o6gjII)ZF\R/E[F9/aH0=9g9C`"]R=t>jZSC<&2A<8C%HTYYI[T8=2>A,XdkPR(Na1XN=7_!:Ykfd#s5d4Xg]\K/*[*r)!Pc?&ZRM]WLEZe#f5^TAk(SV@_KK\+fS&A?";GpanO4g@^i8TT6%iF1D9_\r22Gr0B>fR*)fgK`?Sk:p%9.0![!!XfO^6tU+FAGtP!RA$1>+3CdD`1KmO92TI\4f7q!d5>r9YULOGZ'FTLBp3%d2c#q!%Dn;Pj.:$?sPEAS/ZE\u:e4`"a>S#Gs.9e1B88Zef9oaF4:s[r]+CfNLZlQpF6MJc"P/$m'-W"@<bbnsMSe'19"RH1&7)t:$khP]9%Fob_l8P*bR4X^!`*f/5k4=_*14=]qF*jn^K.jGV)mK#uNi,9qcX/p)HNCR5.WQMZh/%)m`Q)(@gL`Vb,?*N@A?jSAm(JA/$V%FM9%b6"\ZVe)9MPR7nVW>$gil(#GO.R;rBeKrjNghM$FFHsX>>lmT_1'D!2c7dGGXd"scf5-C'lMFt_4P$cu44t%oWW#:ud61(+#e?@(%fCMr>M:EpN:k(f*W+>AU<:/O';+>;YjuGG6U*DmI;8.jkL.%)DYjhOY\KGNth=m31,3R+Sn!%7`XD*>=aqkYu?-)RJd>bptbgD5W%68VRf,Xo,coUK/]\MHULX5o#?JO16:&"hr2\-:`8U&K^(ap86XRO"\*1=/Dl\dE<\>-gnW=W.?)*ig_0A;qi\X\&/T>+UtFOs7nm%Y)AL^nqQG/)]#s%HLcZAY.:.8?U9glR;H=l8mWJ)*?!o1<"nd/Ws8/Y="C(nY)Ajk\EE^Y)R%/[%>e=T_W84@E';jaZ_W)FG^uO6%`cPZ\-o_`^SW_'M4[@$F\.OjO3uG(\J>eWbUc'5YcabbNHXZWIng9#=h-igUEG%[U=cg:n9ajuQ[nt+nE>&X-M%dajmiWt=6u]Z!%3$Fh<,eZY=SD@t`8?)#hN()EaR%_B69&D&Yh3?u/.HH&ILk(Dq$"?Iae$*SV#BO`@X!B-n/Z.^lEp;S?o%s,jRmboFNZpTSm]=NX%nc6;6Eq@C_Y,-@U2Ns6Y]h*lolmO&)(6A37/hq:H,UL^SoUK8,g!#J61*q4+1:6'5ZSKej7e25>+r?/&)SPp7-,cT3'+&A87N#BK%p^toj;G/!HEBPYJA0Ip(U;u%ES:7uD4_qbN4'A\6B1_n,"l2,gSS*+df^`17Sg*"R:U"p_j&GW`qlkjEn)RndOiMM9OVO%DPSVYf%C:Q]KO+%Gn<"'8;=f,r"[\-DH>d/7Q^rjDm<6:45dko"l>cZs7l#A8$P5Zs%YUtJ4F7TU:A1;4EU?C<P`m(V7jLuD\iHAP[Y%"Wm%c@pEV6RMeXZ<`0;%ZUf9"07qW`Yt?-LksGmNTLe\<MGS_-ILT'1)]subtck\W`\,)R<M&+l6A_Q9':=>k0<<B)_.Q+=kt2M#VXOA%@o4H_Z0m`EF*/bo,Uqt0U?ClF.O`Q*81-leLp;rI:ehigdBtFhV&X1Y&bqkbJ'ql5cjmD)6pcWdWX.o]m4d!]#9&A%m:DJV&sD)q%HHtq74/OU9?/"ap?,$="fCnn+^5fD3>FW^!G&qCB#OJXQPnnK<gMb!Phu<(OrntuG^AQiSlg(a%pZiq#J_KlfkI1,^IG`c1m_(F3%5L]`&MX7,GrBh%`./6I4hb!=([D.p`0C+'7_-bdk:4eP`GMe>0NR>3)lhBk?nU(;pDh%W4huDA*rqbrajhLcI2a@9.TDdiKs&]3s%O+.)[J,B!<pL!skp'T%CM*LgAj6?Kj\_FT5s#4u#s,:4]T93pe;QbN/X8FXEFo;T*1"d6sCt2\DUQ.q4[FO>hXg:V4H]dZW0&/st%P/:NOk7,#:]grc_PmmOJS$,qWfV9bTZ`3%<)1(H==MFD$VNs[Aj[4N9C0;kKQi>jkZ:`\DrOo1AQ)rm>HW/*;q=rU7hs:.Io^[(e%`=Q(!b\qjU^?pXPQ6eV^D>qHAqQ+8^@?!'OhH3.:Hh@='BL@m$ke1u5!Cu5-g7qp,dAkQD+_W&CM\>0+bqbgAbR`3;bZ&hH7O7tl%3a%>dS*2lE:V?))mX-^=<j4Bt?FS&U1%-Y^@uK!GH^%5e`bsl/rj+Sd/SgW?-b<03KH,q`'l;3p=(0h3R9dhel128\&sD)qHHpCH%N;LGugP)WV"`'M+4\ps'^C.6t4ABFRYC(!S;H`,`956.d=A2$sVD]BO(0?UuD5MKN7(C5]&q<ER/4Ih.oUOfddOjn5N=:"%gGXfK%Y^n@WQM6T['A"JFW:g/?/S9?/NU"\eA6'DY'ak&MHo6SkY_<8T[`_LYgg0Q7P]R\iF(Y5[.hSN)F&fH,%];L/_<mZ!3Ls&2au]8O%N8.TiTt[X/BP)1i6=cn@PuOt&qhKu2qP;8INLm2F';_chM;Di'k8YkG!uX<_()Vt$1L\Q&3+3hShQ+fV1esIjBLZkk7N=PE;5N9^%Z<i5V#fhk<'6^65Dl.1d0c(%R8*'Y2BdG4SL.lOWS)<gWq0jO>D.>)^gSjM3G8<9+j=(&Snuc6,,L%A"/4sYI&s\7Y1bII6(+cng%M;.WC6.TF35/12G93o9,#c?eGk(A\`^&0A=Y:CGN!;BTZ)K%-%:L&rR_n?'?KjA\5gP\lZ,hk9cOV,"p/JoB+(FE6@*_r8ZMbXnJ%hB[E:h0dEc0D:*8CSh(GBZnJFS0@KU?rYKV:aS,>&JBs!P#i)E`NtJjKFEOq$e-tU?\h`flh,4t0)o*(8P*nV4_D_n>F0;*I8E`S%/t=d$&(MV*:fm-_;;t$p#7jfeQB\BgMhq^oMa%ksU1U'SU@dug7\epu`8=E@93o7o"K'6+k*/ZQjJ/ppHEA-%\\Y?pSbnP2*uut/%"9@r[[g"44";5,__(7ngDB-ZjY#]?l-L/+lX22C8r`UHQ.CL@nkL;\8L-`oq^".r51<qY]ZdK1ffVf)%X*K)pj-!/<D3<>bat@-9%U=\*1?Ub_!L%TD6Xf[h`Upud5Zcd!/]%f%;"W>KahXPBX:!7G3nJ`Q$/]L*t-d6'.d=N-p!4D#C(`I[XLV:DbQofn(,tjf3GRU>0%gsR$B@%n'P">:VgGR'DOc8`=??SI=k3eE+rObT'rR+=nS!UA!JBQ0(Kc/:pi_,Qu"W'i)89r>DAIH&2)>OC]">VPgLmE<"hpFU;&%,_'&)^3]#oHu$!gH2GfPlYTOY[1WdC?f-I/qlbj^5B%L!4bS__P`aC'Gts>Lf?W]R/<FWUXafBE_@:[q#EDmSi`/klaGgumn%q_t%1]deYl)D])\]3"n[kOL?E#DGWKSrloP3-5"c7_o;_i$K@9#at.X[b[/,83]o>h$Zt4C8s@Aa9q>BPT+R*EI\nLq#uZ_,*bK6nGh0%d9Mo1)Hl:nrWJtYeFFTe@mKc#/m.hnS4=4K<1K7[*,^""&a!Gml"4e966.tLGQaruB#,C69d2oZ9ol/0S4+_18S\o$k;HtcYIa[_%U^'9N$JV=*@mBPZP@p2k%lr0^J(_P)/ZGQ_WI'oKl%D`"eFL"Tfb`4-C`Vj#ggJ]*=_cIjLro7YgAI&9jcQ_G9uW4D^RhNGa2J![%qD0#;[fc2r6%1D]=AR7:6Bnc_0I6?.VTeul_sr1@d0VR/Rl#&IbHH/A%n<*L$\S_QEGAGBNI6@&Bt3-WaS0NE0lME(MSmee<[K!V%NbO;$1eknHRi]l"33AF@Upue`ZV.og=b'eWirqfepN1`DKmG"uLXgH#reIgq=@]kt0<)r;:eX3?b$?\HHl"+TKpV=o3aT1Ve8Qi:%0KnTcZS'4<=jtG/3rO_#O.s6&/N]6[]km_JJ?Pb@iEn:(ZG3JTA1W*+'I'md.`86":f0h_;Og/$fqg!8auk9&^sJ4!qArd9\UJN_%Ldjee=H.^FITarG20a[F9L<nDfF,.LZ+_o3mItk^+fps):0D`_H;#qc&Z,alK;i6L4:9O;8I!71MSfs&&X:,=T$18tONLLX8;M;D%$AQbL'-TB8N2@;dU6DCK[tpW^b9^u699.bkZ&QB=`YEOW%Q(\SmbXj&f31bJ[W0-jg()[t-*1UK&eQaVQf3&"]I5)*h;6'qHHpCl%kJ8"J],)4k4U5V2VTd+O?c!r%/R3EOSG0\"<eYeMfgMkkFRip"Q9>Jt_]#<lb`tf&P,+m3H(K)PLD)3#To[mZM/R?;?uD\\;="q"%2q>=7cOqjGX&90S:(eF)oJ%<>nI:q$_e89)2LWeIMF,m`6uTET2-XWYgkaGsgP6iM2o6?*LT6NI&a?"C-'D/O'/9f5,>r%<+DN5[%)>.r`6u&8@,IKu3S6YpeQptH*cl$?d\8<SR_oY!29H2IS9,Y=#ao.MT>9fNXp;sm!_H9&u7&hu>iCYCW.:jqX/u%Oq\4rg[gt`>G%L;&;F,n-1;1\S-@)8p^i_AUt^g/2C8;rPP:7/[5rL9?.U@V8#gk5L(_a?id.7*hk&+n)Kt`Nffi=>h=K8[6?U*_iEe'MB&0!#r$a%=g/`@)nfEa&u%\s"[f["'<r[3LND,O.j_1D5.`(dc>Gi,0cthg<NFKj0T-)]n!Pj;XUi+r8lb1EYI11cKoK2tR0nQ,Z%=.<X=te,%Xc0/g[A&q^W47X)PKTlJX+J=92Fd!lZGDR7>0p-EP3$h#B87Yf&=lCl0`P9dHP-XhPq@fhZ"[l8HS?Dl<_61e>>3Abjd-t4?uuOE%:W+)2nBJ.P/ei!I(E_R)G86Vl96d4uZcK5\]-J:<C92',mIs;m(4@7KNVol@V5UhjSs/2KWj.g*1Q.6d"(1C=B[`JGqVlIXXdn(b%0+L6\pIl1]8=N&(qW\e(h=h9(_FP^Q>9*'p65#I0,'m!9SHNUPj=Yn9d!dWulpud>II"k\7;CfukOInU7%*Z;%C2caU:,@O6h@uX%KEcj91puj(.S5M$Ms)n%$og_EWu7frQq1MeF!a-WYd?!1mk[Hp,'ciMX-&>@0&(DIWJ1*"8[Q!P%T8c([V#Y`+[SPu17['9'r<0%%]uBW6?*7Eo9\\+DfGL5U)"/9P7aD;VG!j`%cN)nIEgI'4;OBn/T<U+7)Y*=UGq;0h.jQPm/Y_FXEc[,$5pK+t$o\q-/]qObhle8#%NVRoj*$XtUr2W>QWd?b*;B']W`?^,m`sRJ8AVCE@>8^0o?;X<m;HunVg#WN40h>R]-s.hia(ZX39]Z3!dlpuKi4Y]l[1&!d9#4F=%#uJcn_3!;f+r7l]E%[,YV(<q+`Uo[+I`iPQP&>MF0XN9epeW#(fubj489o<"_m@(_#.LFnN?]bnC-ZBiD9C)@<b<E!%F;,@V5Uqm%T(C-hA+s7^B"AjiJm*9m\b<'LYsg8,L8/8#<LM$hK^Q+S6qCk,R;U$3TI(lFY^&&Q\lgCPFl-^3d;sIKX#TW"n%2V;@n//[m6lbK%7piMB`EG&+T^H<<QB6uJfMWY@S!&R,^2(t/ZsfXcbJ:FAZ%a#)CEt>X/Z.^\El'>:,O0#F0_D)teBrW.baWJFd^CHL']WunC=d)?%_H)>a$2.Uh6tA\[jpHiDF='>`\h]_#g(g/(-+unB2S6=aR!`G*Xrt;ak?Xdp'j#8%P[_6[\q$s/3`D2FH+.!O6L<&V#!]2Gkc4;p%G3E*Y8PsEs4JnG/S&;^);(&)GkWq-PB^&&UT=Pohg/)RCHY#UZN`LiL2Bs$#&2fe)(g>:CLgB:.RX<^j-VI$L&NsbskGHC(0n2G*%>L3Q%qOWErr.n4&ATT.7BPg8OWmj/M<$D>1/S>=ukY/l@FWSc/m&ZAHG1YpZdrTP'EQ`loHeB,B/a1%UllD_CHtC2j]Tq<eQ=b<&%R?hId8OX0/A#tC+L`4JP/=Y"SLi)E>S=A27.8*6P&A?=@%us^4TPkB=3$Be=B6/?dV(l#(f-3c4:s>4k\-OG*j.<*s%oZ.g)M<!`%(50t$FAE(@+GV2Y2%SO?+@Wt4oK'Ce2bTK;e3>B!HLCIq0Q3@qOh4u-A=gp$DVj!?]%fssQW1^2oFm?!2:F&m>4.f8D>?;cS+fK'%$^E?F+F;=nC!!PKRr9d2o1r^IAY"o8::Zmi:/4qi#:IE1P^me7&uO-=Libu3E44u,'8<MFM;IC7ULT`>mT0+7V5n@-Oi'A9o.+Rs%7am\-HV$P`-C'B:6D'T!ZksJh]+B9FpF<OFQBL)KHHn--jMj6cm.F@$[-6dJKV]n^D+>DGot'-B2iP[-H)c$>KH`$4RY_Bgp0.\e%O"U%.!K@=_S!p&aYbF%3hWC-eVuo,Udt!B3JS/$U3cO&#3d9RM2k,3`3Y,dBIE;n)F92m`-fu*OkrU5$MN:8K*fsC-PboY%kN)1O%&+ucc]:Mj*T0;!^84!bMgd5oph=W9<2j.nI\VWes@Wssik*MNm3N+"DRAs<0;UF,cO.!\-ptV:B@+c.0r\QN=PgdmJ)=<iu&A<;I%&YMl8"[bM56I_CO]W)OE&tc"`KVZ#3So[R):J8I-HP@AbB>J_VgRS"XE'GZ"J!@4f/XG$8;!a?CZe4FLMNZ);RKaN9XT]*]69i$#%>O3`(<f=ZUWAoa+PKUUi:1*Q!"/J1Fm=pGWBCa0qe$bXKrgBKI,TN$V&m6cn^_pQ-+Y/M'!jsj)$IP$F72^!:"]CSJ<4AbF9TRlg%Bjt]k5H`K>iW:'Y_D95hMf>1[)bpB<WV=]hJs,DHYJ_\S9=5oqeL'9ZmGZhubXtH!MMp^R]?KG">Z-)aQSI!!me<@9/L8n_^40JE%<H;+&*r"<q[0h%9?VD_5<L+#I>0J<[\`PZ9ME2QE,^$V)!f3GSUT'*KQRXp/$jE!7Wk4VI>\>k]A'B/!)+e'(RaGqEnZ=[tigb\H%2QEMK1T<`0*EALi>Z^;>.qL.Y:86q<o%!.h9sZHAJ[1_5*.RMfNg>Up5dK?>HMG.2o/rl/AA]XA10'!M0oVfu@UVUL`A4#G1D[)<%7E%^fR,%"Y,5s2*:kgkT+2W-g)tO_Wh\3!P#taBW+<i%_#:Ms1=c=Q!K@IflN@LJE,dg)5Ql?iX==-(''J*#\!PlXi5p9:P`eM7`%Q1%]fk)uMURoDs)5k]WBE!e!]3%:*NFIXaO8P4;ekrHA'XY8B/l9&HjAB04'HYU!`)3(eb!tB$8ZU8?NlMq^SH**5l"M.b;'FYEQ%`7*+4^k6cP*jA8&dS*($S6IVu4,tt36s24NO,O5U[o6tP8"iRV]V^B)5,b5n<U*mtGanu%&@I6D=S@e,6p-BQ3$6eSPbb*7M4V%H%:[Wdqh!RjmMW(d`+Lnm:$)6em!U`^JLeGZB:hV;$q)2/;FDMZ2$jSRC$,Y^_<Php28t(\&3PX1qF*FB1(n*uVc$RoN1Zj:-j[pF)%`\#0*E\e#!J&m58Me$6_Vo^]cqGA$1-tUZFoJXJV&.GB/hnKu2C)^B&_n+l[n@g[MZf2lXOZ]u5ARe@j,TiFG8Fp,(@12O=PA(er%SYpst7jQ!qWKj<U\X8u[b?:H>7Nur?f*i#;o5[++CXV:s#(7%E%&7[l;mE1lA>-gVR#$Es9`-PGbNf0U=u,!RK.Y;=Ysst?dUIJs%/U-C?rK=^\`\s]!/i7?@ln(+qV#@>>>S$";?4N(HaU85^185PH"[aNV_LuNbAN[Ar/6YonRZluQI_>%"(raDo_[nj;`YX@6;jZqp%U(,Z7qhH,[<Cr(=`QTT\bl\?,%YKH@>mSVml;^rNP*?XsdpmPpm*!mapF8#>%YO)e:-@l0(s><Z$G0AJ/1*/tAg-mH0bG#,%P/G8%%#Tj(#X+V<'j;tXBeCTUcAo&SKiP[<)+/i$5SS"YeS3V,6*->e=S*59X;+VF#jX-;6<(P'?mottQr!pnN2KRQ74Ur8Nimuu3Brgj%\QG2P"Xf8&`S`;>FDQ4>8s`JKT"&2S50`TK/Q\2ET,u-CJ4YR.#8R_2"q/mf,oVc@DM:M08P*tX4m/0?8_gf@klF)AN1kghQ?c2C%D@?k]7h$tR>#hL_8fG.E8hD-4X$K.H1J:3YMUWEJ1o.m2XJR6\CEt?C/Z-S<=?:'Oi)5gl<\RZQZg*`8e4m6D)oscgkIkt;Tp<+H%78shd@_r<Y-o#i_=WFU!&sH''P2=)7h<XEpNLc!<qq)crqmlL9Ea)q0](cKY;r^&b&QVPSNhs2Rq=Mft`1>usLAl7+@ZNR2k>$3O%b#4[fR%EomZdn'p78.t_[PD!Fh;r8odpk"eK7/*7o#<ldP$o_bdg0[5Gn[V?<D>l?d<d\TnuYfHjK%QD1;-DBAOTXslS3E'9Hf0F%U[msnU(UnfFOXkfj<Dg?%JB?lB&Q0;d1@ah$Y,,SLe'6,NE.5>;TVhS=#n(gS6W5N-d=h$hA6Ubo!.o)Sj-A4BW'Ca`;<YPEAip.%@(M\lKI@SL@$rZTLlbMAL/[)[;+a_aS4(]V0b#--_8:!B"`*_@ous_ee4DP>O,?;Pq,M9K5o(f$_Apas"!.OPmnk$>=5LA$:Gbp4%;1p8$,EbWkWKO*V[>CJrbO`\B,MZ)J(n]&6B[-/Eh&e1AIQuqMKPkQ?C<tMNL``oW4<*h[l$4sIA#gk(WD/uIgmAD%e)g)`=W!%L%7bSG\+V_SKj<VBO.Z55p9R%R([IRQR-6]Bf>HlC/Dg.'acGd\XPWV*5.nN<R0g4]d?ZYE0V7p:?bB@/S.a$pDLlPdRX?Vh%bC*k9%nlYT8[(,\P"&KphA*c!b,.8]FB^Sr8Pq5>*:%Xr[*iUd'6Ii?f)#F`]d3S%pZPR$iBX2rs3u5iP-Ypq1C1EeB0bJC=_1JB2TUF/d%d)2hmTllNWVBVJljB,Z?f6g_a5Z"F)J?G-:25%+:V':K%;G*td%PsK`mk>86CitLN'a_gsM?FjC'a^ZLAR(ZnFU_YhQGI1![ju1G%``<8"Z[B1oY'7<J/8<f7Co^[%[s,8e,`r,*AK,,7[>:&dXl2lU[Zlr>oj/WII[qJmhI_LJ33I4785R?<TDK/i:=;>aHWb<-C$/85%aY%kNM)(2C935WO(g1uoaB6>S*tpO,=?KcN-cRW-MHZ5-3AV_N1/HKg$4DUMVQIr*B-Y8Ql=BV'gD._R..7F4C>ibt+p2/\KX&Xl%M:dX2_ms'HQ*M+s2Uc_j9Gp]CGikY<_\KW$g,L$l)Y7>TAW&Ti)L6^9e=BoDE?>BFNF3BnlY-O?-+:[tn9C\t(*@"]Q)(4dR%Eom%-[d.!GqZFA#8M&L02B00LqTtUkm81%`U]F9#DKc1YuaNaoK\7)8>Cg7?q\(Nbg^VGg>d>3QaTq\P3-5"cB"YZCe/Bj=<OtO>\?\Z%jF\Q^f!n5@Ng23OUF:7ignVr$jA>5-6"mB&LsT/%%&_r\74Cf"EA9UgQhFMT<B]#B_RcirK]\X1F#A^7S2,.;#gGqSEQ(if$$!tD%Z0%.cM/.XGX#-7YAuq2l\h=rDNdI=&cFL2VO5.@%k`hWt/,$A1DJuWq*Og(X?76_,pF_ANaLb*\c<XL,JO``lo\+UBqf]*(Unfl9%Sl<g<MBrUEj\]Hd4Gm;I[AIUQ7&ZA@=Z4)oa0UGuO]$JsGSU]F'8q`o]Ma'?8u_B[oN()$kNlNAD)X$tfYt]\AV%e]fs6S%MJZL4%+iOW<9L;L@O:cZ?ndCl<NmQgsBq_r?PVa3*F+2>lH>U\$9uW4M1G@f/[J0P,Z<g0"aLfr1H.:^>1[<Y"M>CH5:;N%J@j3/uQ-kgC%<-4;Qrpe]1rdAs8Q5U#>q#jj)NF(hor;N7YlBSgYG5JV6SS4u+f*TYHAD!M+XO@P/VNm`fNORW6/Zg9Ec,K=F?i!5Mk&:`XdfnLs%;k+S;B:I@mB?c'hAuMc9Q);<*[S4).bA:&i&K(Gc%/'N0$Ves.[1(X^72M47-+1_aS6R[V$cB[CeQ=N4=H$6*Mf!9PR+(`l<fO@(%Tg,BLG+;`1,XhSE$^OL&$W3[9UZ%Xn+R2?<WstZ0\`Jcof_9:7=>7*b$m\afd"uag>%W59\i#4l-BfPt;iCb('SCrCbJqn>Yn3T@%@i8#.)N.4NP1jAk:+f6p2K=[.VQ;'pCdSrqKC'd+^MXgd6-DgsH^5_rV,ef,4D>QS6a_T,Fd)ka;28;L_7E;^.mtO29qo+r0safF%Ss:^Gpt@OPHZn<)7LIN))r+%")SX#sWUBZ;@-YJ/X[F=@/+S$Te<g<5iL1F6Um.[N3/O65938r%/(_2SN3PcRe1\ODe"Y4,_D8'm%FV^<7H7M-!"$uG^1)Y):1LmL`AgZ(`o6@E]B!!=)c,oT9^XojSHPPMA:LaV^CFVc_S^0]5+uO;l;G9Y?PE9)%5)jE)?.22XTB>+f%A'IV;8rAhr3BL7U^5_&.s"i5B@gA=RgR-)Th"uripbm\8\S_IokMk>u[jomHn'XTjG-0H;[TmTB1p@s8[%Sf#.S30GPNOs8fD=sD%WljGp0'].7&qETOYZsFBX2:;,P%!#Edg.C6<J7=iMMP4d7AH-Z.T/i9QOi"^H;9Lpj74nkNf=3HF[%KSj_VpR2qBVD4-^1oH,@&?%kmI`A614Af"'q!%[ePFoS.:l=aB^>X:bKi*JT:L?gqi&#h2luS?#Iml1)SfQZ!c7#ERmX9k"fa4(n9V^@ud^r22ZW1UIpf-rW>t5%`Iaf8@Ne'&`\O'q2AW,7-,%:iS6\>A^!oBi89;V-$kZ!+&3$K4/B6M6@gX@GhFp>&bj#<Fd&^"&5ifC^>K2F+d?ZNJ1>9`=F&>M,%;Hli@alVs'Yqq89=t>ol&,Sop:1_+^2CU;u^NR%@[o?l(6pq2e)MKp.TpghKWZKJ(X\qbXdT],cfs-9lqW[8XPq_$gg=Tn:\#9LW%m+N[@DkOS+X&^b*kDDfd>scPQpIS&i*];H?>Bd$APD#a@Ln:s55'8'2bql.<*rKK\DgOVe`kB$FOJ_I2Fkl\r<!6%p$^2,D+cZ$M%B-nZ04e@^rek/h>>XXXp`JgQFkI5U$Hgd%THcQ(prVbH$W7N]in+S%%O7r<pQ2J]!qn5W$A,Z@4,l_4/[+tWa)d;\0N/]'CIn$U4%s&0TRs$->`5+>CBY[Fo[CI7Ba\`7?rSlpuIYZJqt?rE78p*t?l'lK-Zp*.&d-Q>p=+t;ld?0,;.acO0f+MBV*HuCuI,[[!:^,MR`%P-kVXHc*rT=dr7%2k6t4[0brA_oXD(9:A\k^HaG:LL(Btji@;-([]s`aT$uAP[iI<\;ptd"WLThBZ*.)Y/S%-2F<om12s:1bhO@X%4-42pSd-ScSMc*.[V"Wp_UL=c\W#.-[p6;'eE0C/@!^+:DOK+,rTVn&"[g>S5VdnU>rD(l#LZl5HF$s/P$orm11/U#"OmcW&Gp%-%L-7CWQof4i,th*P1Hd,[M,-7i]WOb*0U*.g7g,].3IgJ<j-\f+YGE5lLiuL0frECsY,EY/&/>I$(s7XL-BoG?E2lE/FHVaX(=@2H%F3[F6c0`fG"[g&K5Vb'`4Z19c,(84:2b2@^Qq?/#>&_hBP7VlR1rb!4An"P1O6=fXf#gn?ge?&ijiacdLl4T3`Yp%,(Wn.MeptNb%"2U8^06KmKe=]5`+sDk2B#7TOAn$Y#:GWodnVG-@5q*1=D\G9H2kT`DO>ZV.7,Gj6d$5D\"3I/ll;G\!5N4n5BMaKna:SjPnQ8C2%8hq8EEB1Hm8)Bmj6p$`&%C^-#Zr3-oiadA\/uQo]-M8<8KJ&s.hK;4`r*1E>NGW^cDKJ;!+PYsJWj;_dR"VC=BYi%BZnS2=BGjST%7uLE2U>dAC9Q&/NeEmOL)`>V^Tn288b!r,cjD>=7)]^<pCflSh3m=Ch*bt^X0Jj(n',udS4LZ9;<gM0M`:TSWS9<Tbl!ghG(qPB\%[c)9s+44:aIa74:3[.416f/_OXZiD1B_;Ujh4n@k'5Al&'(pKe3%CaU[/8ked;sJPc;>.1^G<*m$[0drk7P*^V_`"0<snf&28qaD%e0/'de$3G_%JuoV"J!\K0%c:60GD\D"L0Rm3$Rm:<6A+e>>3Arjg)!>4Z6n'&DAT,MnOGiEj;8'kj-6IrC#CI$aDLlLlAQ8@Y)m#%d6)*P=9_].`hF*BX>Yp,F3>AH6[V>Y7LcUmBY7@`VdU[pGkDP`!9jlN(GoVcQ>.uA-RL$Ps&gK:#W34kLjD%))mrS0dTj`_R,+;'%]aLiZ#BCfC%G]4=s""gR#-RERgCh`s&gFdp\%S.h.$eVh;_\lHY"L\W_po__F^3hoGXUQ[TTk-gQQ-%RF*@@2pU#$J\&o6h:5sBb%5sNkp)Nj.'>cS9jN^sBAV/Fh^H#Q>RF6*t01raQ7-=TCnO64#R<ln7dg-h!ijgMg3iJ<*-fVFI3fNP#H_hL67aWCE5%s/2P%ek.(%HZkS3O<PlfC5W^H?saL?oN@Q.Ns6hl]5jo^.B+nrkN((8^1`7AjXLfWS3UIn@o4.aZ;2uT/([l5>1o(mBiBp]#T&[+@DsZ`=I%$J%>.]YiP*4g6HH\!KC7_]c;RTud$?iL5XKbuG]J0d%I.G0YH18-ScA(?;^T5>S+nU=C$[]j=/9d>d7[B4c@X:e/eu#WFk+SMWBET:C%7oh<SYLn*K3`A4]WegC(P:e-1&\g#^&G:9"(coL%#gHi%BPJu#FHY/4bFKc%c7Y1%]Y#=d2tIf<Z!$kf]&/m28+qpr^VZG!p?[`U%+eg]ONB("%)U,f+'+p6@IjaU,$OgX)`_\>+!JnLb:6O"(7.Zr(X,.j6>@;[ngX9E6KoI(e@UUc#YZTP@P(cUS!CMU.Ymtis6msZl%L/SE4U6MIL\!Wbnb=u+u?khcW(rGn)3`.X=&c<5R<SQtV(rVh#X"R%ZA!$s-#uTp"?l>Ri6jVb<i=tLb:(k-CI4BN6F3=aa6t,Q*%A'-c\_2\rNcR!\!#S3C_?D;"$*H;(aJ?m;u70]k8YmB##Ft_L6_0PVp&Z1M`FIAkbUnkARSl>N>chq72Oj5Ui\@rL[MFZ]a_qZ=N%e)W\1qa_KsQILIheKbd#CC,`7GG3CAIR=uH[igQ#Pd9"RHCN][neb\3H#,<lmZD"XCcO-@NhNc?])"L@"uB.o.=*8`,Xe1H$\nA;%KaAbHbBW;>=gX@An9tA7kPXJD48]<.CbV+L#c#lG^m'Q#l(`3,_s$`'=GkrF&ID:.6,AYC:l(4=:khnX6W$HR<*MbOWR:?1lZQ9S%I)1op*q*:0MQFmHO4Q*"8lk&oa![3f-^NaD(,H7o_Ks%[em=^Tjsf=>5JCeW.;:E3kPVh_ji=0oN/#\O1%km[dm@uPfLIi+X5oa5%CXqo*OAbGi@jWAaP#sF1;CkK\[l]SYGuKr.P+pq[H;#r(][52PYe,>"c>6*;NXNh"#5kC(b@_-\+X_&5=_PrU#FmJ[&ot5<I)5Mm%9OF0qR0llIgQ4$dFFoJ%-I(<+\4L72.*>\(AlcaVR8>c-qcQO'7>leCe$@m?&\OgD/<-LQ.7?;rpVAs@6TpX4$Hic(K?%0WMQfR5%P1!fc:5qOg25"TrTeWp7N2R;nFkM'hY(66JA997^Zs0J;?SmlVFbMZ,er_:gG=deV(6hkA6<%/Ocai.Ac(da5I>3;iXMHGOH"\'G%9]qU0)^=f`nGm+!-8,IWRa14UY6i20k@k]iVSf.U=C"CW'U$\E7hIT(RAHb5D>,02[U=IE^4nklhPGKG]isqliTPS>`D\Xj:/uif%PECiMXT]Y"q6^e,bj?mtF_6.=V'IA+8bAP/I&kSOOZD;b29),\kK+P_DjR%#!eJ(;)O1@[=t$*#(Nr%h`)fcpn`$L8Ge$ekq$*jA%P*#;Od;sJi7cBH-18tH#lD>.%;V-q6Pd]&S4h,UQV($QfJ^htd,DcQ%Ch^^^gp@Wd!,<BHAQ"FaPd9.VHCJ3C?7V$imTrsKoUVK;%a\9]DCV'!VBCS'+YNtch7G)"jbU\G6=_NbmT3T4ZFfl:L1L1kmrTf>5P*4O0HCJ.l?cB@t;oMmfqsuL\.O&glnq4H'A*Ttd$^.Me%M.A(j$(`Z+0bf)&3(4l+c4[&5_;["c$:ma00g4]d#7IudM,sfi?"5s$Z%J$\[]DSG#.sPEXA0?SHldhaK;LkF+gB(\.ql^+CDPuF%QD'Pf=nIi@F;E>HAok\$g$>MI"Zu2_%^tdbq3cCapc/4,Y9.Qg!hmV'+lj6>qcaiEnQR?di2<ZmL-K7K,UmFZU?C<FGp/`'OZuoD%UDNW3??3BM(>6mUrnNJncB9(SEf*H0,(D5=#bIh.Q:1%1:G%?+:]#44Pbk=gR3&]XQ[8=1+.\^!hdjSA\+qA7cG@*6`%si8'mYul%V.RtJggj#(,J%Gb0\jVr9TA5n`E/IL>&M'sUbfE]1?#V<S6t\_gEU;,RoaDQG))D!Kl`@R*M1obY+lEqZ*QQaKig[f6j5m!G/99m%?'sh)eSo]0=sjVnO&Y`FfqjI3Fj`Kk0OncX2s/)94Uo;VOnur(>7KpCOGgT;;Y0/XS:\jn6qubMQAt&7&R*YKiRGZG-mbkCM>re'%D0EIC/bgWd#&1NM/(fuTk=5*GT"eu=*0%]RdId"n#3'2Un8p3LhmnSsm-H0&YUqr_'rHQ4:r<aER+@*\esf'GZ_LS\htX-fQO0;g%>I2gWGYn"d\Q@/%ZF\]VPt8K/o/j;n)onC=87N[:Jh:,Ba\:a;/Pj7b8?XY[B?Eb^d6&eCM\nh,lK;1jZsem['%LOV-Qe:d]:n!O%b%5-&8MO7`-6_`\<Zq$C1D*j!GrRa)ZVm*PiaR5XNa\ngg\71p_*F%*D&VuNTjn0mKT0nRX=.r=WmG/$2t@AYZTGf2WA5I;@hHh9%k%M30Xce?tVoAWn[sYBiIGO?9IJ:_c]^?Rp_W]8bbN$Rt&jX1%W2NK0m^f8-dcJ,#[_h3F,%SKTd?H"_<0EKq(=R>FFR#T"'RSsV%#b>i75nX$I*`SEI5O<#_6%)>(ke<F;Y_c)*d-7D=%;l`R'*'tI?MXgj8rAPk0tU5Wm\_;,A5*nN^-a/lb^]st+sQQ/)0o=Y,!4g7%R2'#:R`T$W=VJZ:lp)Vg6YNQa1a.Pu-)F'&2RSLODU*[J1DVf#FiKV*2TGOU-'(f))%!Z'rTK1V8nrK`+.-(VPMmAu3q6`KeELGi%E8?Nk.:oL'7KAesZV/UM,Hsm+h1EHVgJ<QE)foIa`d=2&])?/9fMW+tRn8FkX9F54[P2PXI;?>e-ZnT@)6#3VkN)2,<ZCHoMjL[^%X%n%H(V3ntKdk0#A7j<0`@E\\V__@/X%F+XAQ>QN/mX'PX>abEBrYsIh$1RbOd'r'drT-3=RX3V_8U^R^5H6-2uK2)U.2<9r5fsm%]m,</1+SrdBnSIoC5`0k'Cg2(d<p\R8t2/hW%Fn0j>&N'_<7qlD?W?S[ReQ`Fb8H'7V'%c\jdq*IW\[*6\`r_ZU[Eq/NVN,L<tb$%4Qt<r##e%$U(X<(2Mn#Hj6i_E%=3SYbr.EMD:F<ti8<e+$C[JM?)E7-A6t(J#`$U<"*VP(,GoIt]u/e7AC*&RZI%QH'+d<>8'`".%p7VSBYmolHoC@*hB8,sLf>SEBH2&>3e?572+PN+4cLZ^^N`1IB<nM=3CmC8uPp@Z``UoZ?,B2;VeBtC+kee1`0'p[CeJ9;_Crtu+%2Bup;X$XG->7_*<Mm\.J+#`Yn;k"#55<#Vg.B<oL\%/=SBZ7*M?*SK;7u"flDq<V:nO/Uh=cc6I,Wr.E&h]%6fc2oe\f`K<Xs*nd%2I(_fd@`Ei_[ZL5Um.[R2Mg4eQ6qE8q<[6E+>dMb?Pl'01hqr(OHBWfF,L9Wn:H<-Je6=9.[&o9AI)#_$5"2aGr.C".k4+]C5_:1%2_NYP=)]rS6TFX)or%UiZ:eE'Sb\2UQWl#Fq-5JY3sQpcFpIS`Fu%&^O,8*4no-cT=Xcs7D%]"07b8.a@sQU%d#%XVSM/=I8[S((%)a:I.Hk@[4nmrQ"O[D&JNU=6JBVl5_D`lmR)`lPB;H0/SccP8r]HOTKhK?ibF"X#c4":DFFM'Dgh],#PN:fhYANg*N#e6@/_+k3L%8]8>b*mWU-XH]P<(GS'cQV[Eth(Lg<N9tT9FJR1k1u=WJ*bI7Vn'd\YB.51mR7PCG^Q5W#LQ._5O'tXUe4D5ll9<E@1FcP!;bQR#%MsRush$]Oof8\ngfT^8C&Z4CIeo_R?8F+W#/.ZEkK$]KmN8@Vld6m6im)QM7P*4s:HHqR+edeT:YBC7>A_r5TB!r/LpI<AJA%aC)%;/QUoG:]T]DIO6QR_&_jAR70tHEYA1NF-HI.4J#dkN$['NPV(G)h5_*?IW0rp/uYiqI4DWp!r:?&L7Z'$o3sdLq:YB%)(dk`--5D%bt[N*PGG9=M;Dj2EunFIgpF4lkVX.WJpG\$mH>aK0GrPCaFIPk/1&?ALkM^h>f"d)XtXEW\hY8;ela;V885=kVoC!T[.0kS3lC0u%/r%b8ZS<5Kd9!2]/3K^u(.[M0/.T(o,7%t9S-l#13uIlB;=p8eJ36=HP"@p<P,4t_R%BL7]5)TuB>3!;2S>%T)ch&uJHsq5FDmBK%RpT94Kf*cq+[[okZ&\S+9Il*ENORW)QW@lVjk5)$9[EOrK>&=r@bDf4"4_R4)]3QI(8JMP"N+KLo%Fs9PL.URRYZ.-hH75,fSWQK%B#4Su_s*ChFHY!NDNQ9nF*>)OZi=N,QnZN:LY7=_YrA2)=8qbcR#%V0q0XHqn/7*TL_D+o1!RO.9SMt\:7/7dP*4t>:Yi5G94';m%7ACV>%T:;9SttA?1TQPu8LjETVE?XbH2:95_%]e*NJ%P`Q'H0%`<"%JN6?Q-8+3REUq1b>0Kj'8L1dhGMYBZ#*I7Tn=`A=_<QsIF%e'2&G?CWtV=btlt_,GlTf/a8IjlMOi1sf]9UCEdLX:hb322L,PQ<'BIpH)03L(;cD30An-Q"sN,+ELP=Ug]B'/XG*u%u?%WY5/5g%2O5Erb@(,HNAXtI72e`i>&Q$(n1lku!@\2,X0saiNJsO$nmZW&NYDc]`Gj?;f*h.Y+N,tBM,n93E7$RuY)t%tA'$Kpg.rKT,df]C%#"6ejjaii%^0L-8@"T&@p'bFWgNdr>_"BJE%^>u#V2"qD?lJ`5.<e&0MVJ4ETos71:A&L_;Nd4&,^R`gGNXMc=`rLVKJo7'=5pA6%>%u!*]!3@dK0r/h]j"&[]ULDu+_lO10XSqQ9S3L^1nGV'(9JiN`C9Ed*4$sXY"$-l+EY_a`!!T.R9_]2<-Ac&T]]HEE__OkqR#dE%(8l=^-5R1RBpQTbDmQB1WNGrrPNY$91dtM1dTm[t[aJ8g+\HiY$u6=Z=C!g493OrB<A.&kUtOlE[a7ndd:-l(UFio7V37XM[[<YM%b:,)>$Y/oU@;MPQ$)G^`S#qYo-($-!BR^_Q_p!'mRGI+DT\5m\`qDpBco]WCm'#X#gkF-*8]jsTe(`q#HUF>)D,>tsYB6'Oi6KeO%HGKDV=6T`WWUt^sKP6,r`/V`(gjD5S[j^Jd+fR&fa4t")mm_A0'O*87U.0a;b!pa>X=hJB-]u_qIFhAUS=40E^1"DQ@loPnR#*/[%a0VIPXX&$Mg'4G;r0VDpp6Zdp(+^Co#*=Q[HV2;i[d\XAl#e%$&hUN/O;*fW[=U6TL63fl;b7M_ers.W;UjGpce6]%Jto\V:DO?Z%,NBo=8+P-3$67gNGqs1VSF%VF3)M;bN2R\+_6RW_+[T8P1>MA!pdLb^>_SNui-Ce2?.fHA)fEj=:ocIf\9+INSnjjFdadW_YCWN;%<`8Zb/gZ\&M!D2[%$`"Ee*8aB`N?53gn<3_o:<$bK'>;1>dZZ:4KRg,@'$+r5U>[AeFn$p+AF2uY=d&r75E?Q,o,lLIYVGhZDuf4%Z'K5.9XLHNZA2X`6.nk%8rAhr3BNf_co>0Vq?hreHh$s+"`lT\$gU#q3iGn_S.P6PKOcu&<^F(Fq8sBQA*C*tLsUaWN2B'm73tMs%D)"1$QW$'fqkS.S.g\dfaeCQ;7COlG4:oUcGZ4m1'H9N/8]YW/Y-<Q(>qt_gmV9Djc<Y-1WP_S;\VX\VQUbZMJ[m:+_)>W8AO[R7%h*`;H<c5s*(M9RJMA^5B&i+j"='4Vh>VUA-da`Tu=*^WBpOusf/uIh0nlbEVC=BL)-MRE"6oR6IiCl0nl`O2G#aIMs&?X6,e"^6?%s+Ud.Q0X0;31T<3-bVOl%8seogHbD$*NP[o#fjo2X_A&GEfmB;)_7s%)LS`"<SE)$8nLI(&Ql_g'1-:#6A+R`AMDX_0.KOcC5_=:%\[9<kSh1K?d)JiKckd4lMA)LBb*H_X_#pm:G,LFQBm2TR[qK85[ar>dE9t<:&*hlC0-BA>AKf#YoJX=g`6a6\<MHXi_4q%CRB@K(%%r?O&1/GA$m#+K(j7J\&1e*]g>;0U>(*ZeZok:L@CR$/6X\&/T)4`"1H:2?LV]dl2N;!b"GV0aSg0(^OSI*31Ofh4]WRuiZKWnTe%J^@9@4M)UgSUI!gLlk<A06&Q.D4*eQ\\2lZDG=4e<_Ukp^oi=H2VaeKRu=,Q!LZN8CG-N7`<8!%We/94m0.8O.;:E3kPU\^KV5s2%oG%ejotj4VnGUAl-F<p3VCsX!!WWUp/CF^;<"Lq4.i@"+'rL+],`JWjI75YX8TQULkJsZN7?Ns!@VeQWa2P[j&`''LeVb.DLjUBI%'PYOJ6E'u!&_N=/,%r+X__`B?;\.I@>.$tc3Z\2$drTQ547g-Md_T_#1J5;?P7s)>iCm"#S%CF9+gfth"esOB085mL227U4;E8_X%)c#ME)/aLF-_tp`Ee<L8]@Uo"*35%g0Vf^T#:AgWj]JA8`DYKAbTt-I.UtRLR>D.qO6:#<[A&mC-e$iJ=EtU+=Mk<;Kl*p_b^Mpd%.HgYE(3O')kjro\(J(gGOdM*K&hFmd`PU,md]W+NGo!M1A^/?h2STZ.>eVP\YadD3hAa\@;fTO&"M@XKD_Oi16HnL(cgJD5MTY>J%3`3oF8>Pg(*3I`[P=cV%b!i!LHHqM,69EZ[)86Xt)*B_=Yd'We\<5s'\=qsgJ]neM\f_dJ[13l7U;s+oKs<Fd%O-du1+h`YhS-:Y%W02ik(%OKM`nJN_e"_q^"l!-;PT:jnDD>n80"b5AjK-AXOcnr][0@Nm_pq82Tp&q/6FXohRX-_)Pp@Z``Uo\UkA8LBij!aL"[cg7%>=uDN5/1q`iFY46D(4FU8<n-MQqG"/5CC:&ZrDhmI4E,`7TG\9<!bK2d;sK4o:KBQ]+Yqg4U!VVEBi9'E)tuE%-)A^I*%htKYlB_%23UE3;7jVqAPYV`0TjY53Sht18P3`]k;g$'>8H>KJSuq*Y!=KLU"g8aM&UHpBFZX\8F\&>&Lj%VN:F%NM0,:RUQnIWdRd?.$]3_P%a'*,U011B1fFBuPiU,<$]]2PL$$)ea)'fUYiED+_Fj21BP=8qs^lU6KLU#h.\kE`P,q3O\VW[l%'/7+OmQt&1(6ojIgl#u&)7cL+%KQJ0Ua=p=iV54ZH1W<nCjXH1_XJC\TH.'U@4Je=;PSFGNg[&TjX71r1,b;Z@LH8"^$`fpqddFt%Wfsg#YR71\$`eel\?H<a.V#tl%D^+&PpMdjADl"_%\unX<4_OLm%Ge]V$\kOHXuq`YRP%C=hOCZV/t(k=&tfi2?C1m`a36lWY[)cK;t%u*P,'uteA1^Hge.umEUsOK%Sgh>Ghj0M\[hN.ABlgqY.D43S/*qLRiSEBhGkZ,JiS>S)]HVYs0$b>LWRd8qp4AudA0A$.2TtBn;M,Ce<L6U]/7`YiT1KpB,!\:7%%A@cP@6ntV16bs=(4@GSS]15k):+Bo;5i":Jg$h8F4imJG:HfF,B1//+f)]m(+RF3Lf2^69,T4Q*)*u.c8"2De9#CN.;:E3kPSEh%CED$^K@3S/5%[0u:Ni(p;>[og\Hc]3(L)3JRRP>)R#K,F=tmHt$e)tg9oUM*Dp_0T<1HA&aaLnsHM\LoDDo,,A^e<UBu\/<D41,:%YM"YZCGXg!D!'!4pE;Bm]ZhrCd@.70&pon&rn?BU8aJld>sa[&<(UN%P#7WYH.>jGlfbgO34jS3BL.a#EOQZ.p*pqoDV+MQ=d%F<%jK<75Q6c/RH(sb,PpH&I3K"SYfe&DN_HnPW$/bdUATV@*`+iJ"5ML/HpMB)STRidg4oHrBJ3Ef=0oN9;=ubKMGU>gBmlu_VGcb&H%H$SVR9L8rsp]^!4eR+-Z&ZZ><^0*lR8PsEs4Jimd;*3CbJnL0*[g-DE]N/*]'DTCUS9^+.VYAEKoi&Z.^_pFSg9Ae@`HJU')Bg*e%r\J%sY3RDq;=DQ#SZ3$-Pq8c2M!6q13T\?@mI:9K@J[Xp;6VS>A[JB@ggg07Q<]>P30UdY,B@Q3m[`)pWDXtS8qfjXa]fPb47[9D%RHF1R3ZN\F/*\AtW@aS%jDrDrd^DZ^Oa1t'Eb83W!4+Ct+>\!k1n*fQKnKYDZ<O-U4EqYh+U8YZ$FFGH?m47p>Yp10G^:c18W%hP%k]LY9;U;_uCo=eFe!MdjI!fQ`*^tNmjQkVDkW2q$:*6BqGgDK;>,3>_p6A2T`f%SF2F"riM(0j$TcVP;Z*faZ1`+V^I\0a1kHR28%C#i2Fd%1b\(,'GZd4+oubXBAGc(/b]Oj>\CEd")"MpTTY7:]rH%ptul&'$dq+(#neo-"p8,UKiioUOZ`b\7F?A;<qC"iHb>V,>bi%1=+cnRU/:'k]G\05[19g(ic`Q6?HB`(s^Wb$0U_3SkeH;.nN<R0g4\Y+7hNld#X#mq't$gMpBP4$S/*pL&G,@Aerbk#)V,"I@E[`%MGWBM9nPl&7Q)kI"WP#=Qmg:1AMB\fMaiqndU[Wmg3h,r^eYqu3l]tI$Pn.tc[0)fWD%ZiWl^P$_A,'SpWn<I*aOnc>Ui^H!L"(R%(Omh!*bLIOcqJ5X`?&pYH>T3$,IKu3SD9Y*IbI]8+m&rt7unDhV%2-$o6>;*)0jVdge'tuV>3;YC;ZEN.L6M!"WMaZ-qkXGT#^0n%M63&=:0T_dHHpHCg!S(B_FKWBB>G.X>aIGJZbp&CT[tJp"T:)r^MOQ]%1D&[NOF@nKI@%-0LRBb'QM&NIsX!pnRp9A;USc;ce6Pj%h&<_Yq\;EbCr)ilqu)\r1$+k4%[p>'Y]UoA;<6$2B]]n.'J-Y^C%7<Us1U7PePJWbGI&ig&mN@ZQoJ;,P*D1Xe(`C7KYtIi=GHTc%="I_"BTk8)SZ"A"?eWn9%M9#:GD4:PW>0TAR0pf4gXqN&dS(Td>*$/We[AMAP3-5"c7_Cqe=qnT(g(0t::(CFff!U+O#i9$CbB9A%5-JWbeQN^Q=>`f@jBs4J!hihkM%4VAe7\u*nOSorUm[&&0t01%K+Iua=K\Q0/Z\4@P-7aXH_qC)n7<j8RHNN(8kNj=>:Ulu$gZs]%g93'5@iEobp0]M?Cm?P?[Dhbr\[d*q%A/f0+<*Z1ic(pY.IDe2(J^5XbFPp>_pOSo5"daaQt?u*VSpIa[YPaKJKeqPmnbGlCLnqC%DPG2452il!=YI6__;Ho&#;N[^C3Fidif-O=a=b5+]P6DpRu=(S8W0o1$'?U6@,W^VkL[QRO&?ikI]&p*UnkPgT(AGXSdf/k07R[>%X&uMdZdfJSCe$Hg=uN20NPtD"A)4C(>2'agJoClLG%08>dg97(j..t#XHfWX\X8u[9.Og/+)`K7'l;.EWBfr=pC+H`JV+KE1E[KW%&O'l"Xa&_k[/(0Na[jdAGuLTnYOkY:0I!,rXHKEgo(aW]F)ku/mh+L([0WK(K(Y)=YO_`TQcS]ZaWk;-'Canso^.c\d#(AaIW6P3%Mia3don'T1^DA*$OS3)I1L1]XOH^O.F)%=d=6<,hWHO?-4\P4Mc7NHp<M%dHDsSt0dlKE($ZQ7]%tRHOF:*bS4!rZXPXhKcWn_*L%/>S\ikW-,BnOBY1d_&uO6lnt]d:GhWnk_0h2afuj2:"N'C,dQ.8;N^n(CZkU9nZj7AMeNd002ZsHAguI]A/hc^K+US.[I-\&Qc"+%giV#R$DStmQW4gR]Zo01:kt<OU4R@[1:CT<+]0f$F'[4-7,lOkPGP(aLn:rrSSDQ!-u4"FE")#WJ&JC-e=piA2*7t(oTqF^QNLGc%"jqn$\@HSf,*Q&;NE=\IBk8`-/uIh0?GGZ/2%p@P;MX@d7Q!S`cmkGc5%k8eK,.>YLI3T9(ht',VY.KKXBn,ePD#a@Ln:rr\,/dI%@.XWG2;?KCMerIY<fAqE9,MauI#e7knO;@UPVTaY=D3AX>XSsCjAKcfj+(R5d>4S;4B8[$[2./"B)J$)#jBK;0H>4&X8@RUq)B@d%=247!%I,!_:g9tu*SZ78K]j+S0V!7n'@+L,4Iqq!<g&X.@X?<QrRi4goqoH7"[fo,l!p;Hs0g@&]YZiT&jGF^/&G1W)B'qHTMAsJ%7Wo_,b<SEMO#>FqbSjWA>)VT)[Ie->%\3's2Kn#4S/lclG+%gcCr:l-%c6O)Ws>6rP_jQIUTtH`oi;ISn1L.5omb+\WY/;'Od'r'%drT,8D(^VO`OS#C2%"M;IRQ>\'+me7S0p'>KYXA>n,Yjjf;Acr!]r1c$uMD<;.rEg,g0SJBc9Dd8m-!d]hL,g.&&dVb81G.g`*Rb%k0ocJ(ZpS\$0O'D[FFUm8J:EJUZCfb,Il]==E"Y^N2<TG73bE-CGJ&NQJT=h.qNt'db$,'Qq$'eN)No%[Z#WBNP=]`]QVpZd^;"-%;+YId,a!UPo<2P;)Ms0HV'/urCG[u.;Nd4"@X?<P2rpMoKPKii%+XmGfp4j:(=8*oF5seIT5iA8C((GFR2(cY/-JrD?I4GDph&2U%4PrMC.^<o?/4H,SoUHftfP-:]Wn:6('\\E(H(&jpMXaBLdkq%^<U?.QkcbUM1gi_?8;Kn%'F]\=9S?S3AMdER.6:$mHAguI]6".W%NZ6B(D<ufE\M]$EmbKuGe87MLJ4R=e(P3'YMQG)4$QRsS6?]uGKl-HGM[?;F17jL[74Us3Nd2r"g\gWD]O6Lk.\S#]!7$`VgRdqf%)$+K]d<!)_7$OXhje;KV;^O8IiIa]?,Kf@')"R\6&TS#tBZ_SO.T&fAPNY$5SF1*8Wa#Y(]rj?EU]1U:aE^-aK@>jpJLqCZ&fHY1%M+,L"f7:)X-i-Q24<=85muqPFE)[BH;HcK7WMQ0=l)fuIfaOi!MbMuA*No$B,MP.^V7dTdbeAcPC^TPG4kM#8K&P,e$nO2[$PAPM%4dn-XMb4VFg>mP)/L*&5hX`.iO[X\Xc"f6MqN!J^q8GbLN4IiTJa\IeKM+A?5"i$Q6HqoOj2Km^4#:`s9P@htiRHr83_;e>&^>B;%\Qj'3M[Um6);?piEs<,OfcCMd,l5H9lpB&9aZr^pF<1E-e*(``NKBiE+CcE@4=9@crG/e.#_>s<PggJtF)q)@)3p+`_q:*2%IBpN%n\+.e1k/@,!<M8fRXme^0U-5d+^J<XYn]@"GZJXh*c';lCkX,\V+($H)P;$'gW(d";\47[9QrgU)`J5I=H5KASp3?k'o)c^[9P4V%7"F)DN&2H.@TdA0C+T&#-lPZL>)VW"[=#d2HJ;P1h[&N,\&Qq.D.>8`$$P(cO=/NH/B(:G1C7L7qZ<HFIN_&Jr%ad7lkcKD7D2.^%3]4K5Pa6q356]fJ02Hg81<CqJ=IdjpE$,mP8=n-`@EDF>PFG.b`hkg$)qg[X0QlF\C,cuL.lqh7%k=+U1sa;*PR$o9CIJtg!qj4=%+)?8lHrnWEN3P+ur^\;eIg6>B5\RttCEaoPmc>7`A\tTqQFm2q#$Z=HUo5OfW@ajbguu+75Z4#X"Zs$IBBu#hRFANWI5p!g"/tn\%TI?TIAhamKSUEU0D;"9^cnP40K/l<8.S36IMs35^7N,hQdEO!(>i;-0#k'KTTuKO\N:'iH&X`9oN@M=lfiUp93$'9.%<bi7Vo0:@%KfkQ<4<b&<+#(8KFkNJkdrU!&"mLt1?@'u8_YT\H-PDL&EV)NHUR@Tn?tn\S^0e0.g.LYCE;UH7&<<(e%:CQTOI5#/f6iGoO%;b+%&7:]%GGZdUT(?H@DW^e\=UUFr;3Pm0%;J)9"e<,WA_-1g"@NW?/0Q>a;C67>WffoZd:d+:d`GCUMhmt2b;JWSC`nUYdC^7GBjO;d%5#eD4Go_V:$BV=WXS,_KU*:^\6P'Q,AR6<k0T/B,cuS8^Mp6%:,U'-]T'+lG>fG<q_V>;^3UK*$7AJr;ljh$+#@dLK)T!:BWUB'S%?kT2#f`a`'mD9S54Su);!VuXk[$$Y1(XmGSRJg[",#cgCI?0dL4tl0h,qCclMA.`m\O[&X-t<Q6K:%<?T<_kG\h$O#j=\@?=C-*D%%(-ko@qPOuAI2VaM%LMG'P8i<b&&<%-HpRuQ(&#@Hs!qu=:2[%M#_M%cS(#J,dN4Qb!2C%Td.>>V!2BS/>]>%krCaB@/1]-7lA)4%SMn9DA'aM;R;p]]bL0rI%C!1H.^YQ(,`.0o[_IL_[_Iu=PPKpK[UO\OUJ9kePhp8+]hXOnIJH3HN^+IlgaFYODE*jBVL-(6\S5l?%5g>nZ38Hp$@J_dC&4`CP0lCMKe:/q-WCT_18lF)B9[EO^+2[pi`R#&;o"?f\9%!1KjJrn[?^RQVWVp9E(RZbIE3_0O^<,I*36/'c%FD>BdY/D4i4XQNpH@hWhEs^QA09'LFbkQ]MD:+:Q3SbIqpn5HD3GT^+c/m`)m`NO=DPi,ekD!3\leIea<g'3:,'lrN2)k89@!Hi/%e9L%i?G%?TZ:&GFY,%G0.j>!%O,hB-N<e#.R[\Zp9Xo?7)KmQCm=J=/8sN)rWP/-p2FV-`Q@T`s*]Cr?m%;oEOc^<p6M,>T7t:Xd%"[a-G4G^A/_%_qZ.S369Ms*114B?RES*17m`'aL;3X-lhLLO)#L+J?N+m)8;=\M<G*\c+6BM??s^PB.B^e1a&ROI.uVT8%D9CBmh%F2h.pOJk#%mWIT,AftJua<l#K;n0h'kKm*7S8;dMU)]t\+]G?o+e,HiVjsZZQ)(4dR%Enrok^5dk?T3PiO0Qm7&Or")MqGFVPWLa%1fJJP"IoUL2Os//KQ=k>3#)lT8kEc=8d(M&Zcb>X_5G&pIpK:E?K^!)RIAPq9Lkt`hDY/4,=,H#,c!KY>;6FekYa;SVF*>7c#dLm%JVQ=SU0sN;F#`gs1sa;*aml[?NOs5ME\i]Lp%*dXL'fn[-G-Y+@9]>dZtVcr8j7;N'nk>I0f5(E9T=6a24iOM's/`-c,K=F*s:be%mS`+<'Wbl'6NjO_TGGZ8lb&sDdi<oIV!!ld69H!O8BA[7"_5#90ln>Y[,_.oL*Me2o[LuLeD!C;ftGD_Hu5`gH/5<Mhr&B%nM`J)%*.X4a@r('9TSk?)_f_:aaIDMq9<\r=`(NK0;US`:cai.Ka30g$(n36<E5R"6\G*muhbG'qZLjn>:Ke?pfjSNLKg8^M7aR$3MHP0Q%_aF7bL@p\Yj]b#YHHn'ClojA3pWip8J>"jHo^bE'N8C.s3W'h*]L6cDbt,(83hjT*'%2#.0A)G#qSKT^Dr'G*b&4[hP+pq[H;#r4%]FNg=@YVQN[![\B,ht[P>DPhq_G)=6O,2Q2\BcELhDdICnBEBDfGd3$LVe_Q&7ms]O!n1'lL<%H0KnUnH6:A!!sM'9h`%`^qB'rF%CU]@VGISp)g<9PV&-_Y5L5:=&6;g&d9rS4`,tU[F0g-nN;dOj'V2N,+,:cVmke`0::]LA]E\NX%REh9N`0NHg@%'ZC@l21B>VQoO%0-3kC)X@MDX%f%lalUgl,ki6h5+f)#Bm>b.3W3]TMjEUi$bUCG5%jdGI<:X0-K"3EaiL?<5%=\OG\64HbBpn)i4ZO]PVac:g\g:7%d]HrT\/@YG>28&gAqC)Jf-1AT94Bm"/XdP_do_jab,baZ$#kck0d`ccLrjERc7*X38lF)A9[DD>9lRO]'CVCliO7T($Ojm,13\F0%CGR#=bI,*-<cG.lr`0e[/51ts+ij[C`qt'oigi8okF6tPb#2'k7$#GE?6PdAV;mLT-r&E-rHm1(Bu``Cn>u[.Y)rScTl+WR7,>9e%C:P'1CQk3#5A7`>[/I4c99h'(WK?:'[ldhNqiuG]1kp#W1VmlpSk,F_,70@["aGd7m5l9n,^&V'5UI^*KMX@e9.3I^WDLT5iJ"!@%V5u\FhWC.?$,%"]SF2IQXPEa+F2*AiDaF&b6T+bXk/eN#P)ABdR1r>lMXY^rXQ)u^VNnVX1u@LZ,go:_d_+2d.!:"''H43-2P$?I%n\!W'pMO<QRV1W7mW_(H]sD:I]qcG1O(K$!PI$r7CZ?3TSr#V#:X3!5;GpanO4j'kZ@]hJ8VEXJYnl3IbXab#$X5T$1Mu5aVmZj9%B5WW<%U4OKK`HnNpiJi9Y%EuP0mX:O30GqC,is<5l"t%9L1bU97h#N0gMFK5$ZFo7gQW^LUtVB*U.$N*@2BNV&/a^]*ak]WmPGH`%b3<N7,^%c<"/b8JEm[(AMoEnNA%]"ST(m,DV_8h(%GEUq0Z/H_T9.RBChPO0n]a:.]Wc#q?L%-,^A;KE,]u/+$r#"CjcePLn=erX%XM\A'm$db/bjmiB*YgRLjMBr<NfVOb.k_Bj8]WC)do_7EBVks``AAQ=M\hp4ZhqZFRcic&5qflHZhpbaYerDIE)h]SWOH`#X$Y*:%D'uLo8a8PJ(5W0m\?$jLS!o$KW?06.X4Ct:(5CB_HCJ)!$9$^`j5NKuX3S_r>$RCP(>n]:[BW&bA6/T_5dT/ta48?M(EF*%@FAh#%q3"@9g3hd0M&nJ5FQI],o/4N,>k'%FE-(0*$R]85+/2t`grGZ/auc)%'&q)B_@Bi1'%+OB?5i8$D(mDMWQkFj,^Rc(2<-9O+W4c*%eef<;IbCt]I*=,u+sl?q6Hj$tOc[O:An#b\5,6"<g/#YJ3S8d1`r,l/p2)n',Y++qYi"ESBurn"?&,Kp>hL$W4CZ6fD$5&`cgEs9%UHY>o1Y?VA7E.C,Qh@gN7eRrJe;Ms0,QFqs.l/q)(-RfiSMnYN[G6'[5(%=d`jjape5E)gkDFA"KlFEh]%+\mF'[UJOQqPALt=4g%>]@o?29EaMh6Kh`OkZ[W9TIAZoHD,OU0qYg++[L@!7<D`N[XZrWi:H;G475Oe`)WDQkk1'2kIfW!+e7`R&4Yf^25I>WMt>d8ld72%P=4Ht(a[8AKrE_G7`<rEqhKOK6^$!<Ak3_:YpO<UU(;Xtf94O4PV2MD3408OG-Hf8Ge-:?hm.8V,.UaP9<tkT,^RZdGLmN*9dpIM%@)uX=\%LD[')>9#-?sm^Jr8l'oZ`WNiSL$FA40Ql"[h]U@7#EA),FC3`@G-FF##o@QeRU]*J:/5;_TWMoL?LHHY@'bk_]R5]1Yg6%Fto0-lm?`q&g@XNJur_[@O?oaGW7//'VAn]^I:!)No-g0R9f)j8e"u"PsT4To2c8**3F[dOQI]:pAH_0OMtQU@C*[G+I`4n_JiHP%9#7LK?`E[Eejo":C.qMp?16!t=,%JIW`kh@hhr7rist5N'?P'#'H>51<bWG-Aef$RiK]K2D5tNp0*(f\do]"%I]u>NP1O.]VO$$s%&K3^,;.^*N@KBlk[39I-AK6Rup;=hg93,!%aA8\4>kTC.c5;5R$5:@ub'9't.pg>TNf.S<**;I=d4PT#_Go)#S(&>C@SloCA]pNG%+*F<]NK%%El1uf.>F,,a;G2na-8MRo$)>$n8flBu'-YP/C71*1E%uE_N%sD$KHf-]QWiH1<7BK.P5-ia`YDNTNN4ai"?8]e)"Up)%`7u.>k6r4i,qJdCVK$cqG'1'4(,BD/.<UIbmX*&nRb<s!3Ddqc\(+ekUh&3XZ7u`Ecuu,N778(.S2B$`1ak@q.lqRF@<O3?mjgn1%i>QTX;/"gWmA_+rEPJr]\ocLTgnkuh=d;%uA.lc<nqIq4M7YPu7:KfB?dj6f1']8AP*P/rU2b5?[bsbmG?Y&j\_@26X=e^$3*8UO%\h.I4QAfu6F^=FD!9C6K(+tn-Wo$,Um;BC`dIu:3!C#mg\)80D[Te!I*V7Sh8Y)E@/8T<@1>4ai:/0U?]e?A,BFV4-2>P2A6)hu=%""C4k]M).:12&#AiU^H@Re>>[=ikM8NK_P&=%S;<^&PjMfS(qAdAs^*!O'W4fCM'qjC@ZPSmPE!`Mn6#Kh)25qtS!(e/%^=@FErG%J$+DBN(@jW&8IJ1alWiW34V.#o<F0*E',QcloNHdO%+Kn*?C^=]d*C.n*9caf)l7=J\u56LO1`jAE$Hh(u*r:M(Na2Sf?qJ.p9u8%0obeJ^"6DuH0)A<0KbM<iJS1QG\VTWV+e,DZQ5O+m-l;G2H2Am&3Xk6__Z#$M&4\\D5u4@n7hHi[lSnfBUg)s%+Gkm6#9tV2S_K/%hr&$rcH.[EVos;pp.CFs_0u_:19g$4BWU1:B-J,4H8q8=g*p/VD@2@Gp,K\9(dVk4BT0%sFW>&g6(Q]bThku@fr.?BBS<l_TeSG@%1_H2fH8N)ZZqI]fgL;'Ka1+:\lQiZ90^']Me/T4m419AqX5nJA"#j9/e#'D&?8OtoG??PT+r2@.-^N.*Y?5%meQMGLPA-OlhR9En%]K.CS@/[MfngMm^*kdX[eIl`^eM0'<1oH\jlII4g.L>GC$\gjcKkY&cG`AV]ai,c5eHYuo1sRb<A.Eg6:nQs'TtBpAI(BDqEhqLO%.Ho.$h&92_A@/pQ$Ub.qRqQ4LRl`Rj$G-8D:M-Vl;VE:q%X5&Ud5\b3?f.q=Vm1s?4R.p8EfFT3^"!Li]'RO0SbPSuA9M9UC"%pO%+EcVTO;Gh>S<qZUe:3Z/V.lm6MdE=T=s%phDAsh%Z#>Sib&1#c:f#b=l2k]L]1H:Y,p$G;+9d$X$[]RCARRZfk'kfp)C'`B<>shJ%Bq-&Z>4ZL<`4ZF*>'43dmtfPTXaZ7VD)`*ZMHAK7!ArBN0^^7R-!Z-a,G_1+9&N?Kam)^+#7q?.bHT(K/IT06);ENUBUud:CJ.H]%]t=C38Eu+H!sYgDgT>!AdaS`JfSU_>Am3Qbhr?<Rl>Nk>A^AKjQs]j<m86qoLt*WQ@stI0M$nj=XsA/qYB;/S1tIp/;-f#%<eHcq%'dFdFFX;3'<c+og)/#:CWR]\R.Q7pi=<t+iD;85a0QRER>])6(RAH%kkoqmgWnP8@_D2-)bpXja@'b_"j:Q60VdG'fSD)$5%I:$5%Du]3AHM]pFo@q$p[C?0BV::CdR\\G`I9"5,/Au/JZ?NPDDu\q:5CN=h_uKXR^&@.JhZ!>C;P<GjWF'h\1Z.VRr6"ES4EZu[D7Uh?%JU:Q=M_]s.<48in_Hnc8.X"hFY$+"hm&IAIMrhkR3hpG8s%8p`po!`]Mbh+drp?oX5LJYDpYD`Cs7jj*hnK&#rmqrnJ,8Cg?[hk=%rSQ5]k<K"Gg[BU3s8JJuO.UX-s6H;lr3537s8UAmrt=d^s(BI95=kMF+,E/]1\u.u-W2cUKOFDH;T:!U.U./%gNBbHp0tR%]>jMM%Ko;e3=3F-YNkC`o8aOt_g7lTLX'-,Tj:t19`35*)A/.gd$7&Zq.[p,H8?A+W2"<#V==pRei_pu)=MBS<4p;S"jU[7r/naF9%b8LL%60rPNeZg*GLs)d3k)rGD:,Y>'Onti2W:X)FP$u1)mEdt[d-tEYg9=5U.P9,5B:N3+g?l;j$T2"4XTn*f;Z#T4?^=XXbpPjo?1"]=%O0Df8`WVKe77C:tB%0G@Bu5YSj%]B]g+-=JF"r[Gb?6bl?EBZ!0^'N0^$N,HA>+hsSta&uPS9Cnl02J5A]-:)M1eFCY[C9i'G3/6%4d^=)m?)5GZrk>Ioa,!Ld(=c5CtK-HEhC$u$=EKs7@W<`)Qg4LJh`>MIPR[J(p%>V@hfT,PriYH9CB(nc&>sV*c+kI'Y>V@\Lj[u%EZ_RcFmWY=#Sm^*J%Ym$N8nus.kRk\L^;#t.]kR17I6hPPt21'r<`\t^Hr'S^bVEj"RVD3jL0l!\b4kT?t)T(_ORk?WG]nQ'TX,m%ORbYK4_?iYA1KQ1-R"J2VB!$r+jnP&%CpF!XXRc*0$277+k'qArAU=[qF;V&p9Q+k'J,8&pX:r8?'CS1KhZOHFJ"iY\ok2GOmUb\%_BT&5jZ`i*;i+XF;s&g][##+M`?cDDCCuPIlTasN48Xcu[4to[`EJ<E)4+Dt(P@1MiJJ-PIV)_7c7K+HioD;df>_bc<L@`P<Q<K.%=7Jm`]<dF21sRb@Y6h7S=g*g)RI)$IX4$AJN?e)G^j7#i!;a."eW0*ZR=oh$2TDRo9O*Q7S6'P&6lWa4R`FLcPW-VKSGm8^M5u3+%;-^#[$r//D_1ei*At-<;R>)=S,L/h3(uIUk0sfE*3WIV^fh,0Tdl=n!fEG&PbNqD\8meeDi*7XA/l;gnSQ;_;+?[;34U5`&7^KRD%+=[X`QNb:G<+3Z*Q&!ft=7JjOnlnNBm/#&`(b%-2ho8L%h&(06Bm8$M_tDn]?PckQ;V9Q,!#L/)A)4SM=PN6%>QJ`?A0o"01sR`*%0\,@]*hZs[]g#N]_[-:AH6D)I*3'pOeY1,010'#%!6,kh5>!48eqI#jUt)5>7DVTfPNag:r)Tq%cQi5nV^u=n?9tac_CVIJ)u2?P%goL[8cc:]WN/]03LJ/t(iT4Obk.H9s9QN\T4l"6mI.9ctnlnNBm/!7,lE;+h"UhbLNo/R3IrNHWi5FS[;5:$IRf#;QdH%Jc')2el%ocua8mJ,s\ZsB:n]4<.s9qH?B\a/U]rV'HBmWg7lm3EJ3[7cf09lV@qO\<=Ef:LPQQkP=)@-fJBZWa%J_*eDc>5U0b8<kpWgp:_G%1)uG3jebtbdTj^Ic7[`9eR&jRZis=L1Y0s%hQmonB5Y[l]<CO8,Sng!UR3ZDbB9f2/G6R\8>O]?KKRLGYtpEl8PjbEX4<h)0F^t(%2n>u>oF1rK;MO<r!Nd$c6oO\F?70KJ&.'/O9O]Mo+#FR\M.[bnmE,NmC"eu1,S*?irY]")'tkC134&NNU![M25M2A_+3+0>358"4%F4[:TO&(-mqA)muIV^29]bmG/Bd"+@iSpI9lau3Ubs^2LQdN1b/j@BLIZ%m0>s?\!@(H-G?ms`h^O&2EZ*$0;R>g1:qRaf<[eZk&%r8O/9M!D7)Z"VlcXR#S)Y5X_c2PT(U)J>CXm\q(,o#2-(YlimKM+JaoO>+C3df_%Sj=?Y$&mHt8Q&qsf]2Hb0D9)]5dtWpEa4p6C%Z<+>pk?rV]O./mDS4i^d?n:-O\1caF?j/4K)Rg#A$oV1OlqT")q^8#j;Mg&XI\2>=I%a+gnU8u%PM^$K,V/[BU2bAP7dl-F=[_`_%bAC2H(Q#TW4klXEF?LgZ&]&]LHdp2-$g#2n<"SK4N'[886kfmuBU04::UZGD+rY+GJ*1r'Df97*((=r[pJ)fK2"Y&)<T5c3I9dX\%d*QMf&aBsj&IG]X%!&I^U84j1Zgb#cZI)S,hbNg2h+(^8.-$\34+oo6F?,_P8;5NK[@hV-3iEXc60SHQp.MC'SVR5^=].W6/i=%0%9g+eB;!jCI1_DI%;p1@.c^"50/8P.k1hUBK+NUIPnPqPoN$XW+IH5"`M?dTH$(4V3Dl?rER;\gCU1R-;&]n-K3b9g&DPgic)(1fJ%%aN9Y69Vgm)/luIqM+!Epnli6H&1eHfG%j$;VE+.bF17S3*)UPJXo>U'2c,un)7]77O4`:.)qsG-:4GHAi\\eEq!4G(rd=::YZ3_%b?)bZ79!_`<?O`0@afJX,S-s/L$W1[1+NgOfS&;l0h!@ip\rNa6p?((=14:T@N+FMZ_RB90JZP2$u!isQck@X`]QQkli-`!aYR>:%VPRBh]lRg:6krR06l;BYRYgue4eB:Xase9p^Af;oB9s#"*hetV60":afUBS$\o,%Qg7[0/L7U(<+6/\o6[/<m[qZZBSSbQ(65KR^%$T@2:;jaH[%Eiu0J*GsXXQ6pZ`qe_tUY75iX`f!@`3tN:7Qo7mIUPG7+7j0(Oo.sKf6e@7aNM6I6:@J<XhbPo*DFol:54D/_c*F*%[aJ-roU$VNq"$Z6>EL$Y(rX<9A:FP]o4/^(;hW]Q%5l;=L;ee0c%9I>Kn4*?1dWGp<\R("R>CEC*mGm>G0*d*>>4)<o#'88ZqM3I%``OXto^:8;i[hg&lh44r(*?@08<VB=4eIOd\-f<FW"h*%b/lK/.aICC9Jd?dN)Sa<euk=,:jf@(Td+m]&GpV2mOfU6aE,L^0(i7P%HQ/Mi.oqcc`CmgR188+<"[bfP_?A]O17m!DMc[3Ik@,@ma(l&'k0[mJd"5$Q;0LBG(?:>#_r\.??.%W!61rmcp&[chZ#Qk4N6LYe%?*FVE_Sm3rjW5`!GXO`EYZJ,nj!5NjQP\u#bHRRX_9dL;flU)Dp(Y]IM]+IX=>jI7aD,pn!18G<Xb8DW&Y"Sc`?*<f`casTHb!SM%7$$$oB=iAm=^I8^$\fY_20(YQ@_k1h2/8U=FOK,.G#>_O=Z%a*AeLgHjFSONfh=qJp2EWJ[SO2kgS,Q5QW&q5>K\N50%n7;^Dp#)%B@cI0$I.nb.k#!1iBhp#Vk_nC<J+t<86EE1OC'V.a@[kU.<hJq,V-DWVK$X(Z;oMsQeC#JGAs1e`P^fhjc,q9aA-Xi@E$Gs0c<"D%2B1E@&t3OPHg:,Z^!68.<q`%WO87lJ]lVdQq<EPtFaEF8id6+o1KkiLkIJi,ibuS$0:BLWXo;RW8Ve(W$O5GO_?=`@17f2]Mc[3I%k@,@mQg=?_`K8;i/eE]6,O5In,LE<J>SW'W8AR?->#)FXK[FP*'+bJDW-!T`4Dc-U@*;s3jqa:o-+?<"bUrQ6XBaEu&?6T8d9$Ja%8,g/:A#0TrO*r+6oea*dc&J+uU)Q+$%-34YA$AJ`D%6lo.pL,:0obeJ0GrLt?2&s.nr4E,AI%H"qM-akaSXC]Zfq31,_KM'UKXbO%4j$Gb0O.)`JAnBG?:-IOP.a1BSraA5jlb;tFBh5Oj>,B@'Adg1L1YE/KDK])o[j`7c)pmX$2+YpEl/tBf5!FIPre&b8Vi%r$O6Fk%_?>_\17j0#Mc[3Ik@,@mQZmHZ$[Og@(ur^\DGL),JVT#jam@mq+#)]cZiC&91UCsq1dZT*0ZIURLidacB]XafQY[tW`AC=BpY.LT%[5KbATO;hZ*7QWkqZ;%-LAeI*\&`t8-1\<JHfSXO/+*^7A74CS^TmGu*jUTr+*4N;*f^No[_#JDP2B_pbUt"*fYI#>Oj\:SK-55[%Z-VsI;RF!lSomg\m2Qom\;-=!VM]:'&WkSLU$QPr=O?oIN26`(`?SO-CD)V*lP&,A?=M0?$W;WbG%PVfDmIt^k0[tN`s`k39**g#%6kJEGKAa+nk/qPA1dV\LlkF9^`1B<&kK]r`[WDII>`tB-(=P7R%0%p#cRB*3@63jHK:irr4Ru1Y:!B%!agk\JXJSi?)mY;i&d]ul%B4F'pP)+m&%H`;L4Hb[N6C,[AntDXXIP)r4JjFuLf@2sm9sKhA>I.hZ^*Yf9EOFBP:rjp9UpSf+"d-$2_&tsZ*[k!SYuY4Xb+Y)e%SoP`;c`-"iHhE@5-=!biY""jAG<1.1d@lQS+\XjVKODuf-5/=<@M,nZ_T$1]=?JAdm'1/NOmS73<aWjtBUftCpa:[?-%LK>%4_MT%1HTo$HGh/mXtbHVYr=XY,5GukT*,1B+fb_?_A3@F7C4a*YL+*jnE&*X!</t[<X@Wub`!(>Wo8#;>p-(_a5b(+;s]r+f&!Ue>+_nC%QW9Q1OSXmK[?*h(CI'bc`$1Y[D:WY=m^>n)UJA-GrB&D:DYa18]=`g/$\ZC;#lA7Y7;?k`"[]Y*ZuYoHZ/r[$fG<@<6<M]=+:)j$%U;cjO-aW)\59d"9--*t]bV%f3_q0%tSSnpR<MD;P(QT5:R>i#DP@(E2MoWpmQ9,$kdH]RR3.qPud-t?ugWo[h%^r?$Md<WRg_S?u%\_M.@cMqMga;>%2H7J]uAa$G/m-NurLj5YtB2?"KVS*m>r'3Y:,Yh2j86?S'<4VL3'Z)7>d6p`fAXlqA4r>r_s0Bk10t&71Aa>J6%4Dj5)+Drts)j/4MlVWVA=rj#e,U*7`#r7*5UpZS%60a@5>Eg4>QY9s>an1r?5>AeP<!::"P6_.?^1p*U_sG!9#(ZEhQ`UT.l*_<-%TZagHX(.C*D,o3m\#fm&4-I`K)uu.$VQ<hS[Xr1[*:l*FXPK,o-YR"%?XnJ2@qK(X'Rb%7?Xp0C<\*5#@M7+VD-%jWjGBfUc5+[`%RZmX0PcZbY0b(I!$3::@V/0D@SHT'&7Cs).!A>&h@^>KVZ3XV+7QO'U:*q46)_P6&WI^F;PT"5F<M]ojM)KBY1umZf<BcPeHHeWD%#[;NR304c"XZ.QlR5TDo3_!pVXd."_jBJqrR=1#*2KA=AU6$YS>8[i7r%g>Y,<7?MEG?BKCS_dH/^o[GbYM0$kCYd2l3)MpduE1X%AYb(/,+;d3WC45;V4U;#,>gfe1lp5;1X/,*WjuR>7-!VNifbCtai:R/7PIQ5Xnf@fRS-l\9g2UC[_c_J$ph7FIf(T5_`DS-KrISe%[B3%ag0EA>X511c+<"mZ&,)IVb2!OraMqC9[(S@T&tf&l5b:H39TKr%:YVC2eAZ1nrYeIopX`M8$b#+g>F9"*<'9$=Y`$2XProl3%3'V:LFAabr&Y8*iK8=O^,\A0u^NYK:NT?)q]M;P9>5[@;<[<6kmR.]A\V1U>L0]PRg9_NU6^r6CMCrQiniARmPFrmiGKU0-NUY@8%o\fqES(VILIip_m/T8![]9&ZiX.s>AF=&6DlR`rkKF8G-\]]6Gm4M_mb+=g]0gA.>14>so"B>ku4JuEH,MVC#l[2]*m:r1&UPPnY%\IoWF.7(h<a[76uqe3@"&L<ub-,2l*c7ZRN1S/g"""Y;#p]Zh!%QjX^)N\K.42BKNjBF%5Pp]up),Z%#Jt\02@7%$017fBc(9_6p%ccPgH+%sOm?SD*?!hnLfjPaYR)KiS8%CVV&=hHia"L8,qNVKV0OUu]!2+5u3'2b0%UKP=c0%l%uRqS0nSsZL@'M%g"3I\j)b4NoV%>INCH_to&_ZTPW/8LO(FDlWuVGV]ZBGkpfY*SKDJ0ZB=A^=;\'A/#5SdE8&EkqTsN5Z9g&[e.p<0K);Si1LQors2#akWuUS,.S\)%q_)1@C3:"1!g?Rr#]3XX)i/&U[<9o\.2@)*S:MEg(=>*!VK+T[+>M;WN%qo"-uZ2t?SZZ5;t0mN^<!:cjq8-Y-n&RD+V+/_@t`,q%N8f+>a85.cXQ6gW`l[<DeoY0XD7Uk2'$%!45/-,NMpeqYhnu`X'r]s'j"[[d.U#6R1's*&YVGDURu,k<*mY26p<$E1#=]76PKOj8%PC<3Mar'Q-)F+0*YF$7&#DXt,)E/8:>4f9sSja^i)N)ne]-FTI]O0)h]5OD(Ofc"b&CWVHf?6W"oG0"DE6DN38p/<gUC)=jD541W%OXMCS.^1KAb&C^j/TWiCDNf.E(SJ!qhdRL:a/0!-o+uu[\<SeWj"f`OO?=AnES2V1-Q!K;4SVTSZI+9&\VYuU\s5#$E1^U:2<3X6%D.UfD*mmANMe/D^:3^2GJ";r7L9kb^UZX\S"8RV-(2<`edb(U,BQBWQ'G668*FT=6Ys/G<-KYPJXN=UuE_'5ORRE49ji?Un>6]d?%$\kTjHpH':!?/[lG$Cc#LbnDFfIT?iX*<l;>.s+<:;:1m9GXK6?C'Oei%.(>7W+,rS6WeL1NL5^P#/C42TU)Zb;a;B'DF,lgYRfY%6B>*lr>q>,OaoD9K<u:0OD$qr+Djr2+Fd4BP=S#[8lkMP9TRl3?mrdGYtD$&#Z*khDHuH!%t4dSB6hdSD#odC9?te7Xeo?\9giB#%-*NCV6Ze#n7LlB;R[#=:O(9Q?`AC7?^J5"i^SUs60W;ELl]1#XnhN'Y?!;.mpf?H_@ohbTD:PRFC'^Qrn/KhbN'XhY0L=@A_b'g7%p`q*[/Y[6.gg*8[KK?%8JpM-I@jN_$br+TQb2-;7,qcCWOIl\#+k.ei&B%3L&HkilRT*+A9/Ns/,T>j33K/r'&#9P9YS?\fPeq"d%1<c$@g82:9C.9DD&1tJ01a.N'*WZo</D/+2I,ok4B,OC3TZ&3[a_MKJF3C2C4c1g+=g5fSdqEoP1;B7eO\[?5X(ekufL44W6?X_b%$epbr/Y^61Cl[):K.WF#FSLHOakX(@bD>SF\(fo!"_5"9NT<,d=i:T`k%\Aq`5m_[2+L]0"GAWjM$,g(S.Gf6bsG,mO(IE@HXnXQ%9qo\XR)q:jfX*+]7+fJk&CtV:.GECcfkgZV9]Nao8UE0hq8h[a&rCYh/5rdjko<:%+&)K4UsuNZ&='UB/r#/1+r[B!V@-NgA?!Y%%bm[':W'[3cA42Td<ln7%&V8)^-<hKnoHYU];K!7;M+?#["k$mP.FJ^R7Quam0sfifjJt4+C9!u2J=:6B;c.jUk^-b`IWJ2YYE3YY%%-bK"+"#gCn\\<YhXk6>dG^6=&.N]-9f:gUE&+k2H"BbF`ZpU$^Gd7)PTOcnk)bKlJ.GDpGhb%$j<YY\q;>e]A0o"01sR`JR!UIC%dJ\Y-[BYI!0eQJc6dV\>#m#Crc\7HC^;W%-(bPR:.7?L'4k7Of4HC\T1RGY22DaC(p`qBc/Y[6.YMm](Z;e#9^oe&Hj-cke=5oV^%R&faN(tIh]'%Pndmd,n+YtYO<6?('J9rV$UJ>S8^(D2Y5bKnY;?lSD<<lO*\WMD%j`b$l0j?%s?l+3KfVc!T;A4.#75nj_`&OjZ$%S>F9mPc\!*#Z[6gVj9cQcr#a->\\g.\l->MT<NZ-Bk-mp:i+dGIDHs@d0mPkVee48J7U&N-`&g2G,0YdR:?'(+:aLn&W)!-YA?YJ%75R\u4`V<qF^W>qK4nt;UR"(-+`,k:X^t!eae-T%M>m4S>1j!b9L:!p=tkbu(8dYkLW8*I(<J(0a`B1ro?2QZFQhL0h\\H1Dpkh!%(]6uWGA`\\8IJ<pd`W;f&GO=+`\.!t672jGVeub5M)KBY1umZ,d6q'-V/A,6p(kG5F$f"/Ptg9JbksNfT>m0OZg_eMeO*#"QFbV2%"A/#=75V93VhU\Rf9B3tpR6&Kem@rjG5ZQD)llY9QR$7\T]Fc>LU'0lA%T%1(##.HRN3s,QIX8dNL5AiV6aP;H]a-kC7f'"Bn@,(%BP#N3oU$^2;($,NoP=VMUA;VNf\$f&6n'$;g)C]?AOYPa1D)((k/NW1:*ug"F1@BJ:7l(7M4B#\?=oN#:&Y_s8Z+;o@]oWMZ<VJ4%hqTNK.t8Dhn@(35&=7JW@j._+=KLc7>gd>QBP"ZpoU&mtb6KeR/Wa\*\s?2I[iQ(]n"59iDjpDipi&XL9q.OsSlVm,AAL[PR["':%%RNk=^@ZYNaL#$WdVQiYc>V?JT?iZqpAHRig1r8(F9gd15JG.#:,<2:T-^&pqcfH]Z)#hhKSrq/=OLo\EINjm=h>5nPE!ObeE]9M%,4F6i6oHsO,Ehr>Cq"%-FQ>4iJYoTlJl]6>2U14_'F_G".M]J#\<]Q55frYc>[C=d4tcQ;866P5ZY.(2%:7h6o1!+t8,71DOIJ[C%:"W:28]^&^"2Ytg%u=q2pAp8_.UCS2af6e5%&.0NCod)f68_49dpjDp:ual^PX:AL<3K2ua#$>\$Et5E+:=L)L*EN:bYkB_8QKk9%9]P1t64ZKS7OV:O$pkW4[UqEK`@-%fRVW<Z`JWNoVJ"K6C3;j%Qr[ihDqm1QcCaOXeg=Rf>GL-mBAgi[=WJ!:-IFfbr)>7cr2NPX%0ZZAr>sO-?T`c5TJW-j+/Mb$\.HT7T29YO.@V#"q9%_?@'mXD@Jeh\4o0[)EA0n-FoU$QC;qUS"Jo(pYkI(&WXqC$.2lb_@,1p\d%LG.1k7])Gq"?;!MN.GX30K/=7*5T'VZJ)t-"jo:gk([D$Gf`uD`['$cREpgT0O4eJo:2p$h2ek`Sua8VF2]ECl)MajASNQ(U3\rb%X4f(,a`B1ro:mjn:->T]1BoS[aOF:R9&JRGAt>2<fEB3KT&hS=6b.$<&<K5V+inmD(.`k>Td0nIr/k"N3=S[Bba>#l^V(S;^L3IU%GlNcp.:S5(hJst7jHPDKqpMQ=0ks<(,Z.!t_e9J7]1mq_hdnXP!A?XY8q)\3S6^mIG`oLq@)8N8f2H!#rIb6'>rne=f31YJGBrB]%fPIs)mpdObP4^=B`;^/X"9QbkOqG'"16UN=)J>D_p#`B\SnhajT?,$DgC'V+'n*V/4k9un$>!,@'u3^')Yd\RM_fcFO!KTJ5X)Lk%N'N]#iPn_aRs4?E)Q/n11Hk;s3H8dU/F6ithp(C&\dVHa7_(:b^F`Zt@dd8P#s$g+=P1Hu^LUerS&]RZS@u4n4;ZI+^\f]k:34:7%\R5^&F@hfm1YS3fFtaeJF2$>QPU0K"9PY9imVJiA`3%i%;>mk+QtG[e1`XD!`@'AEc>s'33'"E27kn^VK6q)IqU3DQ=?ilUL*c_Z%hlhie]MZ;eIClb_6J\UNMn"q3VJ)'r(!QeJ['6/&7pFbj5VC/lFn';=N-"kZC6;<B]b_,<WTdQ>bmJR]WUmg$i]!l+r]Xo/ru_6!%b(0$Hall,5'A/6&?AR-CK"*Cd]iqGEX]Q3_[HtI1bP>U=m)="7eGVq(_Ho)&+"DeLGp-D*.K_k7!39[2#(3EN<m.KOpf%9qQ;ngl%W<-0Q?^(S`.Y-(?LQqnprKa-Or'[7(K(V=qDs`FrlM"X2Y/'m3h6-XY)68LRO7tlnmfdm67U*=40TQ2B(B4_DUoiOXjuk2=,)^i,%gGKEe,lSZd.TZ&M&<1ah(HpPPIo8[.$3iZ.hFE',!DE?26%\M@;?i)RcnuQjg2$-(Il67S7\nO80^/<I-><CDnY?Rq]TSOB#LdaC%3U7!pHuq6gbg(fGW+(]pJnuYjAYJ.,ZIdmM@`[c'OZe;0_ib)M#WYlnC$\(oUPLfr?Td&>(l_fF<nmo.F)l]O/'BU+l6AY%"^CTV%hr63=:Too%'>]7sgk.C8Oo#Y2IE8V&)U0fL(6O]4BDR5)rSVUc.742KY_`C6if^D(2L3<Qjc!i*R]V<H0SgRSF[@DWFUm/HA\*N5%&DM4L-c/?No1P:gM"Cu]"r5%m"JnHr-TT-)'92?;M&s"H#Q)jOXIa2m'_Q7jc9']Y$B&/@NIT9%X<X,52mTenERefmeQ9,&bR/Oa%@3cFbs#caX!UZ&P%c+mOBUDqpDKNBr=W!A($^Q[!?!o[.Z69"q@Wfc@T;2KlF?dnD/m@'UT`ton#,KdN0IZc4,05n2i?VT)S<DF^%Z7mtlZg2\(feP!E"L<-_?um*R\!bL-iZ3rPCRa"OM9,)'bXP@9@^@F<$(4miDChRmU?:6)+b/u:*.[fcoLUr_gGIsOqNPoFfMU_9%5g\Y0b<bhb';/Oa&Yodre"k^B!'b&F3#=:UU$cND+O4,GTN"pGPFbco8lft;9Z-4;nS7thS31g+m)kMYXHuN9-IArtA0R3&DRsS`%M8-$WKUb./'^Y$r"V\""[K.;,8Gk8)ALfc9U2b@)cH!aYAnIWX_3RcuDF^5hfY&gO^)"C*q5lrWG$rc]+4[AW4MsiZAnFdSCkCHN%QpO$:J*f'6Ona.mb#X:!9JDItbD2R]*knU()"-!B*N[dA\.Am404eG=KjGRA.FW%/(l='-ki/[O\6^[Z\:Q6kl(ZHua[glEkV9]1%rG9pQ0@?DWL3&$PQ;Od]7%SnWpqHLDf66WFqHmRM`t)D+eX;J52<U?\8]]&)<Pe*9Ge[llR-"g*Q18J+a,3s(P369mkEiq?[/d:H%=tln<[\]o0jI3^qm/aBF92R*f'ib[d,Xdfj"bSM.R@mjNiM:C,T4B1U75I]A7nt6oYG[Cq59bohUlbY"DkJj`e$m]uTl8,m<UNA'%5K:puVTmCONG+,MD7!^'7[T"CV&mnHVKPO3RL"biRIsps="j&h,YuhlK4na;B_h^;`tnK(\rFP?[hhk7B=6GdA%,t],!Eqt6+*sO%6.rN%-iM*FQ)s&WR)\s`\p\ke_Jb\oa>O6sK)PTS*N';=q5l^AX0$R6]"k\"cc'gfYnV(4&[`WBS/!16PcZRilR1(>]3N1<b\\a8%ON&Eu(e[Ou>*68RG+[#7:h0aN310FC(h%ESmsBBo)6b;p_2nt4,&02c3%I8J.9gL=@!^*NT5NfZ=;%lHO>:X7/Y7_6Zj^cQiImu?%Juu.;#0DZqMbGBa3ebR%AnWOV*GRQl,2+C`d;K\XZg/"OR>J+9("!T"%"%V+:+t$Wlm3q$m\]R;3TWiR<l]otKU@]hVQaG>1Fu5L%(&)rR+1G=WU>mF9-C6g?P7\H7";VEOIdQ"6i@B'A<5.rSFo(I=nLGod``S:hKLi>N?lO`A@Y45Z),C<b`@G*5F"r[GbMRTj.a7\J%9ZYVbfQG2>6knfP'ArSCFWJ,$^XM'S+s2.gGe^]fe`t68%l73r_CoN&2b;'&d*<>FTDL-G`Y4M2<jid0Ps$MD@t&]hA<)9l5mr>I%c<)I@A.:DfECrSK2H>@Ki=6=OA4;V21C7K4Aq<dq=boo:=b]j0BQ6XFEa2;UluEat8K92F,)nkWX`&[cf:SdV_6e3%iX((r:;U&e%D4!m#[G20fnBF?8L%B8LNjDZiU>I.5VNu/lj[O\[7p[JOQ`%T^c2AEL&.^\n>C;Idg"]A()k6_]BlgmNSKg'Pr6++BM($7#i@NMg%VeefB75W:BhrOs\)6;j:UX!/kHLF!O+b^_VOM,M.eFIpdmbV)F-B4Aj@Nf4Z\q36/c:$0udpNs7ZU6Y!6prk,/U,mS[sZCX0F!ZO%fWh;C)g(TG/iSL>UmBWEpnZ]7X:F;'LrbD%lO!iU4#9_=cf8.[:JT$QIZrtM]+"YCS3OaBLh@Yg&;K%b>`?U*duWTfG`_COWPa'Y%_-X.hMYMj]K^=S/)r!+X/KX?44dc!:G"G_TRlo`d\6*C16SD`"[,S;q@U58E[Cn1uCqOGV&lJss&2.=B]QB:W9,C'u.i2KklW^r;%U1%qbY#r2[8fP!B;"SOc<O\\-I=G^1]UX7e,12Vjmn6ujcmj@tYu+^\)3Is,_4^!nQmP:g1u@<gPJ!(/iib^)4m(@/*G`X&^7HL-%n`1L%9NI\S.>k:#R9Auk/_YS_mAd7"PdcO+J5;8YGjI3qO+n_"#=uHP/%I7/EH6KMqrn?D5I<,E(q-#YZt6`W5N0oRU=hd'L-$\!%[IT;JU/jH&r1/P4r1-,AV*g;U4[f0X/'ULNj6Z?6An<)sB&f#*/\PL^lcC$L#Y0dEe-duIF93VKpRp1m`)[OtMMOg=bXN]YS$H=U%M4u)1hns.f,'h:o:>&6gMeS^;7jLL`K'@"h@k<dWTg?i@>I`6Ih4@9+^PA;'_.mWO-8?*P%8=T7-t=TgdWda:gXmn-GUfM79J4r$%burc!4t5-U2'W]U7ZoS8&gO:VWRND%bk7\X>g$ko::?PPd[V8WJ?ai"JXKPDG'U`#=(:kq<gtnQ_)0Fj2q^\]b\-W>_'!;++iF3j%;XQ6uN!i^2h@2+4W7m'">n[O,8n#OYALJa[*I9P8,2+DK*@2,V7-!WS&SnE>7?P&&M#+MbrRE%gf62:FP<<7-eZ2DFlK9K@+]@YW%(j,`#"R/,]-[@uS,b(Z7?a'qpbBJ6OHPG2\=MKfc\a7Nr)Q^nbZ`d'oKJmX7o&\#+D6fU*h>ZR-FfIQ*X4O<p(G%RUfm!MI=IYAN%njlf%RS8dAjbAuRd+(@b1&`dEp9X)M+DPe?=9$'q>@UlWq^`p9rdg(!V\.C0+&Bd+qLRlD:$a]>*`MA<^=9&[U,3%+S4k%2l_`Z8%]@7U]U,;7:mo7r0C9L5J,Edm4(rTqldE8Pjde$P==/@c*XCgVu,h$7DH'"2NWoP60#1:G^LlF1u/dF9VCm:pJI/JQGlB4"9XY+C!%-Y[);Cb/9,FY)QErR"B^8:HJ1S6`kM9OP=Zi!\,BlJol+739hQMmihc+ArB%2_H?A1fB*9&QNB4!WWX,INkN?T1?47TRF,2r"d[>%]8R:Pb`7l8@)8Mt(GR]kqEaR',&KmCP:Bs.j>,,D7`Xa5^*GHXRD+8=bE#%hqpT4I'2Uk-/,;o6a6`A>?LW)VVn7OlK=Z:Znf!u\%m,A2\W-QSj]B][I8$Rq8(oaGB+p7*m="s9E.n&T0=,'YO]Af'VjL:Mrg#\443uJ4hO\sIH)$TDuN.UcE-tn[#K(_r/6$m,VZq!SO%HRGS]4YdAu,GX0O^O3W9N>48AcZ1+oH1bg\O3?>UZeWSU6iS_3ENgqeEF:9jEQlcobC*Wmet;%j/q[m"5)oZQEZLK)jYdT*j5bH:%bg<8[D*`CjURQX#FnsBRFW<J0o$NI1aGfE,MTnsde/X(uUMYr#Ul"lnH8n.CG"PeW>=?BYR*CI>MA+m++^](tHeZQ)[ZsR+RhO[[%[`Z#.U5k5:s6[0P6-N=b$hN%6QF#H7Of[WNR)Z,q9a7U-_Ze6/_#9uhl-VRP?6VA&%`@hB_,XVqc_g='^X_mV&Ci5S63U#CAXuJ@%A?3VI='urEQCm7bFcY*Z/!ln2bKW/ETQk&?iVm_,g%">E7@[Y1EO)[C'CV$MN9j`XN,;[7bf%G,O6>k;HR11':82`Kq$ukP$E?g5%_9cIDhCCu-G=GgU6B8[q1+VCJ10PQK&WmXtbq'^CCDJ7=i:Lu'doh']Oo-!B34me'ZGes7#$"EJ!$U.^YGB*"r@+S&^:'aj,-fCE%6'APc6+4+Y-?7AkP-!`QR)[80*rBE67Le;aL/./fTJ^pOHgb84Z[XnQ_Y5>PD"::>G.SR6XogXf)I@<DT8a-$Jj/X7.!:.qrl@\q%MeS\!1HBT>j%jJ"rL[TuKHP0@LlN2cWk%I?*=6A?etpVboj,rN;.&L<U&/mS6AOb[RefPkQXnWorWL\03@4m&abpjY$3hNAaN)Du%$u52%"NbG-.tTmGf9>G>2VKV9.3]oJa=.s:F:&\WG!);eG`#9PP2@H%B?,8"W\.*V=tl1[7QaZs-$_>,Mu^j^H%:m5%2P5EC3!;\%QmPn"TK'8c.,curb<.qZMa?`qX]AMgJ8(N\rmEZMMj-\@9Hi:.d:JdBY)'6Ed<A$$A[VCM"&k3LEXu0F]KI'.9H+Vh2;G'>FSS=o%UW.46c!td>5JpF,Rhc\HXTn3a.5"iPNM)h)Zb'j9gkOam<E;6\Rn/?]#S[]<"q&hr':Hj=cN60S,P`pcEH_/G6Bsq)$'m"nBT.XY%<$nU;gV$p,LJ"uBJrl&,/?V'<XL=XXGm%NZNun^PUo$g/6<S[R:;uhu8Oi8S7-!'/EuLm3BS]98c5re8TlUXEM<IW$>OcZC-6a'O%/.``"RYY^6*mU41G03jSMjT7P]dBIDs"1&@)7s#5KUhLE[[!+S9FN:H'@CBf'QXj(3L/H6lp+UCR%eS&ek:!F+sdiW7e3$:O4iWI%c1E6=+r6,EeZ1u0'T.\5rkGEl.TOF>m%c23D!'O5RY?8Vc%79\RD8m3__RH5&W8lZP0[SUB9o#!eco:kZ!`YKN06#FV''t!2(BDb%g3L6AW:WqfXD0SU&?-?Z$sJC>$$qA<4K0M?Y@qLnan1rBcVh8qp6'9O.r?^#DL5N[qdfdIfQ#/r!q*]/Vq#nJ\su.i]OD9.3boY:%`?*52[U#'Hi_0>+NK_Nj>J9O="Z+/hdoj<Jp"e/$HgbARG1I.OBsj"k3@!C5)<9;i9\`s"4E&+''s6g_R3(tCa*Yka,4^Ca94P&s%"=?m7rNFon'?`<3m9=Z.=i2n'Wtbqb+sO7kPXa#O!Z9DUT%\hm2VTk+8oBQ$S6UNA:Ac9j%BX#O@MYSrr0+G4=aXQH&+=CLELE:\%O0'=IG`,.L)O(sFD9N>#>+LrKe.Aa,,qF6nVK%'q$"L!12qrqo6U$klWEo/4]ZRP35+$b4X*rd2)t@7h(jF&1dOn_`Q+aW=P*I"7%d5\ZFlL%p'-'q[eLto+<aCmdhKGPeXHp96]L,XQmY*']PXHeTl`9RgtiNCNm"g8=]Xh<YVXQ6gW`lYL6'sS'ZjV81:GEIO/^\nk_%Mj.[nlV\5HlCM=d>*ql1+sGC<1Brt''2]"\_c\Qe51sUn6!s2AF3?r3L6S3+@:>+K&Q;'2[u)Q-J:N(9\He%grgl2hWu2;$R=r)g%6C95I`2)Z)NE9jGjHZk2\XCJ5Yt.RA%>kDt@k?fU(i_mLkPfR.9L_<9.'=7>G"%mQIqI(6ED4Fj6THK&\At@)-tJYY'Imf7#RZQT%bOpe*;%)M$$t8?5]36]C`PR^tRe?7JHI<m+=WQ9cPK/46fto.ZB-N5lGrSIZaX8%TCCr_lQ3C3#f\.P7^@[c&@$.sB^Osq,VT53Q%]R<+dAWKLk5m_/AYDO&ubn_WL(bbn0Yhh>@-)Sf6RnN*j4<P_1'X)$ncc%`dO#t\3K*tgD(@)>i>[ibQ]$o9eaLaN^h*!JSO&l"X%11)C`);,`H0t+@0?;(f^p_p<7=C48>7W+,rS/aI58EE""Qu21V54uafi-YDi]ehL"$06O\KC:]r<jIO7S4_!`G%<qILn[`j[m)7G%/@>:OlElN22L3<Qn_f@@FpTB/%!mYJ7R^JXiK@picV#-1cFYL0Vq$1c_MClTUfLU%`dC0/V<hV.Nm`a&-ecXYdQAkCDtAYAkuga=%$AR,K&R(%1,!LeVo/^N?BO(uYLY3p(SRT"ig/Nl]W%D5id(HJ7`EcrcY9"4q`t*>#;"5Jmce7EK4o;V.#MU)!kJj6Q;sMY@p>T4u%pQL$r`%.n;-Y5EnVpEJ2ZA#E,,!iU*U"++?o>'J;i]M0>%\h#11?iZ%Xlt'jkDdj1Pd_)`g(ioC;$W6\?6UJ<Yse#?D8l-k1C937%Hbjl;X,1OX6CW_aPk-5oBLAuB1<b[`b5(9Ool,Lb`AV"XJ?dI<3Z.s>3S\^1![]E[YD#N'b2Ec6Ls8==FRsH(LQbN6L6LAlL)]9@%9@s%*_UfNsT?Di',gGFW2pPS=pp!oJAVlV1-DXt98;JU/LjkeKF4"ZmY?d==3r\6\\`GJlTc9..70FdK,HC2f+dOQ";5'?6'.8[]%4&]p+[4rPS6irl,@Z:+'-=R=<LNB2GSWX`D(==hDbaZs"L(r\U#48muUW`*+jPbFPh17mO]M^75<Fhl:(srVOVH^m0r+7.Q_g+(S%aOqkBfkiK--MMhBC6")e@iWD,'ui:^W,Y5D7itmYNlurELa++`(rn<D@iZW:&J9@9X3FW_?lJ4KU;tKO]\G[*fTnkP]cY7ckO\ST%d/&S^X/LkcGT^e(D8gN*&IEFRE+A82D'F--pMfOBDPq"k^Vr%T/m#7"f*2(7)<4dE>-@P+6=6>Ga9ADfSsCCtNfA4`9I:D3c]^)4%=NlFoO%.UMaWAht:5`\R>&HW,MNR4*8e>#%H>Q\Y<M0t4SB*IZ_0U\&^!F%j>>:9m"OSL"9<?]2G`a6el2Z,]Ws.3%>A59j)Q&fL%6*"cjGYC#],(EJ=J2.c$!(PYZ_N[3TP=(sR>Dc9_oB(HSGRR-UY@*Ie1CmFbb@&a*/2#&E['p%_3&gOG=]&(N-e]+7rh>$8:U#uf%?u/ql)HK]BC_r8BKZ.i=hti2/+O][.(_lrV'3"tTGgZpM?HJ(bKBP$MG$`6Am1lWalF[+uCC0+/Hp9bW5hL;JnX-EVGp.d0l?Seu%eU[glLl>`OCqKbL9*q/-Ko'h;*m^QKEf*?[Rm`=jj`@QdNKW]](_h2#SnCF,5_!W/p55)VDqic<;FYC^8KoBWdk+ZomM7#'GA&g?%MV'3nfkp4@k*Ec&6e<]B0F=J0A+-ta2sh<*loe#tP?mQrHEWOHrO3LprQI[JqMYSFQQ%_Xl-\No&(4e;MK9BW0Y,erPN3ho";OFV%$)mKpYD)'\rC*t'^H*\S6A7lr<,j`,KcW+?eKF7BN@kIP5r?e;"$\U9gCf/j(j$`BW<W"AHAkOfoKe(jOfnjWAOJC<&K-^!A&4hu%BI6>7C:I:O/*Tt_KpD.s7$$#4k^$<N2Da_(Z%;k]3Uo41kca-eF!fUJWtWff[5d[r9VqNTM=t"",0p[C1SJT<LJqgnqa?oZC$/kA%AsTpKgj4:K/f9o,83K4&RZh_.DKWWp8#cZ;gW58AAhsb@l<,gBZ%\%jGs.aGpt@6$a`B1ro4'$('u<ai:+!nebrXg2[PFLs^E\#]%>93E?:7Uun`<m)0)0+<L(nrl7@R.uO3UC7RBI1F01JTN/A2[l(8799,mM@TX*7.R`Ya5_>BR>@+ik_e%Z<;Pn"H<tLp(\"aIYESB%Sk&BJCmSZY\&C1!Njl&%:n_-c1$H=DVCaqUQBH3lnm?ctfEV;MaITF]KP)VTdW-iT']08H_VuMo\%"gr?7deWOn9$K`qa1fDgF=;%1r_G:>nc7p+_?o"NX[Fa.FLjVb$MmUdZDn5)c@Sa-V6%tfqa@D6V@/B)nSh5a5knP$0^NoFCC9AMbjcEfk,Yu%r0**E>ged.nrK,%66ou@0^.:,-:m*\nKaK']V:ZS-duRS)$N(+AhL7VXB:d#7T[[&KX.n21VSWm0=SO41C>OV6AqtSr)B')!)#EXYqT*5$]?r$f]!N>%\R[5$/Z*N.+!Hl"<g@"!N@Dl]ZJ\Drpk;^^-!EO>FA5f"'7RbS3H966^-_(l)6F^;U@fGMbI3t)PoM1!3'6QDo(-Dr\Un\.%;*(/%MSo*dB^2J[\BN6>[Q9p4QfmeSM.\q()d@U3("'mnY_H'bW&R3rqb<s.m$KmX+ZkQ8)+.#&m*,(O@Fea$g!8JepO,546X0(\23STJ%gD(,gH%cQ]HY#=9pD'lFA^AKjQlkd^;6bVL@udf-NGdkrbm5rgjJ,4:hUl/gn&NsE2C"kpoKV<rEtT?Ne1o"rN^bs>g0BZhG\>7S%/3,"$q+[U(m.a&Fh3RpM*2Ng?`h9).rl-TY`7ADXSfQ5/O!(%&CkrRjSWu:21#dWb`n3_q7-lbgdG0eu0$-_'MeS\$^K/][R%9Bl%CgeYJdnnc`D!O`b&"/X+PSRID^*<]COP)YI_C"DUPA,_m]uO>'E,VpjA^AKjQsU'eGP5L7Zud7VZ/A@rgB0'1Pb[QQk(BMBQ`Wqc%[9D4B:eX2&/`":\qmO5,BOr\m%C`q-WLU7/*>d*_]::\S;-5ra@$&(fbrbT0R'OHHT+;q/Y4@R?11]O%d(O.e&]r]DUZe8*.#d?:%/>$RACdkhToUK0(8t'=GGSb!$GA)!b_N(dEbn_n5f_:YtEDa6hm]`pafKkfk!dkkuN-Aq^i\d3\o4=G_P*Pq\dl=t01C@J^hPq]1%Rl8jD.O2@+b-pB5Y,oU-eU%)\SkMVD[q^ldVIEFmWl?Q7X7FD6FIYbZjB`de>!&oqgXq%@Z?YdCC@OF\%CHpTMjd4.HT!"#kZo?8%`Wi5>cRVaB@foU@NO'R=!Nib?Cotkj)AcjsRbbJM$^`F=A2Uo;+daT80%9q\\T-R4=X`qpe5`CB(7#>(oe"\$W;79U-*4HM4c4ed%280lD3N;@JS^#<!n#?#oVsZJn#)6==mh$"VMY6qP0](:,=>]tY8#a74C$`h0+mW4+ra%,tZ@5g=Y?F-'Y;<2EpTO5bO+04:^\IHU%n)+-@rY'_ZGMdiFoT.mWq<cpDk'qgLor"F2oAun-hZ#_lDkI(-qes7H*J)!$nG%F0qnN.+b7?]6oR@#>qB#H^QE:$6agOE)p'71n%Vg.23aUc+$3O>&CQ!Sj\/69qD^%dgpXHlk4nL:eH/Z\O';eE::^.9n@k?0AAl,>mH8(mp4cf4JmI!j4(-/%r=,[7-18G;r4bs25+%rptL/IgE1,[pOQNn,;p,okWS,=F8&4_.%K>T;;A3q_.-^<@cqDn8H'fL[V8Ss6K[OdJGO;;WOYn>F*M-rp%BVpQF3R+o]ZghI5_[%>[<84^]3hl%Jmgl=APOVDpQkY+m<3js7WL;pgTKLr\Mi*I44Z<noDb&L-j\mmiLj9U?V6\)#ru)n*p!I\sQ1d'DK1]J%ptcH0mf]%2J"&eHP$5==7<B4(u\3hb&-m0H_(%P@]Yo!of5OfrRDPhhS],,^NtYg7L@o&*J&t4>ZG2H@JGXo#`Hao4j/GJV#C*PV0g`V?S)Xd%/7X)mi]=JL(9CX3?!6ODWh7;2jhpt^)&:=ZCAD/t5ND=H]XuMbc]\5UpD(jnhH0W+Xam"*\:-Q<]Pl`s+me:s/!^@.\?qMKXB67>%=R'TMQ3Ae)HCCk+`iA.<qj/08b>;31VaqBb=0&Y##K$'K<o,n9g\7q=^YL"+/AJg3qboZ$n*X+\aSt_IB>=BBa5;=F?[r%Eqd4jM%bno:9mUlFaQeQ\%*.IVGMm(udo])QMDa43s?bcR-qmW2FqetA>q4"jcrVBUqo)2qNFJ&MPDnj?\(Z54->2?*^+#Nik:]DA=5Iu?H%r]blE?@V_8DgqBQUS%JF`udPFgXe[epA6M[]emC:%6r)2PAe59rnFX*n8IapeNrQjJ+DR)+9-H[jkkOYjkkRX]2.>_eR*b"m'H`^%`NMK(ik$jmrRIh755a\)?i8eWDdRn`9apa[?gn$@gTS?goUGaHpZ_'(s75Ql#BKhXRXb%ahu:ONIJ==snkAZ~>%AI9_PrivateDataEnd