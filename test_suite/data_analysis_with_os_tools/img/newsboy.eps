%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: newsboy.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Manoj Bhatt
%%CreationDate: 10/4/10
%%BoundingBox: 0 0 272 193
%%HiResBoundingBox: 0 0 271.5879 192.3125
%%CropBox: 0 0 271.5879 192.3125
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 10504 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFF52A87DA852FD047DA87D7D7DA87D7D7DA87D7D7DA87D7D7D%A87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8FD057D7E7DA8FD057D%7E7DA87D7D7DA87D7D7DA87D7D52A87D7D7DA87D7D7DA87D7D7DA87D7D7D%A87D7D7DA8527D7DA87D7D7DA87D7D7DA87D7D7DA87DA852FD0EFFA884FD%1AFFA8FD15FFA8FD3EFF7DFD0FFF7DFD6FFF7DFD08FF527D527D52A8A87D%FD38FFA8FD36FF7DFD07FF7E275259527D7DFF7DFD6FFF52FD08FF7DA87D%A87DFFA8A8FD38FFA8FD36FF7DFD0FFF7DFD33FFA8A87D7D53FD047DA87D%FD31FF7DFD0EFFA87DFD30FFA87D527D52A87DFD05A8527D527D52FD047D%A87DFD28FF7DFD0FFF7DFD2DFFA87D527D7DFD0DFF7DFFA8A87DA87D7D59%A87D7DFFA8FD22FF7DFD0EFFA87DFD2CFF7D7D7DA8FD08FFA8FD0EFFA87D%A8FD057DA8FD1FFF7DFD0FFF7DFD29FFA8A8537DFD1EFFA8FFA8A87D7D53%7D7D7DA8FD09FFA8FD06FF7DA8FF7DA87DFFFFFF7DFD08FF7EA852A853FF%A884FD28FF7D7D7DA8FD0CFFA8FD11FFA8FD05FF7DA8A8A87D7D527DA8FF%A8FFA8FFA8527DFFA87D7DA827A87D525252A8FFFF7DFD07FFA827527D27%7D7DFF7DFD27FF7D7DFD2EFFA87D527D537DA8FF527D7DFF527DA85252A8%525252FFFFFF52FD07FFA82753527D52A8A87DFD25FFA852A8FD30FFA8A8%FD06FFA87DFFAFA8FFA8FFAFFFA8FD04FF7DFD0FFF7DFD24FFA852FD0DFF%A9FFA8A87DFF7DA8A8FFA8FD31FF7DFD0EFFA87DFD23FF7D53FD0BFFA8A8%7D7D527D7D7D52A87D7D527D527D7DA87DA8FD2BFF7DFD0FFF7DFD22FF7D%7DFD09FFA87D597D7D84FD0BFFA8A87D7D7D527D7D7DA8A8FD26FF7DFD0E%FFA87DFD20FFA87DA8FD09FF527D7DA8FD14FF7DA8FD067D52A8A8AFFD1F%FF7DFD0FFF7DFD1FFF7D7DA8FD07FFA87D52A8FD1CFFFD04A8527D537D7D%7EA8A8A8FD09FFA8FD06FF7DA8FF7DA87DFFFFFF7DFD08FFA8FFA8FFA8FF%A87EFD1EFF597DFD08FF7D7DA8FD0BFFA8FD19FFA8A87D7D527D52A8A8FF%FFFFA8FFA8527DFFA87D7DA827A87D7D2752A8FFFF7DFD08FF52527D7D52%A8FF7DFD1DFF53A8FD07FFA852A8FD2CFFA8A87D7D527D7D7DA8FF527D7D%FF527DA85252A8527D52FFFFFF7DFD08FF52285252527DA97DA8FD1AFFA8%52A8FD06FFA87D7DFD32FFAF7DA8A8FFFFFFA87DFFAFA8FFA8FD07FFA87D%FD08FF7E7D7D847DFFFF7DFD1AFFA852FD07FF7D7DA8FD11FFA8FD37FF7D%FD0EFFA87DFD19FF7D52FD07FF527DFD0CFFA8A8537D537D5259527D527D%527D7DA8A8AFFD2DFF7DFD0FFF7DFD18FF847DFD06FFA859A8FD0AFFA8A8%7D7D7DA87EA884FFFFFFA8FF84A8FD047D537D537DA8FD29FF7DFD0EFFA8%7DFD17FF7D7DFD06FF7D52FD0AFF7D527D7DA8A8FD05FFA8FD0BFFA8FFA8%7D527D537D7DFFA8FD22FF7DFD0FFF7DFD15FFA87DA8FD05FFA87D7DFD09%FF7D7D7DFD1BFFA8A87D847D7D527D7DA8A8FD1DFF7DFD0EFFA87DFD14FF%8459A8FD05FF7D7D84FD07FFA87D527DA8FD0BFFA8FD16FFA8A8A87D7D52%FD047DFD12FFA8A8FD04FF7DFD08FF7DA87DA87DA8FF7DFD13FF7E7DFD06%FF7D7DFD08FF7D7D7DFD2BFF7EA87D7D598452A9FFA8FFFF7DA8FFFFA8FF%FF7DA8A8527D52FFFFFF7DFD08FF52275952527DA97DA8FD11FF7D7DFD05%FFA852A8FD07FFA8527DFD10FFA8FD21FF7DA8527D52A8A8527DA8A8527D%A8F8A87D522752A8FFA87DFD08FF7D527D5259A8FF7DFD11FF7D7EFD05FF%A853FD08FF7D52A8FD36FFA8FFFFFF7D7D52FF7DA8FFA87DA97D847DFFFF%FF7DFD08FFA8FFA8FFA8FFA87DFD10FF52A8FD05FF7D59FD07FF7D7D7DFD%0FFF7E7E7D7D527D53FD047DA9A8FD22FFA8FD0DFF7DFD0FFF7DFD0EFFA8%52A8FD04FFA87D7DFD07FF527DA8FD0BFFA87D527D597D7D7E7EA8A8A97E%7D7D7D597D7DA87DA8A8FD2BFF7DFD0EFFA87DFD0DFFA852FD05FF7D7DA8%FD06FFA852A8FD0AFFA87D527D7DFFA8FD0DFFA8A87DA87D7D527D7D7DA8%FFAFFD24FF7D7E277DFD0CFF7DFD0CFFA87DFD05FF7D7DFD06FFA87D7DFD%0AFF84527D7EFD18FFA8A8A87D7D527D7D7E7DFFAFFD1FFF7D7D2752FD0B%FFA87DFD0BFF7D7DFD04FFA852A8FD06FF597DA8FD09FF7D7D7DA9FD0CFF%A8FD13FFFD047D527D527D7DFFA8FD1AFF7DA8527EFD0CFF7DFD0AFF7D7D%FD04FFA852FD06FFA952A8FD09FF7D52A8FD2AFFA87D527D52A8847DA8FD%0CFFA8FFFF7DA87DFFFFFF7D7D527DFD05FF5252527D52A8A87DFD08FFA8%7D7DFFFFFFA87D7DFD06FF7D52A8FD08FF7D7D7DFD11FFA8FD1FFF537D7D%7D527D7DFFA8527DFFA87D84A8F8FF7D7D2752A8FFFF7D7D52A8FD04FFA8%595252527D7DFF52FD07FFA87DA8FFFFFFA87D7DFD05FFA87D7DFD08FFA8%527EFD38FFA87DA8FF527D7DFF527DA8527DA8525252FFFFFF527D527DFD%04FFA852A87DA852FFA87DFD06FF7D7DA8FFFFFF7D7DA8FD05FF597DA8FD%07FF7D7D7DFD11FFFD04A87DA8A8FFA8FFA8FD23FF7E7DFFA8A8FFFFFFA8%FD06FF7D7D277EFD0CFF7DFD05FF7D7DFD04FF7D7DFD05FFA853A8FD07FF%A8527DA8FD0DFFA8A8537D597D7D7D59A87D7D537D597D7DFD04A8FD2DFF%7D7D527DFD0BFFA87DFD04FF7D84FFFFFFAF52A8FD04FFA87D52FD07FFA8%7D52A9FD0BFFA87D7D527D7DA8A8A9FD09FFA8A8A8537D597D527D52A8A8%FFA8FD26FF7D7DF87DFD0CFF7DFFFFFF7DA8FFFFFFA852FD05FFA87D7DFD%07FF7D7DA8FD0BFF7E7D53A8A8FD09FFA8FD0DFFA8A87D7D527D527DA8FD%23FF7D7D527DFD0BFFA87DFD06FFA87D7DFD05FF527DA8FD06FF7D52A8FD%0AFFA87D527DA8FD0BFFA8FD13FFA8A87D7D527D52A8A87DFD1DFF7D7D52%A8FD0CFF7DFD05FFA87D7EFD04FFA852A8FD06FF7E7D7DFD0AFFA8597D7D%FD27FFA8A8FD077DA8A8FD11FFA8FD05FF7D2752A8FD05FF7DA87DA859FF%A8A8FD04FF7D7DA8FFFFFFA87D7DFD06FFA8537DA8FD09FF7D5959A8FD10%FFA8FD1DFFA8A87D7D527D52A87DFFA8FFFF7DA8FFFFA9A8FF27A8A85252%52A8FFFF7D7D7DA8FD05FF7D277D277D7DFF52FFFFFF7D7DFD04FFA87D7E%FD05FFA87D52FD09FFA87D52A8FD37FFA87D7D527DA8FF277DA8FF527DFF%5252A8525252AFFFFF52FD07FFA8277D525952A8A87DFFFFFFA8FD04FF52%7DA8FD05FF7D7D7DFD08FFA8527D7DFD15FFA8FFA8FD25FFA8FFFF7D527D%FF7D7DFF7D7DA87D7D7DFFFFFF7DFD0FFF7DFD06FFA852A8FD05FFA852A8%FD08FFA87D7DA8FD10FFA8A8FD047D527D527D527D537D8484A8A8FD22FF%A8FD0DFF7DFD0EFFA87DFD04FFA87D7DFD05FF7D7D7DFD08FF7E527DA8FD%0DFFA87D5259527D7DA8A8AFA8A8A8FFFFFFA8FF847D7D7D537D7DA87DA8%A8FD2AFF7DFD0FFF7DFFFFFF847DA8FD05FF597DA8FD07FF7D7D7DFD0DFF%A87D527D7DFFA8FD13FFA8A87D7E7D7D527D7DA8FD26FF7DFD0EFFA87DFF%FFFFA8A8FFFFFFA87D52A8FD06FFA87D527DA8FD0BFF7D7D527D7DFD1FFF%7D7D7D53527D7D7DA8FD20FF7DFD0FFF7DFD07FF7D7D7DFD07FF7D7D7DFD%0BFFA87D527DA8FD27FFA8A87D7D597D7DA87DA8FD1AFF7DFD08FF7EA87D%A859FFA884FD05FFA8527DFD06FFA87D5284FD0AFFA87D527D7DFD11FFA8%FD1DFFA8A8537E7D5352A87DA8A8FD05FFA8FD05FF52FFA87D7D7DFFFFFF%7DFD08FF595252527D7DFF7DFFFFFFA87D7DFD06FFAF7D7D7DFD0AFFA852%7D7DFD15FFA8FD23FFFD047D527DA8FF52A8FFFF7DA8FF527DA8535252AF%FFFF7DFD08FF7D7D525252A8A87DA8FFFF7D7DFD05FF847D52A8FD09FFA8%527D7DA8FD40FF7DA8A852527DFF5252FF52527D525252A8FFA853FD0FFF%7DFD08FFA87D7DA8FD09FF7D7D7DA8FD12FFA8FFA8A8FD097DA8A8FFA8FD%24FFA87DFFA8FFFFFFA8FFA8FFA8FFFFFF7DFD0EFFA87DFD06FF7D7D52A8%FD08FF7D7D52A8A8FD0FFFA8A87D7D527D527D7D7E7EA87DA8A8A87DA8FD%047D527D7D7DA8FD2EFF7DFD0FFF7DFFFFFFA8A8527DA8FD07FFA87D5284%A8FD0FFF7D7D527D7DA8A8FD12FFA8A8A87D7D527D7D7D84A8A8FD27FF7D%FD0EFFA87DFFFFFF7D7DFD07FFA87D527DA8FD0DFFA87E5253527DA8FD0D%FFA8FD0FFFA8A87D7D527D527D7DA8A8FD22FF7DFD0FFF7DFD09FFA8A87D%7D7DFD0DFFA87D597D7DA8A8FD0FFFA8FD17FFA8A87D7D527D7DA8FD1EFF%7DFD0AFFA8FFA8FFA87EFD06FFA9A87D7D7DA8FD0BFFA87D7D527D7DA8FD%2FFFA8A87D597D527D7D7D7EA8FD08FFA8FD05FF52A8A87D7D7DFFFFFF7D%FD08FF7D7D595259A8FF7DFD05FF7D7D53A8FD0AFFA8A87D7D5384A8FD39%FF84A8A87D597D7D7DA8FFFFFF52A8FFFF7DA8FF597DA8525952A9FFFF7D%FD08FF52525227527DFF7DA8FFFF7D527EA8FD09FFA87D527D53A8A8FD41%FFA8A87D7D52A8A852527DFF527DA8277D7D525252A8FFA853FD08FFA8A8%7DA87DFFFF7DFD0DFF7E7D527D7DFD17FFA8A9FD04A87D7D7DA87DFD04A8%FD28FFA87DFFA8FFFFFFA8FFA8FFA8FFFFFF7DFD0EFFA87DFD08FFA9A87D%7D527DA8FD13FFA8A8FD047D527D52FD067DA8FD067D527D527D52A8A8A8%FD2FFF7DFD0FFF7DFD05FFA8A87D7D7DA8A8FD11FFA8A87D7D52FD047DA8%A8FD11FFA8FFA8A8FD057D7E7DFD2BFF7DFD0EFFA87DFFFFFFA852537DA8%A8FD0DFFA8A87E7D527D527D7DA8A8FD0DFFA8FD11FFA87D7D7E5253527D%7DA8A8FD24FF7DFD0FFF7DFFFFFFA8FD0FFFA87E537D597D7DA8A8FD29FF%A8A9A8A8FD047DA8A8FD20FF7DFD0EFFA87EFD0CFFA8A87D7D5259527D7D%A8A8FD17FFA8FD1DFF7D7D527D527D7DA8A8FD11FFA8FD08FF7DFD09FFA8%7DA87DFFFF7DFD07FFA8A87D7D52FD047DFD41FFA87D7D7D597D7D7EA8FD%05FF7DA8FFFFA8FFFF527DA8525252FFFFFF7DFD09FFA85252527DA87DFF%FFFFA8537D5253527EA8A9A8FD49FFA8A87D7D527D52A9A8527DA8FF5253%A8527E7D7D2752A8FFFF7DFD09FFA852527DA8FF59FFFFFF7EA8A8FD1DFF%A8FFA8A884A8A8A87DA87DA87EFD04A8FFA8FD25FFA8A8A8FF7D7D52FF7D%A8A87D7DFF7DA87DFFFFFF52FD0AFFA8FFA8FFA87EFD18FFFD04A8FD047D%527D525952FD0D7D527D527D527D527D7DA8A8FD24FFA8FD0DFF7DFD0FFF%7DFD0DFFA8A9A8A8FD047D537D52FD067DFD04A8FD15FFA8A8FD047D527D%7DA8A8FD2DFF7DFD0EFFA87DFD04FFA8A8FD047D527D527D527D597D7DFD%04A8FD13FFA8FD13FF84A87D7D52FD047DAFFD27FF7DFD0FFF7DFFFFFFFD%057DA8A8FFA8FD1DFFA8FD19FFA8A87D7D597D527D84A8FD1CFFA8FD05FF%7DFD0EFFA87EFD28FFA8FD1FFFA8FF7D7D5353527D7DA8A8FD0CFF7DA8FF%FFA9A8FF52FFA8525252A8FFFF7DFD0FFF7DFD4FFFA8A87D7D537D7DA8A8%FD06FFA8277DA8FF527DFF7D84A8525252FFFFFF7DFD0BFFA827A8A87DFF%FFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DFFA8FFA8%FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FF7DFFFFFFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8A8FFFFA8FFA8FD05FFA8A87DA85259527D7DFD04%A87D527DFF7D7DFF84FD057DA8FFFF7DFD0BFF7D7D7DFF527D7D7D52FD20%7DA87D7D7D7E7D7D7D7EFD077D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7D7E%7D7D53A87D7D7D7E7D7D7D7E7D7D7DA87DA87D7DFD05527D7DA8537D7DA8%7D847DA87DA87D7E7D7D52FD0CFF52FFFFFFA8FD05FFAFFFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FD%0DFFAFFFA8FFFFFFA8FFFFFFA8FFA8FD13FFA87DA87DFD13FF7D7D7DAFFD%12FF84A87DA87DFD11FFA8A87DA87DFD12FFA87DA8A87DFD21FF52535252%A8FD12FF7D52527DFD11FFA8FD0552A8FD10FF7D527D52527DFD11FF5252%527D28A8FD20FF84527D52FD13FF7DFF527DFD12FF7D7D527D52FD11FFA8%7D527D527DFD11FF7D52537D52A8FD20FFA8FD43FFA8FFA8FFA9FD13FFA8%FFA8FDCBFF7DA8A8A853A8FFFD04A8FFFFFFA8FFA8A8A8FFA8FD6BFF7D52%532727525227FF5227527D52522752277D5252527DFD69FF7D7D7D522752%2727FF7D277D5252F87DFD04527D527DFD7EFF52FDADFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-10-04T13:56+05:30</xap:CreateDate>
         <xap:ModifyDate>2010-10-04T14:23:28+05:30</xap:ModifyDate>
         <xap:MetadataDate>2010-10-04T14:23:28+05:30</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>184</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FWMxfmT5LmaP6vf&#xA;tcRyC5b14Le4lhWOzlaGeWSaONo44ldCBI7BW6qSMVQWu6zoHmjyik1ofrlhJqmmW9xDcwSRGv6S&#xA;tuUcsFwiOKqwNGXdSD0OKphe/lz5GurK4tv0Dp0PrxvF60dnbh05qV5KeGxFajFVb/AXkb/qXdM/&#xA;6Qrf/mjFXf4C8jf9S7pn/SFb/wDNGKu/wF5G/wCpd0z/AKQrf/mjFXf4C8jf9S7pn/SFb/8ANGKu&#xA;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&#xA;vSsVdirsVdirsVdirsVdirsVdirsVf/Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:7939D37151D1DF11AF4DB8170CF9340D</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:7B34222855D1DF11AF4DB8170CF9340D</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helve; Helvetica</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -192.313 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 192.313 li
271.588 192.313 li
271.588 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0.5 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
271.338 170.899 mo
268.188 170.899 li
32.3882 170.899 mo
35.5381 170.899 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 48 /zero putdef/UniqueID 28352 def/FontBBox {-166 -225 1000 931} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 718 737 523 538 688 703] def/OtherBlues [270 281 405 409 -220 -207] def/BlueScale 0.0437916 def/StdHW [76] def/StdVW [88] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/space <1C60D8A8C9B854D00D> |-/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF19407412ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/DVPWER+Helvetica /Helvetica findfont ct_VMDictPut/DVPWER+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero 207{/.notdef}rp]DVPWER+Helvetica nfDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf22.3491 173.237 mo( )sh24.2944 173.237 mo(0)sh271.338 152.95 mo
268.188 152.95 li
32.3882 152.95 mo
35.5381 152.95 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWER+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7EF322448D34FC69162D5B3FA33847725A6C54ED91995E45D690B7D0E476479D9EDB4F61F0B8E7F37F7415ECCEF12BD0BB3A993663B38C8EEAA49F314551016ECC1F8DE4119690672560B970B6156CCA876B5A96262978DF14B4FCFDE401A9555> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWER+Helvetica /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/DVPWER+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero 4{/.notdef}rp /five 202{/.notdef}rp]DVPWER+Helvetica nfDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf18.4585 155.284 mo( 50)[1.9458 3.89209 0 ]xsh271.338 134.95 mo
268.188 134.95 li
32.3882 134.95 mo
35.5381 134.95 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWER+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF327C10274AD9026AD10E2766BF7084C2014D15DE02958A6977C33F9C9651D5788EA2FB530B3EE42DE5824448> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWER+Helvetica /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/DVPWER+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]DVPWER+Helvetica nfDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf14.5601 137.284 mo( 100)[1.9458 3.89209 3.89209 0 ]xsh271.338 117 mo
268.188 117 li
32.3882 117 mo
35.5381 117 li
@
DVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf14.5601 119.331 mo( 150)[1.9458 3.89209 3.89209 0 ]xsh271.338 99.0498 mo
268.188 99.0498 li
32.3882 99.0498 mo
35.5381 99.0498 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWER+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A77988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C312D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1E4FEB02B613916D7> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWER+Helvetica /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/DVPWER+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]DVPWER+Helvetica nfDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf14.5601 101.386 mo( 200)[1.9458 3.89209 3.89209 0 ]xsh271.338 81.0996 mo
268.188 81.0996 li
32.3882 81.0996 mo
35.5381 81.0996 li
@
DVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf14.5601 83.4326 mo( 250)[1.9458 3.89209 3.89209 0 ]xsh271.338 63.0996 mo
268.188 63.0996 li
32.3882 63.0996 mo
35.5381 63.0996 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWER+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF32A47D2AAF8B27A6BD3F3BCF7FF319EB739C72B00D2CC4607F53D8DAA36825DF613C6C839053BC26A7859D8AA158786D28D1E4DE04046CE941E5159199A77FA8129F02A3ECB8D9E54C278D22D0348DFB3C3C73F55886BF824DB1B2BE764C084A332EAF6E03DAE2729DE4723D54D14DE5E36772632D9593B8015D82D91A7513CF83AED18BF899FB582C1516AE5C3CE963C7A9224066B2CB5D769E52069DB2172C52452A135E45CF579C1E7FB12BEA387FFB8E1E9EB90D4F6BF80D4DDA346E7141D8646431020D523BDB64> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWER+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/DVPWER+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /.notdef /five 202{/.notdef}rp]DVPWER+Helvetica nfDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf14.5601 65.4326 mo( 300)[1.9458 3.89209 3.89209 0 ]xsh271.338 45.1499 mo
268.188 45.1499 li
32.3882 45.1499 mo
35.5381 45.1499 li
@
DVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf14.5601 47.4873 mo( 350)[1.9458 3.89209 3.89209 0 ]xsh271.338 27.1997 mo
268.188 27.1997 li
32.3882 27.1997 mo
35.5381 27.1997 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWER+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF327C102745695739194BB3002578E9A13B5CE2A74FD48894F71187E1172491C0FAAFD20337D17EB38BB138C76C05944382F2B2611702A5DA745406DEB5C33C> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWER+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/DVPWER+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five 202{/.notdef}rp]DVPWER+Helvetica nfDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf14.5601 29.5342 mo( 400)[1.9458 3.89209 3.89209 0 ]xsh271.338 9.25 mo
268.188 9.25 li
32.3882 9.25 mo
35.5381 9.25 li
@
DVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf14.5601 11.5889 mo( 450)[1.9458 3.89209 3.89209 0 ]xsh41.938 0.25 mo
41.938 3.3999 li
41.938 170.899 mo
41.938 167.75 li
@
DVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf37.0679 180.229 mo( 50)[1.9458 3.89209 0 ]xsh89.7383 0.25 mo
89.7383 3.3999 li
89.7383 170.899 mo
89.7383 167.75 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWER+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF327C10274AB025EB21CC3BB5514D7A792BCFB0F254664FBEE7353071728231DCE5A09FB578C9A63F4547F469AB016F484730> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWER+Helvetica /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/DVPWER+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five /.notdef /seven 200{/.notdef}rp]DVPWER+Helvetica nfDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf84.8726 180.229 mo( 75)[1.9458 3.89209 0 ]xsh137.538 0.25 mo
137.538 3.3999 li
137.538 170.899 mo
137.538 167.75 li
@
DVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf130.716 180.229 mo( 100)[1.9458 3.89209 3.89258 0 ]xsh185.338 0.25 mo
185.338 3.3999 li
185.338 170.899 mo
185.338 167.75 li
@
DVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf178.521 180.229 mo( 125)[1.94629 3.8916 3.89258 0 ]xsh233.088 0.25 mo
233.088 3.3999 li
233.088 170.899 mo
233.088 167.75 li
@
DVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf226.279 180.229 mo( 150)[1.94629 3.8916 3.89258 0 ]xsh32.3882 0.25 mo
32.3882 170.899 li
271.338 170.899 li
271.338 0.25 li
32.3882 0.25 li
32.3882 0.25 li
cp
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWER+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/R <1C60D8A8C9B6079F1E4D8C18B43D708E4867E1D5DF87FFDFDA59C87E0DAAC2980D72F189A927C7607FB955553C4E4B82FD6E924592BF3E5BCF70BD67C10FBFCC049000E196CAB909156B2D7E5AD89BC25B1EEB84DE135A38029C2647CF918DD0728B39FA4A46AD6169BF8FCD9F6EBD7C686C8458E64ED665C52AFB667727503772603873AF92F5CB568DE59763334D0C676EEF504634735618AF2DDA86> |-/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C2021D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495ACA0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCDBE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553A431EECECF30F5581F5F0240E470E520EB9771> |-/n <1C60D8A8C9B7EF327C10274A017D50E5277BF0D0EBCB370A96BE9DA563254EC441C4BC3817B6ABCAA45C3FADDF2A0C1F1BCD1456474D7370B95E3791CB0774B8A788FAD31DAB8E43BE1DDCC8C2722C438CA874C21003F548D691EAB87ADC2BE2D98ABE47C6EE8D76> |-/u <1C60D8A8C9B7EF325758E576B7BAA1EFA82EFF7976BE67CE506354F22E3D1B078EDAE7715C61BE16B3CD4B647E2C68818E308CF0BE659E73BA193580128E99771A6AFDBFEB4E9486BE6CBE5D0A068E2F3382B692BCB6E47C62554398C9E56946239346863C679F19> |-/v <1C60D8A8C9B7A73DC53FF2C839B947F31C11DB63CB8CC0B0E0518E01B2A8090086BA063BC631F5BCB6255A1F02FF856D> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWER+Helvetica /Encoding getdup 82 /R putdup 101 /e putdup 110 /n putdup 117 /u putdup 118 /v putpop%ADOEndSubsetFont
/DVPWER+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five /.notdef /seven 26{/.notdef}rp /R 18{/.notdef}rp /e 8{/.notdef}rp /n 6{/.notdef}rp /u /v 137{/.notdef}rp]DVPWER+Helvetica nfDVPWER+Helvetica*1 [0 -7 -7 0 0 0 ]msf6.01318 99.5967 mo(Revenue)[-5.05371 -3.68359 -3.32568 -3.89209 -3.82373 -3.89209 0 ]ysh3.68799 85.5996 mo
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWER+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D088E8E1B4A929D159FDB3710FCCC02057052369E6> |-/equal <1C60D8A8C9B7F374CC52CC6AFA2AC69E2626E08155548B3F09D592996A164FA4C0B7A39FE024A3E562036F05B86028> |-/I <1C60D8A8C9B854D0A3953AFD56E13A0A68A3547B5275504502229C694F1498D4> |-/a <1C60D8A8C9B7EF32A0B922DB529D708010F72F0E62F6CA36E98277AFD8C536E6814BFC8F2509E1B2B1B62A6BDA8D1A6ED67728D80620B28FE439D2F57DCEC5483105FEA93379701773DF23A415938C688874994BCC9880105CE27AC2270A13FA38E952045C5E8C52BEF83397E5FBEEFAB993BE33E385A5E36620F7427AB5E4423C6A4ED6DE24A89F54E52C8FAD8A45FAD4B8F6CFD50EB7D35BF120B079B932E0EE2F7685462C7EC6E9B818F0F9E1F7814D04F2B9AAFA6704B8B745452B73181F38CB34F1645F> |-/c <1C60D8A8C9B7A73DE7D498F17521D6359F9ADD96B62202C43AB7E2B6A506D4DE60506EB0B21A851A7E637BA285607D05D1170907CD76EA31977E70CEDA0DED90924EF61C48FC884B70C05F0A56FF474D664DA9646860BA> |-/i <1C60D8A8C9B88C082599D5E95652E4745C17562AE47DDBD30E7054F041D72A7354004D800853CB28271AB7834CF7A2CB132BAFF26EF4E9D89B> |-/l <1C60D8A8C9B88C082599D5E898B54D665A852C4BD97DFF418DFF9C25960C0EAF> |-/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-/r <1C60D8A8C9B81F2C150546EE4CBAAF688B47B2BE559294D5CB0899F2E804995909AC00E005B47DD0AC10879B5BC7D5032F4A9752992A333ADEB05A77287D04AF74FB420D308AD8> |-/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B5837088353D9095E679DCF29A> |-/y <1C60D8A8C9B7A73DB586573D0157E99900164D3426B7076627BC2EECA01286D768DC747555489A92E6150F2562090A782510749223A2D01B0EE6374EEA8FB8F18250484D2C6B565CDCA8D95B100B7B1E0289ED25E0E350438F56B28A332ADDF034CB8EDC264C3ABAA85278C66F3E4B6419> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWER+Helvetica /Encoding getdup 46 /period putdup 61 /equal putdup 73 /I putdup 97 /a putdup 99 /c putdup 105 /i putdup 108 /l putdup 111 /o putdup 114 /r putdup 116 /t putdup 121 /y putpop%ADOEndSubsetFont
/DVPWER+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /.notdef /seven 5{/.notdef}rp /equal 11{/.notdef}rp /I 8{/.notdef}rp /R 14{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]DVPWER+Helvetica nfDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf128.302 190.737 mo(Initial Inventory)[1.9458 3.89209 1.5542 1.9458 1.55371 3.89258 1.55371 1.94531 1.94629 3.75391 3.3252 3.89258 3.8916 1.94629 3.8916 2.54004 0 ]xsh235.185 168.933 mo(c)shDVPWER+Helvetica*1 [5.6 0 0 -5.6 0 0 ]msf238.685 171.034 mo(1)shDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf241.794 168.933 mo( = 1.50)[1.94629 4.08789 1.94629 3.8916 1.94629 3.8916 0 ]xsh235.185 154.237 mo(c)shDVPWER+Helvetica*1 [5.6 0 0 -5.6 0 0 ]msf238.685 156.331 mo(1)shDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf241.794 154.237 mo( = 2.00)[1.94629 4.08789 1.94629 3.8916 1.94629 3.8916 0 ]xsh235.185 136.276 mo(c)shDVPWER+Helvetica*1 [5.6 0 0 -5.6 0 0 ]msf238.685 138.378 mo(1)shDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf241.794 136.276 mo( = 2.50)[1.94629 4.08789 1.94629 3.8916 1.94629 3.8916 0 ]xsh235.185 118.433 mo(c)shDVPWER+Helvetica*1 [5.6 0 0 -5.6 0 0 ]msf238.685 120.534 mo(1)shDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf241.794 118.433 mo( = 3.00)[1.94629 4.08789 1.94629 3.8916 1.94629 3.8916 0 ]xsh235.185 100.433 mo(c)shDVPWER+Helvetica*1 [5.6 0 0 -5.6 0 0 ]msf238.685 102.526 mo(1)shDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf241.794 100.433 mo( = 3.50)[1.94629 4.08789 1.94629 3.8916 1.94629 3.8916 0 ]xsh235.185 83.0342 mo(c)shDVPWER+Helvetica*1 [5.6 0 0 -5.6 0 0 ]msf238.685 85.1279 mo(1)shDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf241.794 83.0342 mo( = 4.00)[1.94629 4.08789 1.94629 3.8916 1.94629 3.8916 0 ]xsh235.185 64.2373 mo(c)shDVPWER+Helvetica*1 [5.6 0 0 -5.6 0 0 ]msf238.685 66.3389 mo(1)shDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf241.794 64.2373 mo( = 4.50)[1.94629 4.08789 1.94629 3.8916 1.94629 3.8916 0 ]xsh235.185 44.6826 mo(c)shDVPWER+Helvetica*1 [5.6 0 0 -5.6 0 0 ]msf238.685 46.792 mo(1)shDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf241.794 44.6826 mo( = 5.00)[1.94629 4.08789 1.94629 3.8916 1.94629 3.8916 0 ]xsh235.185 27.8779 mo(c)shDVPWER+Helvetica*1 [5.6 0 0 -5.6 0 0 ]msf238.685 29.9795 mo(1)shDVPWER+Helvetica*1 [7 0 0 -7 0 0 ]msf241.794 27.8779 mo( = 5.50)[1.94629 4.08789 1.94629 3.8916 1.94629 3.8916 0 ]xsh0.25 lw
103.138 38.6499 mo
105.038 37.0996 li
106.938 35.4497 li
108.838 33.8496 li
110.788 32.5996 li
112.688 31.0996 li
114.588 29.6499 li
116.488 28.1997 li
118.388 26.75 li
120.338 25.3999 li
122.238 24.0498 li
124.138 23.3496 li
126.038 22.8496 li
127.988 21.75 li
129.888 20.4497 li
131.788 19.0996 li
133.688 18.5 li
135.638 18.25 li
137.538 17.0996 li
139.438 16.6997 li
141.338 15.5498 li
143.238 15.6997 li
145.188 15.4497 li
147.088 14.6499 li
148.988 14.5498 li
150.889 14.6997 li
152.838 13.6499 li
154.738 14.5 li
156.639 14.1499 li
158.539 13.8999 li
160.488 14.6997 li
162.389 15.2998 li
164.289 14.5498 li
166.188 15.4995 li
168.088 16.7495 li
170.039 16.7495 li
171.938 15.9497 li
173.838 16.7998 li
175.738 16.8496 li
177.688 16.9995 li
179.588 16.9497 li
181.488 17.5 li
183.389 17.0498 li
185.338 18.25 li
187.238 18.9497 li
189.139 19.0498 li
191.039 19.0498 li
192.938 19.0498 li
194.889 21.2998 li
196.789 19.1499 li
198.688 20.6997 li
200.588 21.0498 li
202.539 21.75 li
204.438 23.0996 li
206.338 23 li
208.238 22.3999 li
210.188 22.6499 li
212.088 23.25 li
213.988 23.1499 li
215.889 24 li
217.838 24.1499 li
219.738 25.1499 li
221.639 26.6499 li
223.539 26.8496 li
225.438 26.3999 li
227.389 26.3999 li
229.289 26.5498 li
231.188 26.25 li
41.938 90.0498 mo
43.8384 88.4497 li
45.7881 86.8496 li
47.688 85.1997 li
49.5884 83.5996 li
51.4883 82 li
53.438 80.3496 li
55.3384 78.75 li
57.2383 77.1499 li
59.1382 75.5 li
61.0381 73.8999 li
62.9883 72.2998 li
64.8882 70.6499 li
66.7881 69.0498 li
68.688 67.4497 li
70.6382 65.7998 li
72.5381 64.1997 li
74.4385 62.5996 li
76.3384 60.9497 li
78.2881 59.3496 li
80.1885 57.7495 li
82.0884 56.0996 li
83.9883 54.4995 li
85.8882 52.9497 li
87.8384 51.2998 li
89.7383 49.6997 li
91.6382 48.0996 li
93.5381 46.4995 li
95.4883 44.9497 li
97.3882 43.3496 li
99.2881 41.6997 li
101.188 40.2495 li
103.138 38.6499 li
95.4883 58.8999 mo
97.3882 57.5 li
99.2881 56.0498 li
101.188 54.5996 li
103.138 53.2998 li
105.038 51.8496 li
106.938 50.5 li
108.838 49.1997 li
110.788 48 li
112.688 46.6997 li
114.588 45.3999 li
116.488 44.1997 li
118.388 43.1997 li
120.338 42.1997 li
122.238 40.6997 li
124.138 39.75 li
126.038 39.2998 li
127.988 38.1997 li
129.888 37.1997 li
131.788 35.9497 li
133.688 35.7998 li
135.638 34.8999 li
137.538 35.0498 li
139.438 34 li
141.338 33.9497 li
143.238 32.6997 li
145.188 33.3496 li
147.088 32.5996 li
148.988 32.1997 li
150.889 31.8999 li
152.838 32.6499 li
154.738 32.6997 li
156.639 31.2998 li
158.539 32.3496 li
160.488 32.8496 li
162.389 32.6499 li
164.289 32.3999 li
166.188 33.6499 li
168.088 32.7998 li
170.039 33.8496 li
171.938 34.2495 li
173.838 34.1499 li
175.738 34.0498 li
177.688 34.9995 li
179.588 35.7998 li
181.488 35.7495 li
183.389 35.6997 li
185.338 36.6499 li
187.238 35.9497 li
189.139 36.9995 li
191.039 37.8496 li
192.938 37.8496 li
194.889 37.8496 li
196.789 37.8999 li
198.688 38.9995 li
200.588 39.1997 li
202.539 38.9497 li
204.438 39.6997 li
206.338 39.7495 li
208.238 40.1997 li
210.188 40.3999 li
212.088 41.8496 li
213.988 40.3999 li
215.889 42.5498 li
217.838 41.9995 li
219.738 42.7998 li
221.639 42.9497 li
223.539 43.3496 li
225.438 44.4995 li
227.389 43.6997 li
229.289 44.6997 li
231.188 43.0498 li
41.938 99.0498 mo
43.8384 97.5996 li
45.7881 96.1494 li
47.688 94.75 li
49.5884 93.2998 li
51.4883 91.8496 li
53.438 90.4497 li
55.3384 89 li
57.2383 87.5498 li
59.1382 86.0996 li
61.0381 84.6997 li
62.9883 83.25 li
64.8882 81.7998 li
66.7881 80.3496 li
68.688 78.9497 li
70.6382 77.5 li
72.5381 76.0498 li
74.4385 74.5996 li
76.3384 73.1997 li
78.2881 71.75 li
80.1885 70.2998 li
82.0884 68.8999 li
83.9883 67.4497 li
85.8882 66 li
87.8384 64.5996 li
89.7383 63.1499 li
91.6382 61.6997 li
93.5381 60.2998 li
95.4883 58.8999 li
87.8384 77.8999 mo
89.7383 76.6499 li
91.6382 75.3999 li
93.5381 74.1499 li
95.4883 72.8999 li
97.3882 71.6997 li
99.2881 70.4497 li
101.188 69.1997 li
103.138 67.9497 li
105.038 66.8999 li
106.938 65.6997 li
108.838 64.4497 li
110.788 63.5 li
112.688 62.25 li
114.588 61.0498 li
116.488 60 li
118.388 59.0498 li
120.338 57.9497 li
122.238 57.0996 li
124.138 56.4497 li
126.038 55.25 li
127.988 54.5498 li
129.888 53.5996 li
131.788 53.25 li
133.688 52.8999 li
135.638 52.1997 li
137.538 51.7998 li
139.438 51.3496 li
141.338 50.5 li
143.238 50.7998 li
145.188 50.5996 li
147.088 50.7998 li
148.988 49.8999 li
150.889 49.6997 li
152.838 49.6499 li
154.738 50.4497 li
156.639 50.4497 li
158.539 50.1499 li
160.488 50.6997 li
162.389 50.5 li
164.289 50.6997 li
166.188 51.25 li
168.088 51.0498 li
170.039 51.5 li
171.938 51.9497 li
173.838 51.6997 li
175.738 52.8496 li
177.688 51.5498 li
179.588 52.6997 li
181.488 53.6499 li
183.389 53.8999 li
185.338 54.3999 li
187.238 54.4497 li
189.139 54.9497 li
191.039 55.0498 li
192.938 55.5996 li
194.889 56 li
196.789 56.1997 li
198.688 56.6499 li
200.588 56.4497 li
202.539 56.8496 li
204.438 57.3999 li
206.338 57.6499 li
208.238 58.0996 li
210.188 58.6997 li
212.088 59.5996 li
213.988 59.0996 li
215.889 59.8496 li
217.838 59.75 li
219.738 60.5996 li
221.639 61.7998 li
223.539 60.6997 li
225.438 61.5996 li
227.389 63 li
229.289 61.8999 li
231.188 62.6001 li
41.938 108.05 mo
43.8384 106.75 li
45.7881 105.5 li
47.688 104.25 li
49.5884 103 li
51.4883 101.75 li
53.438 100.5 li
55.3384 99.25 li
57.2383 97.9502 li
59.1382 96.7002 li
61.0381 95.4502 li
62.9883 94.2002 li
64.8882 92.9497 li
66.7881 91.6997 li
68.688 90.4497 li
70.6382 89.1499 li
72.5381 87.8999 li
74.4385 86.6499 li
76.3384 85.3999 li
78.2881 84.1499 li
80.1885 82.8999 li
82.0884 81.6499 li
83.9883 80.3999 li
85.8882 79.1499 li
87.8384 77.8999 li
80.188 95.4502 mo
82.0884 94.3994 li
83.9883 93.2998 li
85.8882 92.25 li
87.8384 91.1499 li
89.7383 90.0996 li
91.6382 89 li
93.5381 87.9497 li
95.4883 86.8999 li
97.3882 85.8999 li
99.2881 84.7998 li
101.188 83.6997 li
103.138 82.75 li
105.038 81.6499 li
106.938 80.6499 li
108.838 79.6997 li
110.788 78.5996 li
112.688 77.6997 li
114.588 76.8496 li
116.488 75.8999 li
118.388 75 li
120.338 74.0996 li
122.238 73.3999 li
124.138 73 li
126.038 72 li
127.988 71.25 li
129.888 70.75 li
131.788 70.1997 li
133.688 69.3496 li
135.638 69.0498 li
137.538 69.3999 li
139.438 68.75 li
141.338 68.3496 li
143.238 67.9497 li
145.188 68.0996 li
147.088 67.5996 li
148.988 67.6499 li
150.889 67.0996 li
152.838 67.0996 li
154.738 67.75 li
156.639 67.6997 li
158.539 68.3496 li
160.488 67.5 li
162.389 68.5 li
164.289 68.5498 li
166.188 68.8999 li
168.088 69.2495 li
170.039 69.5 li
171.938 70.2998 li
173.838 69.5996 li
175.738 70.6997 li
177.688 70.7495 li
179.588 71.6499 li
181.488 71.2998 li
183.389 71.9995 li
185.338 72.0498 li
187.238 72.4497 li
189.139 73.1997 li
191.039 72.8496 li
192.938 74.4497 li
194.889 74.25 li
196.789 74.2998 li
198.688 74.3999 li
200.588 75.3496 li
202.539 75 li
204.438 75.75 li
206.338 75.1997 li
208.238 76.5498 li
210.188 77.0996 li
212.088 77.3999 li
213.988 76.8496 li
215.889 77.6499 li
217.838 79.25 li
219.738 78.6499 li
221.639 78.1997 li
223.539 78.9995 li
225.438 79.0996 li
227.389 79.8496 li
229.289 80.3999 li
231.188 81.3999 li
41.938 117 mo
43.8384 115.95 li
45.7881 114.85 li
47.688 113.8 li
49.5884 112.7 li
51.4883 111.6 li
53.438 110.55 li
55.3384 109.45 li
57.2383 108.399 li
59.1382 107.3 li
61.0381 106.25 li
62.9883 105.149 li
64.8882 104.1 li
66.7881 103 li
68.688 101.899 li
70.6382 100.85 li
72.5381 99.75 li
74.4385 98.7002 li
76.3384 97.5996 li
78.2881 96.5498 li
80.1885 95.4492 li
72.5381 111.649 mo
74.438 110.7 li
76.3384 109.85 li
78.2881 108.95 li
80.188 108.05 li
82.0884 107.149 li
83.9883 106.25 li
85.8882 105.35 li
87.8384 104.45 li
89.7383 103.55 li
91.6382 102.649 li
93.5381 101.75 li
95.4883 100.899 li
97.3882 100.1 li
99.2881 99.0996 li
101.188 98.25 li
103.138 97.3994 li
105.038 96.5996 li
106.938 95.6494 li
108.838 94.9502 li
110.788 94.0498 li
112.688 93.4497 li
114.588 92.5498 li
116.488 91.8496 li
118.388 91.2998 li
120.338 90.2998 li
122.238 89.6499 li
124.138 88.8999 li
126.038 88.4497 li
127.988 88.25 li
129.888 87.6499 li
131.788 87.3999 li
133.688 86.6997 li
135.638 86.25 li
137.538 86.5498 li
139.438 86.1499 li
141.338 85.8496 li
143.238 85.1997 li
145.188 85.75 li
147.088 86 li
148.988 84.5996 li
150.889 85.0996 li
152.838 85.6499 li
154.738 85.7998 li
156.639 85.5996 li
158.539 85.7998 li
160.488 86.5996 li
162.389 85.75 li
164.289 86.6997 li
166.188 87.3496 li
168.088 87.5 li
170.039 87.0498 li
171.938 87.7998 li
173.838 87.25 li
175.738 88.0498 li
177.688 88.75 li
179.588 88.4497 li
181.488 89.5996 li
183.389 89.6499 li
185.338 90.0996 li
187.238 90 li
189.139 90.6499 li
191.039 90.25 li
192.938 91.4497 li
194.889 92.0498 li
196.789 92.75 li
198.688 92.8999 li
200.588 92.7998 li
202.539 93.4497 li
204.438 94.2998 li
206.338 93.0996 li
208.238 94.7002 li
210.188 94.8994 li
212.088 95.1494 li
213.988 95.25 li
215.889 95.6494 li
217.838 96.0996 li
219.738 96.3994 li
221.639 96.8496 li
223.539 98.0996 li
225.438 97.3496 li
227.389 98.3994 li
229.289 98.2998 li
231.188 98.7998 li
41.938 126 mo
43.8384 125.1 li
45.7881 124.2 li
47.688 123.3 li
49.5884 122.399 li
51.4883 121.5 li
53.438 120.6 li
55.3384 119.7 li
57.2383 118.8 li
59.1382 117.899 li
61.0381 117 li
62.9883 116.1 li
64.8882 115.2 li
66.7881 114.3 li
68.688 113.399 li
70.6382 112.5 li
72.5381 111.649 li
64.8882 126.35 mo
66.7881 125.649 li
68.688 124.899 li
70.6382 124.2 li
72.5381 123.5 li
74.438 122.75 li
76.3384 122.05 li
78.2881 121.3 li
80.188 120.6 li
82.0884 119.899 li
83.9883 119.149 li
85.8882 118.45 li
87.8384 117.75 li
89.7383 117.05 li
91.6382 116.35 li
93.5381 115.6 li
95.4883 114.95 li
97.3882 114.2 li
99.2881 113.5 li
101.188 112.8 li
103.138 112.149 li
105.038 111.45 li
106.938 110.75 li
108.838 110.1 li
110.788 109.45 li
112.688 108.85 li
114.588 108.3 li
116.488 107.6 li
118.388 107.149 li
120.338 106.55 li
122.238 106 li
124.138 105.55 li
126.038 105.25 li
127.988 104.8 li
129.888 104.3 li
131.788 104.25 li
133.688 103.95 li
135.638 103.5 li
137.538 103.2 li
139.438 103.35 li
141.338 103.1 li
143.238 103.149 li
145.188 103 li
147.088 102.899 li
148.988 102.8 li
150.889 102.899 li
152.838 103.05 li
154.738 103.149 li
156.639 103.25 li
158.539 103.7 li
160.488 104.35 li
162.389 103.75 li
164.289 104.5 li
166.188 104.25 li
168.088 105.149 li
170.039 105.7 li
171.938 106.149 li
173.838 106.25 li
175.738 106.3 li
177.688 106.95 li
179.588 106.75 li
181.488 107.35 li
183.389 107.6 li
185.338 108.3 li
187.238 108.05 li
189.139 109.149 li
191.039 109.3 li
192.938 109.2 li
194.889 109.95 li
196.789 110.2 li
198.688 110.25 li
200.588 110.95 li
202.539 111.05 li
204.438 111.6 li
206.338 111.85 li
208.238 112.7 li
210.188 112.5 li
212.088 112.35 li
213.988 113.5 li
215.889 113.35 li
217.838 113.95 li
219.738 115 li
221.639 114.7 li
223.539 114.899 li
225.438 114.85 li
227.389 115.8 li
229.289 115.899 li
231.188 116.8 li
41.938 134.95 mo
43.8384 134.25 li
45.7881 133.55 li
47.688 132.8 li
49.5884 132.1 li
51.4883 131.399 li
53.438 130.649 li
55.3384 129.95 li
57.2383 129.25 li
59.1382 128.5 li
61.0381 127.8 li
62.9883 127.05 li
64.8882 126.35 li
57.2383 139.649 mo
59.1382 139.1 li
61.0381 138.55 li
62.9883 138.05 li
64.8882 137.5 li
66.7881 136.95 li
68.688 136.399 li
70.6382 135.899 li
72.5381 135.35 li
74.438 134.8 li
76.3384 134.25 li
78.2881 133.7 li
80.188 133.2 li
82.0884 132.649 li
83.9883 132.1 li
85.8882 131.6 li
87.8384 131.05 li
89.7383 130.5 li
91.6382 129.95 li
93.5381 129.45 li
95.4883 128.95 li
97.3882 128.399 li
99.2881 127.8 li
101.188 127.3 li
103.138 126.8 li
105.038 126.3 li
106.938 125.85 li
108.838 125.35 li
110.788 124.899 li
112.688 124.45 li
114.588 124 li
116.488 123.6 li
118.388 123.149 li
120.338 122.75 li
122.238 122.45 li
124.138 122 li
126.039 121.6 li
127.988 121.649 li
129.888 121.3 li
131.789 121.05 li
133.688 120.95 li
135.638 120.75 li
137.538 120.399 li
139.438 120.399 li
141.338 120.55 li
143.238 120.6 li
145.188 120.149 li
147.088 120.649 li
148.988 120.899 li
150.889 120.45 li
152.838 120.85 li
154.738 121 li
156.639 121.45 li
158.539 121.5 li
160.488 121.75 li
162.389 122.45 li
164.289 122.6 li
166.188 122.8 li
168.088 122.95 li
170.039 123.399 li
171.938 123.8 li
173.838 123.85 li
175.738 124.45 li
177.688 124.85 li
179.588 125.25 li
181.488 125.6 li
183.389 125.399 li
185.338 125.95 li
187.238 126.25 li
189.139 126.35 li
191.039 127.2 li
192.938 127.55 li
194.889 127.899 li
196.789 128.25 li
198.688 128.649 li
200.588 128.85 li
202.539 129.55 li
204.438 129.7 li
206.338 130.5 li
208.238 130.45 li
210.188 131 li
212.088 131.5 li
213.988 131.35 li
215.889 131 li
217.838 132.35 li
219.738 131.75 li
221.639 132.85 li
223.539 132.899 li
225.438 133.45 li
227.389 133.85 li
229.289 134.6 li
231.188 134.649 li
41.938 143.95 mo
43.8384 143.399 li
45.7881 142.899 li
47.688 142.35 li
49.5884 141.8 li
51.4883 141.25 li
53.438 140.7 li
55.3384 140.2 li
57.2383 139.649 li
49.5884 151.5 mo
51.4883 151.149 li
53.438 150.8 li
55.3384 150.399 li
57.2383 150.05 li
59.1382 149.7 li
61.0381 149.35 li
62.9883 149 li
64.8882 148.649 li
66.7881 148.25 li
68.688 147.899 li
70.6382 147.55 li
72.5381 147.2 li
74.438 146.85 li
76.3384 146.45 li
78.2881 146.1 li
80.1885 145.75 li
82.0884 145.399 li
83.9883 145.05 li
85.8882 144.699 li
87.8384 144.35 li
89.7383 143.949 li
91.6382 143.6 li
93.5381 143.25 li
95.4883 142.899 li
97.3882 142.55 li
99.2881 142.199 li
101.188 141.899 li
103.138 141.55 li
105.038 141.199 li
106.938 140.85 li
108.838 140.55 li
110.788 140.199 li
112.688 139.949 li
114.588 139.85 li
116.488 139.449 li
118.388 139.199 li
120.338 138.899 li
122.238 138.699 li
124.138 138.55 li
126.039 138.25 li
127.988 138.3 li
129.888 138.149 li
131.789 138.1 li
133.688 138 li
135.638 137.75 li
137.539 137.55 li
139.438 137.699 li
141.338 138.149 li
143.238 137.949 li
145.188 137.85 li
147.088 138.199 li
148.988 138.3 li
150.889 138.449 li
152.838 138.75 li
154.738 139.05 li
156.639 139.399 li
158.539 139.3 li
160.488 139.449 li
162.389 139.6 li
164.289 140.35 li
166.188 140.6 li
168.088 140.449 li
170.039 141.3 li
171.938 141.699 li
173.838 142.199 li
175.738 141.899 li
177.688 142.35 li
179.588 143 li
181.488 143.5 li
183.389 143.699 li
185.338 143.949 li
187.238 143.899 li
189.139 144.699 li
191.039 145 li
192.938 145.25 li
194.889 145.75 li
196.789 146.5 li
198.688 146.949 li
200.588 146.85 li
202.539 147.449 li
204.438 147.75 li
206.338 147.899 li
208.238 148.6 li
210.188 148.399 li
212.088 148.899 li
213.988 149.1 li
215.889 149.899 li
217.838 150.05 li
219.738 150.55 li
221.639 150.55 li
223.539 151.25 li
225.438 151.399 li
227.389 151.75 li
229.289 152.1 li
231.188 152.6 li
41.938 152.95 mo
43.8384 152.6 li
45.7881 152.2 li
47.688 151.85 li
49.5884 151.5 li
41.938 161.899 mo
43.8384 161.75 li
45.7881 161.55 li
47.688 161.399 li
49.5884 161.2 li
51.4883 161 li
53.438 160.85 li
55.3384 160.649 li
57.2383 160.5 li
59.1382 160.3 li
61.0381 160.1 li
62.9883 159.95 li
64.8882 159.75 li
66.7881 159.6 li
68.688 159.399 li
70.6382 159.199 li
72.5381 159.05 li
74.4385 158.85 li
76.3384 158.699 li
78.2881 158.5 li
80.1885 158.35 li
82.0884 158.149 li
83.9883 158 li
85.8882 157.8 li
87.8384 157.6 li
89.7383 157.449 li
91.6382 157.25 li
93.5381 157.1 li
95.4883 156.949 li
97.3882 156.75 li
99.2881 156.6 li
101.188 156.399 li
103.138 156.25 li
105.038 156.1 li
106.938 155.949 li
108.838 155.8 li
110.789 155.649 li
112.688 155.55 li
114.588 155.449 li
116.488 155.3 li
118.388 155.149 li
120.338 155.1 li
122.238 155.05 li
124.138 155.05 li
126.039 155 li
127.988 155 li
129.888 154.949 li
131.789 154.899 li
133.688 154.949 li
135.638 155.1 li
137.539 155 li
139.438 155.25 li
141.338 155.449 li
143.238 155.35 li
145.188 155.6 li
147.088 155.8 li
148.988 155.949 li
150.889 156.25 li
152.838 156.399 li
154.738 156.6 li
156.639 156.949 li
158.539 157.3 li
160.488 157.5 li
162.389 157.649 li
164.289 158.25 li
166.188 158.449 li
168.088 158.85 li
170.039 158.949 li
171.938 159.649 li
173.838 159.85 li
175.738 160.199 li
177.688 160.75 li
179.588 160.75 li
181.488 161 li
183.389 161.699 li
185.338 162 li
187.238 162.399 li
189.139 162.449 li
191.039 162.6 li
192.938 163.449 li
194.889 163.6 li
196.789 164.05 li
198.688 164.6 li
200.588 164.8 li
202.539 164.8 li
204.438 165.25 li
206.338 166.05 li
208.238 166.25 li
210.188 166.649 li
212.088 167.25 li
213.988 167.25 li
215.889 167.6 li
217.838 168.05 li
219.738 168.399 li
221.639 169 li
223.539 169.149 li
225.438 169.699 li
227.389 169.899 li
229.289 170.35 li
231.188 170.25 li
@
42.7158 161.939 mo
42.7158 161.505 42.3628 161.152 41.9282 161.152 cv
41.4937 161.152 41.1406 161.505 41.1406 161.939 cv
41.1406 162.374 41.4937 162.728 41.9282 162.728 cv
42.3628 162.728 42.7158 162.374 42.7158 161.939 cv
f
44.6357 161.7 mo
44.6357 161.265 44.2827 160.912 43.8481 160.912 cv
43.4136 160.912 43.0605 161.265 43.0605 161.7 cv
43.0605 162.135 43.4136 162.487 43.8481 162.487 cv
44.2827 162.487 44.6357 162.135 44.6357 161.7 cv
f
46.5557 161.58 mo
46.5557 161.146 46.2026 160.792 45.7681 160.792 cv
45.3335 160.792 44.9805 161.146 44.9805 161.58 cv
44.9805 162.015 45.3335 162.367 45.7681 162.367 cv
46.2026 162.367 46.5557 162.015 46.5557 161.58 cv
f
48.4756 161.46 mo
48.4756 161.025 48.123 160.672 47.688 160.672 cv
47.2534 160.672 46.9009 161.025 46.9009 161.46 cv
46.9009 161.895 47.2534 162.247 47.688 162.247 cv
48.123 162.247 48.4756 161.895 48.4756 161.46 cv
f
50.3955 161.22 mo
50.3955 160.785 50.043 160.433 49.6084 160.433 cv
49.1733 160.433 48.8208 160.785 48.8208 161.22 cv
48.8208 161.654 49.1733 162.007 49.6084 162.007 cv
50.043 162.007 50.3955 161.654 50.3955 161.22 cv
f
52.3159 160.979 mo
52.3159 160.545 51.9629 160.192 51.5283 160.192 cv
51.0933 160.192 50.7407 160.545 50.7407 160.979 cv
50.7407 161.414 51.0933 161.768 51.5283 161.768 cv
51.9629 161.768 52.3159 161.414 52.3159 160.979 cv
f
54.2358 160.859 mo
54.2358 160.425 53.8828 160.072 53.4482 160.072 cv
53.0137 160.072 52.6606 160.425 52.6606 160.859 cv
52.6606 161.295 53.0137 161.647 53.4482 161.647 cv
53.8828 161.647 54.2358 161.295 54.2358 160.859 cv
f
56.1558 160.62 mo
56.1558 160.186 55.8027 159.832 55.3682 159.832 cv
54.9336 159.832 54.5806 160.186 54.5806 160.62 cv
54.5806 161.055 54.9336 161.407 55.3682 161.407 cv
55.8027 161.407 56.1558 161.055 56.1558 160.62 cv
f
58.0757 160.5 mo
58.0757 160.065 57.7227 159.712 57.2881 159.712 cv
56.8535 159.712 56.5005 160.065 56.5005 160.5 cv
56.5005 160.935 56.8535 161.287 57.2881 161.287 cv
57.7227 161.287 58.0757 160.935 58.0757 160.5 cv
f
59.8755 160.26 mo
59.8755 159.825 59.5229 159.473 59.0884 159.473 cv
58.6533 159.473 58.3008 159.825 58.3008 160.26 cv
58.3008 160.694 58.6533 161.047 59.0884 161.047 cv
59.5229 161.047 59.8755 160.694 59.8755 160.26 cv
f
61.7959 160.14 mo
61.7959 159.705 61.4429 159.353 61.0083 159.353 cv
60.5732 159.353 60.2207 159.705 60.2207 160.14 cv
60.2207 160.574 60.5732 160.928 61.0083 160.928 cv
61.4429 160.928 61.7959 160.574 61.7959 160.14 cv
f
63.7158 159.899 mo
63.7158 159.465 63.3628 159.112 62.9282 159.112 cv
62.4937 159.112 62.1406 159.465 62.1406 159.899 cv
62.1406 160.335 62.4937 160.688 62.9282 160.688 cv
63.3628 160.688 63.7158 160.335 63.7158 159.899 cv
f
65.6357 159.78 mo
65.6357 159.345 65.2827 158.992 64.8481 158.992 cv
64.4136 158.992 64.0605 159.345 64.0605 159.78 cv
64.0605 160.215 64.4136 160.567 64.8481 160.567 cv
65.2827 160.567 65.6357 160.215 65.6357 159.78 cv
f
67.5557 159.54 mo
67.5557 159.105 67.2026 158.752 66.7681 158.752 cv
66.3335 158.752 65.9805 159.105 65.9805 159.54 cv
65.9805 159.975 66.3335 160.327 66.7681 160.327 cv
67.2026 160.327 67.5557 159.975 67.5557 159.54 cv
f
69.4756 159.42 mo
69.4756 158.985 69.123 158.632 68.688 158.632 cv
68.2534 158.632 67.9009 158.985 67.9009 159.42 cv
67.9009 159.854 68.2534 160.207 68.688 160.207 cv
69.123 160.207 69.4756 159.854 69.4756 159.42 cv
f
71.3955 159.18 mo
71.3955 158.745 71.043 158.393 70.6084 158.393 cv
70.1733 158.393 69.8208 158.745 69.8208 159.18 cv
69.8208 159.614 70.1733 159.968 70.6084 159.968 cv
71.043 159.968 71.3955 159.614 71.3955 159.18 cv
f
73.3159 159.06 mo
73.3159 158.625 72.9629 158.272 72.5283 158.272 cv
72.0933 158.272 71.7407 158.625 71.7407 159.06 cv
71.7407 159.494 72.0933 159.848 72.5283 159.848 cv
72.9629 159.848 73.3159 159.494 73.3159 159.06 cv
f
75.2358 158.819 mo
75.2358 158.385 74.8828 158.032 74.4482 158.032 cv
74.0137 158.032 73.6606 158.385 73.6606 158.819 cv
73.6606 159.255 74.0137 159.607 74.4482 159.607 cv
74.8828 159.607 75.2358 159.255 75.2358 158.819 cv
f
77.1558 158.7 mo
77.1558 158.265 76.8027 157.912 76.3682 157.912 cv
75.9336 157.912 75.5806 158.265 75.5806 158.7 cv
75.5806 159.135 75.9336 159.487 76.3682 159.487 cv
76.8027 159.487 77.1558 159.135 77.1558 158.7 cv
f
79.0757 158.46 mo
79.0757 158.025 78.7227 157.672 78.2881 157.672 cv
77.8535 157.672 77.5005 158.025 77.5005 158.46 cv
77.5005 158.895 77.8535 159.247 78.2881 159.247 cv
78.7227 159.247 79.0757 158.895 79.0757 158.46 cv
f
80.9956 158.34 mo
80.9956 157.905 80.6431 157.553 80.208 157.553 cv
79.7734 157.553 79.4209 157.905 79.4209 158.34 cv
79.4209 158.774 79.7734 159.127 80.208 159.127 cv
80.6431 159.127 80.9956 158.774 80.9956 158.34 cv
f
82.9155 158.1 mo
82.9155 157.665 82.563 157.313 82.1284 157.313 cv
81.6934 157.313 81.3408 157.665 81.3408 158.1 cv
81.3408 158.534 81.6934 158.888 82.1284 158.888 cv
82.563 158.888 82.9155 158.534 82.9155 158.1 cv
f
84.8354 157.979 mo
84.8354 157.545 84.4829 157.192 84.0483 157.192 cv
83.6133 157.192 83.2607 157.545 83.2607 157.979 cv
83.2607 158.414 83.6133 158.768 84.0483 158.768 cv
84.4829 158.768 84.8354 158.414 84.8354 157.979 cv
f
86.6357 157.859 mo
86.6357 157.425 86.2827 157.072 85.8481 157.072 cv
85.4136 157.072 85.0605 157.425 85.0605 157.859 cv
85.0605 158.295 85.4136 158.647 85.8481 158.647 cv
86.2827 158.647 86.6357 158.295 86.6357 157.859 cv
f
88.6758 157.62 mo
88.6758 157.186 88.3228 156.832 87.8882 156.832 cv
87.4536 156.832 87.1006 157.186 87.1006 157.62 cv
87.1006 158.055 87.4536 158.407 87.8882 158.407 cv
88.3228 158.407 88.6758 158.055 88.6758 157.62 cv
f
90.4756 157.5 mo
90.4756 157.065 90.123 156.712 89.688 156.712 cv
89.2534 156.712 88.9009 157.065 88.9009 157.5 cv
88.9009 157.935 89.2534 158.287 89.688 158.287 cv
90.123 158.287 90.4756 157.935 90.4756 157.5 cv
f
92.3955 157.26 mo
92.3955 156.825 92.043 156.473 91.6084 156.473 cv
91.1733 156.473 90.8208 156.825 90.8208 157.26 cv
90.8208 157.694 91.1733 158.047 91.6084 158.047 cv
92.043 158.047 92.3955 157.694 92.3955 157.26 cv
f
94.3159 157.14 mo
94.3159 156.705 93.9629 156.353 93.5283 156.353 cv
93.0933 156.353 92.7407 156.705 92.7407 157.14 cv
92.7407 157.574 93.0933 157.928 93.5283 157.928 cv
93.9629 157.928 94.3159 157.574 94.3159 157.14 cv
f
96.2358 156.899 mo
96.2358 156.465 95.8828 156.112 95.4482 156.112 cv
95.0137 156.112 94.6606 156.465 94.6606 156.899 cv
94.6606 157.335 95.0137 157.688 95.4482 157.688 cv
95.8828 157.688 96.2358 157.335 96.2358 156.899 cv
f
98.1558 156.78 mo
98.1558 156.345 97.8027 155.992 97.3682 155.992 cv
96.9336 155.992 96.5806 156.345 96.5806 156.78 cv
96.5806 157.215 96.9336 157.567 97.3682 157.567 cv
97.8027 157.567 98.1558 157.215 98.1558 156.78 cv
f
100.076 156.66 mo
100.076 156.225 99.7231 155.872 99.2881 155.872 cv
98.8535 155.872 98.5005 156.225 98.5005 156.66 cv
98.5005 157.095 98.8535 157.447 99.2881 157.447 cv
99.7231 157.447 100.076 157.095 100.076 156.66 cv
f
101.996 156.42 mo
101.996 155.985 101.643 155.632 101.208 155.632 cv
100.773 155.632 100.421 155.985 100.421 156.42 cv
100.421 156.854 100.773 157.207 101.208 157.207 cv
101.643 157.207 101.996 156.854 101.996 156.42 cv
f
103.916 156.3 mo
103.916 155.865 103.563 155.513 103.128 155.513 cv
102.693 155.513 102.341 155.865 102.341 156.3 cv
102.341 156.734 102.693 157.087 103.128 157.087 cv
103.563 157.087 103.916 156.734 103.916 156.3 cv
f
105.835 156.06 mo
105.835 155.625 105.483 155.272 105.048 155.272 cv
104.613 155.272 104.261 155.625 104.261 156.06 cv
104.261 156.494 104.613 156.848 105.048 156.848 cv
105.483 156.848 105.835 156.494 105.835 156.06 cv
f
107.756 155.939 mo
107.756 155.505 107.403 155.152 106.968 155.152 cv
106.534 155.152 106.181 155.505 106.181 155.939 cv
106.181 156.374 106.534 156.728 106.968 156.728 cv
107.403 156.728 107.756 156.374 107.756 155.939 cv
f
109.676 155.819 mo
109.676 155.385 109.323 155.032 108.888 155.032 cv
108.454 155.032 108.101 155.385 108.101 155.819 cv
108.101 156.255 108.454 156.607 108.888 156.607 cv
109.323 156.607 109.676 156.255 109.676 155.819 cv
f
111.596 155.7 mo
111.596 155.265 111.243 154.912 110.808 154.912 cv
110.374 154.912 110.021 155.265 110.021 155.7 cv
110.021 156.135 110.374 156.487 110.808 156.487 cv
111.243 156.487 111.596 156.135 111.596 155.7 cv
f
113.516 155.58 mo
113.516 155.146 113.163 154.792 112.728 154.792 cv
112.293 154.792 111.941 155.146 111.941 155.58 cv
111.941 156.015 112.293 156.367 112.728 156.367 cv
113.163 156.367 113.516 156.015 113.516 155.58 cv
f
115.316 155.46 mo
115.316 155.025 114.963 154.672 114.528 154.672 cv
114.093 154.672 113.741 155.025 113.741 155.46 cv
113.741 155.895 114.093 156.247 114.528 156.247 cv
114.963 156.247 115.316 155.895 115.316 155.46 cv
f
117.236 155.34 mo
117.236 154.905 116.883 154.553 116.448 154.553 cv
116.014 154.553 115.661 154.905 115.661 155.34 cv
115.661 155.774 116.014 156.127 116.448 156.127 cv
116.883 156.127 117.236 155.774 117.236 155.34 cv
f
119.156 155.1 mo
119.156 154.665 118.803 154.313 118.368 154.313 cv
117.934 154.313 117.581 154.665 117.581 155.1 cv
117.581 155.534 117.934 155.888 118.368 155.888 cv
118.803 155.888 119.156 155.534 119.156 155.1 cv
f
121.076 155.1 mo
121.076 154.665 120.723 154.313 120.288 154.313 cv
119.854 154.313 119.5 154.665 119.5 155.1 cv
119.5 155.534 119.854 155.888 120.288 155.888 cv
120.723 155.888 121.076 155.534 121.076 155.1 cv
f
122.996 155.1 mo
122.996 154.665 122.643 154.313 122.208 154.313 cv
121.773 154.313 121.421 154.665 121.421 155.1 cv
121.421 155.534 121.773 155.888 122.208 155.888 cv
122.643 155.888 122.996 155.534 122.996 155.1 cv
f
124.916 155.1 mo
124.916 154.665 124.563 154.313 124.128 154.313 cv
123.693 154.313 123.341 154.665 123.341 155.1 cv
123.341 155.534 123.693 155.888 124.128 155.888 cv
124.563 155.888 124.916 155.534 124.916 155.1 cv
f
126.835 154.979 mo
126.835 154.545 126.483 154.192 126.048 154.192 cv
125.613 154.192 125.261 154.545 125.261 154.979 cv
125.261 155.414 125.613 155.768 126.048 155.768 cv
126.483 155.768 126.835 155.414 126.835 154.979 cv
f
128.756 154.979 mo
128.756 154.545 128.403 154.192 127.968 154.192 cv
127.534 154.192 127.181 154.545 127.181 154.979 cv
127.181 155.414 127.534 155.768 127.968 155.768 cv
128.403 155.768 128.756 155.414 128.756 154.979 cv
f
130.676 154.979 mo
130.676 154.545 130.323 154.192 129.888 154.192 cv
129.454 154.192 129.101 154.545 129.101 154.979 cv
129.101 155.414 129.454 155.768 129.888 155.768 cv
130.323 155.768 130.676 155.414 130.676 154.979 cv
f
132.596 154.859 mo
132.596 154.425 132.243 154.072 131.808 154.072 cv
131.374 154.072 131.021 154.425 131.021 154.859 cv
131.021 155.295 131.374 155.647 131.808 155.647 cv
132.243 155.647 132.596 155.295 132.596 154.859 cv
f
134.516 154.979 mo
134.516 154.545 134.163 154.192 133.728 154.192 cv
133.293 154.192 132.941 154.545 132.941 154.979 cv
132.941 155.414 133.293 155.768 133.728 155.768 cv
134.163 155.768 134.516 155.414 134.516 154.979 cv
f
136.436 155.1 mo
136.436 154.665 136.083 154.313 135.648 154.313 cv
135.213 154.313 134.861 154.665 134.861 155.1 cv
134.861 155.534 135.213 155.888 135.648 155.888 cv
136.083 155.888 136.436 155.534 136.436 155.1 cv
f
138.355 154.979 mo
138.355 154.545 138.003 154.192 137.568 154.192 cv
137.133 154.192 136.781 154.545 136.781 154.979 cv
136.781 155.414 137.133 155.768 137.568 155.768 cv
138.003 155.768 138.355 155.414 138.355 154.979 cv
f
140.275 155.22 mo
140.275 154.785 139.924 154.433 139.488 154.433 cv
139.053 154.433 138.701 154.785 138.701 155.22 cv
138.701 155.654 139.053 156.007 139.488 156.007 cv
139.924 156.007 140.275 155.654 140.275 155.22 cv
f
142.076 155.46 mo
142.076 155.025 141.723 154.672 141.289 154.672 cv
140.854 154.672 140.5 155.025 140.5 155.46 cv
140.5 155.895 140.854 156.247 141.289 156.247 cv
141.723 156.247 142.076 155.895 142.076 155.46 cv
f
143.996 155.34 mo
143.996 154.905 143.643 154.553 143.209 154.553 cv
142.773 154.553 142.42 154.905 142.42 155.34 cv
142.42 155.774 142.773 156.127 143.209 156.127 cv
143.643 156.127 143.996 155.774 143.996 155.34 cv
f
146.035 155.58 mo
146.035 155.146 145.684 154.792 145.248 154.792 cv
144.814 154.792 144.461 155.146 144.461 155.58 cv
144.461 156.015 144.814 156.367 145.248 156.367 cv
145.684 156.367 146.035 156.015 146.035 155.58 cv
f
147.836 155.819 mo
147.836 155.385 147.482 155.032 147.049 155.032 cv
146.613 155.032 146.26 155.385 146.26 155.819 cv
146.26 156.255 146.613 156.607 147.049 156.607 cv
147.482 156.607 147.836 156.255 147.836 155.819 cv
f
149.756 155.939 mo
149.756 155.505 149.402 155.152 148.969 155.152 cv
148.533 155.152 148.182 155.505 148.182 155.939 cv
148.182 156.374 148.533 156.728 148.969 156.728 cv
149.402 156.728 149.756 156.374 149.756 155.939 cv
f
151.676 156.3 mo
151.676 155.865 151.322 155.513 150.889 155.513 cv
150.453 155.513 150.102 155.865 150.102 156.3 cv
150.102 156.734 150.453 157.087 150.889 157.087 cv
151.322 157.087 151.676 156.734 151.676 156.3 cv
f
153.596 156.42 mo
153.596 155.985 153.242 155.632 152.809 155.632 cv
152.373 155.632 152.021 155.985 152.021 156.42 cv
152.021 156.854 152.373 157.207 152.809 157.207 cv
153.242 157.207 153.596 156.854 153.596 156.42 cv
f
155.516 156.66 mo
155.516 156.225 155.162 155.872 154.729 155.872 cv
154.293 155.872 153.941 156.225 153.941 156.66 cv
153.941 157.095 154.293 157.447 154.729 157.447 cv
155.162 157.447 155.516 157.095 155.516 156.66 cv
f
157.436 156.899 mo
157.436 156.465 157.082 156.112 156.648 156.112 cv
156.213 156.112 155.861 156.465 155.861 156.899 cv
155.861 157.335 156.213 157.688 156.648 157.688 cv
157.082 157.688 157.436 157.335 157.436 156.899 cv
f
159.355 157.26 mo
159.355 156.825 159.002 156.473 158.568 156.473 cv
158.133 156.473 157.781 156.825 157.781 157.26 cv
157.781 157.694 158.133 158.047 158.568 158.047 cv
159.002 158.047 159.355 157.694 159.355 157.26 cv
f
161.275 157.5 mo
161.275 157.065 160.924 156.712 160.488 156.712 cv
160.053 156.712 159.701 157.065 159.701 157.5 cv
159.701 157.935 160.053 158.287 160.488 158.287 cv
160.924 158.287 161.275 157.935 161.275 157.5 cv
f
163.195 157.62 mo
163.195 157.186 162.844 156.832 162.408 156.832 cv
161.973 156.832 161.621 157.186 161.621 157.62 cv
161.621 158.055 161.973 158.407 162.408 158.407 cv
162.844 158.407 163.195 158.055 163.195 157.62 cv
f
165.115 158.22 mo
165.115 157.785 164.764 157.433 164.328 157.433 cv
163.893 157.433 163.541 157.785 163.541 158.22 cv
163.541 158.654 163.893 159.007 164.328 159.007 cv
164.764 159.007 165.115 158.654 165.115 158.22 cv
f
166.916 158.46 mo
166.916 158.025 166.563 157.672 166.129 157.672 cv
165.693 157.672 165.34 158.025 165.34 158.46 cv
165.34 158.895 165.693 159.247 166.129 159.247 cv
166.563 159.247 166.916 158.895 166.916 158.46 cv
f
168.836 158.819 mo
168.836 158.385 168.482 158.032 168.049 158.032 cv
167.613 158.032 167.26 158.385 167.26 158.819 cv
167.26 159.255 167.613 159.607 168.049 159.607 cv
168.482 159.607 168.836 159.255 168.836 158.819 cv
f
170.875 158.939 mo
170.875 158.505 170.523 158.152 170.088 158.152 cv
169.654 158.152 169.301 158.505 169.301 158.939 cv
169.301 159.374 169.654 159.728 170.088 159.728 cv
170.523 159.728 170.875 159.374 170.875 158.939 cv
f
172.676 159.66 mo
172.676 159.225 172.322 158.872 171.889 158.872 cv
171.453 158.872 171.102 159.225 171.102 159.66 cv
171.102 160.095 171.453 160.447 171.889 160.447 cv
172.322 160.447 172.676 160.095 172.676 159.66 cv
f
174.596 159.899 mo
174.596 159.465 174.242 159.112 173.809 159.112 cv
173.373 159.112 173.021 159.465 173.021 159.899 cv
173.021 160.335 173.373 160.688 173.809 160.688 cv
174.242 160.688 174.596 160.335 174.596 159.899 cv
f
176.516 160.26 mo
176.516 159.825 176.162 159.473 175.729 159.473 cv
175.293 159.473 174.941 159.825 174.941 160.26 cv
174.941 160.694 175.293 161.047 175.729 161.047 cv
176.162 161.047 176.516 160.694 176.516 160.26 cv
f
178.436 160.74 mo
178.436 160.305 178.082 159.952 177.648 159.952 cv
177.213 159.952 176.861 160.305 176.861 160.74 cv
176.861 161.175 177.213 161.527 177.648 161.527 cv
178.082 161.527 178.436 161.175 178.436 160.74 cv
f
180.355 160.74 mo
180.355 160.305 180.002 159.952 179.568 159.952 cv
179.133 159.952 178.781 160.305 178.781 160.74 cv
178.781 161.175 179.133 161.527 179.568 161.527 cv
180.002 161.527 180.355 161.175 180.355 160.74 cv
f
182.275 160.979 mo
182.275 160.545 181.924 160.192 181.488 160.192 cv
181.053 160.192 180.701 160.545 180.701 160.979 cv
180.701 161.414 181.053 161.768 181.488 161.768 cv
181.924 161.768 182.275 161.414 182.275 160.979 cv
f
184.195 161.7 mo
184.195 161.265 183.844 160.912 183.408 160.912 cv
182.973 160.912 182.621 161.265 182.621 161.7 cv
182.621 162.135 182.973 162.487 183.408 162.487 cv
183.844 162.487 184.195 162.135 184.195 161.7 cv
f
186.115 161.939 mo
186.115 161.505 185.764 161.152 185.328 161.152 cv
184.893 161.152 184.541 161.505 184.541 161.939 cv
184.541 162.374 184.893 162.728 185.328 162.728 cv
185.764 162.728 186.115 162.374 186.115 161.939 cv
f
188.035 162.42 mo
188.035 161.985 187.684 161.632 187.248 161.632 cv
186.814 161.632 186.461 161.985 186.461 162.42 cv
186.461 162.854 186.814 163.207 187.248 163.207 cv
187.684 163.207 188.035 162.854 188.035 162.42 cv
f
189.955 162.42 mo
189.955 161.985 189.604 161.632 189.168 161.632 cv
188.734 161.632 188.381 161.985 188.381 162.42 cv
188.381 162.854 188.734 163.207 189.168 163.207 cv
189.604 163.207 189.955 162.854 189.955 162.42 cv
f
191.875 162.66 mo
191.875 162.225 191.523 161.872 191.088 161.872 cv
190.654 161.872 190.301 162.225 190.301 162.66 cv
190.301 163.095 190.654 163.447 191.088 163.447 cv
191.523 163.447 191.875 163.095 191.875 162.66 cv
f
193.676 163.5 mo
193.676 163.065 193.322 162.712 192.889 162.712 cv
192.453 162.712 192.102 163.065 192.102 163.5 cv
192.102 163.935 192.453 164.287 192.889 164.287 cv
193.322 164.287 193.676 163.935 193.676 163.5 cv
f
195.715 163.62 mo
195.715 163.186 195.363 162.832 194.928 162.832 cv
194.494 162.832 194.141 163.186 194.141 163.62 cv
194.141 164.055 194.494 164.407 194.928 164.407 cv
195.363 164.407 195.715 164.055 195.715 163.62 cv
f
197.635 164.1 mo
197.635 163.665 197.283 163.313 196.848 163.313 cv
196.414 163.313 196.061 163.665 196.061 164.1 cv
196.061 164.534 196.414 164.888 196.848 164.888 cv
197.283 164.888 197.635 164.534 197.635 164.1 cv
f
199.436 164.58 mo
199.436 164.146 199.082 163.792 198.648 163.792 cv
198.213 163.792 197.861 164.146 197.861 164.58 cv
197.861 165.015 198.213 165.367 198.648 165.367 cv
199.082 165.367 199.436 165.015 199.436 164.58 cv
f
201.355 164.819 mo
201.355 164.385 201.002 164.032 200.568 164.032 cv
200.133 164.032 199.781 164.385 199.781 164.819 cv
199.781 165.255 200.133 165.607 200.568 165.607 cv
201.002 165.607 201.355 165.255 201.355 164.819 cv
f
203.275 164.819 mo
203.275 164.385 202.924 164.032 202.488 164.032 cv
202.053 164.032 201.701 164.385 201.701 164.819 cv
201.701 165.255 202.053 165.607 202.488 165.607 cv
202.924 165.607 203.275 165.255 203.275 164.819 cv
f
205.195 165.3 mo
205.195 164.865 204.844 164.513 204.408 164.513 cv
203.973 164.513 203.621 164.865 203.621 165.3 cv
203.621 165.734 203.973 166.087 204.408 166.087 cv
204.844 166.087 205.195 165.734 205.195 165.3 cv
f
207.115 166.02 mo
207.115 165.585 206.764 165.232 206.328 165.232 cv
205.893 165.232 205.541 165.585 205.541 166.02 cv
205.541 166.454 205.893 166.808 206.328 166.808 cv
206.764 166.808 207.115 166.454 207.115 166.02 cv
f
209.035 166.26 mo
209.035 165.825 208.684 165.473 208.248 165.473 cv
207.814 165.473 207.461 165.825 207.461 166.26 cv
207.461 166.694 207.814 167.047 208.248 167.047 cv
208.684 167.047 209.035 166.694 209.035 166.26 cv
f
210.955 166.62 mo
210.955 166.186 210.604 165.832 210.168 165.832 cv
209.734 165.832 209.381 166.186 209.381 166.62 cv
209.381 167.055 209.734 167.407 210.168 167.407 cv
210.604 167.407 210.955 167.055 210.955 166.62 cv
f
212.875 167.22 mo
212.875 166.785 212.523 166.433 212.088 166.433 cv
211.654 166.433 211.301 166.785 211.301 167.22 cv
211.301 167.654 211.654 168.007 212.088 168.007 cv
212.523 168.007 212.875 167.654 212.875 167.22 cv
f
214.795 167.22 mo
214.795 166.785 214.443 166.433 214.008 166.433 cv
213.574 166.433 213.221 166.785 213.221 167.22 cv
213.221 167.654 213.574 168.007 214.008 168.007 cv
214.443 168.007 214.795 167.654 214.795 167.22 cv
f
216.715 167.58 mo
216.715 167.146 216.363 166.792 215.928 166.792 cv
215.494 166.792 215.141 167.146 215.141 167.58 cv
215.141 168.015 215.494 168.367 215.928 168.367 cv
216.363 168.367 216.715 168.015 216.715 167.58 cv
f
218.635 168.06 mo
218.635 167.625 218.283 167.272 217.848 167.272 cv
217.414 167.272 217.061 167.625 217.061 168.06 cv
217.061 168.494 217.414 168.848 217.848 168.848 cv
218.283 168.848 218.635 168.494 218.635 168.06 cv
f
220.557 168.42 mo
220.557 167.985 220.203 167.632 219.768 167.632 cv
219.334 167.632 218.98 167.985 218.98 168.42 cv
218.98 168.854 219.334 169.207 219.768 169.207 cv
220.203 169.207 220.557 168.854 220.557 168.42 cv
f
222.477 169.02 mo
222.477 168.585 222.123 168.232 221.688 168.232 cv
221.254 168.232 220.9 168.585 220.9 169.02 cv
220.9 169.454 221.254 169.808 221.688 169.808 cv
222.123 169.808 222.477 169.454 222.477 169.02 cv
f
224.275 169.14 mo
224.275 168.705 223.924 168.353 223.488 168.353 cv
223.053 168.353 222.701 168.705 222.701 169.14 cv
222.701 169.574 223.053 169.928 223.488 169.928 cv
223.924 169.928 224.275 169.574 224.275 169.14 cv
f
226.195 169.74 mo
226.195 169.305 225.844 168.952 225.408 168.952 cv
224.973 168.952 224.621 169.305 224.621 169.74 cv
224.621 170.175 224.973 170.527 225.408 170.527 cv
225.844 170.527 226.195 170.175 226.195 169.74 cv
f
228.115 169.859 mo
228.115 169.425 227.764 169.072 227.328 169.072 cv
226.893 169.072 226.541 169.425 226.541 169.859 cv
226.541 170.295 226.893 170.647 227.328 170.647 cv
227.764 170.647 228.115 170.295 228.115 169.859 cv
f
230.035 170.34 mo
230.035 169.905 229.684 169.553 229.248 169.553 cv
228.814 169.553 228.461 169.905 228.461 170.34 cv
228.461 170.774 228.814 171.127 229.248 171.127 cv
229.684 171.127 230.035 170.774 230.035 170.34 cv
f
231.955 170.22 mo
231.955 169.785 231.604 169.433 231.168 169.433 cv
230.734 169.433 230.381 169.785 230.381 170.22 cv
230.381 170.654 230.734 171.007 231.168 171.007 cv
231.604 171.007 231.955 170.654 231.955 170.22 cv
f
42.7158 152.939 mo
42.7158 152.505 42.3628 152.152 41.9282 152.152 cv
41.4937 152.152 41.1406 152.505 41.1406 152.939 cv
41.1406 153.374 41.4937 153.728 41.9282 153.728 cv
42.3628 153.728 42.7158 153.374 42.7158 152.939 cv
f
44.6357 152.58 mo
44.6357 152.146 44.2827 151.792 43.8481 151.792 cv
43.4136 151.792 43.0605 152.146 43.0605 152.58 cv
43.0605 153.015 43.4136 153.367 43.8481 153.367 cv
44.2827 153.367 44.6357 153.015 44.6357 152.58 cv
f
46.5557 152.22 mo
46.5557 151.785 46.2026 151.433 45.7681 151.433 cv
45.3335 151.433 44.9805 151.785 44.9805 152.22 cv
44.9805 152.654 45.3335 153.007 45.7681 153.007 cv
46.2026 153.007 46.5557 152.654 46.5557 152.22 cv
f
48.4756 151.859 mo
48.4756 151.425 48.123 151.072 47.688 151.072 cv
47.2534 151.072 46.9009 151.425 46.9009 151.859 cv
46.9009 152.295 47.2534 152.647 47.688 152.647 cv
48.123 152.647 48.4756 152.295 48.4756 151.859 cv
f
50.3955 151.5 mo
50.3955 151.065 50.043 150.712 49.6084 150.712 cv
49.1733 150.712 48.8208 151.065 48.8208 151.5 cv
48.8208 151.935 49.1733 152.287 49.6084 152.287 cv
50.043 152.287 50.3955 151.935 50.3955 151.5 cv
f
52.3159 151.14 mo
52.3159 150.705 51.9629 150.353 51.5283 150.353 cv
51.0933 150.353 50.7407 150.705 50.7407 151.14 cv
50.7407 151.574 51.0933 151.928 51.5283 151.928 cv
51.9629 151.928 52.3159 151.574 52.3159 151.14 cv
f
54.2358 150.78 mo
54.2358 150.345 53.8828 149.992 53.4482 149.992 cv
53.0137 149.992 52.6606 150.345 52.6606 150.78 cv
52.6606 151.215 53.0137 151.567 53.4482 151.567 cv
53.8828 151.567 54.2358 151.215 54.2358 150.78 cv
f
56.1558 150.42 mo
56.1558 149.985 55.8027 149.632 55.3682 149.632 cv
54.9336 149.632 54.5806 149.985 54.5806 150.42 cv
54.5806 150.854 54.9336 151.207 55.3682 151.207 cv
55.8027 151.207 56.1558 150.854 56.1558 150.42 cv
f
58.0757 150.06 mo
58.0757 149.625 57.7227 149.272 57.2881 149.272 cv
56.8535 149.272 56.5005 149.625 56.5005 150.06 cv
56.5005 150.494 56.8535 150.848 57.2881 150.848 cv
57.7227 150.848 58.0757 150.494 58.0757 150.06 cv
f
59.8755 149.7 mo
59.8755 149.265 59.5229 148.912 59.0884 148.912 cv
58.6533 148.912 58.3008 149.265 58.3008 149.7 cv
58.3008 150.135 58.6533 150.487 59.0884 150.487 cv
59.5229 150.487 59.8755 150.135 59.8755 149.7 cv
f
61.7959 149.34 mo
61.7959 148.905 61.4429 148.553 61.0083 148.553 cv
60.5732 148.553 60.2207 148.905 60.2207 149.34 cv
60.2207 149.774 60.5732 150.127 61.0083 150.127 cv
61.4429 150.127 61.7959 149.774 61.7959 149.34 cv
f
63.7158 148.979 mo
63.7158 148.545 63.3628 148.192 62.9282 148.192 cv
62.4937 148.192 62.1406 148.545 62.1406 148.979 cv
62.1406 149.414 62.4937 149.768 62.9282 149.768 cv
63.3628 149.768 63.7158 149.414 63.7158 148.979 cv
f
65.6357 148.62 mo
65.6357 148.186 65.2827 147.832 64.8481 147.832 cv
64.4136 147.832 64.0605 148.186 64.0605 148.62 cv
64.0605 149.055 64.4136 149.407 64.8481 149.407 cv
65.2827 149.407 65.6357 149.055 65.6357 148.62 cv
f
67.5557 148.26 mo
67.5557 147.825 67.2026 147.473 66.7681 147.473 cv
66.3335 147.473 65.9805 147.825 65.9805 148.26 cv
65.9805 148.694 66.3335 149.047 66.7681 149.047 cv
67.2026 149.047 67.5557 148.694 67.5557 148.26 cv
f
69.4756 147.899 mo
69.4756 147.465 69.123 147.112 68.688 147.112 cv
68.2534 147.112 67.9009 147.465 67.9009 147.899 cv
67.9009 148.335 68.2534 148.688 68.688 148.688 cv
69.123 148.688 69.4756 148.335 69.4756 147.899 cv
f
71.3955 147.54 mo
71.3955 147.105 71.043 146.752 70.6084 146.752 cv
70.1733 146.752 69.8208 147.105 69.8208 147.54 cv
69.8208 147.975 70.1733 148.327 70.6084 148.327 cv
71.043 148.327 71.3955 147.975 71.3955 147.54 cv
f
73.3159 147.18 mo
73.3159 146.745 72.9629 146.393 72.5283 146.393 cv
72.0933 146.393 71.7407 146.745 71.7407 147.18 cv
71.7407 147.614 72.0933 147.968 72.5283 147.968 cv
72.9629 147.968 73.3159 147.614 73.3159 147.18 cv
f
75.2358 146.819 mo
75.2358 146.385 74.8828 146.032 74.4482 146.032 cv
74.0137 146.032 73.6606 146.385 73.6606 146.819 cv
73.6606 147.255 74.0137 147.607 74.4482 147.607 cv
74.8828 147.607 75.2358 147.255 75.2358 146.819 cv
f
77.1558 146.46 mo
77.1558 146.025 76.8027 145.672 76.3682 145.672 cv
75.9336 145.672 75.5806 146.025 75.5806 146.46 cv
75.5806 146.895 75.9336 147.247 76.3682 147.247 cv
76.8027 147.247 77.1558 146.895 77.1558 146.46 cv
f
79.0757 146.1 mo
79.0757 145.665 78.7227 145.313 78.2881 145.313 cv
77.8535 145.313 77.5005 145.665 77.5005 146.1 cv
77.5005 146.534 77.8535 146.888 78.2881 146.888 cv
78.7227 146.888 79.0757 146.534 79.0757 146.1 cv
f
80.9956 145.74 mo
80.9956 145.305 80.6431 144.952 80.208 144.952 cv
79.7734 144.952 79.4209 145.305 79.4209 145.74 cv
79.4209 146.175 79.7734 146.527 80.208 146.527 cv
80.6431 146.527 80.9956 146.175 80.9956 145.74 cv
f
82.9155 145.38 mo
82.9155 144.945 82.563 144.593 82.1284 144.593 cv
81.6934 144.593 81.3408 144.945 81.3408 145.38 cv
81.3408 145.814 81.6934 146.167 82.1284 146.167 cv
82.563 146.167 82.9155 145.814 82.9155 145.38 cv
f
84.8354 145.02 mo
84.8354 144.585 84.4829 144.232 84.0483 144.232 cv
83.6133 144.232 83.2607 144.585 83.2607 145.02 cv
83.2607 145.454 83.6133 145.808 84.0483 145.808 cv
84.4829 145.808 84.8354 145.454 84.8354 145.02 cv
f
86.6357 144.66 mo
86.6357 144.225 86.2827 143.872 85.8481 143.872 cv
85.4136 143.872 85.0605 144.225 85.0605 144.66 cv
85.0605 145.095 85.4136 145.447 85.8481 145.447 cv
86.2827 145.447 86.6357 145.095 86.6357 144.66 cv
f
88.6758 144.3 mo
88.6758 143.865 88.3228 143.513 87.8882 143.513 cv
87.4536 143.513 87.1006 143.865 87.1006 144.3 cv
87.1006 144.734 87.4536 145.087 87.8882 145.087 cv
88.3228 145.087 88.6758 144.734 88.6758 144.3 cv
f
90.4756 143.939 mo
90.4756 143.505 90.123 143.152 89.688 143.152 cv
89.2534 143.152 88.9009 143.505 88.9009 143.939 cv
88.9009 144.374 89.2534 144.728 89.688 144.728 cv
90.123 144.728 90.4756 144.374 90.4756 143.939 cv
f
92.3955 143.58 mo
92.3955 143.146 92.043 142.792 91.6084 142.792 cv
91.1733 142.792 90.8208 143.146 90.8208 143.58 cv
90.8208 144.015 91.1733 144.367 91.6084 144.367 cv
92.043 144.367 92.3955 144.015 92.3955 143.58 cv
f
94.3159 143.22 mo
94.3159 142.785 93.9629 142.433 93.5283 142.433 cv
93.0933 142.433 92.7407 142.785 92.7407 143.22 cv
92.7407 143.654 93.0933 144.007 93.5283 144.007 cv
93.9629 144.007 94.3159 143.654 94.3159 143.22 cv
f
96.2358 142.859 mo
96.2358 142.425 95.8828 142.072 95.4482 142.072 cv
95.0137 142.072 94.6606 142.425 94.6606 142.859 cv
94.6606 143.295 95.0137 143.647 95.4482 143.647 cv
95.8828 143.647 96.2358 143.295 96.2358 142.859 cv
f
98.1558 142.5 mo
98.1558 142.065 97.8027 141.712 97.3682 141.712 cv
96.9336 141.712 96.5806 142.065 96.5806 142.5 cv
96.5806 142.935 96.9336 143.287 97.3682 143.287 cv
97.8027 143.287 98.1558 142.935 98.1558 142.5 cv
f
100.076 142.26 mo
100.076 141.825 99.7231 141.473 99.2881 141.473 cv
98.8535 141.473 98.5005 141.825 98.5005 142.26 cv
98.5005 142.694 98.8535 143.047 99.2881 143.047 cv
99.7231 143.047 100.076 142.694 100.076 142.26 cv
f
101.996 141.899 mo
101.996 141.465 101.643 141.112 101.208 141.112 cv
100.773 141.112 100.421 141.465 100.421 141.899 cv
100.421 142.335 100.773 142.688 101.208 142.688 cv
101.643 142.688 101.996 142.335 101.996 141.899 cv
f
103.916 141.54 mo
103.916 141.105 103.563 140.752 103.128 140.752 cv
102.693 140.752 102.341 141.105 102.341 141.54 cv
102.341 141.975 102.693 142.327 103.128 142.327 cv
103.563 142.327 103.916 141.975 103.916 141.54 cv
f
105.835 141.18 mo
105.835 140.745 105.483 140.393 105.048 140.393 cv
104.613 140.393 104.261 140.745 104.261 141.18 cv
104.261 141.614 104.613 141.968 105.048 141.968 cv
105.483 141.968 105.835 141.614 105.835 141.18 cv
f
107.756 140.819 mo
107.756 140.385 107.403 140.032 106.968 140.032 cv
106.534 140.032 106.181 140.385 106.181 140.819 cv
106.181 141.255 106.534 141.607 106.968 141.607 cv
107.403 141.607 107.756 141.255 107.756 140.819 cv
f
109.676 140.58 mo
109.676 140.146 109.323 139.792 108.888 139.792 cv
108.454 139.792 108.101 140.146 108.101 140.58 cv
108.101 141.015 108.454 141.367 108.888 141.367 cv
109.323 141.367 109.676 141.015 109.676 140.58 cv
f
111.596 140.22 mo
111.596 139.785 111.243 139.433 110.808 139.433 cv
110.374 139.433 110.021 139.785 110.021 140.22 cv
110.021 140.654 110.374 141.007 110.808 141.007 cv
111.243 141.007 111.596 140.654 111.596 140.22 cv
f
113.516 139.979 mo
113.516 139.545 113.163 139.192 112.728 139.192 cv
112.293 139.192 111.941 139.545 111.941 139.979 cv
111.941 140.414 112.293 140.768 112.728 140.768 cv
113.163 140.768 113.516 140.414 113.516 139.979 cv
f
115.316 139.859 mo
115.316 139.425 114.963 139.072 114.528 139.072 cv
114.093 139.072 113.741 139.425 113.741 139.859 cv
113.741 140.295 114.093 140.647 114.528 140.647 cv
114.963 140.647 115.316 140.295 115.316 139.859 cv
f
117.236 139.5 mo
117.236 139.065 116.883 138.712 116.448 138.712 cv
116.014 138.712 115.661 139.065 115.661 139.5 cv
115.661 139.935 116.014 140.287 116.448 140.287 cv
116.883 140.287 117.236 139.935 117.236 139.5 cv
f
119.156 139.14 mo
119.156 138.705 118.803 138.353 118.368 138.353 cv
117.934 138.353 117.581 138.705 117.581 139.14 cv
117.581 139.574 117.934 139.928 118.368 139.928 cv
118.803 139.928 119.156 139.574 119.156 139.14 cv
f
121.076 138.899 mo
121.076 138.465 120.723 138.112 120.288 138.112 cv
119.854 138.112 119.5 138.465 119.5 138.899 cv
119.5 139.335 119.854 139.688 120.288 139.688 cv
120.723 139.688 121.076 139.335 121.076 138.899 cv
f
122.996 138.66 mo
122.996 138.225 122.643 137.872 122.208 137.872 cv
121.773 137.872 121.421 138.225 121.421 138.66 cv
121.421 139.095 121.773 139.447 122.208 139.447 cv
122.643 139.447 122.996 139.095 122.996 138.66 cv
f
124.916 138.54 mo
124.916 138.105 124.563 137.752 124.128 137.752 cv
123.693 137.752 123.341 138.105 123.341 138.54 cv
123.341 138.975 123.693 139.327 124.128 139.327 cv
124.563 139.327 124.916 138.975 124.916 138.54 cv
f
126.835 138.3 mo
126.835 137.865 126.483 137.513 126.048 137.513 cv
125.613 137.513 125.261 137.865 125.261 138.3 cv
125.261 138.734 125.613 139.087 126.048 139.087 cv
126.483 139.087 126.835 138.734 126.835 138.3 cv
f
128.756 138.3 mo
128.756 137.865 128.403 137.513 127.968 137.513 cv
127.534 137.513 127.181 137.865 127.181 138.3 cv
127.181 138.734 127.534 139.087 127.968 139.087 cv
128.403 139.087 128.756 138.734 128.756 138.3 cv
f
130.676 138.18 mo
130.676 137.745 130.323 137.393 129.888 137.393 cv
129.454 137.393 129.101 137.745 129.101 138.18 cv
129.101 138.614 129.454 138.968 129.888 138.968 cv
130.323 138.968 130.676 138.614 130.676 138.18 cv
f
132.596 138.06 mo
132.596 137.625 132.243 137.272 131.808 137.272 cv
131.374 137.272 131.021 137.625 131.021 138.06 cv
131.021 138.494 131.374 138.848 131.808 138.848 cv
132.243 138.848 132.596 138.494 132.596 138.06 cv
f
134.516 137.939 mo
134.516 137.505 134.163 137.152 133.728 137.152 cv
133.293 137.152 132.941 137.505 132.941 137.939 cv
132.941 138.374 133.293 138.728 133.728 138.728 cv
134.163 138.728 134.516 138.374 134.516 137.939 cv
f
136.436 137.7 mo
136.436 137.265 136.083 136.912 135.648 136.912 cv
135.213 136.912 134.861 137.265 134.861 137.7 cv
134.861 138.135 135.213 138.487 135.648 138.487 cv
136.083 138.487 136.436 138.135 136.436 137.7 cv
f
138.355 137.58 mo
138.355 137.146 138.003 136.792 137.568 136.792 cv
137.133 136.792 136.781 137.146 136.781 137.58 cv
136.781 138.015 137.133 138.367 137.568 138.367 cv
138.003 138.367 138.355 138.015 138.355 137.58 cv
f
140.275 137.7 mo
140.275 137.265 139.924 136.912 139.488 136.912 cv
139.053 136.912 138.701 137.265 138.701 137.7 cv
138.701 138.135 139.053 138.487 139.488 138.487 cv
139.924 138.487 140.275 138.135 140.275 137.7 cv
f
142.076 138.18 mo
142.076 137.745 141.723 137.393 141.289 137.393 cv
140.854 137.393 140.5 137.745 140.5 138.18 cv
140.5 138.614 140.854 138.968 141.289 138.968 cv
141.723 138.968 142.076 138.614 142.076 138.18 cv
f
143.996 137.939 mo
143.996 137.505 143.643 137.152 143.209 137.152 cv
142.773 137.152 142.42 137.505 142.42 137.939 cv
142.42 138.374 142.773 138.728 143.209 138.728 cv
143.643 138.728 143.996 138.374 143.996 137.939 cv
f
146.035 137.819 mo
146.035 137.385 145.684 137.032 145.248 137.032 cv
144.814 137.032 144.461 137.385 144.461 137.819 cv
144.461 138.255 144.814 138.607 145.248 138.607 cv
145.684 138.607 146.035 138.255 146.035 137.819 cv
f
147.836 138.18 mo
147.836 137.745 147.482 137.393 147.049 137.393 cv
146.613 137.393 146.26 137.745 146.26 138.18 cv
146.26 138.614 146.613 138.968 147.049 138.968 cv
147.482 138.968 147.836 138.614 147.836 138.18 cv
f
149.756 138.3 mo
149.756 137.865 149.402 137.513 148.969 137.513 cv
148.533 137.513 148.182 137.865 148.182 138.3 cv
148.182 138.734 148.533 139.087 148.969 139.087 cv
149.402 139.087 149.756 138.734 149.756 138.3 cv
f
151.676 138.42 mo
151.676 137.985 151.322 137.632 150.889 137.632 cv
150.453 137.632 150.102 137.985 150.102 138.42 cv
150.102 138.854 150.453 139.207 150.889 139.207 cv
151.322 139.207 151.676 138.854 151.676 138.42 cv
f
153.596 138.78 mo
153.596 138.345 153.242 137.992 152.809 137.992 cv
152.373 137.992 152.021 138.345 152.021 138.78 cv
152.021 139.215 152.373 139.567 152.809 139.567 cv
153.242 139.567 153.596 139.215 153.596 138.78 cv
f
155.516 139.02 mo
155.516 138.585 155.162 138.232 154.729 138.232 cv
154.293 138.232 153.941 138.585 153.941 139.02 cv
153.941 139.454 154.293 139.808 154.729 139.808 cv
155.162 139.808 155.516 139.454 155.516 139.02 cv
f
157.436 139.38 mo
157.436 138.945 157.082 138.593 156.648 138.593 cv
156.213 138.593 155.861 138.945 155.861 139.38 cv
155.861 139.814 156.213 140.167 156.648 140.167 cv
157.082 140.167 157.436 139.814 157.436 139.38 cv
f
159.355 139.26 mo
159.355 138.825 159.002 138.473 158.568 138.473 cv
158.133 138.473 157.781 138.825 157.781 139.26 cv
157.781 139.694 158.133 140.047 158.568 140.047 cv
159.002 140.047 159.355 139.694 159.355 139.26 cv
f
161.275 139.5 mo
161.275 139.065 160.924 138.712 160.488 138.712 cv
160.053 138.712 159.701 139.065 159.701 139.5 cv
159.701 139.935 160.053 140.287 160.488 140.287 cv
160.924 140.287 161.275 139.935 161.275 139.5 cv
f
163.195 139.62 mo
163.195 139.186 162.844 138.832 162.408 138.832 cv
161.973 138.832 161.621 139.186 161.621 139.62 cv
161.621 140.055 161.973 140.407 162.408 140.407 cv
162.844 140.407 163.195 140.055 163.195 139.62 cv
f
165.115 140.34 mo
165.115 139.905 164.764 139.553 164.328 139.553 cv
163.893 139.553 163.541 139.905 163.541 140.34 cv
163.541 140.774 163.893 141.127 164.328 141.127 cv
164.764 141.127 165.115 140.774 165.115 140.34 cv
f
166.916 140.58 mo
166.916 140.146 166.563 139.792 166.129 139.792 cv
165.693 139.792 165.34 140.146 165.34 140.58 cv
165.34 141.015 165.693 141.367 166.129 141.367 cv
166.563 141.367 166.916 141.015 166.916 140.58 cv
f
168.836 140.46 mo
168.836 140.025 168.482 139.672 168.049 139.672 cv
167.613 139.672 167.26 140.025 167.26 140.46 cv
167.26 140.895 167.613 141.247 168.049 141.247 cv
168.482 141.247 168.836 140.895 168.836 140.46 cv
f
170.875 141.3 mo
170.875 140.865 170.523 140.513 170.088 140.513 cv
169.654 140.513 169.301 140.865 169.301 141.3 cv
169.301 141.734 169.654 142.087 170.088 142.087 cv
170.523 142.087 170.875 141.734 170.875 141.3 cv
f
172.676 141.66 mo
172.676 141.225 172.322 140.872 171.889 140.872 cv
171.453 140.872 171.102 141.225 171.102 141.66 cv
171.102 142.095 171.453 142.447 171.889 142.447 cv
172.322 142.447 172.676 142.095 172.676 141.66 cv
f
174.596 142.26 mo
174.596 141.825 174.242 141.473 173.809 141.473 cv
173.373 141.473 173.021 141.825 173.021 142.26 cv
173.021 142.694 173.373 143.047 173.809 143.047 cv
174.242 143.047 174.596 142.694 174.596 142.26 cv
f
176.516 141.899 mo
176.516 141.465 176.162 141.112 175.729 141.112 cv
175.293 141.112 174.941 141.465 174.941 141.899 cv
174.941 142.335 175.293 142.688 175.729 142.688 cv
176.162 142.688 176.516 142.335 176.516 141.899 cv
f
178.436 142.38 mo
178.436 141.945 178.082 141.593 177.648 141.593 cv
177.213 141.593 176.861 141.945 176.861 142.38 cv
176.861 142.814 177.213 143.167 177.648 143.167 cv
178.082 143.167 178.436 142.814 178.436 142.38 cv
f
180.355 142.979 mo
180.355 142.545 180.002 142.192 179.568 142.192 cv
179.133 142.192 178.781 142.545 178.781 142.979 cv
178.781 143.414 179.133 143.768 179.568 143.768 cv
180.002 143.768 180.355 143.414 180.355 142.979 cv
f
182.275 143.46 mo
182.275 143.025 181.924 142.672 181.488 142.672 cv
181.053 142.672 180.701 143.025 180.701 143.46 cv
180.701 143.895 181.053 144.247 181.488 144.247 cv
181.924 144.247 182.275 143.895 182.275 143.46 cv
f
184.195 143.7 mo
184.195 143.265 183.844 142.912 183.408 142.912 cv
182.973 142.912 182.621 143.265 182.621 143.7 cv
182.621 144.135 182.973 144.487 183.408 144.487 cv
183.844 144.487 184.195 144.135 184.195 143.7 cv
f
186.115 143.939 mo
186.115 143.505 185.764 143.152 185.328 143.152 cv
184.893 143.152 184.541 143.505 184.541 143.939 cv
184.541 144.374 184.893 144.728 185.328 144.728 cv
185.764 144.728 186.115 144.374 186.115 143.939 cv
f
188.035 143.939 mo
188.035 143.505 187.684 143.152 187.248 143.152 cv
186.814 143.152 186.461 143.505 186.461 143.939 cv
186.461 144.374 186.814 144.728 187.248 144.728 cv
187.684 144.728 188.035 144.374 188.035 143.939 cv
f
189.955 144.66 mo
189.955 144.225 189.604 143.872 189.168 143.872 cv
188.734 143.872 188.381 144.225 188.381 144.66 cv
188.381 145.095 188.734 145.447 189.168 145.447 cv
189.604 145.447 189.955 145.095 189.955 144.66 cv
f
191.875 145.02 mo
191.875 144.585 191.523 144.232 191.088 144.232 cv
190.654 144.232 190.301 144.585 190.301 145.02 cv
190.301 145.454 190.654 145.808 191.088 145.808 cv
191.523 145.808 191.875 145.454 191.875 145.02 cv
f
193.676 145.26 mo
193.676 144.825 193.322 144.473 192.889 144.473 cv
192.453 144.473 192.102 144.825 192.102 145.26 cv
192.102 145.694 192.453 146.047 192.889 146.047 cv
193.322 146.047 193.676 145.694 193.676 145.26 cv
f
195.715 145.74 mo
195.715 145.305 195.363 144.952 194.928 144.952 cv
194.494 144.952 194.141 145.305 194.141 145.74 cv
194.141 146.175 194.494 146.527 194.928 146.527 cv
195.363 146.527 195.715 146.175 195.715 145.74 cv
f
197.635 146.46 mo
197.635 146.025 197.283 145.672 196.848 145.672 cv
196.414 145.672 196.061 146.025 196.061 146.46 cv
196.061 146.895 196.414 147.247 196.848 147.247 cv
197.283 147.247 197.635 146.895 197.635 146.46 cv
f
199.436 146.939 mo
199.436 146.505 199.082 146.152 198.648 146.152 cv
198.213 146.152 197.861 146.505 197.861 146.939 cv
197.861 147.374 198.213 147.728 198.648 147.728 cv
199.082 147.728 199.436 147.374 199.436 146.939 cv
f
201.355 146.819 mo
201.355 146.385 201.002 146.032 200.568 146.032 cv
200.133 146.032 199.781 146.385 199.781 146.819 cv
199.781 147.255 200.133 147.607 200.568 147.607 cv
201.002 147.607 201.355 147.255 201.355 146.819 cv
f
203.275 147.42 mo
203.275 146.985 202.924 146.632 202.488 146.632 cv
202.053 146.632 201.701 146.985 201.701 147.42 cv
201.701 147.854 202.053 148.207 202.488 148.207 cv
202.924 148.207 203.275 147.854 203.275 147.42 cv
f
205.195 147.78 mo
205.195 147.345 204.844 146.992 204.408 146.992 cv
203.973 146.992 203.621 147.345 203.621 147.78 cv
203.621 148.215 203.973 148.567 204.408 148.567 cv
204.844 148.567 205.195 148.215 205.195 147.78 cv
f
207.115 147.899 mo
207.115 147.465 206.764 147.112 206.328 147.112 cv
205.893 147.112 205.541 147.465 205.541 147.899 cv
205.541 148.335 205.893 148.688 206.328 148.688 cv
206.764 148.688 207.115 148.335 207.115 147.899 cv
f
209.035 148.62 mo
209.035 148.186 208.684 147.832 208.248 147.832 cv
207.814 147.832 207.461 148.186 207.461 148.62 cv
207.461 149.055 207.814 149.407 208.248 149.407 cv
208.684 149.407 209.035 149.055 209.035 148.62 cv
f
210.955 148.38 mo
210.955 147.945 210.604 147.593 210.168 147.593 cv
209.734 147.593 209.381 147.945 209.381 148.38 cv
209.381 148.814 209.734 149.167 210.168 149.167 cv
210.604 149.167 210.955 148.814 210.955 148.38 cv
f
212.875 148.859 mo
212.875 148.425 212.523 148.072 212.088 148.072 cv
211.654 148.072 211.301 148.425 211.301 148.859 cv
211.301 149.295 211.654 149.647 212.088 149.647 cv
212.523 149.647 212.875 149.295 212.875 148.859 cv
f
214.795 149.1 mo
214.795 148.665 214.443 148.313 214.008 148.313 cv
213.574 148.313 213.221 148.665 213.221 149.1 cv
213.221 149.534 213.574 149.888 214.008 149.888 cv
214.443 149.888 214.795 149.534 214.795 149.1 cv
f
216.715 149.939 mo
216.715 149.505 216.363 149.152 215.928 149.152 cv
215.494 149.152 215.141 149.505 215.141 149.939 cv
215.141 150.374 215.494 150.728 215.928 150.728 cv
216.363 150.728 216.715 150.374 216.715 149.939 cv
f
218.635 150.06 mo
218.635 149.625 218.283 149.272 217.848 149.272 cv
217.414 149.272 217.061 149.625 217.061 150.06 cv
217.061 150.494 217.414 150.848 217.848 150.848 cv
218.283 150.848 218.635 150.494 218.635 150.06 cv
f
220.557 150.54 mo
220.557 150.105 220.203 149.752 219.768 149.752 cv
219.334 149.752 218.98 150.105 218.98 150.54 cv
218.98 150.975 219.334 151.327 219.768 151.327 cv
220.203 151.327 220.557 150.975 220.557 150.54 cv
f
222.477 150.54 mo
222.477 150.105 222.123 149.752 221.688 149.752 cv
221.254 149.752 220.9 150.105 220.9 150.54 cv
220.9 150.975 221.254 151.327 221.688 151.327 cv
222.123 151.327 222.477 150.975 222.477 150.54 cv
f
224.275 151.26 mo
224.275 150.825 223.924 150.473 223.488 150.473 cv
223.053 150.473 222.701 150.825 222.701 151.26 cv
222.701 151.694 223.053 152.047 223.488 152.047 cv
223.924 152.047 224.275 151.694 224.275 151.26 cv
f
226.195 151.38 mo
226.195 150.945 225.844 150.593 225.408 150.593 cv
224.973 150.593 224.621 150.945 224.621 151.38 cv
224.621 151.814 224.973 152.167 225.408 152.167 cv
225.844 152.167 226.195 151.814 226.195 151.38 cv
f
228.115 151.74 mo
228.115 151.305 227.764 150.952 227.328 150.952 cv
226.893 150.952 226.541 151.305 226.541 151.74 cv
226.541 152.175 226.893 152.527 227.328 152.527 cv
227.764 152.527 228.115 152.175 228.115 151.74 cv
f
230.035 152.1 mo
230.035 151.665 229.684 151.313 229.248 151.313 cv
228.814 151.313 228.461 151.665 228.461 152.1 cv
228.461 152.534 228.814 152.888 229.248 152.888 cv
229.684 152.888 230.035 152.534 230.035 152.1 cv
f
231.955 152.58 mo
231.955 152.146 231.604 151.792 231.168 151.792 cv
230.734 151.792 230.381 152.146 230.381 152.58 cv
230.381 153.015 230.734 153.367 231.168 153.367 cv
231.604 153.367 231.955 153.015 231.955 152.58 cv
f
42.7158 143.939 mo
42.7158 143.505 42.3628 143.152 41.9282 143.152 cv
41.4937 143.152 41.1406 143.505 41.1406 143.939 cv
41.1406 144.374 41.4937 144.728 41.9282 144.728 cv
42.3628 144.728 42.7158 144.374 42.7158 143.939 cv
f
44.6357 143.46 mo
44.6357 143.025 44.2827 142.672 43.8481 142.672 cv
43.4136 142.672 43.0605 143.025 43.0605 143.46 cv
43.0605 143.895 43.4136 144.247 43.8481 144.247 cv
44.2827 144.247 44.6357 143.895 44.6357 143.46 cv
f
46.5557 142.859 mo
46.5557 142.425 46.2026 142.072 45.7681 142.072 cv
45.3335 142.072 44.9805 142.425 44.9805 142.859 cv
44.9805 143.295 45.3335 143.647 45.7681 143.647 cv
46.2026 143.647 46.5557 143.295 46.5557 142.859 cv
f
48.4756 142.38 mo
48.4756 141.945 48.123 141.593 47.688 141.593 cv
47.2534 141.593 46.9009 141.945 46.9009 142.38 cv
46.9009 142.814 47.2534 143.167 47.688 143.167 cv
48.123 143.167 48.4756 142.814 48.4756 142.38 cv
f
50.3955 141.78 mo
50.3955 141.345 50.043 140.992 49.6084 140.992 cv
49.1733 140.992 48.8208 141.345 48.8208 141.78 cv
48.8208 142.215 49.1733 142.567 49.6084 142.567 cv
50.043 142.567 50.3955 142.215 50.3955 141.78 cv
f
52.3159 141.3 mo
52.3159 140.865 51.9629 140.513 51.5283 140.513 cv
51.0933 140.513 50.7407 140.865 50.7407 141.3 cv
50.7407 141.734 51.0933 142.087 51.5283 142.087 cv
51.9629 142.087 52.3159 141.734 52.3159 141.3 cv
f
54.2358 140.7 mo
54.2358 140.265 53.8828 139.912 53.4482 139.912 cv
53.0137 139.912 52.6606 140.265 52.6606 140.7 cv
52.6606 141.135 53.0137 141.487 53.4482 141.487 cv
53.8828 141.487 54.2358 141.135 54.2358 140.7 cv
f
56.1558 140.22 mo
56.1558 139.785 55.8027 139.433 55.3682 139.433 cv
54.9336 139.433 54.5806 139.785 54.5806 140.22 cv
54.5806 140.654 54.9336 141.007 55.3682 141.007 cv
55.8027 141.007 56.1558 140.654 56.1558 140.22 cv
f
58.0757 139.62 mo
58.0757 139.186 57.7227 138.832 57.2881 138.832 cv
56.8535 138.832 56.5005 139.186 56.5005 139.62 cv
56.5005 140.055 56.8535 140.407 57.2881 140.407 cv
57.7227 140.407 58.0757 140.055 58.0757 139.62 cv
f
59.8755 139.14 mo
59.8755 138.705 59.5229 138.353 59.0884 138.353 cv
58.6533 138.353 58.3008 138.705 58.3008 139.14 cv
58.3008 139.574 58.6533 139.928 59.0884 139.928 cv
59.5229 139.928 59.8755 139.574 59.8755 139.14 cv
f
61.7959 138.54 mo
61.7959 138.105 61.4429 137.752 61.0083 137.752 cv
60.5732 137.752 60.2207 138.105 60.2207 138.54 cv
60.2207 138.975 60.5732 139.327 61.0083 139.327 cv
61.4429 139.327 61.7959 138.975 61.7959 138.54 cv
f
63.7158 138.06 mo
63.7158 137.625 63.3628 137.272 62.9282 137.272 cv
62.4937 137.272 62.1406 137.625 62.1406 138.06 cv
62.1406 138.494 62.4937 138.848 62.9282 138.848 cv
63.3628 138.848 63.7158 138.494 63.7158 138.06 cv
f
65.6357 137.46 mo
65.6357 137.025 65.2827 136.672 64.8481 136.672 cv
64.4136 136.672 64.0605 137.025 64.0605 137.46 cv
64.0605 137.895 64.4136 138.247 64.8481 138.247 cv
65.2827 138.247 65.6357 137.895 65.6357 137.46 cv
f
67.5557 136.979 mo
67.5557 136.545 67.2026 136.192 66.7681 136.192 cv
66.3335 136.192 65.9805 136.545 65.9805 136.979 cv
65.9805 137.414 66.3335 137.768 66.7681 137.768 cv
67.2026 137.768 67.5557 137.414 67.5557 136.979 cv
f
69.4756 136.38 mo
69.4756 135.945 69.123 135.593 68.688 135.593 cv
68.2534 135.593 67.9009 135.945 67.9009 136.38 cv
67.9009 136.814 68.2534 137.167 68.688 137.167 cv
69.123 137.167 69.4756 136.814 69.4756 136.38 cv
f
71.3955 135.899 mo
71.3955 135.465 71.043 135.112 70.6084 135.112 cv
70.1733 135.112 69.8208 135.465 69.8208 135.899 cv
69.8208 136.335 70.1733 136.688 70.6084 136.688 cv
71.043 136.688 71.3955 136.335 71.3955 135.899 cv
f
73.3159 135.3 mo
73.3159 134.865 72.9629 134.513 72.5283 134.513 cv
72.0933 134.513 71.7407 134.865 71.7407 135.3 cv
71.7407 135.734 72.0933 136.087 72.5283 136.087 cv
72.9629 136.087 73.3159 135.734 73.3159 135.3 cv
f
75.2358 134.819 mo
75.2358 134.385 74.8828 134.032 74.4482 134.032 cv
74.0137 134.032 73.6606 134.385 73.6606 134.819 cv
73.6606 135.255 74.0137 135.607 74.4482 135.607 cv
74.8828 135.607 75.2358 135.255 75.2358 134.819 cv
f
77.1558 134.22 mo
77.1558 133.785 76.8027 133.433 76.3682 133.433 cv
75.9336 133.433 75.5806 133.785 75.5806 134.22 cv
75.5806 134.654 75.9336 135.007 76.3682 135.007 cv
76.8027 135.007 77.1558 134.654 77.1558 134.22 cv
f
79.0757 133.74 mo
79.0757 133.305 78.7227 132.952 78.2881 132.952 cv
77.8535 132.952 77.5005 133.305 77.5005 133.74 cv
77.5005 134.175 77.8535 134.527 78.2881 134.527 cv
78.7227 134.527 79.0757 134.175 79.0757 133.74 cv
f
80.9956 133.14 mo
80.9956 132.705 80.6431 132.353 80.208 132.353 cv
79.7734 132.353 79.4209 132.705 79.4209 133.14 cv
79.4209 133.574 79.7734 133.928 80.208 133.928 cv
80.6431 133.928 80.9956 133.574 80.9956 133.14 cv
f
82.9155 132.66 mo
82.9155 132.225 82.563 131.872 82.1284 131.872 cv
81.6934 131.872 81.3408 132.225 81.3408 132.66 cv
81.3408 133.095 81.6934 133.447 82.1284 133.447 cv
82.563 133.447 82.9155 133.095 82.9155 132.66 cv
f
84.8354 132.06 mo
84.8354 131.625 84.4829 131.272 84.0483 131.272 cv
83.6133 131.272 83.2607 131.625 83.2607 132.06 cv
83.2607 132.494 83.6133 132.848 84.0483 132.848 cv
84.4829 132.848 84.8354 132.494 84.8354 132.06 cv
f
86.6357 131.58 mo
86.6357 131.146 86.2827 130.792 85.8481 130.792 cv
85.4136 130.792 85.0605 131.146 85.0605 131.58 cv
85.0605 132.015 85.4136 132.367 85.8481 132.367 cv
86.2827 132.367 86.6357 132.015 86.6357 131.58 cv
f
88.6758 131.1 mo
88.6758 130.665 88.3228 130.313 87.8882 130.313 cv
87.4536 130.313 87.1006 130.665 87.1006 131.1 cv
87.1006 131.534 87.4536 131.888 87.8882 131.888 cv
88.3228 131.888 88.6758 131.534 88.6758 131.1 cv
f
90.4756 130.5 mo
90.4756 130.065 90.123 129.712 89.688 129.712 cv
89.2534 129.712 88.9009 130.065 88.9009 130.5 cv
88.9009 130.935 89.2534 131.287 89.688 131.287 cv
90.123 131.287 90.4756 130.935 90.4756 130.5 cv
f
92.3955 129.899 mo
92.3955 129.465 92.043 129.112 91.6084 129.112 cv
91.1733 129.112 90.8208 129.465 90.8208 129.899 cv
90.8208 130.335 91.1733 130.688 91.6084 130.688 cv
92.043 130.688 92.3955 130.335 92.3955 129.899 cv
f
94.3159 129.42 mo
94.3159 128.985 93.9629 128.632 93.5283 128.632 cv
93.0933 128.632 92.7407 128.985 92.7407 129.42 cv
92.7407 129.854 93.0933 130.207 93.5283 130.207 cv
93.9629 130.207 94.3159 129.854 94.3159 129.42 cv
f
96.2358 128.939 mo
96.2358 128.505 95.8828 128.152 95.4482 128.152 cv
95.0137 128.152 94.6606 128.505 94.6606 128.939 cv
94.6606 129.374 95.0137 129.728 95.4482 129.728 cv
95.8828 129.728 96.2358 129.374 96.2358 128.939 cv
f
98.1558 128.34 mo
98.1558 127.905 97.8027 127.553 97.3682 127.553 cv
96.9336 127.553 96.5806 127.905 96.5806 128.34 cv
96.5806 128.774 96.9336 129.127 97.3682 129.127 cv
97.8027 129.127 98.1558 128.774 98.1558 128.34 cv
f
100.076 127.859 mo
100.076 127.425 99.7231 127.072 99.2881 127.072 cv
98.8535 127.072 98.5005 127.425 98.5005 127.859 cv
98.5005 128.295 98.8535 128.647 99.2881 128.647 cv
99.7231 128.647 100.076 128.295 100.076 127.859 cv
f
101.996 127.26 mo
101.996 126.825 101.643 126.473 101.208 126.473 cv
100.773 126.473 100.421 126.825 100.421 127.26 cv
100.421 127.694 100.773 128.047 101.208 128.047 cv
101.643 128.047 101.996 127.694 101.996 127.26 cv
f
103.916 126.78 mo
103.916 126.345 103.563 125.992 103.128 125.992 cv
102.693 125.992 102.341 126.345 102.341 126.78 cv
102.341 127.215 102.693 127.567 103.128 127.567 cv
103.563 127.567 103.916 127.215 103.916 126.78 cv
f
105.835 126.3 mo
105.835 125.865 105.483 125.513 105.048 125.513 cv
104.613 125.513 104.261 125.865 104.261 126.3 cv
104.261 126.734 104.613 127.087 105.048 127.087 cv
105.483 127.087 105.835 126.734 105.835 126.3 cv
f
107.756 125.819 mo
107.756 125.385 107.403 125.032 106.968 125.032 cv
106.534 125.032 106.181 125.385 106.181 125.819 cv
106.181 126.255 106.534 126.607 106.968 126.607 cv
107.403 126.607 107.756 126.255 107.756 125.819 cv
f
109.676 125.34 mo
109.676 124.905 109.323 124.553 108.888 124.553 cv
108.454 124.553 108.101 124.905 108.101 125.34 cv
108.101 125.774 108.454 126.127 108.888 126.127 cv
109.323 126.127 109.676 125.774 109.676 125.34 cv
f
111.596 124.859 mo
111.596 124.425 111.243 124.072 110.808 124.072 cv
110.374 124.072 110.021 124.425 110.021 124.859 cv
110.021 125.295 110.374 125.647 110.808 125.647 cv
111.243 125.647 111.596 125.295 111.596 124.859 cv
f
113.516 124.5 mo
113.516 124.065 113.163 123.712 112.728 123.712 cv
112.293 123.712 111.941 124.065 111.941 124.5 cv
111.941 124.935 112.293 125.287 112.728 125.287 cv
113.163 125.287 113.516 124.935 113.516 124.5 cv
f
115.316 124.02 mo
115.316 123.585 114.963 123.232 114.528 123.232 cv
114.093 123.232 113.741 123.585 113.741 124.02 cv
113.741 124.454 114.093 124.808 114.528 124.808 cv
114.963 124.808 115.316 124.454 115.316 124.02 cv
f
117.236 123.54 mo
117.236 123.105 116.883 122.752 116.448 122.752 cv
116.014 122.752 115.661 123.105 115.661 123.54 cv
115.661 123.975 116.014 124.327 116.448 124.327 cv
116.883 124.327 117.236 123.975 117.236 123.54 cv
f
119.156 123.18 mo
119.156 122.745 118.803 122.393 118.368 122.393 cv
117.934 122.393 117.581 122.745 117.581 123.18 cv
117.581 123.614 117.934 123.968 118.368 123.968 cv
118.803 123.968 119.156 123.614 119.156 123.18 cv
f
121.076 122.7 mo
121.076 122.265 120.723 121.912 120.288 121.912 cv
119.854 121.912 119.5 122.265 119.5 122.7 cv
119.5 123.135 119.854 123.487 120.288 123.487 cv
120.723 123.487 121.076 123.135 121.076 122.7 cv
f
122.996 122.46 mo
122.996 122.025 122.643 121.672 122.208 121.672 cv
121.773 121.672 121.421 122.025 121.421 122.46 cv
121.421 122.895 121.773 123.247 122.208 123.247 cv
122.643 123.247 122.996 122.895 122.996 122.46 cv
f
124.916 121.979 mo
124.916 121.545 124.563 121.192 124.128 121.192 cv
123.693 121.192 123.341 121.545 123.341 121.979 cv
123.341 122.414 123.693 122.768 124.128 122.768 cv
124.563 122.768 124.916 122.414 124.916 121.979 cv
f
126.835 121.62 mo
126.835 121.186 126.483 120.832 126.048 120.832 cv
125.613 120.832 125.261 121.186 125.261 121.62 cv
125.261 122.055 125.613 122.407 126.048 122.407 cv
126.483 122.407 126.835 122.055 126.835 121.62 cv
f
128.756 121.62 mo
128.756 121.186 128.403 120.832 127.968 120.832 cv
127.534 120.832 127.181 121.186 127.181 121.62 cv
127.181 122.055 127.534 122.407 127.968 122.407 cv
128.403 122.407 128.756 122.055 128.756 121.62 cv
f
130.676 121.26 mo
130.676 120.825 130.323 120.473 129.888 120.473 cv
129.454 120.473 129.101 120.825 129.101 121.26 cv
129.101 121.694 129.454 122.047 129.888 122.047 cv
130.323 122.047 130.676 121.694 130.676 121.26 cv
f
132.596 121.02 mo
132.596 120.585 132.243 120.232 131.808 120.232 cv
131.374 120.232 131.021 120.585 131.021 121.02 cv
131.021 121.454 131.374 121.808 131.808 121.808 cv
132.243 121.808 132.596 121.454 132.596 121.02 cv
f
134.516 120.899 mo
134.516 120.465 134.163 120.112 133.728 120.112 cv
133.293 120.112 132.941 120.465 132.941 120.899 cv
132.941 121.335 133.293 121.688 133.728 121.688 cv
134.163 121.688 134.516 121.335 134.516 120.899 cv
f
136.436 120.78 mo
136.436 120.345 136.083 119.992 135.648 119.992 cv
135.213 119.992 134.861 120.345 134.861 120.78 cv
134.861 121.215 135.213 121.567 135.648 121.567 cv
136.083 121.567 136.436 121.215 136.436 120.78 cv
f
138.355 120.42 mo
138.355 119.985 138.003 119.632 137.568 119.632 cv
137.133 119.632 136.781 119.985 136.781 120.42 cv
136.781 120.854 137.133 121.207 137.568 121.207 cv
138.003 121.207 138.355 120.854 138.355 120.42 cv
f
140.275 120.42 mo
140.275 119.985 139.924 119.632 139.488 119.632 cv
139.053 119.632 138.701 119.985 138.701 120.42 cv
138.701 120.854 139.053 121.207 139.488 121.207 cv
139.924 121.207 140.275 120.854 140.275 120.42 cv
f
142.076 120.54 mo
142.076 120.105 141.723 119.752 141.289 119.752 cv
140.854 119.752 140.5 120.105 140.5 120.54 cv
140.5 120.975 140.854 121.327 141.289 121.327 cv
141.723 121.327 142.076 120.975 142.076 120.54 cv
f
143.996 120.66 mo
143.996 120.225 143.643 119.872 143.209 119.872 cv
142.773 119.872 142.42 120.225 142.42 120.66 cv
142.42 121.095 142.773 121.447 143.209 121.447 cv
143.643 121.447 143.996 121.095 143.996 120.66 cv
f
146.035 120.18 mo
146.035 119.745 145.684 119.393 145.248 119.393 cv
144.814 119.393 144.461 119.745 144.461 120.18 cv
144.461 120.614 144.814 120.968 145.248 120.968 cv
145.684 120.968 146.035 120.614 146.035 120.18 cv
f
147.836 120.66 mo
147.836 120.225 147.482 119.872 147.049 119.872 cv
146.613 119.872 146.26 120.225 146.26 120.66 cv
146.26 121.095 146.613 121.447 147.049 121.447 cv
147.482 121.447 147.836 121.095 147.836 120.66 cv
f
149.756 120.899 mo
149.756 120.465 149.402 120.112 148.969 120.112 cv
148.533 120.112 148.182 120.465 148.182 120.899 cv
148.182 121.335 148.533 121.688 148.969 121.688 cv
149.402 121.688 149.756 121.335 149.756 120.899 cv
f
151.676 120.42 mo
151.676 119.985 151.322 119.632 150.889 119.632 cv
150.453 119.632 150.102 119.985 150.102 120.42 cv
150.102 120.854 150.453 121.207 150.889 121.207 cv
151.322 121.207 151.676 120.854 151.676 120.42 cv
f
153.596 120.899 mo
153.596 120.465 153.242 120.112 152.809 120.112 cv
152.373 120.112 152.021 120.465 152.021 120.899 cv
152.021 121.335 152.373 121.688 152.809 121.688 cv
153.242 121.688 153.596 121.335 153.596 120.899 cv
f
155.516 121.02 mo
155.516 120.585 155.162 120.232 154.729 120.232 cv
154.293 120.232 153.941 120.585 153.941 121.02 cv
153.941 121.454 154.293 121.808 154.729 121.808 cv
155.162 121.808 155.516 121.454 155.516 121.02 cv
f
157.436 121.5 mo
157.436 121.065 157.082 120.712 156.648 120.712 cv
156.213 120.712 155.861 121.065 155.861 121.5 cv
155.861 121.935 156.213 122.287 156.648 122.287 cv
157.082 122.287 157.436 121.935 157.436 121.5 cv
f
159.355 121.5 mo
159.355 121.065 159.002 120.712 158.568 120.712 cv
158.133 120.712 157.781 121.065 157.781 121.5 cv
157.781 121.935 158.133 122.287 158.568 122.287 cv
159.002 122.287 159.355 121.935 159.355 121.5 cv
f
161.275 121.74 mo
161.275 121.305 160.924 120.952 160.488 120.952 cv
160.053 120.952 159.701 121.305 159.701 121.74 cv
159.701 122.175 160.053 122.527 160.488 122.527 cv
160.924 122.527 161.275 122.175 161.275 121.74 cv
f
163.195 122.46 mo
163.195 122.025 162.844 121.672 162.408 121.672 cv
161.973 121.672 161.621 122.025 161.621 122.46 cv
161.621 122.895 161.973 123.247 162.408 123.247 cv
162.844 123.247 163.195 122.895 163.195 122.46 cv
f
165.115 122.58 mo
165.115 122.146 164.764 121.792 164.328 121.792 cv
163.893 121.792 163.541 122.146 163.541 122.58 cv
163.541 123.015 163.893 123.367 164.328 123.367 cv
164.764 123.367 165.115 123.015 165.115 122.58 cv
f
166.916 122.819 mo
166.916 122.385 166.563 122.032 166.129 122.032 cv
165.693 122.032 165.34 122.385 165.34 122.819 cv
165.34 123.255 165.693 123.607 166.129 123.607 cv
166.563 123.607 166.916 123.255 166.916 122.819 cv
f
168.836 122.939 mo
168.836 122.505 168.482 122.152 168.049 122.152 cv
167.613 122.152 167.26 122.505 167.26 122.939 cv
167.26 123.374 167.613 123.728 168.049 123.728 cv
168.482 123.728 168.836 123.374 168.836 122.939 cv
f
170.875 123.42 mo
170.875 122.985 170.523 122.632 170.088 122.632 cv
169.654 122.632 169.301 122.985 169.301 123.42 cv
169.301 123.854 169.654 124.207 170.088 124.207 cv
170.523 124.207 170.875 123.854 170.875 123.42 cv
f
172.676 123.78 mo
172.676 123.345 172.322 122.992 171.889 122.992 cv
171.453 122.992 171.102 123.345 171.102 123.78 cv
171.102 124.215 171.453 124.567 171.889 124.567 cv
172.322 124.567 172.676 124.215 172.676 123.78 cv
f
174.596 123.899 mo
174.596 123.465 174.242 123.112 173.809 123.112 cv
173.373 123.112 173.021 123.465 173.021 123.899 cv
173.021 124.335 173.373 124.688 173.809 124.688 cv
174.242 124.688 174.596 124.335 174.596 123.899 cv
f
176.516 124.5 mo
176.516 124.065 176.162 123.712 175.729 123.712 cv
175.293 123.712 174.941 124.065 174.941 124.5 cv
174.941 124.935 175.293 125.287 175.729 125.287 cv
176.162 125.287 176.516 124.935 176.516 124.5 cv
f
178.436 124.859 mo
178.436 124.425 178.082 124.072 177.648 124.072 cv
177.213 124.072 176.861 124.425 176.861 124.859 cv
176.861 125.295 177.213 125.647 177.648 125.647 cv
178.082 125.647 178.436 125.295 178.436 124.859 cv
f
180.355 125.22 mo
180.355 124.785 180.002 124.433 179.568 124.433 cv
179.133 124.433 178.781 124.785 178.781 125.22 cv
178.781 125.654 179.133 126.007 179.568 126.007 cv
180.002 126.007 180.355 125.654 180.355 125.22 cv
f
182.275 125.58 mo
182.275 125.146 181.924 124.792 181.488 124.792 cv
181.053 124.792 180.701 125.146 180.701 125.58 cv
180.701 126.015 181.053 126.367 181.488 126.367 cv
181.924 126.367 182.275 126.015 182.275 125.58 cv
f
184.195 125.46 mo
184.195 125.025 183.844 124.672 183.408 124.672 cv
182.973 124.672 182.621 125.025 182.621 125.46 cv
182.621 125.895 182.973 126.247 183.408 126.247 cv
183.844 126.247 184.195 125.895 184.195 125.46 cv
f
186.115 125.939 mo
186.115 125.505 185.764 125.152 185.328 125.152 cv
184.893 125.152 184.541 125.505 184.541 125.939 cv
184.541 126.374 184.893 126.728 185.328 126.728 cv
185.764 126.728 186.115 126.374 186.115 125.939 cv
f
188.035 126.3 mo
188.035 125.865 187.684 125.513 187.248 125.513 cv
186.814 125.513 186.461 125.865 186.461 126.3 cv
186.461 126.734 186.814 127.087 187.248 127.087 cv
187.684 127.087 188.035 126.734 188.035 126.3 cv
f
189.955 126.3 mo
189.955 125.865 189.604 125.513 189.168 125.513 cv
188.734 125.513 188.381 125.865 188.381 126.3 cv
188.381 126.734 188.734 127.087 189.168 127.087 cv
189.604 127.087 189.955 126.734 189.955 126.3 cv
f
191.875 127.14 mo
191.875 126.705 191.523 126.353 191.088 126.353 cv
190.654 126.353 190.301 126.705 190.301 127.14 cv
190.301 127.574 190.654 127.928 191.088 127.928 cv
191.523 127.928 191.875 127.574 191.875 127.14 cv
f
193.676 127.5 mo
193.676 127.065 193.322 126.712 192.889 126.712 cv
192.453 126.712 192.102 127.065 192.102 127.5 cv
192.102 127.935 192.453 128.287 192.889 128.287 cv
193.322 128.287 193.676 127.935 193.676 127.5 cv
f
195.715 127.859 mo
195.715 127.425 195.363 127.072 194.928 127.072 cv
194.494 127.072 194.141 127.425 194.141 127.859 cv
194.141 128.295 194.494 128.647 194.928 128.647 cv
195.363 128.647 195.715 128.295 195.715 127.859 cv
f
197.635 128.22 mo
197.635 127.785 197.283 127.433 196.848 127.433 cv
196.414 127.433 196.061 127.785 196.061 128.22 cv
196.061 128.654 196.414 129.007 196.848 129.007 cv
197.283 129.007 197.635 128.654 197.635 128.22 cv
f
199.436 128.7 mo
199.436 128.265 199.082 127.912 198.648 127.912 cv
198.213 127.912 197.861 128.265 197.861 128.7 cv
197.861 129.135 198.213 129.487 198.648 129.487 cv
199.082 129.487 199.436 129.135 199.436 128.7 cv
f
201.355 128.819 mo
201.355 128.385 201.002 128.032 200.568 128.032 cv
200.133 128.032 199.781 128.385 199.781 128.819 cv
199.781 129.255 200.133 129.607 200.568 129.607 cv
201.002 129.607 201.355 129.255 201.355 128.819 cv
f
203.275 129.54 mo
203.275 129.105 202.924 128.752 202.488 128.752 cv
202.053 128.752 201.701 129.105 201.701 129.54 cv
201.701 129.975 202.053 130.327 202.488 130.327 cv
202.924 130.327 203.275 129.975 203.275 129.54 cv
f
205.195 129.66 mo
205.195 129.225 204.844 128.872 204.408 128.872 cv
203.973 128.872 203.621 129.225 203.621 129.66 cv
203.621 130.095 203.973 130.447 204.408 130.447 cv
204.844 130.447 205.195 130.095 205.195 129.66 cv
f
207.115 130.5 mo
207.115 130.065 206.764 129.712 206.328 129.712 cv
205.893 129.712 205.541 130.065 205.541 130.5 cv
205.541 130.935 205.893 131.287 206.328 131.287 cv
206.764 131.287 207.115 130.935 207.115 130.5 cv
f
209.035 130.5 mo
209.035 130.065 208.684 129.712 208.248 129.712 cv
207.814 129.712 207.461 130.065 207.461 130.5 cv
207.461 130.935 207.814 131.287 208.248 131.287 cv
208.684 131.287 209.035 130.935 209.035 130.5 cv
f
210.955 130.979 mo
210.955 130.545 210.604 130.192 210.168 130.192 cv
209.734 130.192 209.381 130.545 209.381 130.979 cv
209.381 131.414 209.734 131.768 210.168 131.768 cv
210.604 131.768 210.955 131.414 210.955 130.979 cv
f
212.875 131.46 mo
212.875 131.025 212.523 130.672 212.088 130.672 cv
211.654 130.672 211.301 131.025 211.301 131.46 cv
211.301 131.895 211.654 132.247 212.088 132.247 cv
212.523 132.247 212.875 131.895 212.875 131.46 cv
f
214.795 131.34 mo
214.795 130.905 214.443 130.553 214.008 130.553 cv
213.574 130.553 213.221 130.905 213.221 131.34 cv
213.221 131.774 213.574 132.127 214.008 132.127 cv
214.443 132.127 214.795 131.774 214.795 131.34 cv
f
216.715 130.979 mo
216.715 130.545 216.363 130.192 215.928 130.192 cv
215.494 130.192 215.141 130.545 215.141 130.979 cv
215.141 131.414 215.494 131.768 215.928 131.768 cv
216.363 131.768 216.715 131.414 216.715 130.979 cv
f
218.635 132.3 mo
218.635 131.865 218.283 131.513 217.848 131.513 cv
217.414 131.513 217.061 131.865 217.061 132.3 cv
217.061 132.734 217.414 133.087 217.848 133.087 cv
218.283 133.087 218.635 132.734 218.635 132.3 cv
f
220.557 131.7 mo
220.557 131.265 220.203 130.912 219.768 130.912 cv
219.334 130.912 218.98 131.265 218.98 131.7 cv
218.98 132.135 219.334 132.487 219.768 132.487 cv
220.203 132.487 220.557 132.135 220.557 131.7 cv
f
222.477 132.899 mo
222.477 132.465 222.123 132.112 221.688 132.112 cv
221.254 132.112 220.9 132.465 220.9 132.899 cv
220.9 133.335 221.254 133.688 221.688 133.688 cv
222.123 133.688 222.477 133.335 222.477 132.899 cv
f
224.275 132.899 mo
224.275 132.465 223.924 132.112 223.488 132.112 cv
223.053 132.112 222.701 132.465 222.701 132.899 cv
222.701 133.335 223.053 133.688 223.488 133.688 cv
223.924 133.688 224.275 133.335 224.275 132.899 cv
f
226.195 133.5 mo
226.195 133.065 225.844 132.712 225.408 132.712 cv
224.973 132.712 224.621 133.065 224.621 133.5 cv
224.621 133.935 224.973 134.287 225.408 134.287 cv
225.844 134.287 226.195 133.935 226.195 133.5 cv
f
228.115 133.859 mo
228.115 133.425 227.764 133.072 227.328 133.072 cv
226.893 133.072 226.541 133.425 226.541 133.859 cv
226.541 134.295 226.893 134.647 227.328 134.647 cv
227.764 134.647 228.115 134.295 228.115 133.859 cv
f
230.035 134.58 mo
230.035 134.146 229.684 133.792 229.248 133.792 cv
228.814 133.792 228.461 134.146 228.461 134.58 cv
228.461 135.015 228.814 135.367 229.248 135.367 cv
229.684 135.367 230.035 135.015 230.035 134.58 cv
f
231.955 134.7 mo
231.955 134.265 231.604 133.912 231.168 133.912 cv
230.734 133.912 230.381 134.265 230.381 134.7 cv
230.381 135.135 230.734 135.487 231.168 135.487 cv
231.604 135.487 231.955 135.135 231.955 134.7 cv
f
42.7158 134.939 mo
42.7158 134.505 42.3628 134.152 41.9282 134.152 cv
41.4937 134.152 41.1406 134.505 41.1406 134.939 cv
41.1406 135.374 41.4937 135.728 41.9282 135.728 cv
42.3628 135.728 42.7158 135.374 42.7158 134.939 cv
f
44.6357 134.22 mo
44.6357 133.785 44.2827 133.433 43.8481 133.433 cv
43.4136 133.433 43.0605 133.785 43.0605 134.22 cv
43.0605 134.654 43.4136 135.007 43.8481 135.007 cv
44.2827 135.007 44.6357 134.654 44.6357 134.22 cv
f
46.5557 133.5 mo
46.5557 133.065 46.2026 132.712 45.7681 132.712 cv
45.3335 132.712 44.9805 133.065 44.9805 133.5 cv
44.9805 133.935 45.3335 134.287 45.7681 134.287 cv
46.2026 134.287 46.5557 133.935 46.5557 133.5 cv
f
48.4756 132.78 mo
48.4756 132.345 48.123 131.992 47.688 131.992 cv
47.2534 131.992 46.9009 132.345 46.9009 132.78 cv
46.9009 133.215 47.2534 133.567 47.688 133.567 cv
48.123 133.567 48.4756 133.215 48.4756 132.78 cv
f
50.3955 132.06 mo
50.3955 131.625 50.043 131.272 49.6084 131.272 cv
49.1733 131.272 48.8208 131.625 48.8208 132.06 cv
48.8208 132.494 49.1733 132.848 49.6084 132.848 cv
50.043 132.848 50.3955 132.494 50.3955 132.06 cv
f
52.3159 131.46 mo
52.3159 131.025 51.9629 130.672 51.5283 130.672 cv
51.0933 130.672 50.7407 131.025 50.7407 131.46 cv
50.7407 131.895 51.0933 132.247 51.5283 132.247 cv
51.9629 132.247 52.3159 131.895 52.3159 131.46 cv
f
54.2358 130.62 mo
54.2358 130.186 53.8828 129.832 53.4482 129.832 cv
53.0137 129.832 52.6606 130.186 52.6606 130.62 cv
52.6606 131.055 53.0137 131.407 53.4482 131.407 cv
53.8828 131.407 54.2358 131.055 54.2358 130.62 cv
f
56.1558 129.899 mo
56.1558 129.465 55.8027 129.112 55.3682 129.112 cv
54.9336 129.112 54.5806 129.465 54.5806 129.899 cv
54.5806 130.335 54.9336 130.688 55.3682 130.688 cv
55.8027 130.688 56.1558 130.335 56.1558 129.899 cv
f
58.0757 129.3 mo
58.0757 128.865 57.7227 128.513 57.2881 128.513 cv
56.8535 128.513 56.5005 128.865 56.5005 129.3 cv
56.5005 129.734 56.8535 130.087 57.2881 130.087 cv
57.7227 130.087 58.0757 129.734 58.0757 129.3 cv
f
59.8755 128.46 mo
59.8755 128.025 59.5229 127.672 59.0884 127.672 cv
58.6533 127.672 58.3008 128.025 58.3008 128.46 cv
58.3008 128.895 58.6533 129.247 59.0884 129.247 cv
59.5229 129.247 59.8755 128.895 59.8755 128.46 cv
f
61.7959 127.859 mo
61.7959 127.425 61.4429 127.072 61.0083 127.072 cv
60.5732 127.072 60.2207 127.425 60.2207 127.859 cv
60.2207 128.295 60.5732 128.647 61.0083 128.647 cv
61.4429 128.647 61.7959 128.295 61.7959 127.859 cv
f
63.7158 127.02 mo
63.7158 126.585 63.3628 126.232 62.9282 126.232 cv
62.4937 126.232 62.1406 126.585 62.1406 127.02 cv
62.1406 127.454 62.4937 127.808 62.9282 127.808 cv
63.3628 127.808 63.7158 127.454 63.7158 127.02 cv
f
65.6357 126.3 mo
65.6357 125.865 65.2827 125.513 64.8481 125.513 cv
64.4136 125.513 64.0605 125.865 64.0605 126.3 cv
64.0605 126.734 64.4136 127.087 64.8481 127.087 cv
65.2827 127.087 65.6357 126.734 65.6357 126.3 cv
f
67.5557 125.7 mo
67.5557 125.265 67.2026 124.912 66.7681 124.912 cv
66.3335 124.912 65.9805 125.265 65.9805 125.7 cv
65.9805 126.135 66.3335 126.487 66.7681 126.487 cv
67.2026 126.487 67.5557 126.135 67.5557 125.7 cv
f
69.4756 124.859 mo
69.4756 124.425 69.123 124.072 68.688 124.072 cv
68.2534 124.072 67.9009 124.425 67.9009 124.859 cv
67.9009 125.295 68.2534 125.647 68.688 125.647 cv
69.123 125.647 69.4756 125.295 69.4756 124.859 cv
f
71.3955 124.26 mo
71.3955 123.825 71.043 123.473 70.6084 123.473 cv
70.1733 123.473 69.8208 123.825 69.8208 124.26 cv
69.8208 124.694 70.1733 125.047 70.6084 125.047 cv
71.043 125.047 71.3955 124.694 71.3955 124.26 cv
f
73.3159 123.54 mo
73.3159 123.105 72.9629 122.752 72.5283 122.752 cv
72.0933 122.752 71.7407 123.105 71.7407 123.54 cv
71.7407 123.975 72.0933 124.327 72.5283 124.327 cv
72.9629 124.327 73.3159 123.975 73.3159 123.54 cv
f
75.2358 122.7 mo
75.2358 122.265 74.8828 121.912 74.4482 121.912 cv
74.0137 121.912 73.6606 122.265 73.6606 122.7 cv
73.6606 123.135 74.0137 123.487 74.4482 123.487 cv
74.8828 123.487 75.2358 123.135 75.2358 122.7 cv
f
77.1558 122.1 mo
77.1558 121.665 76.8027 121.313 76.3682 121.313 cv
75.9336 121.313 75.5806 121.665 75.5806 122.1 cv
75.5806 122.534 75.9336 122.888 76.3682 122.888 cv
76.8027 122.888 77.1558 122.534 77.1558 122.1 cv
f
79.0757 121.26 mo
79.0757 120.825 78.7227 120.473 78.2881 120.473 cv
77.8535 120.473 77.5005 120.825 77.5005 121.26 cv
77.5005 121.694 77.8535 122.047 78.2881 122.047 cv
78.7227 122.047 79.0757 121.694 79.0757 121.26 cv
f
80.9956 120.66 mo
80.9956 120.225 80.6431 119.872 80.208 119.872 cv
79.7734 119.872 79.4209 120.225 79.4209 120.66 cv
79.4209 121.095 79.7734 121.447 80.208 121.447 cv
80.6431 121.447 80.9956 121.095 80.9956 120.66 cv
f
82.9155 119.939 mo
82.9155 119.505 82.563 119.152 82.1284 119.152 cv
81.6934 119.152 81.3408 119.505 81.3408 119.939 cv
81.3408 120.374 81.6934 120.728 82.1284 120.728 cv
82.563 120.728 82.9155 120.374 82.9155 119.939 cv
f
84.8354 119.1 mo
84.8354 118.665 84.4829 118.313 84.0483 118.313 cv
83.6133 118.313 83.2607 118.665 83.2607 119.1 cv
83.2607 119.534 83.6133 119.888 84.0483 119.888 cv
84.4829 119.888 84.8354 119.534 84.8354 119.1 cv
f
86.6357 118.5 mo
86.6357 118.065 86.2827 117.712 85.8481 117.712 cv
85.4136 117.712 85.0605 118.065 85.0605 118.5 cv
85.0605 118.935 85.4136 119.287 85.8481 119.287 cv
86.2827 119.287 86.6357 118.935 86.6357 118.5 cv
f
88.6758 117.78 mo
88.6758 117.345 88.3228 116.992 87.8882 116.992 cv
87.4536 116.992 87.1006 117.345 87.1006 117.78 cv
87.1006 118.215 87.4536 118.567 87.8882 118.567 cv
88.3228 118.567 88.6758 118.215 88.6758 117.78 cv
f
90.4756 117.06 mo
90.4756 116.625 90.123 116.272 89.688 116.272 cv
89.2534 116.272 88.9009 116.625 88.9009 117.06 cv
88.9009 117.494 89.2534 117.848 89.688 117.848 cv
90.123 117.848 90.4756 117.494 90.4756 117.06 cv
f
92.3955 116.34 mo
92.3955 115.905 92.043 115.553 91.6084 115.553 cv
91.1733 115.553 90.8208 115.905 90.8208 116.34 cv
90.8208 116.774 91.1733 117.127 91.6084 117.127 cv
92.043 117.127 92.3955 116.774 92.3955 116.34 cv
f
94.3159 115.62 mo
94.3159 115.186 93.9629 114.832 93.5283 114.832 cv
93.0933 114.832 92.7407 115.186 92.7407 115.62 cv
92.7407 116.055 93.0933 116.407 93.5283 116.407 cv
93.9629 116.407 94.3159 116.055 94.3159 115.62 cv
f
96.2358 114.899 mo
96.2358 114.465 95.8828 114.112 95.4482 114.112 cv
95.0137 114.112 94.6606 114.465 94.6606 114.899 cv
94.6606 115.335 95.0137 115.688 95.4482 115.688 cv
95.8828 115.688 96.2358 115.335 96.2358 114.899 cv
f
98.1558 114.18 mo
98.1558 113.745 97.8027 113.393 97.3682 113.393 cv
96.9336 113.393 96.5806 113.745 96.5806 114.18 cv
96.5806 114.614 96.9336 114.968 97.3682 114.968 cv
97.8027 114.968 98.1558 114.614 98.1558 114.18 cv
f
100.076 113.46 mo
100.076 113.025 99.7231 112.672 99.2881 112.672 cv
98.8535 112.672 98.5005 113.025 98.5005 113.46 cv
98.5005 113.895 98.8535 114.247 99.2881 114.247 cv
99.7231 114.247 100.076 113.895 100.076 113.46 cv
f
101.996 112.74 mo
101.996 112.305 101.643 111.952 101.208 111.952 cv
100.773 111.952 100.421 112.305 100.421 112.74 cv
100.421 113.175 100.773 113.527 101.208 113.527 cv
101.643 113.527 101.996 113.175 101.996 112.74 cv
f
103.916 112.14 mo
103.916 111.705 103.563 111.353 103.128 111.353 cv
102.693 111.353 102.341 111.705 102.341 112.14 cv
102.341 112.574 102.693 112.928 103.128 112.928 cv
103.563 112.928 103.916 112.574 103.916 112.14 cv
f
105.835 111.42 mo
105.835 110.985 105.483 110.632 105.048 110.632 cv
104.613 110.632 104.261 110.985 104.261 111.42 cv
104.261 111.854 104.613 112.207 105.048 112.207 cv
105.483 112.207 105.835 111.854 105.835 111.42 cv
f
107.756 110.7 mo
107.756 110.265 107.403 109.912 106.968 109.912 cv
106.534 109.912 106.181 110.265 106.181 110.7 cv
106.181 111.135 106.534 111.487 106.968 111.487 cv
107.403 111.487 107.756 111.135 107.756 110.7 cv
f
109.676 110.1 mo
109.676 109.665 109.323 109.313 108.888 109.313 cv
108.454 109.313 108.101 109.665 108.101 110.1 cv
108.101 110.534 108.454 110.888 108.888 110.888 cv
109.323 110.888 109.676 110.534 109.676 110.1 cv
f
111.596 109.5 mo
111.596 109.065 111.243 108.712 110.808 108.712 cv
110.374 108.712 110.021 109.065 110.021 109.5 cv
110.021 109.935 110.374 110.287 110.808 110.287 cv
111.243 110.287 111.596 109.935 111.596 109.5 cv
f
113.516 108.899 mo
113.516 108.465 113.163 108.112 112.728 108.112 cv
112.293 108.112 111.941 108.465 111.941 108.899 cv
111.941 109.335 112.293 109.688 112.728 109.688 cv
113.163 109.688 113.516 109.335 113.516 108.899 cv
f
115.316 108.3 mo
115.316 107.865 114.963 107.513 114.528 107.513 cv
114.093 107.513 113.741 107.865 113.741 108.3 cv
113.741 108.734 114.093 109.087 114.528 109.087 cv
114.963 109.087 115.316 108.734 115.316 108.3 cv
f
117.236 107.58 mo
117.236 107.146 116.883 106.792 116.448 106.792 cv
116.014 106.792 115.661 107.146 115.661 107.58 cv
115.661 108.015 116.014 108.367 116.448 108.367 cv
116.883 108.367 117.236 108.015 117.236 107.58 cv
f
119.156 107.1 mo
119.156 106.665 118.803 106.313 118.368 106.313 cv
117.934 106.313 117.581 106.665 117.581 107.1 cv
117.581 107.534 117.934 107.888 118.368 107.888 cv
118.803 107.888 119.156 107.534 119.156 107.1 cv
f
121.076 106.5 mo
121.076 106.065 120.723 105.712 120.288 105.712 cv
119.854 105.712 119.5 106.065 119.5 106.5 cv
119.5 106.935 119.854 107.287 120.288 107.287 cv
120.723 107.287 121.076 106.935 121.076 106.5 cv
f
122.996 106.02 mo
122.996 105.585 122.643 105.232 122.208 105.232 cv
121.773 105.232 121.421 105.585 121.421 106.02 cv
121.421 106.454 121.773 106.808 122.208 106.808 cv
122.643 106.808 122.996 106.454 122.996 106.02 cv
f
124.916 105.54 mo
124.916 105.105 124.563 104.752 124.128 104.752 cv
123.693 104.752 123.341 105.105 123.341 105.54 cv
123.341 105.975 123.693 106.327 124.128 106.327 cv
124.563 106.327 124.916 105.975 124.916 105.54 cv
f
126.835 105.3 mo
126.835 104.865 126.483 104.513 126.048 104.513 cv
125.613 104.513 125.261 104.865 125.261 105.3 cv
125.261 105.734 125.613 106.087 126.048 106.087 cv
126.483 106.087 126.835 105.734 126.835 105.3 cv
f
128.756 104.819 mo
128.756 104.385 128.403 104.032 127.968 104.032 cv
127.534 104.032 127.181 104.385 127.181 104.819 cv
127.181 105.255 127.534 105.607 127.968 105.607 cv
128.403 105.607 128.756 105.255 128.756 104.819 cv
f
130.676 104.34 mo
130.676 103.905 130.323 103.553 129.888 103.553 cv
129.454 103.553 129.101 103.905 129.101 104.34 cv
129.101 104.774 129.454 105.127 129.888 105.127 cv
130.323 105.127 130.676 104.774 130.676 104.34 cv
f
132.596 104.22 mo
132.596 103.785 132.243 103.433 131.808 103.433 cv
131.374 103.433 131.021 103.785 131.021 104.22 cv
131.021 104.654 131.374 105.007 131.808 105.007 cv
132.243 105.007 132.596 104.654 132.596 104.22 cv
f
134.516 103.979 mo
134.516 103.545 134.163 103.192 133.728 103.192 cv
133.293 103.192 132.941 103.545 132.941 103.979 cv
132.941 104.414 133.293 104.768 133.728 104.768 cv
134.163 104.768 134.516 104.414 134.516 103.979 cv
f
136.436 103.5 mo
136.436 103.065 136.083 102.712 135.648 102.712 cv
135.213 102.712 134.861 103.065 134.861 103.5 cv
134.861 103.935 135.213 104.287 135.648 104.287 cv
136.083 104.287 136.436 103.935 136.436 103.5 cv
f
138.355 103.14 mo
138.355 102.705 138.003 102.353 137.568 102.353 cv
137.133 102.353 136.781 102.705 136.781 103.14 cv
136.781 103.574 137.133 103.928 137.568 103.928 cv
138.003 103.928 138.355 103.574 138.355 103.14 cv
f
140.275 103.38 mo
140.275 102.945 139.924 102.593 139.488 102.593 cv
139.053 102.593 138.701 102.945 138.701 103.38 cv
138.701 103.814 139.053 104.167 139.488 104.167 cv
139.924 104.167 140.275 103.814 140.275 103.38 cv
f
142.076 103.14 mo
142.076 102.705 141.723 102.353 141.289 102.353 cv
140.854 102.353 140.5 102.705 140.5 103.14 cv
140.5 103.574 140.854 103.928 141.289 103.928 cv
141.723 103.928 142.076 103.574 142.076 103.14 cv
f
143.996 103.14 mo
143.996 102.705 143.643 102.353 143.209 102.353 cv
142.773 102.353 142.42 102.705 142.42 103.14 cv
142.42 103.574 142.773 103.928 143.209 103.928 cv
143.643 103.928 143.996 103.574 143.996 103.14 cv
f
146.035 103.02 mo
146.035 102.585 145.684 102.232 145.248 102.232 cv
144.814 102.232 144.461 102.585 144.461 103.02 cv
144.461 103.454 144.814 103.808 145.248 103.808 cv
145.684 103.808 146.035 103.454 146.035 103.02 cv
f
147.836 102.899 mo
147.836 102.465 147.482 102.112 147.049 102.112 cv
146.613 102.112 146.26 102.465 146.26 102.899 cv
146.26 103.335 146.613 103.688 147.049 103.688 cv
147.482 103.688 147.836 103.335 147.836 102.899 cv
f
149.756 102.78 mo
149.756 102.345 149.402 101.992 148.969 101.992 cv
148.533 101.992 148.182 102.345 148.182 102.78 cv
148.182 103.215 148.533 103.567 148.969 103.567 cv
149.402 103.567 149.756 103.215 149.756 102.78 cv
f
151.676 102.899 mo
151.676 102.465 151.322 102.112 150.889 102.112 cv
150.453 102.112 150.102 102.465 150.102 102.899 cv
150.102 103.335 150.453 103.688 150.889 103.688 cv
151.322 103.688 151.676 103.335 151.676 102.899 cv
f
153.596 103.02 mo
153.596 102.585 153.242 102.232 152.809 102.232 cv
152.373 102.232 152.021 102.585 152.021 103.02 cv
152.021 103.454 152.373 103.808 152.809 103.808 cv
153.242 103.808 153.596 103.454 153.596 103.02 cv
f
155.516 103.14 mo
155.516 102.705 155.162 102.353 154.729 102.353 cv
154.293 102.353 153.941 102.705 153.941 103.14 cv
153.941 103.574 154.293 103.928 154.729 103.928 cv
155.162 103.928 155.516 103.574 155.516 103.14 cv
f
157.436 103.26 mo
157.436 102.825 157.082 102.473 156.648 102.473 cv
156.213 102.473 155.861 102.825 155.861 103.26 cv
155.861 103.694 156.213 104.047 156.648 104.047 cv
157.082 104.047 157.436 103.694 157.436 103.26 cv
f
159.355 103.74 mo
159.355 103.305 159.002 102.952 158.568 102.952 cv
158.133 102.952 157.781 103.305 157.781 103.74 cv
157.781 104.175 158.133 104.527 158.568 104.527 cv
159.002 104.527 159.355 104.175 159.355 103.74 cv
f
161.275 104.34 mo
161.275 103.905 160.924 103.553 160.488 103.553 cv
160.053 103.553 159.701 103.905 159.701 104.34 cv
159.701 104.774 160.053 105.127 160.488 105.127 cv
160.924 105.127 161.275 104.774 161.275 104.34 cv
f
163.195 103.74 mo
163.195 103.305 162.844 102.952 162.408 102.952 cv
161.973 102.952 161.621 103.305 161.621 103.74 cv
161.621 104.175 161.973 104.527 162.408 104.527 cv
162.844 104.527 163.195 104.175 163.195 103.74 cv
f
165.115 104.46 mo
165.115 104.025 164.764 103.672 164.328 103.672 cv
163.893 103.672 163.541 104.025 163.541 104.46 cv
163.541 104.895 163.893 105.247 164.328 105.247 cv
164.764 105.247 165.115 104.895 165.115 104.46 cv
f
166.916 104.22 mo
166.916 103.785 166.563 103.433 166.129 103.433 cv
165.693 103.433 165.34 103.785 165.34 104.22 cv
165.34 104.654 165.693 105.007 166.129 105.007 cv
166.563 105.007 166.916 104.654 166.916 104.22 cv
f
168.836 105.18 mo
168.836 104.745 168.482 104.393 168.049 104.393 cv
167.613 104.393 167.26 104.745 167.26 105.18 cv
167.26 105.614 167.613 105.968 168.049 105.968 cv
168.482 105.968 168.836 105.614 168.836 105.18 cv
f
170.875 105.66 mo
170.875 105.225 170.523 104.872 170.088 104.872 cv
169.654 104.872 169.301 105.225 169.301 105.66 cv
169.301 106.095 169.654 106.447 170.088 106.447 cv
170.523 106.447 170.875 106.095 170.875 105.66 cv
f
172.676 106.14 mo
172.676 105.705 172.322 105.353 171.889 105.353 cv
171.453 105.353 171.102 105.705 171.102 106.14 cv
171.102 106.574 171.453 106.928 171.889 106.928 cv
172.322 106.928 172.676 106.574 172.676 106.14 cv
f
174.596 106.26 mo
174.596 105.825 174.242 105.473 173.809 105.473 cv
173.373 105.473 173.021 105.825 173.021 106.26 cv
173.021 106.694 173.373 107.047 173.809 107.047 cv
174.242 107.047 174.596 106.694 174.596 106.26 cv
f
176.516 106.26 mo
176.516 105.825 176.162 105.473 175.729 105.473 cv
175.293 105.473 174.941 105.825 174.941 106.26 cv
174.941 106.694 175.293 107.047 175.729 107.047 cv
176.162 107.047 176.516 106.694 176.516 106.26 cv
f
178.436 106.979 mo
178.436 106.545 178.082 106.192 177.648 106.192 cv
177.213 106.192 176.861 106.545 176.861 106.979 cv
176.861 107.414 177.213 107.768 177.648 107.768 cv
178.082 107.768 178.436 107.414 178.436 106.979 cv
f
180.355 106.74 mo
180.355 106.305 180.002 105.952 179.568 105.952 cv
179.133 105.952 178.781 106.305 178.781 106.74 cv
178.781 107.175 179.133 107.527 179.568 107.527 cv
180.002 107.527 180.355 107.175 180.355 106.74 cv
f
182.275 107.34 mo
182.275 106.905 181.924 106.553 181.488 106.553 cv
181.053 106.553 180.701 106.905 180.701 107.34 cv
180.701 107.774 181.053 108.127 181.488 108.127 cv
181.924 108.127 182.275 107.774 182.275 107.34 cv
f
184.195 107.58 mo
184.195 107.146 183.844 106.792 183.408 106.792 cv
182.973 106.792 182.621 107.146 182.621 107.58 cv
182.621 108.015 182.973 108.367 183.408 108.367 cv
183.844 108.367 184.195 108.015 184.195 107.58 cv
f
186.115 108.3 mo
186.115 107.865 185.764 107.513 185.328 107.513 cv
184.893 107.513 184.541 107.865 184.541 108.3 cv
184.541 108.734 184.893 109.087 185.328 109.087 cv
185.764 109.087 186.115 108.734 186.115 108.3 cv
f
188.035 108.06 mo
188.035 107.625 187.684 107.272 187.248 107.272 cv
186.814 107.272 186.461 107.625 186.461 108.06 cv
186.461 108.494 186.814 108.848 187.248 108.848 cv
187.684 108.848 188.035 108.494 188.035 108.06 cv
f
189.955 109.14 mo
189.955 108.705 189.604 108.353 189.168 108.353 cv
188.734 108.353 188.381 108.705 188.381 109.14 cv
188.381 109.574 188.734 109.928 189.168 109.928 cv
189.604 109.928 189.955 109.574 189.955 109.14 cv
f
191.875 109.26 mo
191.875 108.825 191.523 108.473 191.088 108.473 cv
190.654 108.473 190.301 108.825 190.301 109.26 cv
190.301 109.694 190.654 110.047 191.088 110.047 cv
191.523 110.047 191.875 109.694 191.875 109.26 cv
f
193.676 109.14 mo
193.676 108.705 193.322 108.353 192.889 108.353 cv
192.453 108.353 192.102 108.705 192.102 109.14 cv
192.102 109.574 192.453 109.928 192.889 109.928 cv
193.322 109.928 193.676 109.574 193.676 109.14 cv
f
195.715 109.979 mo
195.715 109.545 195.363 109.192 194.928 109.192 cv
194.494 109.192 194.141 109.545 194.141 109.979 cv
194.141 110.414 194.494 110.768 194.928 110.768 cv
195.363 110.768 195.715 110.414 195.715 109.979 cv
f
197.635 110.22 mo
197.635 109.785 197.283 109.433 196.848 109.433 cv
196.414 109.433 196.061 109.785 196.061 110.22 cv
196.061 110.654 196.414 111.007 196.848 111.007 cv
197.283 111.007 197.635 110.654 197.635 110.22 cv
f
199.436 110.22 mo
199.436 109.785 199.082 109.433 198.648 109.433 cv
198.213 109.433 197.861 109.785 197.861 110.22 cv
197.861 110.654 198.213 111.007 198.648 111.007 cv
199.082 111.007 199.436 110.654 199.436 110.22 cv
f
201.355 110.939 mo
201.355 110.505 201.002 110.152 200.568 110.152 cv
200.133 110.152 199.781 110.505 199.781 110.939 cv
199.781 111.374 200.133 111.728 200.568 111.728 cv
201.002 111.728 201.355 111.374 201.355 110.939 cv
f
203.275 111.06 mo
203.275 110.625 202.924 110.272 202.488 110.272 cv
202.053 110.272 201.701 110.625 201.701 111.06 cv
201.701 111.494 202.053 111.848 202.488 111.848 cv
202.924 111.848 203.275 111.494 203.275 111.06 cv
f
205.195 111.54 mo
205.195 111.105 204.844 110.752 204.408 110.752 cv
203.973 110.752 203.621 111.105 203.621 111.54 cv
203.621 111.975 203.973 112.327 204.408 112.327 cv
204.844 112.327 205.195 111.975 205.195 111.54 cv
f
207.115 111.899 mo
207.115 111.465 206.764 111.112 206.328 111.112 cv
205.893 111.112 205.541 111.465 205.541 111.899 cv
205.541 112.335 205.893 112.688 206.328 112.688 cv
206.764 112.688 207.115 112.335 207.115 111.899 cv
f
209.035 112.74 mo
209.035 112.305 208.684 111.952 208.248 111.952 cv
207.814 111.952 207.461 112.305 207.461 112.74 cv
207.461 113.175 207.814 113.527 208.248 113.527 cv
208.684 113.527 209.035 113.175 209.035 112.74 cv
f
210.955 112.5 mo
210.955 112.065 210.604 111.712 210.168 111.712 cv
209.734 111.712 209.381 112.065 209.381 112.5 cv
209.381 112.935 209.734 113.287 210.168 113.287 cv
210.604 113.287 210.955 112.935 210.955 112.5 cv
f
212.875 112.38 mo
212.875 111.945 212.523 111.593 212.088 111.593 cv
211.654 111.593 211.301 111.945 211.301 112.38 cv
211.301 112.814 211.654 113.167 212.088 113.167 cv
212.523 113.167 212.875 112.814 212.875 112.38 cv
f
214.795 113.46 mo
214.795 113.025 214.443 112.672 214.008 112.672 cv
213.574 112.672 213.221 113.025 213.221 113.46 cv
213.221 113.895 213.574 114.247 214.008 114.247 cv
214.443 114.247 214.795 113.895 214.795 113.46 cv
f
216.715 113.34 mo
216.715 112.905 216.363 112.553 215.928 112.553 cv
215.494 112.553 215.141 112.905 215.141 113.34 cv
215.141 113.774 215.494 114.127 215.928 114.127 cv
216.363 114.127 216.715 113.774 216.715 113.34 cv
f
218.635 113.939 mo
218.635 113.505 218.283 113.152 217.848 113.152 cv
217.414 113.152 217.061 113.505 217.061 113.939 cv
217.061 114.374 217.414 114.728 217.848 114.728 cv
218.283 114.728 218.635 114.374 218.635 113.939 cv
f
220.557 115.02 mo
220.557 114.585 220.203 114.232 219.768 114.232 cv
219.334 114.232 218.98 114.585 218.98 115.02 cv
218.98 115.454 219.334 115.808 219.768 115.808 cv
220.203 115.808 220.557 115.454 220.557 115.02 cv
f
222.477 114.66 mo
222.477 114.225 222.123 113.872 221.688 113.872 cv
221.254 113.872 220.9 114.225 220.9 114.66 cv
220.9 115.095 221.254 115.447 221.688 115.447 cv
222.123 115.447 222.477 115.095 222.477 114.66 cv
f
224.275 114.899 mo
224.275 114.465 223.924 114.112 223.488 114.112 cv
223.053 114.112 222.701 114.465 222.701 114.899 cv
222.701 115.335 223.053 115.688 223.488 115.688 cv
223.924 115.688 224.275 115.335 224.275 114.899 cv
f
226.195 114.899 mo
226.195 114.465 225.844 114.112 225.408 114.112 cv
224.973 114.112 224.621 114.465 224.621 114.899 cv
224.621 115.335 224.973 115.688 225.408 115.688 cv
225.844 115.688 226.195 115.335 226.195 114.899 cv
f
228.115 115.859 mo
228.115 115.425 227.764 115.072 227.328 115.072 cv
226.893 115.072 226.541 115.425 226.541 115.859 cv
226.541 116.295 226.893 116.647 227.328 116.647 cv
227.764 116.647 228.115 116.295 228.115 115.859 cv
f
230.035 115.859 mo
230.035 115.425 229.684 115.072 229.248 115.072 cv
228.814 115.072 228.461 115.425 228.461 115.859 cv
228.461 116.295 228.814 116.647 229.248 116.647 cv
229.684 116.647 230.035 116.295 230.035 115.859 cv
f
231.955 116.819 mo
231.955 116.385 231.604 116.032 231.168 116.032 cv
230.734 116.032 230.381 116.385 230.381 116.819 cv
230.381 117.255 230.734 117.607 231.168 117.607 cv
231.604 117.607 231.955 117.255 231.955 116.819 cv
f
42.7158 125.939 mo
42.7158 125.505 42.3628 125.152 41.9282 125.152 cv
41.4937 125.152 41.1406 125.505 41.1406 125.939 cv
41.1406 126.374 41.4937 126.728 41.9282 126.728 cv
42.3628 126.728 42.7158 126.374 42.7158 125.939 cv
f
44.6357 125.1 mo
44.6357 124.665 44.2827 124.313 43.8481 124.313 cv
43.4136 124.313 43.0605 124.665 43.0605 125.1 cv
43.0605 125.534 43.4136 125.888 43.8481 125.888 cv
44.2827 125.888 44.6357 125.534 44.6357 125.1 cv
f
46.5557 124.26 mo
46.5557 123.825 46.2026 123.473 45.7681 123.473 cv
45.3335 123.473 44.9805 123.825 44.9805 124.26 cv
44.9805 124.694 45.3335 125.047 45.7681 125.047 cv
46.2026 125.047 46.5557 124.694 46.5557 124.26 cv
f
48.4756 123.3 mo
48.4756 122.865 48.123 122.513 47.688 122.513 cv
47.2534 122.513 46.9009 122.865 46.9009 123.3 cv
46.9009 123.734 47.2534 124.087 47.688 124.087 cv
48.123 124.087 48.4756 123.734 48.4756 123.3 cv
f
50.3955 122.34 mo
50.3955 121.905 50.043 121.553 49.6084 121.553 cv
49.1733 121.553 48.8208 121.905 48.8208 122.34 cv
48.8208 122.774 49.1733 123.127 49.6084 123.127 cv
50.043 123.127 50.3955 122.774 50.3955 122.34 cv
f
52.3159 121.5 mo
52.3159 121.065 51.9629 120.712 51.5283 120.712 cv
51.0933 120.712 50.7407 121.065 50.7407 121.5 cv
50.7407 121.935 51.0933 122.287 51.5283 122.287 cv
51.9629 122.287 52.3159 121.935 52.3159 121.5 cv
f
54.2358 120.66 mo
54.2358 120.225 53.8828 119.872 53.4482 119.872 cv
53.0137 119.872 52.6606 120.225 52.6606 120.66 cv
52.6606 121.095 53.0137 121.447 53.4482 121.447 cv
53.8828 121.447 54.2358 121.095 54.2358 120.66 cv
f
56.1558 119.7 mo
56.1558 119.265 55.8027 118.912 55.3682 118.912 cv
54.9336 118.912 54.5806 119.265 54.5806 119.7 cv
54.5806 120.135 54.9336 120.487 55.3682 120.487 cv
55.8027 120.487 56.1558 120.135 56.1558 119.7 cv
f
58.0757 118.74 mo
58.0757 118.305 57.7227 117.952 57.2881 117.952 cv
56.8535 117.952 56.5005 118.305 56.5005 118.74 cv
56.5005 119.175 56.8535 119.527 57.2881 119.527 cv
57.7227 119.527 58.0757 119.175 58.0757 118.74 cv
f
59.8755 117.899 mo
59.8755 117.465 59.5229 117.112 59.0884 117.112 cv
58.6533 117.112 58.3008 117.465 58.3008 117.899 cv
58.3008 118.335 58.6533 118.688 59.0884 118.688 cv
59.5229 118.688 59.8755 118.335 59.8755 117.899 cv
f
61.7959 117.06 mo
61.7959 116.625 61.4429 116.272 61.0083 116.272 cv
60.5732 116.272 60.2207 116.625 60.2207 117.06 cv
60.2207 117.494 60.5732 117.848 61.0083 117.848 cv
61.4429 117.848 61.7959 117.494 61.7959 117.06 cv
f
63.7158 116.1 mo
63.7158 115.665 63.3628 115.313 62.9282 115.313 cv
62.4937 115.313 62.1406 115.665 62.1406 116.1 cv
62.1406 116.534 62.4937 116.888 62.9282 116.888 cv
63.3628 116.888 63.7158 116.534 63.7158 116.1 cv
f
65.6357 115.14 mo
65.6357 114.705 65.2827 114.353 64.8481 114.353 cv
64.4136 114.353 64.0605 114.705 64.0605 115.14 cv
64.0605 115.574 64.4136 115.928 64.8481 115.928 cv
65.2827 115.928 65.6357 115.574 65.6357 115.14 cv
f
67.5557 114.3 mo
67.5557 113.865 67.2026 113.513 66.7681 113.513 cv
66.3335 113.513 65.9805 113.865 65.9805 114.3 cv
65.9805 114.734 66.3335 115.087 66.7681 115.087 cv
67.2026 115.087 67.5557 114.734 67.5557 114.3 cv
f
69.4756 113.46 mo
69.4756 113.025 69.123 112.672 68.688 112.672 cv
68.2534 112.672 67.9009 113.025 67.9009 113.46 cv
67.9009 113.895 68.2534 114.247 68.688 114.247 cv
69.123 114.247 69.4756 113.895 69.4756 113.46 cv
f
71.3955 112.5 mo
71.3955 112.065 71.043 111.712 70.6084 111.712 cv
70.1733 111.712 69.8208 112.065 69.8208 112.5 cv
69.8208 112.935 70.1733 113.287 70.6084 113.287 cv
71.043 113.287 71.3955 112.935 71.3955 112.5 cv
f
73.3159 111.66 mo
73.3159 111.225 72.9629 110.872 72.5283 110.872 cv
72.0933 110.872 71.7407 111.225 71.7407 111.66 cv
71.7407 112.095 72.0933 112.447 72.5283 112.447 cv
72.9629 112.447 73.3159 112.095 73.3159 111.66 cv
f
75.2358 110.7 mo
75.2358 110.265 74.8828 109.912 74.4482 109.912 cv
74.0137 109.912 73.6606 110.265 73.6606 110.7 cv
73.6606 111.135 74.0137 111.487 74.4482 111.487 cv
74.8828 111.487 75.2358 111.135 75.2358 110.7 cv
f
77.1558 109.859 mo
77.1558 109.425 76.8027 109.072 76.3682 109.072 cv
75.9336 109.072 75.5806 109.425 75.5806 109.859 cv
75.5806 110.295 75.9336 110.647 76.3682 110.647 cv
76.8027 110.647 77.1558 110.295 77.1558 109.859 cv
f
79.0757 108.899 mo
79.0757 108.465 78.7227 108.112 78.2881 108.112 cv
77.8535 108.112 77.5005 108.465 77.5005 108.899 cv
77.5005 109.335 77.8535 109.688 78.2881 109.688 cv
78.7227 109.688 79.0757 109.335 79.0757 108.899 cv
f
80.9956 108.06 mo
80.9956 107.625 80.6431 107.272 80.208 107.272 cv
79.7734 107.272 79.4209 107.625 79.4209 108.06 cv
79.4209 108.494 79.7734 108.848 80.208 108.848 cv
80.6431 108.848 80.9956 108.494 80.9956 108.06 cv
f
82.9155 107.1 mo
82.9155 106.665 82.563 106.313 82.1284 106.313 cv
81.6934 106.313 81.3408 106.665 81.3408 107.1 cv
81.3408 107.534 81.6934 107.888 82.1284 107.888 cv
82.563 107.888 82.9155 107.534 82.9155 107.1 cv
f
84.8354 106.26 mo
84.8354 105.825 84.4829 105.473 84.0483 105.473 cv
83.6133 105.473 83.2607 105.825 83.2607 106.26 cv
83.2607 106.694 83.6133 107.047 84.0483 107.047 cv
84.4829 107.047 84.8354 106.694 84.8354 106.26 cv
f
86.6357 105.3 mo
86.6357 104.865 86.2827 104.513 85.8481 104.513 cv
85.4136 104.513 85.0605 104.865 85.0605 105.3 cv
85.0605 105.734 85.4136 106.087 85.8481 106.087 cv
86.2827 106.087 86.6357 105.734 86.6357 105.3 cv
f
88.6758 104.46 mo
88.6758 104.025 88.3228 103.672 87.8882 103.672 cv
87.4536 103.672 87.1006 104.025 87.1006 104.46 cv
87.1006 104.895 87.4536 105.247 87.8882 105.247 cv
88.3228 105.247 88.6758 104.895 88.6758 104.46 cv
f
90.4756 103.5 mo
90.4756 103.065 90.123 102.712 89.688 102.712 cv
89.2534 102.712 88.9009 103.065 88.9009 103.5 cv
88.9009 103.935 89.2534 104.287 89.688 104.287 cv
90.123 104.287 90.4756 103.935 90.4756 103.5 cv
f
92.3955 102.66 mo
92.3955 102.226 92.043 101.872 91.6084 101.872 cv
91.1733 101.872 90.8208 102.226 90.8208 102.66 cv
90.8208 103.095 91.1733 103.447 91.6084 103.447 cv
92.043 103.447 92.3955 103.095 92.3955 102.66 cv
f
94.3159 101.7 mo
94.3159 101.265 93.9629 100.912 93.5283 100.912 cv
93.0933 100.912 92.7407 101.265 92.7407 101.7 cv
92.7407 102.135 93.0933 102.487 93.5283 102.487 cv
93.9629 102.487 94.3159 102.135 94.3159 101.7 cv
f
96.2358 100.859 mo
96.2358 100.425 95.8828 100.072 95.4482 100.072 cv
95.0137 100.072 94.6606 100.425 94.6606 100.859 cv
94.6606 101.295 95.0137 101.647 95.4482 101.647 cv
95.8828 101.647 96.2358 101.295 96.2358 100.859 cv
f
98.1558 100.14 mo
98.1558 99.7051 97.8027 99.3525 97.3682 99.3525 cv
96.9336 99.3525 96.5806 99.7051 96.5806 100.14 cv
96.5806 100.574 96.9336 100.928 97.3682 100.928 cv
97.8027 100.928 98.1558 100.574 98.1558 100.14 cv
f
100.076 99.0596 mo
100.076 98.625 99.7231 98.2725 99.2881 98.2725 cv
98.8535 98.2725 98.5005 98.625 98.5005 99.0596 cv
98.5005 99.4941 98.8535 99.8477 99.2881 99.8477 cv
99.7231 99.8477 100.076 99.4941 100.076 99.0596 cv
f
101.996 98.2197 mo
101.996 97.7852 101.643 97.4326 101.208 97.4326 cv
100.773 97.4326 100.421 97.7852 100.421 98.2197 cv
100.421 98.6543 100.773 99.0068 101.208 99.0068 cv
101.643 99.0068 101.996 98.6543 101.996 98.2197 cv
f
103.916 97.3799 mo
103.916 96.9453 103.563 96.5928 103.128 96.5928 cv
102.693 96.5928 102.341 96.9453 102.341 97.3799 cv
102.341 97.8145 102.693 98.167 103.128 98.167 cv
103.563 98.167 103.916 97.8145 103.916 97.3799 cv
f
105.835 96.6602 mo
105.835 96.2256 105.483 95.8721 105.048 95.8721 cv
104.613 95.8721 104.261 96.2256 104.261 96.6602 cv
104.261 97.0947 104.613 97.4473 105.048 97.4473 cv
105.483 97.4473 105.835 97.0947 105.835 96.6602 cv
f
107.756 95.7002 mo
107.756 95.2646 107.403 94.9121 106.968 94.9121 cv
106.534 94.9121 106.181 95.2646 106.181 95.7002 cv
106.181 96.1348 106.534 96.4873 106.968 96.4873 cv
107.403 96.4873 107.756 96.1348 107.756 95.7002 cv
f
109.676 94.9795 mo
109.676 94.5449 109.323 94.1924 108.888 94.1924 cv
108.454 94.1924 108.101 94.5449 108.101 94.9795 cv
108.101 95.4141 108.454 95.7676 108.888 95.7676 cv
109.323 95.7676 109.676 95.4141 109.676 94.9795 cv
f
111.596 94.0195 mo
111.596 93.585 111.243 93.2324 110.808 93.2324 cv
110.374 93.2324 110.021 93.585 110.021 94.0195 cv
110.021 94.4541 110.374 94.8076 110.808 94.8076 cv
111.243 94.8076 111.596 94.4541 111.596 94.0195 cv
f
113.516 93.4199 mo
113.516 92.9849 113.163 92.6323 112.728 92.6323 cv
112.293 92.6323 111.941 92.9849 111.941 93.4199 cv
111.941 93.8545 112.293 94.207 112.728 94.207 cv
113.163 94.207 113.516 93.8545 113.516 93.4199 cv
f
115.316 92.5796 mo
115.316 92.145 114.963 91.7925 114.528 91.7925 cv
114.093 91.7925 113.741 92.145 113.741 92.5796 cv
113.741 93.0146 114.093 93.3672 114.528 93.3672 cv
114.963 93.3672 115.316 93.0146 115.316 92.5796 cv
f
117.236 91.8599 mo
117.236 91.4253 116.883 91.0723 116.448 91.0723 cv
116.014 91.0723 115.661 91.4253 115.661 91.8599 cv
115.661 92.2944 116.014 92.6475 116.448 92.6475 cv
116.883 92.6475 117.236 92.2944 117.236 91.8599 cv
f
119.156 91.2598 mo
119.156 90.8252 118.803 90.4722 118.368 90.4722 cv
117.934 90.4722 117.581 90.8252 117.581 91.2598 cv
117.581 91.6943 117.934 92.0474 118.368 92.0474 cv
118.803 92.0474 119.156 91.6943 119.156 91.2598 cv
f
121.076 90.2998 mo
121.076 89.8652 120.723 89.5122 120.288 89.5122 cv
119.854 89.5122 119.5 89.8652 119.5 90.2998 cv
119.5 90.7344 119.854 91.0874 120.288 91.0874 cv
120.723 91.0874 121.076 90.7344 121.076 90.2998 cv
f
122.996 89.6997 mo
122.996 89.2651 122.643 88.9121 122.208 88.9121 cv
121.773 88.9121 121.421 89.2651 121.421 89.6997 cv
121.421 90.1343 121.773 90.4873 122.208 90.4873 cv
122.643 90.4873 122.996 90.1343 122.996 89.6997 cv
f
124.916 88.8599 mo
124.916 88.4253 124.563 88.0723 124.128 88.0723 cv
123.693 88.0723 123.341 88.4253 123.341 88.8599 cv
123.341 89.2944 123.693 89.6475 124.128 89.6475 cv
124.563 89.6475 124.916 89.2944 124.916 88.8599 cv
f
126.835 88.5 mo
126.835 88.0649 126.483 87.7124 126.048 87.7124 cv
125.613 87.7124 125.261 88.0649 125.261 88.5 cv
125.261 88.9346 125.613 89.2871 126.048 89.2871 cv
126.483 89.2871 126.835 88.9346 126.835 88.5 cv
f
128.756 88.2598 mo
128.756 87.8252 128.403 87.4722 127.968 87.4722 cv
127.534 87.4722 127.181 87.8252 127.181 88.2598 cv
127.181 88.6943 127.534 89.0474 127.968 89.0474 cv
128.403 89.0474 128.756 88.6943 128.756 88.2598 cv
f
130.676 87.6597 mo
130.676 87.2251 130.323 86.8721 129.888 86.8721 cv
129.454 86.8721 129.101 87.2251 129.101 87.6597 cv
129.101 88.0947 129.454 88.4473 129.888 88.4473 cv
130.323 88.4473 130.676 88.0947 130.676 87.6597 cv
f
132.596 87.4199 mo
132.596 86.9849 132.243 86.6323 131.808 86.6323 cv
131.374 86.6323 131.021 86.9849 131.021 87.4199 cv
131.021 87.8545 131.374 88.207 131.808 88.207 cv
132.243 88.207 132.596 87.8545 132.596 87.4199 cv
f
134.516 86.6997 mo
134.516 86.2651 134.163 85.9121 133.728 85.9121 cv
133.293 85.9121 132.941 86.2651 132.941 86.6997 cv
132.941 87.1343 133.293 87.4873 133.728 87.4873 cv
134.163 87.4873 134.516 87.1343 134.516 86.6997 cv
f
136.436 86.2197 mo
136.436 85.7852 136.083 85.4321 135.648 85.4321 cv
135.213 85.4321 134.861 85.7852 134.861 86.2197 cv
134.861 86.6543 135.213 87.0073 135.648 87.0073 cv
136.083 87.0073 136.436 86.6543 136.436 86.2197 cv
f
138.355 86.5796 mo
138.355 86.145 138.003 85.7925 137.568 85.7925 cv
137.133 85.7925 136.781 86.145 136.781 86.5796 cv
136.781 87.0146 137.133 87.3672 137.568 87.3672 cv
138.003 87.3672 138.355 87.0146 138.355 86.5796 cv
f
140.275 86.0996 mo
140.275 85.665 139.924 85.3125 139.488 85.3125 cv
139.053 85.3125 138.701 85.665 138.701 86.0996 cv
138.701 86.5347 139.053 86.8872 139.488 86.8872 cv
139.924 86.8872 140.275 86.5347 140.275 86.0996 cv
f
142.076 85.8599 mo
142.076 85.4253 141.723 85.0723 141.289 85.0723 cv
140.854 85.0723 140.5 85.4253 140.5 85.8599 cv
140.5 86.2944 140.854 86.6475 141.289 86.6475 cv
141.723 86.6475 142.076 86.2944 142.076 85.8599 cv
f
143.996 85.1396 mo
143.996 84.7051 143.643 84.3525 143.209 84.3525 cv
142.773 84.3525 142.42 84.7051 142.42 85.1396 cv
142.42 85.5747 142.773 85.9272 143.209 85.9272 cv
143.643 85.9272 143.996 85.5747 143.996 85.1396 cv
f
146.035 85.7397 mo
146.035 85.3052 145.684 84.9521 145.248 84.9521 cv
144.814 84.9521 144.461 85.3052 144.461 85.7397 cv
144.461 86.1743 144.814 86.5273 145.248 86.5273 cv
145.684 86.5273 146.035 86.1743 146.035 85.7397 cv
f
147.836 85.98 mo
147.836 85.5449 147.482 85.1924 147.049 85.1924 cv
146.613 85.1924 146.26 85.5449 146.26 85.98 cv
146.26 86.4146 146.613 86.7671 147.049 86.7671 cv
147.482 86.7671 147.836 86.4146 147.836 85.98 cv
f
149.756 84.6597 mo
149.756 84.2251 149.402 83.8721 148.969 83.8721 cv
148.533 83.8721 148.182 84.2251 148.182 84.6597 cv
148.182 85.0947 148.533 85.4473 148.969 85.4473 cv
149.402 85.4473 149.756 85.0947 149.756 84.6597 cv
f
151.676 85.1396 mo
151.676 84.7051 151.322 84.3525 150.889 84.3525 cv
150.453 84.3525 150.102 84.7051 150.102 85.1396 cv
150.102 85.5747 150.453 85.9272 150.889 85.9272 cv
151.322 85.9272 151.676 85.5747 151.676 85.1396 cv
f
153.596 85.6196 mo
153.596 85.1851 153.242 84.832 152.809 84.832 cv
152.373 84.832 152.021 85.1851 152.021 85.6196 cv
152.021 86.0547 152.373 86.4072 152.809 86.4072 cv
153.242 86.4072 153.596 86.0547 153.596 85.6196 cv
f
155.516 85.8599 mo
155.516 85.4253 155.162 85.0723 154.729 85.0723 cv
154.293 85.0723 153.941 85.4253 153.941 85.8599 cv
153.941 86.2944 154.293 86.6475 154.729 86.6475 cv
155.162 86.6475 155.516 86.2944 155.516 85.8599 cv
f
157.436 85.6196 mo
157.436 85.1851 157.082 84.832 156.648 84.832 cv
156.213 84.832 155.861 85.1851 155.861 85.6196 cv
155.861 86.0547 156.213 86.4072 156.648 86.4072 cv
157.082 86.4072 157.436 86.0547 157.436 85.6196 cv
f
159.355 85.8599 mo
159.355 85.4253 159.002 85.0723 158.568 85.0723 cv
158.133 85.0723 157.781 85.4253 157.781 85.8599 cv
157.781 86.2944 158.133 86.6475 158.568 86.6475 cv
159.002 86.6475 159.355 86.2944 159.355 85.8599 cv
f
161.275 86.5796 mo
161.275 86.145 160.924 85.7925 160.488 85.7925 cv
160.053 85.7925 159.701 86.145 159.701 86.5796 cv
159.701 87.0146 160.053 87.3672 160.488 87.3672 cv
160.924 87.3672 161.275 87.0146 161.275 86.5796 cv
f
163.195 85.7397 mo
163.195 85.3052 162.844 84.9521 162.408 84.9521 cv
161.973 84.9521 161.621 85.3052 161.621 85.7397 cv
161.621 86.1743 161.973 86.5273 162.408 86.5273 cv
162.844 86.5273 163.195 86.1743 163.195 85.7397 cv
f
165.115 86.6997 mo
165.115 86.2651 164.764 85.9121 164.328 85.9121 cv
163.893 85.9121 163.541 86.2651 163.541 86.6997 cv
163.541 87.1343 163.893 87.4873 164.328 87.4873 cv
164.764 87.4873 165.115 87.1343 165.115 86.6997 cv
f
166.916 87.2998 mo
166.916 86.8652 166.563 86.5122 166.129 86.5122 cv
165.693 86.5122 165.34 86.8652 165.34 87.2998 cv
165.34 87.7344 165.693 88.0874 166.129 88.0874 cv
166.563 88.0874 166.916 87.7344 166.916 87.2998 cv
f
168.836 87.54 mo
168.836 87.105 168.482 86.7524 168.049 86.7524 cv
167.613 86.7524 167.26 87.105 167.26 87.54 cv
167.26 87.9746 167.613 88.3271 168.049 88.3271 cv
168.482 88.3271 168.836 87.9746 168.836 87.54 cv
f
170.875 87.0596 mo
170.875 86.625 170.523 86.2725 170.088 86.2725 cv
169.654 86.2725 169.301 86.625 169.301 87.0596 cv
169.301 87.4946 169.654 87.8472 170.088 87.8472 cv
170.523 87.8472 170.875 87.4946 170.875 87.0596 cv
f
172.676 87.7798 mo
172.676 87.3452 172.322 86.9922 171.889 86.9922 cv
171.453 86.9922 171.102 87.3452 171.102 87.7798 cv
171.102 88.2144 171.453 88.5674 171.889 88.5674 cv
172.322 88.5674 172.676 88.2144 172.676 87.7798 cv
f
174.596 87.2998 mo
174.596 86.8652 174.242 86.5122 173.809 86.5122 cv
173.373 86.5122 173.021 86.8652 173.021 87.2998 cv
173.021 87.7344 173.373 88.0874 173.809 88.0874 cv
174.242 88.0874 174.596 87.7344 174.596 87.2998 cv
f
176.516 88.0195 mo
176.516 87.585 176.162 87.2324 175.729 87.2324 cv
175.293 87.2324 174.941 87.585 174.941 88.0195 cv
174.941 88.4546 175.293 88.8071 175.729 88.8071 cv
176.162 88.8071 176.516 88.4546 176.516 88.0195 cv
f
178.436 88.7397 mo
178.436 88.3052 178.082 87.9521 177.648 87.9521 cv
177.213 87.9521 176.861 88.3052 176.861 88.7397 cv
176.861 89.1743 177.213 89.5273 177.648 89.5273 cv
178.082 89.5273 178.436 89.1743 178.436 88.7397 cv
f
180.355 88.5 mo
180.355 88.0649 180.002 87.7124 179.568 87.7124 cv
179.133 87.7124 178.781 88.0649 178.781 88.5 cv
178.781 88.9346 179.133 89.2871 179.568 89.2871 cv
180.002 89.2871 180.355 88.9346 180.355 88.5 cv
f
182.275 89.5796 mo
182.275 89.145 181.924 88.7925 181.488 88.7925 cv
181.053 88.7925 180.701 89.145 180.701 89.5796 cv
180.701 90.0146 181.053 90.3672 181.488 90.3672 cv
181.924 90.3672 182.275 90.0146 182.275 89.5796 cv
f
184.195 89.6997 mo
184.195 89.2651 183.844 88.9121 183.408 88.9121 cv
182.973 88.9121 182.621 89.2651 182.621 89.6997 cv
182.621 90.1343 182.973 90.4873 183.408 90.4873 cv
183.844 90.4873 184.195 90.1343 184.195 89.6997 cv
f
186.115 90.0596 mo
186.115 89.625 185.764 89.2725 185.328 89.2725 cv
184.893 89.2725 184.541 89.625 184.541 90.0596 cv
184.541 90.4946 184.893 90.8472 185.328 90.8472 cv
185.764 90.8472 186.115 90.4946 186.115 90.0596 cv
f
188.035 89.9399 mo
188.035 89.5049 187.684 89.1523 187.248 89.1523 cv
186.814 89.1523 186.461 89.5049 186.461 89.9399 cv
186.461 90.3745 186.814 90.7275 187.248 90.7275 cv
187.684 90.7275 188.035 90.3745 188.035 89.9399 cv
f
189.955 90.6597 mo
189.955 90.2251 189.604 89.8721 189.168 89.8721 cv
188.734 89.8721 188.381 90.2251 188.381 90.6597 cv
188.381 91.0947 188.734 91.4473 189.168 91.4473 cv
189.604 91.4473 189.955 91.0947 189.955 90.6597 cv
f
191.875 90.2998 mo
191.875 89.8652 191.523 89.5122 191.088 89.5122 cv
190.654 89.5122 190.301 89.8652 190.301 90.2998 cv
190.301 90.7344 190.654 91.0874 191.088 91.0874 cv
191.523 91.0874 191.875 90.7344 191.875 90.2998 cv
f
193.676 91.5 mo
193.676 91.0649 193.322 90.7124 192.889 90.7124 cv
192.453 90.7124 192.102 91.0649 192.102 91.5 cv
192.102 91.9346 192.453 92.2871 192.889 92.2871 cv
193.322 92.2871 193.676 91.9346 193.676 91.5 cv
f
195.715 92.0996 mo
195.715 91.665 195.363 91.3125 194.928 91.3125 cv
194.494 91.3125 194.141 91.665 194.141 92.0996 cv
194.141 92.5347 194.494 92.8872 194.928 92.8872 cv
195.363 92.8872 195.715 92.5347 195.715 92.0996 cv
f
197.635 92.6997 mo
197.635 92.2651 197.283 91.9121 196.848 91.9121 cv
196.414 91.9121 196.061 92.2651 196.061 92.6997 cv
196.061 93.1343 196.414 93.4873 196.848 93.4873 cv
197.283 93.4873 197.635 93.1343 197.635 92.6997 cv
f
199.436 92.9399 mo
199.436 92.5049 199.082 92.1523 198.648 92.1523 cv
198.213 92.1523 197.861 92.5049 197.861 92.9399 cv
197.861 93.3745 198.213 93.7275 198.648 93.7275 cv
199.082 93.7275 199.436 93.3745 199.436 92.9399 cv
f
201.355 92.8198 mo
201.355 92.3853 201.002 92.0322 200.568 92.0322 cv
200.133 92.0322 199.781 92.3853 199.781 92.8198 cv
199.781 93.2544 200.133 93.6074 200.568 93.6074 cv
201.002 93.6074 201.355 93.2544 201.355 92.8198 cv
f
203.275 93.4199 mo
203.275 92.9849 202.924 92.6323 202.488 92.6323 cv
202.053 92.6323 201.701 92.9849 201.701 93.4199 cv
201.701 93.8545 202.053 94.207 202.488 94.207 cv
202.924 94.207 203.275 93.8545 203.275 93.4199 cv
f
205.195 94.2598 mo
205.195 93.8252 204.844 93.4722 204.408 93.4722 cv
203.973 93.4722 203.621 93.8252 203.621 94.2598 cv
203.621 94.6943 203.973 95.0469 204.408 95.0469 cv
204.844 95.0469 205.195 94.6943 205.195 94.2598 cv
f
207.115 93.0596 mo
207.115 92.625 206.764 92.2725 206.328 92.2725 cv
205.893 92.2725 205.541 92.625 205.541 93.0596 cv
205.541 93.4946 205.893 93.8477 206.328 93.8477 cv
206.764 93.8477 207.115 93.4946 207.115 93.0596 cv
f
209.035 94.7402 mo
209.035 94.3047 208.684 93.9521 208.248 93.9521 cv
207.814 93.9521 207.461 94.3047 207.461 94.7402 cv
207.461 95.1748 207.814 95.5273 208.248 95.5273 cv
208.684 95.5273 209.035 95.1748 209.035 94.7402 cv
f
210.955 94.8594 mo
210.955 94.4248 210.604 94.0723 210.168 94.0723 cv
209.734 94.0723 209.381 94.4248 209.381 94.8594 cv
209.381 95.2949 209.734 95.6475 210.168 95.6475 cv
210.604 95.6475 210.955 95.2949 210.955 94.8594 cv
f
212.875 95.0996 mo
212.875 94.665 212.523 94.3125 212.088 94.3125 cv
211.654 94.3125 211.301 94.665 211.301 95.0996 cv
211.301 95.5342 211.654 95.8877 212.088 95.8877 cv
212.523 95.8877 212.875 95.5342 212.875 95.0996 cv
f
214.795 95.2197 mo
214.795 94.7852 214.443 94.4326 214.008 94.4326 cv
213.574 94.4326 213.221 94.7852 213.221 95.2197 cv
213.221 95.6543 213.574 96.0068 214.008 96.0068 cv
214.443 96.0068 214.795 95.6543 214.795 95.2197 cv
f
216.715 95.7002 mo
216.715 95.2646 216.363 94.9121 215.928 94.9121 cv
215.494 94.9121 215.141 95.2646 215.141 95.7002 cv
215.141 96.1348 215.494 96.4873 215.928 96.4873 cv
216.363 96.4873 216.715 96.1348 216.715 95.7002 cv
f
218.635 96.0596 mo
218.635 95.625 218.283 95.2725 217.848 95.2725 cv
217.414 95.2725 217.061 95.625 217.061 96.0596 cv
217.061 96.4941 217.414 96.8477 217.848 96.8477 cv
218.283 96.8477 218.635 96.4941 218.635 96.0596 cv
f
220.557 96.4199 mo
220.557 95.9854 220.203 95.6318 219.768 95.6318 cv
219.334 95.6318 218.98 95.9854 218.98 96.4199 cv
218.98 96.8545 219.334 97.207 219.768 97.207 cv
220.203 97.207 220.557 96.8545 220.557 96.4199 cv
f
222.477 96.8994 mo
222.477 96.4648 222.123 96.1123 221.688 96.1123 cv
221.254 96.1123 220.9 96.4648 220.9 96.8994 cv
220.9 97.335 221.254 97.6875 221.688 97.6875 cv
222.123 97.6875 222.477 97.335 222.477 96.8994 cv
f
224.275 98.0996 mo
224.275 97.665 223.924 97.3125 223.488 97.3125 cv
223.053 97.3125 222.701 97.665 222.701 98.0996 cv
222.701 98.5342 223.053 98.8877 223.488 98.8877 cv
223.924 98.8877 224.275 98.5342 224.275 98.0996 cv
f
226.195 97.3799 mo
226.195 96.9453 225.844 96.5928 225.408 96.5928 cv
224.973 96.5928 224.621 96.9453 224.621 97.3799 cv
224.621 97.8145 224.973 98.167 225.408 98.167 cv
225.844 98.167 226.195 97.8145 226.195 97.3799 cv
f
228.115 98.3398 mo
228.115 97.9053 227.764 97.5527 227.328 97.5527 cv
226.893 97.5527 226.541 97.9053 226.541 98.3398 cv
226.541 98.7744 226.893 99.127 227.328 99.127 cv
227.764 99.127 228.115 98.7744 228.115 98.3398 cv
f
230.035 98.3398 mo
230.035 97.9053 229.684 97.5527 229.248 97.5527 cv
228.814 97.5527 228.461 97.9053 228.461 98.3398 cv
228.461 98.7744 228.814 99.127 229.248 99.127 cv
229.684 99.127 230.035 98.7744 230.035 98.3398 cv
f
231.955 98.8193 mo
231.955 98.3848 231.604 98.0322 231.168 98.0322 cv
230.734 98.0322 230.381 98.3848 230.381 98.8193 cv
230.381 99.2549 230.734 99.6074 231.168 99.6074 cv
231.604 99.6074 231.955 99.2549 231.955 98.8193 cv
f
42.7158 117.06 mo
42.7158 116.625 42.3628 116.272 41.9282 116.272 cv
41.4937 116.272 41.1406 116.625 41.1406 117.06 cv
41.1406 117.494 41.4937 117.848 41.9282 117.848 cv
42.3628 117.848 42.7158 117.494 42.7158 117.06 cv
f
44.6357 115.979 mo
44.6357 115.545 44.2827 115.192 43.8481 115.192 cv
43.4136 115.192 43.0605 115.545 43.0605 115.979 cv
43.0605 116.414 43.4136 116.768 43.8481 116.768 cv
44.2827 116.768 44.6357 116.414 44.6357 115.979 cv
f
46.5557 114.899 mo
46.5557 114.465 46.2026 114.112 45.7681 114.112 cv
45.3335 114.112 44.9805 114.465 44.9805 114.899 cv
44.9805 115.335 45.3335 115.688 45.7681 115.688 cv
46.2026 115.688 46.5557 115.335 46.5557 114.899 cv
f
48.4756 113.819 mo
48.4756 113.385 48.123 113.032 47.688 113.032 cv
47.2534 113.032 46.9009 113.385 46.9009 113.819 cv
46.9009 114.255 47.2534 114.607 47.688 114.607 cv
48.123 114.607 48.4756 114.255 48.4756 113.819 cv
f
50.3955 112.74 mo
50.3955 112.305 50.043 111.952 49.6084 111.952 cv
49.1733 111.952 48.8208 112.305 48.8208 112.74 cv
48.8208 113.175 49.1733 113.527 49.6084 113.527 cv
50.043 113.527 50.3955 113.175 50.3955 112.74 cv
f
52.3159 111.54 mo
52.3159 111.105 51.9629 110.752 51.5283 110.752 cv
51.0933 110.752 50.7407 111.105 50.7407 111.54 cv
50.7407 111.975 51.0933 112.327 51.5283 112.327 cv
51.9629 112.327 52.3159 111.975 52.3159 111.54 cv
f
54.2358 110.58 mo
54.2358 110.146 53.8828 109.792 53.4482 109.792 cv
53.0137 109.792 52.6606 110.146 52.6606 110.58 cv
52.6606 111.015 53.0137 111.367 53.4482 111.367 cv
53.8828 111.367 54.2358 111.015 54.2358 110.58 cv
f
56.1558 109.5 mo
56.1558 109.065 55.8027 108.712 55.3682 108.712 cv
54.9336 108.712 54.5806 109.065 54.5806 109.5 cv
54.5806 109.935 54.9336 110.287 55.3682 110.287 cv
55.8027 110.287 56.1558 109.935 56.1558 109.5 cv
f
58.0757 108.42 mo
58.0757 107.985 57.7227 107.632 57.2881 107.632 cv
56.8535 107.632 56.5005 107.985 56.5005 108.42 cv
56.5005 108.854 56.8535 109.207 57.2881 109.207 cv
57.7227 109.207 58.0757 108.854 58.0757 108.42 cv
f
59.8755 107.34 mo
59.8755 106.905 59.5229 106.553 59.0884 106.553 cv
58.6533 106.553 58.3008 106.905 58.3008 107.34 cv
58.3008 107.774 58.6533 108.127 59.0884 108.127 cv
59.5229 108.127 59.8755 107.774 59.8755 107.34 cv
f
61.7959 106.26 mo
61.7959 105.825 61.4429 105.473 61.0083 105.473 cv
60.5732 105.473 60.2207 105.825 60.2207 106.26 cv
60.2207 106.694 60.5732 107.047 61.0083 107.047 cv
61.4429 107.047 61.7959 106.694 61.7959 106.26 cv
f
63.7158 105.18 mo
63.7158 104.745 63.3628 104.393 62.9282 104.393 cv
62.4937 104.393 62.1406 104.745 62.1406 105.18 cv
62.1406 105.614 62.4937 105.968 62.9282 105.968 cv
63.3628 105.968 63.7158 105.614 63.7158 105.18 cv
f
65.6357 104.1 mo
65.6357 103.665 65.2827 103.313 64.8481 103.313 cv
64.4136 103.313 64.0605 103.665 64.0605 104.1 cv
64.0605 104.534 64.4136 104.888 64.8481 104.888 cv
65.2827 104.888 65.6357 104.534 65.6357 104.1 cv
f
67.5557 103.02 mo
67.5557 102.585 67.2026 102.232 66.7681 102.232 cv
66.3335 102.232 65.9805 102.585 65.9805 103.02 cv
65.9805 103.454 66.3335 103.808 66.7681 103.808 cv
67.2026 103.808 67.5557 103.454 67.5557 103.02 cv
f
69.4756 101.939 mo
69.4756 101.505 69.123 101.152 68.688 101.152 cv
68.2534 101.152 67.9009 101.505 67.9009 101.939 cv
67.9009 102.374 68.2534 102.728 68.688 102.728 cv
69.123 102.728 69.4756 102.374 69.4756 101.939 cv
f
71.3955 100.859 mo
71.3955 100.425 71.043 100.072 70.6084 100.072 cv
70.1733 100.072 69.8208 100.425 69.8208 100.859 cv
69.8208 101.295 70.1733 101.647 70.6084 101.647 cv
71.043 101.647 71.3955 101.295 71.3955 100.859 cv
f
73.3159 99.7803 mo
73.3159 99.3447 72.9629 98.9922 72.5283 98.9922 cv
72.0933 98.9922 71.7407 99.3447 71.7407 99.7803 cv
71.7407 100.215 72.0933 100.567 72.5283 100.567 cv
72.9629 100.567 73.3159 100.215 73.3159 99.7803 cv
f
75.2358 98.7002 mo
75.2358 98.2646 74.8828 97.9121 74.4482 97.9121 cv
74.0137 97.9121 73.6606 98.2646 73.6606 98.7002 cv
73.6606 99.1348 74.0137 99.4873 74.4482 99.4873 cv
74.8828 99.4873 75.2358 99.1348 75.2358 98.7002 cv
f
77.1558 97.6201 mo
77.1558 97.1846 76.8027 96.832 76.3682 96.832 cv
75.9336 96.832 75.5806 97.1846 75.5806 97.6201 cv
75.5806 98.0547 75.9336 98.4072 76.3682 98.4072 cv
76.8027 98.4072 77.1558 98.0547 77.1558 97.6201 cv
f
79.0757 96.54 mo
79.0757 96.1055 78.7227 95.752 78.2881 95.752 cv
77.8535 95.752 77.5005 96.1055 77.5005 96.54 cv
77.5005 96.9746 77.8535 97.3271 78.2881 97.3271 cv
78.7227 97.3271 79.0757 96.9746 79.0757 96.54 cv
f
80.9956 95.46 mo
80.9956 95.0254 80.6431 94.6719 80.208 94.6719 cv
79.7734 94.6719 79.4209 95.0254 79.4209 95.46 cv
79.4209 95.8945 79.7734 96.2471 80.208 96.2471 cv
80.6431 96.2471 80.9956 95.8945 80.9956 95.46 cv
f
82.9155 94.3799 mo
82.9155 93.9453 82.563 93.5923 82.1284 93.5923 cv
81.6934 93.5923 81.3408 93.9453 81.3408 94.3799 cv
81.3408 94.8145 81.6934 95.167 82.1284 95.167 cv
82.563 95.167 82.9155 94.8145 82.9155 94.3799 cv
f
84.8354 93.2998 mo
84.8354 92.8652 84.4829 92.5122 84.0483 92.5122 cv
83.6133 92.5122 83.2607 92.8652 83.2607 93.2998 cv
83.2607 93.7344 83.6133 94.0869 84.0483 94.0869 cv
84.4829 94.0869 84.8354 93.7344 84.8354 93.2998 cv
f
86.6357 92.2197 mo
86.6357 91.7852 86.2827 91.4321 85.8481 91.4321 cv
85.4136 91.4321 85.0605 91.7852 85.0605 92.2197 cv
85.0605 92.6543 85.4136 93.0073 85.8481 93.0073 cv
86.2827 93.0073 86.6357 92.6543 86.6357 92.2197 cv
f
88.6758 91.1396 mo
88.6758 90.7051 88.3228 90.3525 87.8882 90.3525 cv
87.4536 90.3525 87.1006 90.7051 87.1006 91.1396 cv
87.1006 91.5747 87.4536 91.9272 87.8882 91.9272 cv
88.3228 91.9272 88.6758 91.5747 88.6758 91.1396 cv
f
90.4756 90.0596 mo
90.4756 89.625 90.123 89.2725 89.688 89.2725 cv
89.2534 89.2725 88.9009 89.625 88.9009 90.0596 cv
88.9009 90.4946 89.2534 90.8472 89.688 90.8472 cv
90.123 90.8472 90.4756 90.4946 90.4756 90.0596 cv
f
92.3955 88.98 mo
92.3955 88.5449 92.043 88.1924 91.6084 88.1924 cv
91.1733 88.1924 90.8208 88.5449 90.8208 88.98 cv
90.8208 89.4146 91.1733 89.7671 91.6084 89.7671 cv
92.043 89.7671 92.3955 89.4146 92.3955 88.98 cv
f
94.3159 87.8999 mo
94.3159 87.4648 93.9629 87.1123 93.5283 87.1123 cv
93.0933 87.1123 92.7407 87.4648 92.7407 87.8999 cv
92.7407 88.3345 93.0933 88.6875 93.5283 88.6875 cv
93.9629 88.6875 94.3159 88.3345 94.3159 87.8999 cv
f
96.2358 86.9399 mo
96.2358 86.5049 95.8828 86.1523 95.4482 86.1523 cv
95.0137 86.1523 94.6606 86.5049 94.6606 86.9399 cv
94.6606 87.3745 95.0137 87.7275 95.4482 87.7275 cv
95.8828 87.7275 96.2358 87.3745 96.2358 86.9399 cv
f
98.1558 85.8599 mo
98.1558 85.4253 97.8027 85.0723 97.3682 85.0723 cv
96.9336 85.0723 96.5806 85.4253 96.5806 85.8599 cv
96.5806 86.2944 96.9336 86.6475 97.3682 86.6475 cv
97.8027 86.6475 98.1558 86.2944 98.1558 85.8599 cv
f
100.076 84.7798 mo
100.076 84.3452 99.7231 83.9922 99.2881 83.9922 cv
98.8535 83.9922 98.5005 84.3452 98.5005 84.7798 cv
98.5005 85.2144 98.8535 85.5674 99.2881 85.5674 cv
99.7231 85.5674 100.076 85.2144 100.076 84.7798 cv
f
101.996 83.6997 mo
101.996 83.2651 101.643 82.9121 101.208 82.9121 cv
100.773 82.9121 100.421 83.2651 100.421 83.6997 cv
100.421 84.1343 100.773 84.4873 101.208 84.4873 cv
101.643 84.4873 101.996 84.1343 101.996 83.6997 cv
f
103.916 82.7397 mo
103.916 82.3052 103.563 81.9521 103.128 81.9521 cv
102.693 81.9521 102.341 82.3052 102.341 82.7397 cv
102.341 83.1743 102.693 83.5273 103.128 83.5273 cv
103.563 83.5273 103.916 83.1743 103.916 82.7397 cv
f
105.835 81.6597 mo
105.835 81.2251 105.483 80.8721 105.048 80.8721 cv
104.613 80.8721 104.261 81.2251 104.261 81.6597 cv
104.261 82.0947 104.613 82.4473 105.048 82.4473 cv
105.483 82.4473 105.835 82.0947 105.835 81.6597 cv
f
107.756 80.6997 mo
107.756 80.2651 107.403 79.9121 106.968 79.9121 cv
106.534 79.9121 106.181 80.2651 106.181 80.6997 cv
106.181 81.1343 106.534 81.4873 106.968 81.4873 cv
107.403 81.4873 107.756 81.1343 107.756 80.6997 cv
f
109.676 79.7397 mo
109.676 79.3052 109.323 78.9521 108.888 78.9521 cv
108.454 78.9521 108.101 79.3052 108.101 79.7397 cv
108.101 80.1743 108.454 80.5273 108.888 80.5273 cv
109.323 80.5273 109.676 80.1743 109.676 79.7397 cv
f
111.596 78.6597 mo
111.596 78.2251 111.243 77.8721 110.808 77.8721 cv
110.374 77.8721 110.021 78.2251 110.021 78.6597 cv
110.021 79.0947 110.374 79.4473 110.808 79.4473 cv
111.243 79.4473 111.596 79.0947 111.596 78.6597 cv
f
113.516 77.6997 mo
113.516 77.2651 113.163 76.9121 112.728 76.9121 cv
112.293 76.9121 111.941 77.2651 111.941 77.6997 cv
111.941 78.1343 112.293 78.4873 112.728 78.4873 cv
113.163 78.4873 113.516 78.1343 113.516 77.6997 cv
f
115.316 76.8599 mo
115.316 76.4253 114.963 76.0723 114.528 76.0723 cv
114.093 76.0723 113.741 76.4253 113.741 76.8599 cv
113.741 77.2944 114.093 77.6475 114.528 77.6475 cv
114.963 77.6475 115.316 77.2944 115.316 76.8599 cv
f
117.236 75.8999 mo
117.236 75.4648 116.883 75.1123 116.448 75.1123 cv
116.014 75.1123 115.661 75.4648 115.661 75.8999 cv
115.661 76.3345 116.014 76.6875 116.448 76.6875 cv
116.883 76.6875 117.236 76.3345 117.236 75.8999 cv
f
119.156 75.0596 mo
119.156 74.625 118.803 74.2725 118.368 74.2725 cv
117.934 74.2725 117.581 74.625 117.581 75.0596 cv
117.581 75.4946 117.934 75.8472 118.368 75.8472 cv
118.803 75.8472 119.156 75.4946 119.156 75.0596 cv
f
121.076 74.0996 mo
121.076 73.665 120.723 73.3125 120.288 73.3125 cv
119.854 73.3125 119.5 73.665 119.5 74.0996 cv
119.5 74.5347 119.854 74.8872 120.288 74.8872 cv
120.723 74.8872 121.076 74.5347 121.076 74.0996 cv
f
122.996 73.3799 mo
122.996 72.9453 122.643 72.5923 122.208 72.5923 cv
121.773 72.5923 121.421 72.9453 121.421 73.3799 cv
121.421 73.8145 121.773 74.1675 122.208 74.1675 cv
122.643 74.1675 122.996 73.8145 122.996 73.3799 cv
f
124.916 73.0195 mo
124.916 72.585 124.563 72.2324 124.128 72.2324 cv
123.693 72.2324 123.341 72.585 123.341 73.0195 cv
123.341 73.4546 123.693 73.8071 124.128 73.8071 cv
124.563 73.8071 124.916 73.4546 124.916 73.0195 cv
f
126.835 71.9399 mo
126.835 71.5049 126.483 71.1523 126.048 71.1523 cv
125.613 71.1523 125.261 71.5049 125.261 71.9399 cv
125.261 72.3745 125.613 72.7275 126.048 72.7275 cv
126.483 72.7275 126.835 72.3745 126.835 71.9399 cv
f
128.756 71.2197 mo
128.756 70.7852 128.403 70.4321 127.968 70.4321 cv
127.534 70.4321 127.181 70.7852 127.181 71.2197 cv
127.181 71.6543 127.534 72.0073 127.968 72.0073 cv
128.403 72.0073 128.756 71.6543 128.756 71.2197 cv
f
130.676 70.7397 mo
130.676 70.3052 130.323 69.9521 129.888 69.9521 cv
129.454 69.9521 129.101 70.3052 129.101 70.7397 cv
129.101 71.1743 129.454 71.5273 129.888 71.5273 cv
130.323 71.5273 130.676 71.1743 130.676 70.7397 cv
f
132.596 70.2598 mo
132.596 69.8252 132.243 69.4722 131.808 69.4722 cv
131.374 69.4722 131.021 69.8252 131.021 70.2598 cv
131.021 70.6943 131.374 71.0474 131.808 71.0474 cv
132.243 71.0474 132.596 70.6943 132.596 70.2598 cv
f
134.516 69.2998 mo
134.516 68.8652 134.163 68.5122 133.728 68.5122 cv
133.293 68.5122 132.941 68.8652 132.941 69.2998 cv
132.941 69.7344 133.293 70.0874 133.728 70.0874 cv
134.163 70.0874 134.516 69.7344 134.516 69.2998 cv
f
136.436 69.0596 mo
136.436 68.625 136.083 68.2725 135.648 68.2725 cv
135.213 68.2725 134.861 68.625 134.861 69.0596 cv
134.861 69.4946 135.213 69.8472 135.648 69.8472 cv
136.083 69.8472 136.436 69.4946 136.436 69.0596 cv
f
138.355 69.4199 mo
138.355 68.9849 138.003 68.6323 137.568 68.6323 cv
137.133 68.6323 136.781 68.9849 136.781 69.4199 cv
136.781 69.8545 137.133 70.207 137.568 70.207 cv
138.003 70.207 138.355 69.8545 138.355 69.4199 cv
f
140.275 68.6997 mo
140.275 68.2651 139.924 67.9121 139.488 67.9121 cv
139.053 67.9121 138.701 68.2651 138.701 68.6997 cv
138.701 69.1343 139.053 69.4873 139.488 69.4873 cv
139.924 69.4873 140.275 69.1343 140.275 68.6997 cv
f
142.076 68.3398 mo
142.076 67.9053 141.723 67.5522 141.289 67.5522 cv
140.854 67.5522 140.5 67.9053 140.5 68.3398 cv
140.5 68.7744 140.854 69.1274 141.289 69.1274 cv
141.723 69.1274 142.076 68.7744 142.076 68.3398 cv
f
143.996 67.98 mo
143.996 67.5449 143.643 67.1924 143.209 67.1924 cv
142.773 67.1924 142.42 67.5449 142.42 67.98 cv
142.42 68.4146 142.773 68.7671 143.209 68.7671 cv
143.643 68.7671 143.996 68.4146 143.996 67.98 cv
f
146.035 68.0996 mo
146.035 67.665 145.684 67.3125 145.248 67.3125 cv
144.814 67.3125 144.461 67.665 144.461 68.0996 cv
144.461 68.5347 144.814 68.8872 145.248 68.8872 cv
145.684 68.8872 146.035 68.5347 146.035 68.0996 cv
f
147.836 67.6196 mo
147.836 67.1851 147.482 66.832 147.049 66.832 cv
146.613 66.832 146.26 67.1851 146.26 67.6196 cv
146.26 68.0547 146.613 68.4072 147.049 68.4072 cv
147.482 68.4072 147.836 68.0547 147.836 67.6196 cv
f
149.756 67.6196 mo
149.756 67.1851 149.402 66.832 148.969 66.832 cv
148.533 66.832 148.182 67.1851 148.182 67.6196 cv
148.182 68.0547 148.533 68.4072 148.969 68.4072 cv
149.402 68.4072 149.756 68.0547 149.756 67.6196 cv
f
151.676 67.1396 mo
151.676 66.7051 151.322 66.3525 150.889 66.3525 cv
150.453 66.3525 150.102 66.7051 150.102 67.1396 cv
150.102 67.5747 150.453 67.9272 150.889 67.9272 cv
151.322 67.9272 151.676 67.5747 151.676 67.1396 cv
f
153.596 67.1396 mo
153.596 66.7051 153.242 66.3525 152.809 66.3525 cv
152.373 66.3525 152.021 66.7051 152.021 67.1396 cv
152.021 67.5747 152.373 67.9272 152.809 67.9272 cv
153.242 67.9272 153.596 67.5747 153.596 67.1396 cv
f
155.516 67.7397 mo
155.516 67.3052 155.162 66.9521 154.729 66.9521 cv
154.293 66.9521 153.941 67.3052 153.941 67.7397 cv
153.941 68.1743 154.293 68.5273 154.729 68.5273 cv
155.162 68.5273 155.516 68.1743 155.516 67.7397 cv
f
157.436 67.7397 mo
157.436 67.3052 157.082 66.9521 156.648 66.9521 cv
156.213 66.9521 155.861 67.3052 155.861 67.7397 cv
155.861 68.1743 156.213 68.5273 156.648 68.5273 cv
157.082 68.5273 157.436 68.1743 157.436 67.7397 cv
f
159.355 68.3398 mo
159.355 67.9053 159.002 67.5522 158.568 67.5522 cv
158.133 67.5522 157.781 67.9053 157.781 68.3398 cv
157.781 68.7744 158.133 69.1274 158.568 69.1274 cv
159.002 69.1274 159.355 68.7744 159.355 68.3398 cv
f
161.275 67.5 mo
161.275 67.0649 160.924 66.7124 160.488 66.7124 cv
160.053 66.7124 159.701 67.0649 159.701 67.5 cv
159.701 67.9346 160.053 68.2871 160.488 68.2871 cv
160.924 68.2871 161.275 67.9346 161.275 67.5 cv
f
163.195 68.46 mo
163.195 68.0249 162.844 67.6724 162.408 67.6724 cv
161.973 67.6724 161.621 68.0249 161.621 68.46 cv
161.621 68.8945 161.973 69.2471 162.408 69.2471 cv
162.844 69.2471 163.195 68.8945 163.195 68.46 cv
f
165.115 68.5796 mo
165.115 68.145 164.764 67.7925 164.328 67.7925 cv
163.893 67.7925 163.541 68.145 163.541 68.5796 cv
163.541 69.0146 163.893 69.3672 164.328 69.3672 cv
164.764 69.3672 165.115 69.0146 165.115 68.5796 cv
f
166.916 68.9399 mo
166.916 68.5049 166.563 68.1523 166.129 68.1523 cv
165.693 68.1523 165.34 68.5049 165.34 68.9399 cv
165.34 69.3745 165.693 69.7275 166.129 69.7275 cv
166.563 69.7275 166.916 69.3745 166.916 68.9399 cv
f
168.836 69.2998 mo
168.836 68.8652 168.482 68.5122 168.049 68.5122 cv
167.613 68.5122 167.26 68.8652 167.26 69.2998 cv
167.26 69.7344 167.613 70.0874 168.049 70.0874 cv
168.482 70.0874 168.836 69.7344 168.836 69.2998 cv
f
170.875 69.54 mo
170.875 69.105 170.523 68.7524 170.088 68.7524 cv
169.654 68.7524 169.301 69.105 169.301 69.54 cv
169.301 69.9746 169.654 70.3271 170.088 70.3271 cv
170.523 70.3271 170.875 69.9746 170.875 69.54 cv
f
172.676 70.2598 mo
172.676 69.8252 172.322 69.4722 171.889 69.4722 cv
171.453 69.4722 171.102 69.8252 171.102 70.2598 cv
171.102 70.6943 171.453 71.0474 171.889 71.0474 cv
172.322 71.0474 172.676 70.6943 172.676 70.2598 cv
f
174.596 69.54 mo
174.596 69.105 174.242 68.7524 173.809 68.7524 cv
173.373 68.7524 173.021 69.105 173.021 69.54 cv
173.021 69.9746 173.373 70.3271 173.809 70.3271 cv
174.242 70.3271 174.596 69.9746 174.596 69.54 cv
f
176.516 70.7397 mo
176.516 70.3052 176.162 69.9521 175.729 69.9521 cv
175.293 69.9521 174.941 70.3052 174.941 70.7397 cv
174.941 71.1743 175.293 71.5273 175.729 71.5273 cv
176.162 71.5273 176.516 71.1743 176.516 70.7397 cv
f
178.436 70.7397 mo
178.436 70.3052 178.082 69.9521 177.648 69.9521 cv
177.213 69.9521 176.861 70.3052 176.861 70.7397 cv
176.861 71.1743 177.213 71.5273 177.648 71.5273 cv
178.082 71.5273 178.436 71.1743 178.436 70.7397 cv
f
180.355 71.6997 mo
180.355 71.2651 180.002 70.9121 179.568 70.9121 cv
179.133 70.9121 178.781 71.2651 178.781 71.6997 cv
178.781 72.1343 179.133 72.4873 179.568 72.4873 cv
180.002 72.4873 180.355 72.1343 180.355 71.6997 cv
f
182.275 71.3398 mo
182.275 70.9053 181.924 70.5522 181.488 70.5522 cv
181.053 70.5522 180.701 70.9053 180.701 71.3398 cv
180.701 71.7744 181.053 72.1274 181.488 72.1274 cv
181.924 72.1274 182.275 71.7744 182.275 71.3398 cv
f
184.195 71.9399 mo
184.195 71.5049 183.844 71.1523 183.408 71.1523 cv
182.973 71.1523 182.621 71.5049 182.621 71.9399 cv
182.621 72.3745 182.973 72.7275 183.408 72.7275 cv
183.844 72.7275 184.195 72.3745 184.195 71.9399 cv
f
186.115 72.0596 mo
186.115 71.625 185.764 71.2725 185.328 71.2725 cv
184.893 71.2725 184.541 71.625 184.541 72.0596 cv
184.541 72.4946 184.893 72.8472 185.328 72.8472 cv
185.764 72.8472 186.115 72.4946 186.115 72.0596 cv
f
188.035 72.4199 mo
188.035 71.9849 187.684 71.6323 187.248 71.6323 cv
186.814 71.6323 186.461 71.9849 186.461 72.4199 cv
186.461 72.8545 186.814 73.207 187.248 73.207 cv
187.684 73.207 188.035 72.8545 188.035 72.4199 cv
f
189.955 73.1396 mo
189.955 72.7051 189.604 72.3525 189.168 72.3525 cv
188.734 72.3525 188.381 72.7051 188.381 73.1396 cv
188.381 73.5747 188.734 73.9272 189.168 73.9272 cv
189.604 73.9272 189.955 73.5747 189.955 73.1396 cv
f
191.875 72.8999 mo
191.875 72.4648 191.523 72.1123 191.088 72.1123 cv
190.654 72.1123 190.301 72.4648 190.301 72.8999 cv
190.301 73.3345 190.654 73.6875 191.088 73.6875 cv
191.523 73.6875 191.875 73.3345 191.875 72.8999 cv
f
193.676 74.46 mo
193.676 74.0249 193.322 73.6724 192.889 73.6724 cv
192.453 73.6724 192.102 74.0249 192.102 74.46 cv
192.102 74.8945 192.453 75.2471 192.889 75.2471 cv
193.322 75.2471 193.676 74.8945 193.676 74.46 cv
f
195.715 74.2197 mo
195.715 73.7852 195.363 73.4321 194.928 73.4321 cv
194.494 73.4321 194.141 73.7852 194.141 74.2197 cv
194.141 74.6543 194.494 75.0073 194.928 75.0073 cv
195.363 75.0073 195.715 74.6543 195.715 74.2197 cv
f
197.635 74.3398 mo
197.635 73.9053 197.283 73.5522 196.848 73.5522 cv
196.414 73.5522 196.061 73.9053 196.061 74.3398 cv
196.061 74.7744 196.414 75.1274 196.848 75.1274 cv
197.283 75.1274 197.635 74.7744 197.635 74.3398 cv
f
199.436 74.3398 mo
199.436 73.9053 199.082 73.5522 198.648 73.5522 cv
198.213 73.5522 197.861 73.9053 197.861 74.3398 cv
197.861 74.7744 198.213 75.1274 198.648 75.1274 cv
199.082 75.1274 199.436 74.7744 199.436 74.3398 cv
f
201.355 75.2998 mo
201.355 74.8652 201.002 74.5122 200.568 74.5122 cv
200.133 74.5122 199.781 74.8652 199.781 75.2998 cv
199.781 75.7344 200.133 76.0874 200.568 76.0874 cv
201.002 76.0874 201.355 75.7344 201.355 75.2998 cv
f
203.275 75.0596 mo
203.275 74.625 202.924 74.2725 202.488 74.2725 cv
202.053 74.2725 201.701 74.625 201.701 75.0596 cv
201.701 75.4946 202.053 75.8472 202.488 75.8472 cv
202.924 75.8472 203.275 75.4946 203.275 75.0596 cv
f
205.195 75.7798 mo
205.195 75.3452 204.844 74.9922 204.408 74.9922 cv
203.973 74.9922 203.621 75.3452 203.621 75.7798 cv
203.621 76.2144 203.973 76.5674 204.408 76.5674 cv
204.844 76.5674 205.195 76.2144 205.195 75.7798 cv
f
207.115 75.1797 mo
207.115 74.7451 206.764 74.3921 206.328 74.3921 cv
205.893 74.3921 205.541 74.7451 205.541 75.1797 cv
205.541 75.6143 205.893 75.9673 206.328 75.9673 cv
206.764 75.9673 207.115 75.6143 207.115 75.1797 cv
f
209.035 76.5 mo
209.035 76.0649 208.684 75.7124 208.248 75.7124 cv
207.814 75.7124 207.461 76.0649 207.461 76.5 cv
207.461 76.9346 207.814 77.2871 208.248 77.2871 cv
208.684 77.2871 209.035 76.9346 209.035 76.5 cv
f
210.955 77.0996 mo
210.955 76.665 210.604 76.3125 210.168 76.3125 cv
209.734 76.3125 209.381 76.665 209.381 77.0996 cv
209.381 77.5347 209.734 77.8872 210.168 77.8872 cv
210.604 77.8872 210.955 77.5347 210.955 77.0996 cv
f
212.875 77.46 mo
212.875 77.0249 212.523 76.6724 212.088 76.6724 cv
211.654 76.6724 211.301 77.0249 211.301 77.46 cv
211.301 77.8945 211.654 78.2471 212.088 78.2471 cv
212.523 78.2471 212.875 77.8945 212.875 77.46 cv
f
214.795 76.8599 mo
214.795 76.4253 214.443 76.0723 214.008 76.0723 cv
213.574 76.0723 213.221 76.4253 213.221 76.8599 cv
213.221 77.2944 213.574 77.6475 214.008 77.6475 cv
214.443 77.6475 214.795 77.2944 214.795 76.8599 cv
f
216.715 77.6997 mo
216.715 77.2651 216.363 76.9121 215.928 76.9121 cv
215.494 76.9121 215.141 77.2651 215.141 77.6997 cv
215.141 78.1343 215.494 78.4873 215.928 78.4873 cv
216.363 78.4873 216.715 78.1343 216.715 77.6997 cv
f
218.635 79.2598 mo
218.635 78.8252 218.283 78.4722 217.848 78.4722 cv
217.414 78.4722 217.061 78.8252 217.061 79.2598 cv
217.061 79.6943 217.414 80.0474 217.848 80.0474 cv
218.283 80.0474 218.635 79.6943 218.635 79.2598 cv
f
220.557 78.6597 mo
220.557 78.2251 220.203 77.8721 219.768 77.8721 cv
219.334 77.8721 218.98 78.2251 218.98 78.6597 cv
218.98 79.0947 219.334 79.4473 219.768 79.4473 cv
220.203 79.4473 220.557 79.0947 220.557 78.6597 cv
f
222.477 78.1797 mo
222.477 77.7451 222.123 77.3921 221.688 77.3921 cv
221.254 77.3921 220.9 77.7451 220.9 78.1797 cv
220.9 78.6143 221.254 78.9673 221.688 78.9673 cv
222.123 78.9673 222.477 78.6143 222.477 78.1797 cv
f
224.275 79.0195 mo
224.275 78.585 223.924 78.2324 223.488 78.2324 cv
223.053 78.2324 222.701 78.585 222.701 79.0195 cv
222.701 79.4546 223.053 79.8071 223.488 79.8071 cv
223.924 79.8071 224.275 79.4546 224.275 79.0195 cv
f
226.195 79.1396 mo
226.195 78.7051 225.844 78.3525 225.408 78.3525 cv
224.973 78.3525 224.621 78.7051 224.621 79.1396 cv
224.621 79.5747 224.973 79.9272 225.408 79.9272 cv
225.844 79.9272 226.195 79.5747 226.195 79.1396 cv
f
228.115 79.8599 mo
228.115 79.4253 227.764 79.0723 227.328 79.0723 cv
226.893 79.0723 226.541 79.4253 226.541 79.8599 cv
226.541 80.2944 226.893 80.6475 227.328 80.6475 cv
227.764 80.6475 228.115 80.2944 228.115 79.8599 cv
f
230.035 80.3398 mo
230.035 79.9053 229.684 79.5522 229.248 79.5522 cv
228.814 79.5522 228.461 79.9053 228.461 80.3398 cv
228.461 80.7744 228.814 81.1274 229.248 81.1274 cv
229.684 81.1274 230.035 80.7744 230.035 80.3398 cv
f
231.955 81.4199 mo
231.955 80.9849 231.604 80.6323 231.168 80.6323 cv
230.734 80.6323 230.381 80.9849 230.381 81.4199 cv
230.381 81.8545 230.734 82.207 231.168 82.207 cv
231.604 82.207 231.955 81.8545 231.955 81.4199 cv
f
42.7158 108.06 mo
42.7158 107.625 42.3628 107.272 41.9282 107.272 cv
41.4937 107.272 41.1406 107.625 41.1406 108.06 cv
41.1406 108.494 41.4937 108.848 41.9282 108.848 cv
42.3628 108.848 42.7158 108.494 42.7158 108.06 cv
f
44.6357 106.74 mo
44.6357 106.305 44.2827 105.952 43.8481 105.952 cv
43.4136 105.952 43.0605 106.305 43.0605 106.74 cv
43.0605 107.175 43.4136 107.527 43.8481 107.527 cv
44.2827 107.527 44.6357 107.175 44.6357 106.74 cv
f
46.5557 105.54 mo
46.5557 105.105 46.2026 104.752 45.7681 104.752 cv
45.3335 104.752 44.9805 105.105 44.9805 105.54 cv
44.9805 105.975 45.3335 106.327 45.7681 106.327 cv
46.2026 106.327 46.5557 105.975 46.5557 105.54 cv
f
48.4756 104.22 mo
48.4756 103.785 48.123 103.433 47.688 103.433 cv
47.2534 103.433 46.9009 103.785 46.9009 104.22 cv
46.9009 104.654 47.2534 105.007 47.688 105.007 cv
48.123 105.007 48.4756 104.654 48.4756 104.22 cv
f
50.3955 103.02 mo
50.3955 102.585 50.043 102.232 49.6084 102.232 cv
49.1733 102.232 48.8208 102.585 48.8208 103.02 cv
48.8208 103.454 49.1733 103.808 49.6084 103.808 cv
50.043 103.808 50.3955 103.454 50.3955 103.02 cv
f
52.3159 101.7 mo
52.3159 101.265 51.9629 100.912 51.5283 100.912 cv
51.0933 100.912 50.7407 101.265 50.7407 101.7 cv
50.7407 102.135 51.0933 102.487 51.5283 102.487 cv
51.9629 102.487 52.3159 102.135 52.3159 101.7 cv
f
54.2358 100.5 mo
54.2358 100.065 53.8828 99.7119 53.4482 99.7119 cv
53.0137 99.7119 52.6606 100.065 52.6606 100.5 cv
52.6606 100.935 53.0137 101.287 53.4482 101.287 cv
53.8828 101.287 54.2358 100.935 54.2358 100.5 cv
f
56.1558 99.2998 mo
56.1558 98.8652 55.8027 98.5127 55.3682 98.5127 cv
54.9336 98.5127 54.5806 98.8652 54.5806 99.2998 cv
54.5806 99.7344 54.9336 100.087 55.3682 100.087 cv
55.8027 100.087 56.1558 99.7344 56.1558 99.2998 cv
f
58.0757 97.9795 mo
58.0757 97.5449 57.7227 97.1924 57.2881 97.1924 cv
56.8535 97.1924 56.5005 97.5449 56.5005 97.9795 cv
56.5005 98.4141 56.8535 98.7676 57.2881 98.7676 cv
57.7227 98.7676 58.0757 98.4141 58.0757 97.9795 cv
f
59.8755 96.6602 mo
59.8755 96.2256 59.5229 95.8721 59.0884 95.8721 cv
58.6533 95.8721 58.3008 96.2256 58.3008 96.6602 cv
58.3008 97.0947 58.6533 97.4473 59.0884 97.4473 cv
59.5229 97.4473 59.8755 97.0947 59.8755 96.6602 cv
f
61.7959 95.46 mo
61.7959 95.0254 61.4429 94.6719 61.0083 94.6719 cv
60.5732 94.6719 60.2207 95.0254 60.2207 95.46 cv
60.2207 95.8945 60.5732 96.2471 61.0083 96.2471 cv
61.4429 96.2471 61.7959 95.8945 61.7959 95.46 cv
f
63.7158 94.2598 mo
63.7158 93.8252 63.3628 93.4722 62.9282 93.4722 cv
62.4937 93.4722 62.1406 93.8252 62.1406 94.2598 cv
62.1406 94.6943 62.4937 95.0469 62.9282 95.0469 cv
63.3628 95.0469 63.7158 94.6943 63.7158 94.2598 cv
f
65.6357 92.9399 mo
65.6357 92.5049 65.2827 92.1523 64.8481 92.1523 cv
64.4136 92.1523 64.0605 92.5049 64.0605 92.9399 cv
64.0605 93.3745 64.4136 93.7275 64.8481 93.7275 cv
65.2827 93.7275 65.6357 93.3745 65.6357 92.9399 cv
f
67.5557 91.7397 mo
67.5557 91.3052 67.2026 90.9521 66.7681 90.9521 cv
66.3335 90.9521 65.9805 91.3052 65.9805 91.7397 cv
65.9805 92.1743 66.3335 92.5273 66.7681 92.5273 cv
67.2026 92.5273 67.5557 92.1743 67.5557 91.7397 cv
f
69.4756 90.4199 mo
69.4756 89.9849 69.123 89.6323 68.688 89.6323 cv
68.2534 89.6323 67.9009 89.9849 67.9009 90.4199 cv
67.9009 90.8545 68.2534 91.207 68.688 91.207 cv
69.123 91.207 69.4756 90.8545 69.4756 90.4199 cv
f
71.3955 89.0996 mo
71.3955 88.665 71.043 88.3125 70.6084 88.3125 cv
70.1733 88.3125 69.8208 88.665 69.8208 89.0996 cv
69.8208 89.5347 70.1733 89.8872 70.6084 89.8872 cv
71.043 89.8872 71.3955 89.5347 71.3955 89.0996 cv
f
73.3159 87.8999 mo
73.3159 87.4648 72.9629 87.1123 72.5283 87.1123 cv
72.0933 87.1123 71.7407 87.4648 71.7407 87.8999 cv
71.7407 88.3345 72.0933 88.6875 72.5283 88.6875 cv
72.9629 88.6875 73.3159 88.3345 73.3159 87.8999 cv
f
75.2358 86.6997 mo
75.2358 86.2651 74.8828 85.9121 74.4482 85.9121 cv
74.0137 85.9121 73.6606 86.2651 73.6606 86.6997 cv
73.6606 87.1343 74.0137 87.4873 74.4482 87.4873 cv
74.8828 87.4873 75.2358 87.1343 75.2358 86.6997 cv
f
77.1558 85.3799 mo
77.1558 84.9453 76.8027 84.5923 76.3682 84.5923 cv
75.9336 84.5923 75.5806 84.9453 75.5806 85.3799 cv
75.5806 85.8145 75.9336 86.1675 76.3682 86.1675 cv
76.8027 86.1675 77.1558 85.8145 77.1558 85.3799 cv
f
79.0757 84.1797 mo
79.0757 83.7451 78.7227 83.3921 78.2881 83.3921 cv
77.8535 83.3921 77.5005 83.7451 77.5005 84.1797 cv
77.5005 84.6143 77.8535 84.9673 78.2881 84.9673 cv
78.7227 84.9673 79.0757 84.6143 79.0757 84.1797 cv
f
80.9956 82.8599 mo
80.9956 82.4253 80.6431 82.0723 80.208 82.0723 cv
79.7734 82.0723 79.4209 82.4253 79.4209 82.8599 cv
79.4209 83.2944 79.7734 83.6475 80.208 83.6475 cv
80.6431 83.6475 80.9956 83.2944 80.9956 82.8599 cv
f
82.9155 81.6597 mo
82.9155 81.2251 82.563 80.8721 82.1284 80.8721 cv
81.6934 80.8721 81.3408 81.2251 81.3408 81.6597 cv
81.3408 82.0947 81.6934 82.4473 82.1284 82.4473 cv
82.563 82.4473 82.9155 82.0947 82.9155 81.6597 cv
f
84.8354 80.3398 mo
84.8354 79.9053 84.4829 79.5522 84.0483 79.5522 cv
83.6133 79.5522 83.2607 79.9053 83.2607 80.3398 cv
83.2607 80.7744 83.6133 81.1274 84.0483 81.1274 cv
84.4829 81.1274 84.8354 80.7744 84.8354 80.3398 cv
f
86.6357 79.1396 mo
86.6357 78.7051 86.2827 78.3525 85.8481 78.3525 cv
85.4136 78.3525 85.0605 78.7051 85.0605 79.1396 cv
85.0605 79.5747 85.4136 79.9272 85.8481 79.9272 cv
86.2827 79.9272 86.6357 79.5747 86.6357 79.1396 cv
f
88.6758 77.9399 mo
88.6758 77.5049 88.3228 77.1523 87.8882 77.1523 cv
87.4536 77.1523 87.1006 77.5049 87.1006 77.9399 cv
87.1006 78.3745 87.4536 78.7275 87.8882 78.7275 cv
88.3228 78.7275 88.6758 78.3745 88.6758 77.9399 cv
f
90.4756 76.6196 mo
90.4756 76.1851 90.123 75.832 89.688 75.832 cv
89.2534 75.832 88.9009 76.1851 88.9009 76.6196 cv
88.9009 77.0547 89.2534 77.4072 89.688 77.4072 cv
90.123 77.4072 90.4756 77.0547 90.4756 76.6196 cv
f
92.3955 75.4199 mo
92.3955 74.9849 92.043 74.6323 91.6084 74.6323 cv
91.1733 74.6323 90.8208 74.9849 90.8208 75.4199 cv
90.8208 75.8545 91.1733 76.207 91.6084 76.207 cv
92.043 76.207 92.3955 75.8545 92.3955 75.4199 cv
f
94.3159 74.0996 mo
94.3159 73.665 93.9629 73.3125 93.5283 73.3125 cv
93.0933 73.3125 92.7407 73.665 92.7407 74.0996 cv
92.7407 74.5347 93.0933 74.8872 93.5283 74.8872 cv
93.9629 74.8872 94.3159 74.5347 94.3159 74.0996 cv
f
96.2358 72.8999 mo
96.2358 72.4648 95.8828 72.1123 95.4482 72.1123 cv
95.0137 72.1123 94.6606 72.4648 94.6606 72.8999 cv
94.6606 73.3345 95.0137 73.6875 95.4482 73.6875 cv
95.8828 73.6875 96.2358 73.3345 96.2358 72.8999 cv
f
98.1558 71.6997 mo
98.1558 71.2651 97.8027 70.9121 97.3682 70.9121 cv
96.9336 70.9121 96.5806 71.2651 96.5806 71.6997 cv
96.5806 72.1343 96.9336 72.4873 97.3682 72.4873 cv
97.8027 72.4873 98.1558 72.1343 98.1558 71.6997 cv
f
100.076 70.5 mo
100.076 70.0649 99.7231 69.7124 99.2881 69.7124 cv
98.8535 69.7124 98.5005 70.0649 98.5005 70.5 cv
98.5005 70.9346 98.8535 71.2871 99.2881 71.2871 cv
99.7231 71.2871 100.076 70.9346 100.076 70.5 cv
f
101.996 69.1797 mo
101.996 68.7451 101.643 68.3921 101.208 68.3921 cv
100.773 68.3921 100.421 68.7451 100.421 69.1797 cv
100.421 69.6143 100.773 69.9673 101.208 69.9673 cv
101.643 69.9673 101.996 69.6143 101.996 69.1797 cv
f
103.916 67.98 mo
103.916 67.5449 103.563 67.1924 103.128 67.1924 cv
102.693 67.1924 102.341 67.5449 102.341 67.98 cv
102.341 68.4146 102.693 68.7671 103.128 68.7671 cv
103.563 68.7671 103.916 68.4146 103.916 67.98 cv
f
105.835 66.8999 mo
105.835 66.4648 105.483 66.1123 105.048 66.1123 cv
104.613 66.1123 104.261 66.4648 104.261 66.8999 cv
104.261 67.3345 104.613 67.6875 105.048 67.6875 cv
105.483 67.6875 105.835 67.3345 105.835 66.8999 cv
f
107.756 65.6997 mo
107.756 65.2651 107.403 64.9121 106.968 64.9121 cv
106.534 64.9121 106.181 65.2651 106.181 65.6997 cv
106.181 66.1343 106.534 66.4873 106.968 66.4873 cv
107.403 66.4873 107.756 66.1343 107.756 65.6997 cv
f
109.676 64.5 mo
109.676 64.0649 109.323 63.7124 108.888 63.7124 cv
108.454 63.7124 108.101 64.0649 108.101 64.5 cv
108.101 64.9346 108.454 65.2871 108.888 65.2871 cv
109.323 65.2871 109.676 64.9346 109.676 64.5 cv
f
111.596 63.54 mo
111.596 63.105 111.243 62.7524 110.808 62.7524 cv
110.374 62.7524 110.021 63.105 110.021 63.54 cv
110.021 63.9746 110.374 64.3271 110.808 64.3271 cv
111.243 64.3271 111.596 63.9746 111.596 63.54 cv
f
113.516 62.2197 mo
113.516 61.7852 113.163 61.4321 112.728 61.4321 cv
112.293 61.4321 111.941 61.7852 111.941 62.2197 cv
111.941 62.6543 112.293 63.0073 112.728 63.0073 cv
113.163 63.0073 113.516 62.6543 113.516 62.2197 cv
f
115.316 61.0195 mo
115.316 60.585 114.963 60.2324 114.528 60.2324 cv
114.093 60.2324 113.741 60.585 113.741 61.0195 cv
113.741 61.4546 114.093 61.8071 114.528 61.8071 cv
114.963 61.8071 115.316 61.4546 115.316 61.0195 cv
f
117.236 59.9399 mo
117.236 59.5049 116.883 59.1523 116.448 59.1523 cv
116.014 59.1523 115.661 59.5049 115.661 59.9399 cv
115.661 60.3745 116.014 60.7275 116.448 60.7275 cv
116.883 60.7275 117.236 60.3745 117.236 59.9399 cv
f
119.156 59.0996 mo
119.156 58.665 118.803 58.3125 118.368 58.3125 cv
117.934 58.3125 117.581 58.665 117.581 59.0996 cv
117.581 59.5347 117.934 59.8872 118.368 59.8872 cv
118.803 59.8872 119.156 59.5347 119.156 59.0996 cv
f
121.076 57.8999 mo
121.076 57.4648 120.723 57.1123 120.288 57.1123 cv
119.854 57.1123 119.5 57.4648 119.5 57.8999 cv
119.5 58.3345 119.854 58.6875 120.288 58.6875 cv
120.723 58.6875 121.076 58.3345 121.076 57.8999 cv
f
122.996 57.0596 mo
122.996 56.625 122.643 56.2725 122.208 56.2725 cv
121.773 56.2725 121.421 56.625 121.421 57.0596 cv
121.421 57.4946 121.773 57.8472 122.208 57.8472 cv
122.643 57.8472 122.996 57.4946 122.996 57.0596 cv
f
124.916 56.46 mo
124.916 56.0249 124.563 55.6724 124.128 55.6724 cv
123.693 55.6724 123.341 56.0249 123.341 56.46 cv
123.341 56.8945 123.693 57.2471 124.128 57.2471 cv
124.563 57.2471 124.916 56.8945 124.916 56.46 cv
f
126.835 55.2598 mo
126.835 54.8252 126.483 54.4722 126.048 54.4722 cv
125.613 54.4722 125.261 54.8252 125.261 55.2598 cv
125.261 55.6943 125.613 56.0474 126.048 56.0474 cv
126.483 56.0474 126.835 55.6943 126.835 55.2598 cv
f
128.756 54.54 mo
128.756 54.105 128.403 53.7524 127.968 53.7524 cv
127.534 53.7524 127.181 54.105 127.181 54.54 cv
127.181 54.9746 127.534 55.3271 127.968 55.3271 cv
128.403 55.3271 128.756 54.9746 128.756 54.54 cv
f
130.676 53.5796 mo
130.676 53.145 130.323 52.7925 129.888 52.7925 cv
129.454 52.7925 129.101 53.145 129.101 53.5796 cv
129.101 54.0146 129.454 54.3672 129.888 54.3672 cv
130.323 54.3672 130.676 54.0146 130.676 53.5796 cv
f
132.596 53.2197 mo
132.596 52.7852 132.243 52.4321 131.808 52.4321 cv
131.374 52.4321 131.021 52.7852 131.021 53.2197 cv
131.021 53.6543 131.374 54.0073 131.808 54.0073 cv
132.243 54.0073 132.596 53.6543 132.596 53.2197 cv
f
134.516 52.8599 mo
134.516 52.4253 134.163 52.0723 133.728 52.0723 cv
133.293 52.0723 132.941 52.4253 132.941 52.8599 cv
132.941 53.2944 133.293 53.6475 133.728 53.6475 cv
134.163 53.6475 134.516 53.2944 134.516 52.8599 cv
f
136.436 52.2598 mo
136.436 51.8252 136.083 51.4722 135.648 51.4722 cv
135.213 51.4722 134.861 51.8252 134.861 52.2598 cv
134.861 52.6943 135.213 53.0474 135.648 53.0474 cv
136.083 53.0474 136.436 52.6943 136.436 52.2598 cv
f
138.355 51.7798 mo
138.355 51.3452 138.003 50.9922 137.568 50.9922 cv
137.133 50.9922 136.781 51.3452 136.781 51.7798 cv
136.781 52.2144 137.133 52.5674 137.568 52.5674 cv
138.003 52.5674 138.355 52.2144 138.355 51.7798 cv
f
140.275 51.2998 mo
140.275 50.8652 139.924 50.5122 139.488 50.5122 cv
139.053 50.5122 138.701 50.8652 138.701 51.2998 cv
138.701 51.7344 139.053 52.0874 139.488 52.0874 cv
139.924 52.0874 140.275 51.7344 140.275 51.2998 cv
f
142.076 50.46 mo
142.076 50.0249 141.723 49.6724 141.289 49.6724 cv
140.854 49.6724 140.5 50.0249 140.5 50.46 cv
140.5 50.8945 140.854 51.2471 141.289 51.2471 cv
141.723 51.2471 142.076 50.8945 142.076 50.46 cv
f
143.996 50.8198 mo
143.996 50.3853 143.643 50.0322 143.209 50.0322 cv
142.773 50.0322 142.42 50.3853 142.42 50.8198 cv
142.42 51.2544 142.773 51.6074 143.209 51.6074 cv
143.643 51.6074 143.996 51.2544 143.996 50.8198 cv
f
146.035 50.5796 mo
146.035 50.145 145.684 49.7925 145.248 49.7925 cv
144.814 49.7925 144.461 50.145 144.461 50.5796 cv
144.461 51.0146 144.814 51.3672 145.248 51.3672 cv
145.684 51.3672 146.035 51.0146 146.035 50.5796 cv
f
147.836 50.8198 mo
147.836 50.3853 147.482 50.0322 147.049 50.0322 cv
146.613 50.0322 146.26 50.3853 146.26 50.8198 cv
146.26 51.2544 146.613 51.6074 147.049 51.6074 cv
147.482 51.6074 147.836 51.2544 147.836 50.8198 cv
f
149.756 49.8599 mo
149.756 49.4253 149.402 49.0723 148.969 49.0723 cv
148.533 49.0723 148.182 49.4253 148.182 49.8599 cv
148.182 50.2944 148.533 50.6475 148.969 50.6475 cv
149.402 50.6475 149.756 50.2944 149.756 49.8599 cv
f
151.676 49.7397 mo
151.676 49.3052 151.322 48.9521 150.889 48.9521 cv
150.453 48.9521 150.102 49.3052 150.102 49.7397 cv
150.102 50.1743 150.453 50.5273 150.889 50.5273 cv
151.322 50.5273 151.676 50.1743 151.676 49.7397 cv
f
153.596 49.6196 mo
153.596 49.1851 153.242 48.832 152.809 48.832 cv
152.373 48.832 152.021 49.1851 152.021 49.6196 cv
152.021 50.0547 152.373 50.4072 152.809 50.4072 cv
153.242 50.4072 153.596 50.0547 153.596 49.6196 cv
f
155.516 50.46 mo
155.516 50.0249 155.162 49.6724 154.729 49.6724 cv
154.293 49.6724 153.941 50.0249 153.941 50.46 cv
153.941 50.8945 154.293 51.2471 154.729 51.2471 cv
155.162 51.2471 155.516 50.8945 155.516 50.46 cv
f
157.436 50.46 mo
157.436 50.0249 157.082 49.6724 156.648 49.6724 cv
156.213 49.6724 155.861 50.0249 155.861 50.46 cv
155.861 50.8945 156.213 51.2471 156.648 51.2471 cv
157.082 51.2471 157.436 50.8945 157.436 50.46 cv
f
159.355 50.0996 mo
159.355 49.665 159.002 49.3125 158.568 49.3125 cv
158.133 49.3125 157.781 49.665 157.781 50.0996 cv
157.781 50.5347 158.133 50.8872 158.568 50.8872 cv
159.002 50.8872 159.355 50.5347 159.355 50.0996 cv
f
161.275 50.6997 mo
161.275 50.2651 160.924 49.9121 160.488 49.9121 cv
160.053 49.9121 159.701 50.2651 159.701 50.6997 cv
159.701 51.1343 160.053 51.4873 160.488 51.4873 cv
160.924 51.4873 161.275 51.1343 161.275 50.6997 cv
f
163.195 50.46 mo
163.195 50.0249 162.844 49.6724 162.408 49.6724 cv
161.973 49.6724 161.621 50.0249 161.621 50.46 cv
161.621 50.8945 161.973 51.2471 162.408 51.2471 cv
162.844 51.2471 163.195 50.8945 163.195 50.46 cv
f
165.115 50.6997 mo
165.115 50.2651 164.764 49.9121 164.328 49.9121 cv
163.893 49.9121 163.541 50.2651 163.541 50.6997 cv
163.541 51.1343 163.893 51.4873 164.328 51.4873 cv
164.764 51.4873 165.115 51.1343 165.115 50.6997 cv
f
166.916 51.2998 mo
166.916 50.8652 166.563 50.5122 166.129 50.5122 cv
165.693 50.5122 165.34 50.8652 165.34 51.2998 cv
165.34 51.7344 165.693 52.0874 166.129 52.0874 cv
166.563 52.0874 166.916 51.7344 166.916 51.2998 cv
f
168.836 51.0596 mo
168.836 50.625 168.482 50.2725 168.049 50.2725 cv
167.613 50.2725 167.26 50.625 167.26 51.0596 cv
167.26 51.4946 167.613 51.8472 168.049 51.8472 cv
168.482 51.8472 168.836 51.4946 168.836 51.0596 cv
f
170.875 51.54 mo
170.875 51.105 170.523 50.7524 170.088 50.7524 cv
169.654 50.7524 169.301 51.105 169.301 51.54 cv
169.301 51.9746 169.654 52.3271 170.088 52.3271 cv
170.523 52.3271 170.875 51.9746 170.875 51.54 cv
f
172.676 51.8999 mo
172.676 51.4648 172.322 51.1123 171.889 51.1123 cv
171.453 51.1123 171.102 51.4648 171.102 51.8999 cv
171.102 52.3345 171.453 52.6875 171.889 52.6875 cv
172.322 52.6875 172.676 52.3345 172.676 51.8999 cv
f
174.596 51.6597 mo
174.596 51.2251 174.242 50.8721 173.809 50.8721 cv
173.373 50.8721 173.021 51.2251 173.021 51.6597 cv
173.021 52.0947 173.373 52.4473 173.809 52.4473 cv
174.242 52.4473 174.596 52.0947 174.596 51.6597 cv
f
176.516 52.8599 mo
176.516 52.4253 176.162 52.0723 175.729 52.0723 cv
175.293 52.0723 174.941 52.4253 174.941 52.8599 cv
174.941 53.2944 175.293 53.6475 175.729 53.6475 cv
176.162 53.6475 176.516 53.2944 176.516 52.8599 cv
f
178.436 51.54 mo
178.436 51.105 178.082 50.7524 177.648 50.7524 cv
177.213 50.7524 176.861 51.105 176.861 51.54 cv
176.861 51.9746 177.213 52.3271 177.648 52.3271 cv
178.082 52.3271 178.436 51.9746 178.436 51.54 cv
f
180.355 52.7397 mo
180.355 52.3052 180.002 51.9521 179.568 51.9521 cv
179.133 51.9521 178.781 52.3052 178.781 52.7397 cv
178.781 53.1743 179.133 53.5273 179.568 53.5273 cv
180.002 53.5273 180.355 53.1743 180.355 52.7397 cv
f
182.275 53.6997 mo
182.275 53.2651 181.924 52.9121 181.488 52.9121 cv
181.053 52.9121 180.701 53.2651 180.701 53.6997 cv
180.701 54.1343 181.053 54.4873 181.488 54.4873 cv
181.924 54.4873 182.275 54.1343 182.275 53.6997 cv
f
184.195 53.9399 mo
184.195 53.5049 183.844 53.1523 183.408 53.1523 cv
182.973 53.1523 182.621 53.5049 182.621 53.9399 cv
182.621 54.3745 182.973 54.7275 183.408 54.7275 cv
183.844 54.7275 184.195 54.3745 184.195 53.9399 cv
f
186.115 54.4199 mo
186.115 53.9849 185.764 53.6323 185.328 53.6323 cv
184.893 53.6323 184.541 53.9849 184.541 54.4199 cv
184.541 54.8545 184.893 55.207 185.328 55.207 cv
185.764 55.207 186.115 54.8545 186.115 54.4199 cv
f
188.035 54.4199 mo
188.035 53.9849 187.684 53.6323 187.248 53.6323 cv
186.814 53.6323 186.461 53.9849 186.461 54.4199 cv
186.461 54.8545 186.814 55.207 187.248 55.207 cv
187.684 55.207 188.035 54.8545 188.035 54.4199 cv
f
189.955 54.8999 mo
189.955 54.4648 189.604 54.1123 189.168 54.1123 cv
188.734 54.1123 188.381 54.4648 188.381 54.8999 cv
188.381 55.3345 188.734 55.6875 189.168 55.6875 cv
189.604 55.6875 189.955 55.3345 189.955 54.8999 cv
f
191.875 55.0195 mo
191.875 54.585 191.523 54.2324 191.088 54.2324 cv
190.654 54.2324 190.301 54.585 190.301 55.0195 cv
190.301 55.4546 190.654 55.8071 191.088 55.8071 cv
191.523 55.8071 191.875 55.4546 191.875 55.0195 cv
f
193.676 55.6196 mo
193.676 55.1851 193.322 54.832 192.889 54.832 cv
192.453 54.832 192.102 55.1851 192.102 55.6196 cv
192.102 56.0547 192.453 56.4072 192.889 56.4072 cv
193.322 56.4072 193.676 56.0547 193.676 55.6196 cv
f
195.715 55.98 mo
195.715 55.5449 195.363 55.1924 194.928 55.1924 cv
194.494 55.1924 194.141 55.5449 194.141 55.98 cv
194.141 56.4146 194.494 56.7671 194.928 56.7671 cv
195.363 56.7671 195.715 56.4146 195.715 55.98 cv
f
197.635 56.2197 mo
197.635 55.7852 197.283 55.4321 196.848 55.4321 cv
196.414 55.4321 196.061 55.7852 196.061 56.2197 cv
196.061 56.6543 196.414 57.0073 196.848 57.0073 cv
197.283 57.0073 197.635 56.6543 197.635 56.2197 cv
f
199.436 56.6997 mo
199.436 56.2651 199.082 55.9121 198.648 55.9121 cv
198.213 55.9121 197.861 56.2651 197.861 56.6997 cv
197.861 57.1343 198.213 57.4873 198.648 57.4873 cv
199.082 57.4873 199.436 57.1343 199.436 56.6997 cv
f
201.355 56.46 mo
201.355 56.0249 201.002 55.6724 200.568 55.6724 cv
200.133 55.6724 199.781 56.0249 199.781 56.46 cv
199.781 56.8945 200.133 57.2471 200.568 57.2471 cv
201.002 57.2471 201.355 56.8945 201.355 56.46 cv
f
203.275 56.8198 mo
203.275 56.3853 202.924 56.0322 202.488 56.0322 cv
202.053 56.0322 201.701 56.3853 201.701 56.8198 cv
201.701 57.2544 202.053 57.6074 202.488 57.6074 cv
202.924 57.6074 203.275 57.2544 203.275 56.8198 cv
f
205.195 57.4199 mo
205.195 56.9849 204.844 56.6323 204.408 56.6323 cv
203.973 56.6323 203.621 56.9849 203.621 57.4199 cv
203.621 57.8545 203.973 58.207 204.408 58.207 cv
204.844 58.207 205.195 57.8545 205.195 57.4199 cv
f
207.115 57.6597 mo
207.115 57.2251 206.764 56.8721 206.328 56.8721 cv
205.893 56.8721 205.541 57.2251 205.541 57.6597 cv
205.541 58.0947 205.893 58.4473 206.328 58.4473 cv
206.764 58.4473 207.115 58.0947 207.115 57.6597 cv
f
209.035 58.1396 mo
209.035 57.7051 208.684 57.3525 208.248 57.3525 cv
207.814 57.3525 207.461 57.7051 207.461 58.1396 cv
207.461 58.5747 207.814 58.9272 208.248 58.9272 cv
208.684 58.9272 209.035 58.5747 209.035 58.1396 cv
f
210.955 58.7397 mo
210.955 58.3052 210.604 57.9521 210.168 57.9521 cv
209.734 57.9521 209.381 58.3052 209.381 58.7397 cv
209.381 59.1743 209.734 59.5273 210.168 59.5273 cv
210.604 59.5273 210.955 59.1743 210.955 58.7397 cv
f
212.875 59.5796 mo
212.875 59.145 212.523 58.7925 212.088 58.7925 cv
211.654 58.7925 211.301 59.145 211.301 59.5796 cv
211.301 60.0146 211.654 60.3672 212.088 60.3672 cv
212.523 60.3672 212.875 60.0146 212.875 59.5796 cv
f
214.795 59.0996 mo
214.795 58.665 214.443 58.3125 214.008 58.3125 cv
213.574 58.3125 213.221 58.665 213.221 59.0996 cv
213.221 59.5347 213.574 59.8872 214.008 59.8872 cv
214.443 59.8872 214.795 59.5347 214.795 59.0996 cv
f
216.715 59.8198 mo
216.715 59.3853 216.363 59.0322 215.928 59.0322 cv
215.494 59.0322 215.141 59.3853 215.141 59.8198 cv
215.141 60.2544 215.494 60.6074 215.928 60.6074 cv
216.363 60.6074 216.715 60.2544 216.715 59.8198 cv
f
218.635 59.6997 mo
218.635 59.2651 218.283 58.9121 217.848 58.9121 cv
217.414 58.9121 217.061 59.2651 217.061 59.6997 cv
217.061 60.1343 217.414 60.4873 217.848 60.4873 cv
218.283 60.4873 218.635 60.1343 218.635 59.6997 cv
f
220.557 60.6597 mo
220.557 60.2251 220.203 59.8721 219.768 59.8721 cv
219.334 59.8721 218.98 60.2251 218.98 60.6597 cv
218.98 61.0947 219.334 61.4473 219.768 61.4473 cv
220.203 61.4473 220.557 61.0947 220.557 60.6597 cv
f
222.477 61.8599 mo
222.477 61.4253 222.123 61.0723 221.688 61.0723 cv
221.254 61.0723 220.9 61.4253 220.9 61.8599 cv
220.9 62.2944 221.254 62.6475 221.688 62.6475 cv
222.123 62.6475 222.477 62.2944 222.477 61.8599 cv
f
224.275 60.6597 mo
224.275 60.2251 223.924 59.8721 223.488 59.8721 cv
223.053 59.8721 222.701 60.2251 222.701 60.6597 cv
222.701 61.0947 223.053 61.4473 223.488 61.4473 cv
223.924 61.4473 224.275 61.0947 224.275 60.6597 cv
f
226.195 61.6196 mo
226.195 61.1851 225.844 60.832 225.408 60.832 cv
224.973 60.832 224.621 61.1851 224.621 61.6196 cv
224.621 62.0547 224.973 62.4072 225.408 62.4072 cv
225.844 62.4072 226.195 62.0547 226.195 61.6196 cv
f
228.115 63.0596 mo
228.115 62.625 227.764 62.2725 227.328 62.2725 cv
226.893 62.2725 226.541 62.625 226.541 63.0596 cv
226.541 63.4946 226.893 63.8472 227.328 63.8472 cv
227.764 63.8472 228.115 63.4946 228.115 63.0596 cv
f
230.035 61.8599 mo
230.035 61.4253 229.684 61.0723 229.248 61.0723 cv
228.814 61.0723 228.461 61.4253 228.461 61.8599 cv
228.461 62.2944 228.814 62.6475 229.248 62.6475 cv
229.684 62.6475 230.035 62.2944 230.035 61.8599 cv
f
231.955 62.5796 mo
231.955 62.145 231.604 61.7925 231.168 61.7925 cv
230.734 61.7925 230.381 62.145 230.381 62.5796 cv
230.381 63.0146 230.734 63.3672 231.168 63.3672 cv
231.604 63.3672 231.955 63.0146 231.955 62.5796 cv
f
42.7158 99.0596 mo
42.7158 98.625 42.3628 98.2725 41.9282 98.2725 cv
41.4937 98.2725 41.1406 98.625 41.1406 99.0596 cv
41.1406 99.4941 41.4937 99.8477 41.9282 99.8477 cv
42.3628 99.8477 42.7158 99.4941 42.7158 99.0596 cv
f
44.6357 97.6201 mo
44.6357 97.1846 44.2827 96.832 43.8481 96.832 cv
43.4136 96.832 43.0605 97.1846 43.0605 97.6201 cv
43.0605 98.0547 43.4136 98.4072 43.8481 98.4072 cv
44.2827 98.4072 44.6357 98.0547 44.6357 97.6201 cv
f
46.5557 96.1797 mo
46.5557 95.7451 46.2026 95.3926 45.7681 95.3926 cv
45.3335 95.3926 44.9805 95.7451 44.9805 96.1797 cv
44.9805 96.6143 45.3335 96.9678 45.7681 96.9678 cv
46.2026 96.9678 46.5557 96.6143 46.5557 96.1797 cv
f
48.4756 94.7402 mo
48.4756 94.3047 48.123 93.9521 47.688 93.9521 cv
47.2534 93.9521 46.9009 94.3047 46.9009 94.7402 cv
46.9009 95.1748 47.2534 95.5273 47.688 95.5273 cv
48.123 95.5273 48.4756 95.1748 48.4756 94.7402 cv
f
50.3955 93.2998 mo
50.3955 92.8652 50.043 92.5122 49.6084 92.5122 cv
49.1733 92.5122 48.8208 92.8652 48.8208 93.2998 cv
48.8208 93.7344 49.1733 94.0869 49.6084 94.0869 cv
50.043 94.0869 50.3955 93.7344 50.3955 93.2998 cv
f
52.3159 91.8599 mo
52.3159 91.4253 51.9629 91.0723 51.5283 91.0723 cv
51.0933 91.0723 50.7407 91.4253 50.7407 91.8599 cv
50.7407 92.2944 51.0933 92.6475 51.5283 92.6475 cv
51.9629 92.6475 52.3159 92.2944 52.3159 91.8599 cv
f
54.2358 90.4199 mo
54.2358 89.9849 53.8828 89.6323 53.4482 89.6323 cv
53.0137 89.6323 52.6606 89.9849 52.6606 90.4199 cv
52.6606 90.8545 53.0137 91.207 53.4482 91.207 cv
53.8828 91.207 54.2358 90.8545 54.2358 90.4199 cv
f
56.1558 88.98 mo
56.1558 88.5449 55.8027 88.1924 55.3682 88.1924 cv
54.9336 88.1924 54.5806 88.5449 54.5806 88.98 cv
54.5806 89.4146 54.9336 89.7671 55.3682 89.7671 cv
55.8027 89.7671 56.1558 89.4146 56.1558 88.98 cv
f
58.0757 87.54 mo
58.0757 87.105 57.7227 86.7524 57.2881 86.7524 cv
56.8535 86.7524 56.5005 87.105 56.5005 87.54 cv
56.5005 87.9746 56.8535 88.3271 57.2881 88.3271 cv
57.7227 88.3271 58.0757 87.9746 58.0757 87.54 cv
f
59.8755 86.0996 mo
59.8755 85.665 59.5229 85.3125 59.0884 85.3125 cv
58.6533 85.3125 58.3008 85.665 58.3008 86.0996 cv
58.3008 86.5347 58.6533 86.8872 59.0884 86.8872 cv
59.5229 86.8872 59.8755 86.5347 59.8755 86.0996 cv
f
61.7959 84.6597 mo
61.7959 84.2251 61.4429 83.8721 61.0083 83.8721 cv
60.5732 83.8721 60.2207 84.2251 60.2207 84.6597 cv
60.2207 85.0947 60.5732 85.4473 61.0083 85.4473 cv
61.4429 85.4473 61.7959 85.0947 61.7959 84.6597 cv
f
63.7158 83.2197 mo
63.7158 82.7852 63.3628 82.4321 62.9282 82.4321 cv
62.4937 82.4321 62.1406 82.7852 62.1406 83.2197 cv
62.1406 83.6543 62.4937 84.0073 62.9282 84.0073 cv
63.3628 84.0073 63.7158 83.6543 63.7158 83.2197 cv
f
65.6357 81.7798 mo
65.6357 81.3452 65.2827 80.9922 64.8481 80.9922 cv
64.4136 80.9922 64.0605 81.3452 64.0605 81.7798 cv
64.0605 82.2144 64.4136 82.5674 64.8481 82.5674 cv
65.2827 82.5674 65.6357 82.2144 65.6357 81.7798 cv
f
67.5557 80.3398 mo
67.5557 79.9053 67.2026 79.5522 66.7681 79.5522 cv
66.3335 79.5522 65.9805 79.9053 65.9805 80.3398 cv
65.9805 80.7744 66.3335 81.1274 66.7681 81.1274 cv
67.2026 81.1274 67.5557 80.7744 67.5557 80.3398 cv
f
69.4756 78.8999 mo
69.4756 78.4648 69.123 78.1123 68.688 78.1123 cv
68.2534 78.1123 67.9009 78.4648 67.9009 78.8999 cv
67.9009 79.3345 68.2534 79.6875 68.688 79.6875 cv
69.123 79.6875 69.4756 79.3345 69.4756 78.8999 cv
f
71.3955 77.46 mo
71.3955 77.0249 71.043 76.6724 70.6084 76.6724 cv
70.1733 76.6724 69.8208 77.0249 69.8208 77.46 cv
69.8208 77.8945 70.1733 78.2471 70.6084 78.2471 cv
71.043 78.2471 71.3955 77.8945 71.3955 77.46 cv
f
73.3159 76.0195 mo
73.3159 75.585 72.9629 75.2324 72.5283 75.2324 cv
72.0933 75.2324 71.7407 75.585 71.7407 76.0195 cv
71.7407 76.4546 72.0933 76.8071 72.5283 76.8071 cv
72.9629 76.8071 73.3159 76.4546 73.3159 76.0195 cv
f
75.2358 74.5796 mo
75.2358 74.145 74.8828 73.7925 74.4482 73.7925 cv
74.0137 73.7925 73.6606 74.145 73.6606 74.5796 cv
73.6606 75.0146 74.0137 75.3672 74.4482 75.3672 cv
74.8828 75.3672 75.2358 75.0146 75.2358 74.5796 cv
f
77.1558 73.1396 mo
77.1558 72.7051 76.8027 72.3525 76.3682 72.3525 cv
75.9336 72.3525 75.5806 72.7051 75.5806 73.1396 cv
75.5806 73.5747 75.9336 73.9272 76.3682 73.9272 cv
76.8027 73.9272 77.1558 73.5747 77.1558 73.1396 cv
f
79.0757 71.6997 mo
79.0757 71.2651 78.7227 70.9121 78.2881 70.9121 cv
77.8535 70.9121 77.5005 71.2651 77.5005 71.6997 cv
77.5005 72.1343 77.8535 72.4873 78.2881 72.4873 cv
78.7227 72.4873 79.0757 72.1343 79.0757 71.6997 cv
f
80.9956 70.2598 mo
80.9956 69.8252 80.6431 69.4722 80.208 69.4722 cv
79.7734 69.4722 79.4209 69.8252 79.4209 70.2598 cv
79.4209 70.6943 79.7734 71.0474 80.208 71.0474 cv
80.6431 71.0474 80.9956 70.6943 80.9956 70.2598 cv
f
82.9155 68.9399 mo
82.9155 68.5049 82.563 68.1523 82.1284 68.1523 cv
81.6934 68.1523 81.3408 68.5049 81.3408 68.9399 cv
81.3408 69.3745 81.6934 69.7275 82.1284 69.7275 cv
82.563 69.7275 82.9155 69.3745 82.9155 68.9399 cv
f
84.8354 67.5 mo
84.8354 67.0649 84.4829 66.7124 84.0483 66.7124 cv
83.6133 66.7124 83.2607 67.0649 83.2607 67.5 cv
83.2607 67.9346 83.6133 68.2871 84.0483 68.2871 cv
84.4829 68.2871 84.8354 67.9346 84.8354 67.5 cv
f
86.6357 65.9399 mo
86.6357 65.5049 86.2827 65.1523 85.8481 65.1523 cv
85.4136 65.1523 85.0605 65.5049 85.0605 65.9399 cv
85.0605 66.3745 85.4136 66.7275 85.8481 66.7275 cv
86.2827 66.7275 86.6357 66.3745 86.6357 65.9399 cv
f
88.6758 64.6196 mo
88.6758 64.1851 88.3228 63.832 87.8882 63.832 cv
87.4536 63.832 87.1006 64.1851 87.1006 64.6196 cv
87.1006 65.0547 87.4536 65.4072 87.8882 65.4072 cv
88.3228 65.4072 88.6758 65.0547 88.6758 64.6196 cv
f
90.4756 63.1797 mo
90.4756 62.7451 90.123 62.3921 89.688 62.3921 cv
89.2534 62.3921 88.9009 62.7451 88.9009 63.1797 cv
88.9009 63.6143 89.2534 63.9673 89.688 63.9673 cv
90.123 63.9673 90.4756 63.6143 90.4756 63.1797 cv
f
92.3955 61.7397 mo
92.3955 61.3052 92.043 60.9521 91.6084 60.9521 cv
91.1733 60.9521 90.8208 61.3052 90.8208 61.7397 cv
90.8208 62.1743 91.1733 62.5273 91.6084 62.5273 cv
92.043 62.5273 92.3955 62.1743 92.3955 61.7397 cv
f
94.3159 60.2998 mo
94.3159 59.8652 93.9629 59.5122 93.5283 59.5122 cv
93.0933 59.5122 92.7407 59.8652 92.7407 60.2998 cv
92.7407 60.7344 93.0933 61.0874 93.5283 61.0874 cv
93.9629 61.0874 94.3159 60.7344 94.3159 60.2998 cv
f
96.2358 58.8599 mo
96.2358 58.4253 95.8828 58.0723 95.4482 58.0723 cv
95.0137 58.0723 94.6606 58.4253 94.6606 58.8599 cv
94.6606 59.2944 95.0137 59.6475 95.4482 59.6475 cv
95.8828 59.6475 96.2358 59.2944 96.2358 58.8599 cv
f
98.1558 57.54 mo
98.1558 57.105 97.8027 56.7524 97.3682 56.7524 cv
96.9336 56.7524 96.5806 57.105 96.5806 57.54 cv
96.5806 57.9746 96.9336 58.3271 97.3682 58.3271 cv
97.8027 58.3271 98.1558 57.9746 98.1558 57.54 cv
f
100.076 56.0996 mo
100.076 55.665 99.7231 55.3125 99.2881 55.3125 cv
98.8535 55.3125 98.5005 55.665 98.5005 56.0996 cv
98.5005 56.5347 98.8535 56.8872 99.2881 56.8872 cv
99.7231 56.8872 100.076 56.5347 100.076 56.0996 cv
f
101.996 54.6597 mo
101.996 54.2251 101.643 53.8721 101.208 53.8721 cv
100.773 53.8721 100.421 54.2251 100.421 54.6597 cv
100.421 55.0947 100.773 55.4473 101.208 55.4473 cv
101.643 55.4473 101.996 55.0947 101.996 54.6597 cv
f
103.916 53.3398 mo
103.916 52.9053 103.563 52.5522 103.128 52.5522 cv
102.693 52.5522 102.341 52.9053 102.341 53.3398 cv
102.341 53.7744 102.693 54.1274 103.128 54.1274 cv
103.563 54.1274 103.916 53.7744 103.916 53.3398 cv
f
105.835 51.8999 mo
105.835 51.4648 105.483 51.1123 105.048 51.1123 cv
104.613 51.1123 104.261 51.4648 104.261 51.8999 cv
104.261 52.3345 104.613 52.6875 105.048 52.6875 cv
105.483 52.6875 105.835 52.3345 105.835 51.8999 cv
f
107.756 50.46 mo
107.756 50.0249 107.403 49.6724 106.968 49.6724 cv
106.534 49.6724 106.181 50.0249 106.181 50.46 cv
106.181 50.8945 106.534 51.2471 106.968 51.2471 cv
107.403 51.2471 107.756 50.8945 107.756 50.46 cv
f
109.676 49.1396 mo
109.676 48.7051 109.323 48.3525 108.888 48.3525 cv
108.454 48.3525 108.101 48.7051 108.101 49.1396 cv
108.101 49.5747 108.454 49.9272 108.888 49.9272 cv
109.323 49.9272 109.676 49.5747 109.676 49.1396 cv
f
111.596 47.9399 mo
111.596 47.5049 111.243 47.1523 110.808 47.1523 cv
110.374 47.1523 110.021 47.5049 110.021 47.9399 cv
110.021 48.3745 110.374 48.7275 110.808 48.7275 cv
111.243 48.7275 111.596 48.3745 111.596 47.9399 cv
f
113.516 46.7397 mo
113.516 46.3052 113.163 45.9521 112.728 45.9521 cv
112.293 45.9521 111.941 46.3052 111.941 46.7397 cv
111.941 47.1743 112.293 47.5273 112.728 47.5273 cv
113.163 47.5273 113.516 47.1743 113.516 46.7397 cv
f
115.316 45.4199 mo
115.316 44.9849 114.963 44.6323 114.528 44.6323 cv
114.093 44.6323 113.741 44.9849 113.741 45.4199 cv
113.741 45.8545 114.093 46.207 114.528 46.207 cv
114.963 46.207 115.316 45.8545 115.316 45.4199 cv
f
117.236 44.2197 mo
117.236 43.7852 116.883 43.4321 116.448 43.4321 cv
116.014 43.4321 115.661 43.7852 115.661 44.2197 cv
115.661 44.6543 116.014 45.0073 116.448 45.0073 cv
116.883 45.0073 117.236 44.6543 117.236 44.2197 cv
f
119.156 43.1396 mo
119.156 42.7051 118.803 42.3525 118.368 42.3525 cv
117.934 42.3525 117.581 42.7051 117.581 43.1396 cv
117.581 43.5747 117.934 43.9272 118.368 43.9272 cv
118.803 43.9272 119.156 43.5747 119.156 43.1396 cv
f
121.076 42.1797 mo
121.076 41.7451 120.723 41.3921 120.288 41.3921 cv
119.854 41.3921 119.5 41.7451 119.5 42.1797 cv
119.5 42.6143 119.854 42.9673 120.288 42.9673 cv
120.723 42.9673 121.076 42.6143 121.076 42.1797 cv
f
122.996 40.7397 mo
122.996 40.3052 122.643 39.9521 122.208 39.9521 cv
121.773 39.9521 121.421 40.3052 121.421 40.7397 cv
121.421 41.1743 121.773 41.5273 122.208 41.5273 cv
122.643 41.5273 122.996 41.1743 122.996 40.7397 cv
f
124.916 39.7798 mo
124.916 39.3452 124.563 38.9922 124.128 38.9922 cv
123.693 38.9922 123.341 39.3452 123.341 39.7798 cv
123.341 40.2144 123.693 40.5674 124.128 40.5674 cv
124.563 40.5674 124.916 40.2144 124.916 39.7798 cv
f
126.835 39.2998 mo
126.835 38.8652 126.483 38.5122 126.048 38.5122 cv
125.613 38.5122 125.261 38.8652 125.261 39.2998 cv
125.261 39.7344 125.613 40.0874 126.048 40.0874 cv
126.483 40.0874 126.835 39.7344 126.835 39.2998 cv
f
128.756 38.2197 mo
128.756 37.7852 128.403 37.4321 127.968 37.4321 cv
127.534 37.4321 127.181 37.7852 127.181 38.2197 cv
127.181 38.6543 127.534 39.0073 127.968 39.0073 cv
128.403 39.0073 128.756 38.6543 128.756 38.2197 cv
f
130.676 37.1396 mo
130.676 36.7051 130.323 36.3525 129.888 36.3525 cv
129.454 36.3525 129.101 36.7051 129.101 37.1396 cv
129.101 37.5747 129.454 37.9272 129.888 37.9272 cv
130.323 37.9272 130.676 37.5747 130.676 37.1396 cv
f
132.596 35.9399 mo
132.596 35.5049 132.243 35.1523 131.808 35.1523 cv
131.374 35.1523 131.021 35.5049 131.021 35.9399 cv
131.021 36.3745 131.374 36.7275 131.808 36.7275 cv
132.243 36.7275 132.596 36.3745 132.596 35.9399 cv
f
134.516 35.8198 mo
134.516 35.3853 134.163 35.0322 133.728 35.0322 cv
133.293 35.0322 132.941 35.3853 132.941 35.8198 cv
132.941 36.2544 133.293 36.6074 133.728 36.6074 cv
134.163 36.6074 134.516 36.2544 134.516 35.8198 cv
f
136.436 34.8599 mo
136.436 34.4253 136.083 34.0723 135.648 34.0723 cv
135.213 34.0723 134.861 34.4253 134.861 34.8599 cv
134.861 35.2944 135.213 35.6475 135.648 35.6475 cv
136.083 35.6475 136.436 35.2944 136.436 34.8599 cv
f
138.355 35.0996 mo
138.355 34.665 138.003 34.3125 137.568 34.3125 cv
137.133 34.3125 136.781 34.665 136.781 35.0996 cv
136.781 35.5347 137.133 35.8872 137.568 35.8872 cv
138.003 35.8872 138.355 35.5347 138.355 35.0996 cv
f
140.275 34.0195 mo
140.275 33.585 139.924 33.2324 139.488 33.2324 cv
139.053 33.2324 138.701 33.585 138.701 34.0195 cv
138.701 34.4546 139.053 34.8071 139.488 34.8071 cv
139.924 34.8071 140.275 34.4546 140.275 34.0195 cv
f
142.076 33.8999 mo
142.076 33.4648 141.723 33.1123 141.289 33.1123 cv
140.854 33.1123 140.5 33.4648 140.5 33.8999 cv
140.5 34.3345 140.854 34.6875 141.289 34.6875 cv
141.723 34.6875 142.076 34.3345 142.076 33.8999 cv
f
143.996 32.6997 mo
143.996 32.2651 143.643 31.9121 143.209 31.9121 cv
142.773 31.9121 142.42 32.2651 142.42 32.6997 cv
142.42 33.1343 142.773 33.4873 143.209 33.4873 cv
143.643 33.4873 143.996 33.1343 143.996 32.6997 cv
f
146.035 33.2998 mo
146.035 32.8652 145.684 32.5122 145.248 32.5122 cv
144.814 32.5122 144.461 32.8652 144.461 33.2998 cv
144.461 33.7344 144.814 34.0874 145.248 34.0874 cv
145.684 34.0874 146.035 33.7344 146.035 33.2998 cv
f
147.836 32.5796 mo
147.836 32.145 147.482 31.7925 147.049 31.7925 cv
146.613 31.7925 146.26 32.145 146.26 32.5796 cv
146.26 33.0146 146.613 33.3672 147.049 33.3672 cv
147.482 33.3672 147.836 33.0146 147.836 32.5796 cv
f
149.756 32.2197 mo
149.756 31.7852 149.402 31.4321 148.969 31.4321 cv
148.533 31.4321 148.182 31.7852 148.182 32.2197 cv
148.182 32.6543 148.533 33.0073 148.969 33.0073 cv
149.402 33.0073 149.756 32.6543 149.756 32.2197 cv
f
151.676 31.8599 mo
151.676 31.4253 151.322 31.0723 150.889 31.0723 cv
150.453 31.0723 150.102 31.4253 150.102 31.8599 cv
150.102 32.2944 150.453 32.6475 150.889 32.6475 cv
151.322 32.6475 151.676 32.2944 151.676 31.8599 cv
f
153.596 32.6997 mo
153.596 32.2651 153.242 31.9121 152.809 31.9121 cv
152.373 31.9121 152.021 32.2651 152.021 32.6997 cv
152.021 33.1343 152.373 33.4873 152.809 33.4873 cv
153.242 33.4873 153.596 33.1343 153.596 32.6997 cv
f
155.516 32.6997 mo
155.516 32.2651 155.162 31.9121 154.729 31.9121 cv
154.293 31.9121 153.941 32.2651 153.941 32.6997 cv
153.941 33.1343 154.293 33.4873 154.729 33.4873 cv
155.162 33.4873 155.516 33.1343 155.516 32.6997 cv
f
157.436 31.2598 mo
157.436 30.8252 157.082 30.4722 156.648 30.4722 cv
156.213 30.4722 155.861 30.8252 155.861 31.2598 cv
155.861 31.6943 156.213 32.0474 156.648 32.0474 cv
157.082 32.0474 157.436 31.6943 157.436 31.2598 cv
f
159.355 32.3398 mo
159.355 31.9053 159.002 31.5522 158.568 31.5522 cv
158.133 31.5522 157.781 31.9053 157.781 32.3398 cv
157.781 32.7744 158.133 33.1274 158.568 33.1274 cv
159.002 33.1274 159.355 32.7744 159.355 32.3398 cv
f
161.275 32.8198 mo
161.275 32.3853 160.924 32.0322 160.488 32.0322 cv
160.053 32.0322 159.701 32.3853 159.701 32.8198 cv
159.701 33.2544 160.053 33.6074 160.488 33.6074 cv
160.924 33.6074 161.275 33.2544 161.275 32.8198 cv
f
163.195 32.6997 mo
163.195 32.2651 162.844 31.9121 162.408 31.9121 cv
161.973 31.9121 161.621 32.2651 161.621 32.6997 cv
161.621 33.1343 161.973 33.4873 162.408 33.4873 cv
162.844 33.4873 163.195 33.1343 163.195 32.6997 cv
f
165.115 32.3398 mo
165.115 31.9053 164.764 31.5522 164.328 31.5522 cv
163.893 31.5522 163.541 31.9053 163.541 32.3398 cv
163.541 32.7744 163.893 33.1274 164.328 33.1274 cv
164.764 33.1274 165.115 32.7744 165.115 32.3398 cv
f
166.916 33.6597 mo
166.916 33.2251 166.563 32.8721 166.129 32.8721 cv
165.693 32.8721 165.34 33.2251 165.34 33.6597 cv
165.34 34.0947 165.693 34.4473 166.129 34.4473 cv
166.563 34.4473 166.916 34.0947 166.916 33.6597 cv
f
168.836 32.8198 mo
168.836 32.3853 168.482 32.0322 168.049 32.0322 cv
167.613 32.0322 167.26 32.3853 167.26 32.8198 cv
167.26 33.2544 167.613 33.6074 168.049 33.6074 cv
168.482 33.6074 168.836 33.2544 168.836 32.8198 cv
f
170.875 33.8999 mo
170.875 33.4648 170.523 33.1123 170.088 33.1123 cv
169.654 33.1123 169.301 33.4648 169.301 33.8999 cv
169.301 34.3345 169.654 34.6875 170.088 34.6875 cv
170.523 34.6875 170.875 34.3345 170.875 33.8999 cv
f
172.676 34.2598 mo
172.676 33.8252 172.322 33.4722 171.889 33.4722 cv
171.453 33.4722 171.102 33.8252 171.102 34.2598 cv
171.102 34.6943 171.453 35.0474 171.889 35.0474 cv
172.322 35.0474 172.676 34.6943 172.676 34.2598 cv
f
174.596 34.1396 mo
174.596 33.7051 174.242 33.3525 173.809 33.3525 cv
173.373 33.3525 173.021 33.7051 173.021 34.1396 cv
173.021 34.5747 173.373 34.9272 173.809 34.9272 cv
174.242 34.9272 174.596 34.5747 174.596 34.1396 cv
f
176.516 34.0195 mo
176.516 33.585 176.162 33.2324 175.729 33.2324 cv
175.293 33.2324 174.941 33.585 174.941 34.0195 cv
174.941 34.4546 175.293 34.8071 175.729 34.8071 cv
176.162 34.8071 176.516 34.4546 176.516 34.0195 cv
f
178.436 34.98 mo
178.436 34.5449 178.082 34.1924 177.648 34.1924 cv
177.213 34.1924 176.861 34.5449 176.861 34.98 cv
176.861 35.4146 177.213 35.7671 177.648 35.7671 cv
178.082 35.7671 178.436 35.4146 178.436 34.98 cv
f
180.355 35.8198 mo
180.355 35.3853 180.002 35.0322 179.568 35.0322 cv
179.133 35.0322 178.781 35.3853 178.781 35.8198 cv
178.781 36.2544 179.133 36.6074 179.568 36.6074 cv
180.002 36.6074 180.355 36.2544 180.355 35.8198 cv
f
182.275 35.6997 mo
182.275 35.2651 181.924 34.9121 181.488 34.9121 cv
181.053 34.9121 180.701 35.2651 180.701 35.6997 cv
180.701 36.1343 181.053 36.4873 181.488 36.4873 cv
181.924 36.4873 182.275 36.1343 182.275 35.6997 cv
f
184.195 35.6997 mo
184.195 35.2651 183.844 34.9121 183.408 34.9121 cv
182.973 34.9121 182.621 35.2651 182.621 35.6997 cv
182.621 36.1343 182.973 36.4873 183.408 36.4873 cv
183.844 36.4873 184.195 36.1343 184.195 35.6997 cv
f
186.115 36.6597 mo
186.115 36.2251 185.764 35.8721 185.328 35.8721 cv
184.893 35.8721 184.541 36.2251 184.541 36.6597 cv
184.541 37.0947 184.893 37.4473 185.328 37.4473 cv
185.764 37.4473 186.115 37.0947 186.115 36.6597 cv
f
188.035 35.9399 mo
188.035 35.5049 187.684 35.1523 187.248 35.1523 cv
186.814 35.1523 186.461 35.5049 186.461 35.9399 cv
186.461 36.3745 186.814 36.7275 187.248 36.7275 cv
187.684 36.7275 188.035 36.3745 188.035 35.9399 cv
f
189.955 37.0195 mo
189.955 36.585 189.604 36.2324 189.168 36.2324 cv
188.734 36.2324 188.381 36.585 188.381 37.0195 cv
188.381 37.4546 188.734 37.8071 189.168 37.8071 cv
189.604 37.8071 189.955 37.4546 189.955 37.0195 cv
f
191.875 37.8599 mo
191.875 37.4253 191.523 37.0723 191.088 37.0723 cv
190.654 37.0723 190.301 37.4253 190.301 37.8599 cv
190.301 38.2944 190.654 38.6475 191.088 38.6475 cv
191.523 38.6475 191.875 38.2944 191.875 37.8599 cv
f
193.676 37.8599 mo
193.676 37.4253 193.322 37.0723 192.889 37.0723 cv
192.453 37.0723 192.102 37.4253 192.102 37.8599 cv
192.102 38.2944 192.453 38.6475 192.889 38.6475 cv
193.322 38.6475 193.676 38.2944 193.676 37.8599 cv
f
195.715 37.8599 mo
195.715 37.4253 195.363 37.0723 194.928 37.0723 cv
194.494 37.0723 194.141 37.4253 194.141 37.8599 cv
194.141 38.2944 194.494 38.6475 194.928 38.6475 cv
195.363 38.6475 195.715 38.2944 195.715 37.8599 cv
f
197.635 37.8599 mo
197.635 37.4253 197.283 37.0723 196.848 37.0723 cv
196.414 37.0723 196.061 37.4253 196.061 37.8599 cv
196.061 38.2944 196.414 38.6475 196.848 38.6475 cv
197.283 38.6475 197.635 38.2944 197.635 37.8599 cv
f
199.436 39.0596 mo
199.436 38.625 199.082 38.2725 198.648 38.2725 cv
198.213 38.2725 197.861 38.625 197.861 39.0596 cv
197.861 39.4946 198.213 39.8472 198.648 39.8472 cv
199.082 39.8472 199.436 39.4946 199.436 39.0596 cv
f
201.355 39.1797 mo
201.355 38.7451 201.002 38.3921 200.568 38.3921 cv
200.133 38.3921 199.781 38.7451 199.781 39.1797 cv
199.781 39.6143 200.133 39.9673 200.568 39.9673 cv
201.002 39.9673 201.355 39.6143 201.355 39.1797 cv
f
203.275 38.9399 mo
203.275 38.5049 202.924 38.1523 202.488 38.1523 cv
202.053 38.1523 201.701 38.5049 201.701 38.9399 cv
201.701 39.3745 202.053 39.7275 202.488 39.7275 cv
202.924 39.7275 203.275 39.3745 203.275 38.9399 cv
f
205.195 39.6597 mo
205.195 39.2251 204.844 38.8721 204.408 38.8721 cv
203.973 38.8721 203.621 39.2251 203.621 39.6597 cv
203.621 40.0947 203.973 40.4473 204.408 40.4473 cv
204.844 40.4473 205.195 40.0947 205.195 39.6597 cv
f
207.115 39.7798 mo
207.115 39.3452 206.764 38.9922 206.328 38.9922 cv
205.893 38.9922 205.541 39.3452 205.541 39.7798 cv
205.541 40.2144 205.893 40.5674 206.328 40.5674 cv
206.764 40.5674 207.115 40.2144 207.115 39.7798 cv
f
209.035 40.2598 mo
209.035 39.8252 208.684 39.4722 208.248 39.4722 cv
207.814 39.4722 207.461 39.8252 207.461 40.2598 cv
207.461 40.6943 207.814 41.0474 208.248 41.0474 cv
208.684 41.0474 209.035 40.6943 209.035 40.2598 cv
f
210.955 40.3799 mo
210.955 39.9453 210.604 39.5923 210.168 39.5923 cv
209.734 39.5923 209.381 39.9453 209.381 40.3799 cv
209.381 40.8145 209.734 41.1675 210.168 41.1675 cv
210.604 41.1675 210.955 40.8145 210.955 40.3799 cv
f
212.875 41.8198 mo
212.875 41.3853 212.523 41.0322 212.088 41.0322 cv
211.654 41.0322 211.301 41.3853 211.301 41.8198 cv
211.301 42.2544 211.654 42.6074 212.088 42.6074 cv
212.523 42.6074 212.875 42.2544 212.875 41.8198 cv
f
214.795 40.3799 mo
214.795 39.9453 214.443 39.5923 214.008 39.5923 cv
213.574 39.5923 213.221 39.9453 213.221 40.3799 cv
213.221 40.8145 213.574 41.1675 214.008 41.1675 cv
214.443 41.1675 214.795 40.8145 214.795 40.3799 cv
f
216.715 42.54 mo
216.715 42.105 216.363 41.7524 215.928 41.7524 cv
215.494 41.7524 215.141 42.105 215.141 42.54 cv
215.141 42.9746 215.494 43.3271 215.928 43.3271 cv
216.363 43.3271 216.715 42.9746 216.715 42.54 cv
f
218.635 41.9399 mo
218.635 41.5049 218.283 41.1523 217.848 41.1523 cv
217.414 41.1523 217.061 41.5049 217.061 41.9399 cv
217.061 42.3745 217.414 42.7275 217.848 42.7275 cv
218.283 42.7275 218.635 42.3745 218.635 41.9399 cv
f
220.557 42.7798 mo
220.557 42.3452 220.203 41.9922 219.768 41.9922 cv
219.334 41.9922 218.98 42.3452 218.98 42.7798 cv
218.98 43.2144 219.334 43.5674 219.768 43.5674 cv
220.203 43.5674 220.557 43.2144 220.557 42.7798 cv
f
222.477 42.8999 mo
222.477 42.4648 222.123 42.1123 221.688 42.1123 cv
221.254 42.1123 220.9 42.4648 220.9 42.8999 cv
220.9 43.3345 221.254 43.6875 221.688 43.6875 cv
222.123 43.6875 222.477 43.3345 222.477 42.8999 cv
f
224.275 43.3799 mo
224.275 42.9453 223.924 42.5923 223.488 42.5923 cv
223.053 42.5923 222.701 42.9453 222.701 43.3799 cv
222.701 43.8145 223.053 44.1675 223.488 44.1675 cv
223.924 44.1675 224.275 43.8145 224.275 43.3799 cv
f
226.195 44.46 mo
226.195 44.0249 225.844 43.6724 225.408 43.6724 cv
224.973 43.6724 224.621 44.0249 224.621 44.46 cv
224.621 44.8945 224.973 45.2471 225.408 45.2471 cv
225.844 45.2471 226.195 44.8945 226.195 44.46 cv
f
228.115 43.7397 mo
228.115 43.3052 227.764 42.9521 227.328 42.9521 cv
226.893 42.9521 226.541 43.3052 226.541 43.7397 cv
226.541 44.1743 226.893 44.5273 227.328 44.5273 cv
227.764 44.5273 228.115 44.1743 228.115 43.7397 cv
f
230.035 44.6997 mo
230.035 44.2651 229.684 43.9121 229.248 43.9121 cv
228.814 43.9121 228.461 44.2651 228.461 44.6997 cv
228.461 45.1343 228.814 45.4873 229.248 45.4873 cv
229.684 45.4873 230.035 45.1343 230.035 44.6997 cv
f
231.955 43.0195 mo
231.955 42.585 231.604 42.2324 231.168 42.2324 cv
230.734 42.2324 230.381 42.585 230.381 43.0195 cv
230.381 43.4546 230.734 43.8071 231.168 43.8071 cv
231.604 43.8071 231.955 43.4546 231.955 43.0195 cv
f
42.7158 90.0596 mo
42.7158 89.625 42.3628 89.2725 41.9282 89.2725 cv
41.4937 89.2725 41.1406 89.625 41.1406 90.0596 cv
41.1406 90.4946 41.4937 90.8472 41.9282 90.8472 cv
42.3628 90.8472 42.7158 90.4946 42.7158 90.0596 cv
f
44.6357 88.5 mo
44.6357 88.0649 44.2827 87.7124 43.8481 87.7124 cv
43.4136 87.7124 43.0605 88.0649 43.0605 88.5 cv
43.0605 88.9346 43.4136 89.2871 43.8481 89.2871 cv
44.2827 89.2871 44.6357 88.9346 44.6357 88.5 cv
f
46.5557 86.8198 mo
46.5557 86.3853 46.2026 86.0322 45.7681 86.0322 cv
45.3335 86.0322 44.9805 86.3853 44.9805 86.8198 cv
44.9805 87.2544 45.3335 87.6074 45.7681 87.6074 cv
46.2026 87.6074 46.5557 87.2544 46.5557 86.8198 cv
f
48.4756 85.1396 mo
48.4756 84.7051 48.123 84.3525 47.688 84.3525 cv
47.2534 84.3525 46.9009 84.7051 46.9009 85.1396 cv
46.9009 85.5747 47.2534 85.9272 47.688 85.9272 cv
48.123 85.9272 48.4756 85.5747 48.4756 85.1396 cv
f
50.3955 83.5796 mo
50.3955 83.145 50.043 82.7925 49.6084 82.7925 cv
49.1733 82.7925 48.8208 83.145 48.8208 83.5796 cv
48.8208 84.0146 49.1733 84.3672 49.6084 84.3672 cv
50.043 84.3672 50.3955 84.0146 50.3955 83.5796 cv
f
52.3159 82.0195 mo
52.3159 81.585 51.9629 81.2324 51.5283 81.2324 cv
51.0933 81.2324 50.7407 81.585 50.7407 82.0195 cv
50.7407 82.4546 51.0933 82.8071 51.5283 82.8071 cv
51.9629 82.8071 52.3159 82.4546 52.3159 82.0195 cv
f
54.2358 80.3398 mo
54.2358 79.9053 53.8828 79.5522 53.4482 79.5522 cv
53.0137 79.5522 52.6606 79.9053 52.6606 80.3398 cv
52.6606 80.7744 53.0137 81.1274 53.4482 81.1274 cv
53.8828 81.1274 54.2358 80.7744 54.2358 80.3398 cv
f
56.1558 78.7798 mo
56.1558 78.3452 55.8027 77.9922 55.3682 77.9922 cv
54.9336 77.9922 54.5806 78.3452 54.5806 78.7798 cv
54.5806 79.2144 54.9336 79.5674 55.3682 79.5674 cv
55.8027 79.5674 56.1558 79.2144 56.1558 78.7798 cv
f
58.0757 77.0996 mo
58.0757 76.665 57.7227 76.3125 57.2881 76.3125 cv
56.8535 76.3125 56.5005 76.665 56.5005 77.0996 cv
56.5005 77.5347 56.8535 77.8872 57.2881 77.8872 cv
57.7227 77.8872 58.0757 77.5347 58.0757 77.0996 cv
f
59.8755 75.54 mo
59.8755 75.105 59.5229 74.7524 59.0884 74.7524 cv
58.6533 74.7524 58.3008 75.105 58.3008 75.54 cv
58.3008 75.9746 58.6533 76.3271 59.0884 76.3271 cv
59.5229 76.3271 59.8755 75.9746 59.8755 75.54 cv
f
61.7959 73.8599 mo
61.7959 73.4253 61.4429 73.0723 61.0083 73.0723 cv
60.5732 73.0723 60.2207 73.4253 60.2207 73.8599 cv
60.2207 74.2944 60.5732 74.6475 61.0083 74.6475 cv
61.4429 74.6475 61.7959 74.2944 61.7959 73.8599 cv
f
63.7158 72.2998 mo
63.7158 71.8652 63.3628 71.5122 62.9282 71.5122 cv
62.4937 71.5122 62.1406 71.8652 62.1406 72.2998 cv
62.1406 72.7344 62.4937 73.0874 62.9282 73.0874 cv
63.3628 73.0874 63.7158 72.7344 63.7158 72.2998 cv
f
65.6357 70.6196 mo
65.6357 70.1851 65.2827 69.832 64.8481 69.832 cv
64.4136 69.832 64.0605 70.1851 64.0605 70.6196 cv
64.0605 71.0547 64.4136 71.4072 64.8481 71.4072 cv
65.2827 71.4072 65.6357 71.0547 65.6357 70.6196 cv
f
67.5557 69.0596 mo
67.5557 68.625 67.2026 68.2725 66.7681 68.2725 cv
66.3335 68.2725 65.9805 68.625 65.9805 69.0596 cv
65.9805 69.4946 66.3335 69.8472 66.7681 69.8472 cv
67.2026 69.8472 67.5557 69.4946 67.5557 69.0596 cv
f
69.4756 67.5 mo
69.4756 67.0649 69.123 66.7124 68.688 66.7124 cv
68.2534 66.7124 67.9009 67.0649 67.9009 67.5 cv
67.9009 67.9346 68.2534 68.2871 68.688 68.2871 cv
69.123 68.2871 69.4756 67.9346 69.4756 67.5 cv
f
71.3955 65.8198 mo
71.3955 65.3853 71.043 65.0322 70.6084 65.0322 cv
70.1733 65.0322 69.8208 65.3853 69.8208 65.8198 cv
69.8208 66.2544 70.1733 66.6074 70.6084 66.6074 cv
71.043 66.6074 71.3955 66.2544 71.3955 65.8198 cv
f
73.3159 64.2598 mo
73.3159 63.8252 72.9629 63.4722 72.5283 63.4722 cv
72.0933 63.4722 71.7407 63.8252 71.7407 64.2598 cv
71.7407 64.6943 72.0933 65.0474 72.5283 65.0474 cv
72.9629 65.0474 73.3159 64.6943 73.3159 64.2598 cv
f
75.2358 62.5796 mo
75.2358 62.145 74.8828 61.7925 74.4482 61.7925 cv
74.0137 61.7925 73.6606 62.145 73.6606 62.5796 cv
73.6606 63.0146 74.0137 63.3672 74.4482 63.3672 cv
74.8828 63.3672 75.2358 63.0146 75.2358 62.5796 cv
f
77.1558 60.8999 mo
77.1558 60.4648 76.8027 60.1123 76.3682 60.1123 cv
75.9336 60.1123 75.5806 60.4648 75.5806 60.8999 cv
75.5806 61.3345 75.9336 61.6875 76.3682 61.6875 cv
76.8027 61.6875 77.1558 61.3345 77.1558 60.8999 cv
f
79.0757 59.3398 mo
79.0757 58.9053 78.7227 58.5522 78.2881 58.5522 cv
77.8535 58.5522 77.5005 58.9053 77.5005 59.3398 cv
77.5005 59.7744 77.8535 60.1274 78.2881 60.1274 cv
78.7227 60.1274 79.0757 59.7744 79.0757 59.3398 cv
f
80.9956 57.7798 mo
80.9956 57.3452 80.6431 56.9922 80.208 56.9922 cv
79.7734 56.9922 79.4209 57.3452 79.4209 57.7798 cv
79.4209 58.2144 79.7734 58.5674 80.208 58.5674 cv
80.6431 58.5674 80.9956 58.2144 80.9956 57.7798 cv
f
82.9155 56.0996 mo
82.9155 55.665 82.563 55.3125 82.1284 55.3125 cv
81.6934 55.3125 81.3408 55.665 81.3408 56.0996 cv
81.3408 56.5347 81.6934 56.8872 82.1284 56.8872 cv
82.563 56.8872 82.9155 56.5347 82.9155 56.0996 cv
f
84.8354 54.54 mo
84.8354 54.105 84.4829 53.7524 84.0483 53.7524 cv
83.6133 53.7524 83.2607 54.105 83.2607 54.54 cv
83.2607 54.9746 83.6133 55.3271 84.0483 55.3271 cv
84.4829 55.3271 84.8354 54.9746 84.8354 54.54 cv
f
86.6357 52.98 mo
86.6357 52.5449 86.2827 52.1924 85.8481 52.1924 cv
85.4136 52.1924 85.0605 52.5449 85.0605 52.98 cv
85.0605 53.4146 85.4136 53.7671 85.8481 53.7671 cv
86.2827 53.7671 86.6357 53.4146 86.6357 52.98 cv
f
88.6758 51.2998 mo
88.6758 50.8652 88.3228 50.5122 87.8882 50.5122 cv
87.4536 50.5122 87.1006 50.8652 87.1006 51.2998 cv
87.1006 51.7344 87.4536 52.0874 87.8882 52.0874 cv
88.3228 52.0874 88.6758 51.7344 88.6758 51.2998 cv
f
90.4756 49.7397 mo
90.4756 49.3052 90.123 48.9521 89.688 48.9521 cv
89.2534 48.9521 88.9009 49.3052 88.9009 49.7397 cv
88.9009 50.1743 89.2534 50.5273 89.688 50.5273 cv
90.123 50.5273 90.4756 50.1743 90.4756 49.7397 cv
f
92.3955 48.0596 mo
92.3955 47.625 92.043 47.2725 91.6084 47.2725 cv
91.1733 47.2725 90.8208 47.625 90.8208 48.0596 cv
90.8208 48.4946 91.1733 48.8472 91.6084 48.8472 cv
92.043 48.8472 92.3955 48.4946 92.3955 48.0596 cv
f
94.3159 46.5 mo
94.3159 46.0649 93.9629 45.7124 93.5283 45.7124 cv
93.0933 45.7124 92.7407 46.0649 92.7407 46.5 cv
92.7407 46.9346 93.0933 47.2871 93.5283 47.2871 cv
93.9629 47.2871 94.3159 46.9346 94.3159 46.5 cv
f
96.2358 44.9399 mo
96.2358 44.5049 95.8828 44.1523 95.4482 44.1523 cv
95.0137 44.1523 94.6606 44.5049 94.6606 44.9399 cv
94.6606 45.3745 95.0137 45.7275 95.4482 45.7275 cv
95.8828 45.7275 96.2358 45.3745 96.2358 44.9399 cv
f
98.1558 43.3799 mo
98.1558 42.9453 97.8027 42.5923 97.3682 42.5923 cv
96.9336 42.5923 96.5806 42.9453 96.5806 43.3799 cv
96.5806 43.8145 96.9336 44.1675 97.3682 44.1675 cv
97.8027 44.1675 98.1558 43.8145 98.1558 43.3799 cv
f
100.076 41.6997 mo
100.076 41.2651 99.7231 40.9121 99.2881 40.9121 cv
98.8535 40.9121 98.5005 41.2651 98.5005 41.6997 cv
98.5005 42.1343 98.8535 42.4873 99.2881 42.4873 cv
99.7231 42.4873 100.076 42.1343 100.076 41.6997 cv
f
101.996 40.2598 mo
101.996 39.8252 101.643 39.4722 101.208 39.4722 cv
100.773 39.4722 100.421 39.8252 100.421 40.2598 cv
100.421 40.6943 100.773 41.0474 101.208 41.0474 cv
101.643 41.0474 101.996 40.6943 101.996 40.2598 cv
f
103.916 38.6997 mo
103.916 38.2651 103.563 37.9121 103.128 37.9121 cv
102.693 37.9121 102.341 38.2651 102.341 38.6997 cv
102.341 39.1343 102.693 39.4873 103.128 39.4873 cv
103.563 39.4873 103.916 39.1343 103.916 38.6997 cv
f
105.835 37.1396 mo
105.835 36.7051 105.483 36.3525 105.048 36.3525 cv
104.613 36.3525 104.261 36.7051 104.261 37.1396 cv
104.261 37.5747 104.613 37.9272 105.048 37.9272 cv
105.483 37.9272 105.835 37.5747 105.835 37.1396 cv
f
107.756 35.46 mo
107.756 35.0249 107.403 34.6724 106.968 34.6724 cv
106.534 34.6724 106.181 35.0249 106.181 35.46 cv
106.181 35.8945 106.534 36.2471 106.968 36.2471 cv
107.403 36.2471 107.756 35.8945 107.756 35.46 cv
f
109.676 33.8999 mo
109.676 33.4648 109.323 33.1123 108.888 33.1123 cv
108.454 33.1123 108.101 33.4648 108.101 33.8999 cv
108.101 34.3345 108.454 34.6875 108.888 34.6875 cv
109.323 34.6875 109.676 34.3345 109.676 33.8999 cv
f
111.596 32.5796 mo
111.596 32.145 111.243 31.7925 110.808 31.7925 cv
110.374 31.7925 110.021 32.145 110.021 32.5796 cv
110.021 33.0146 110.374 33.3672 110.808 33.3672 cv
111.243 33.3672 111.596 33.0146 111.596 32.5796 cv
f
113.516 31.1396 mo
113.516 30.7051 113.163 30.3525 112.728 30.3525 cv
112.293 30.3525 111.941 30.7051 111.941 31.1396 cv
111.941 31.5747 112.293 31.9272 112.728 31.9272 cv
113.163 31.9272 113.516 31.5747 113.516 31.1396 cv
f
115.316 29.6997 mo
115.316 29.2651 114.963 28.9121 114.528 28.9121 cv
114.093 28.9121 113.741 29.2651 113.741 29.6997 cv
113.741 30.1343 114.093 30.4873 114.528 30.4873 cv
114.963 30.4873 115.316 30.1343 115.316 29.6997 cv
f
117.236 28.2598 mo
117.236 27.8252 116.883 27.4722 116.448 27.4722 cv
116.014 27.4722 115.661 27.8252 115.661 28.2598 cv
115.661 28.6943 116.014 29.0474 116.448 29.0474 cv
116.883 29.0474 117.236 28.6943 117.236 28.2598 cv
f
119.156 26.6997 mo
119.156 26.2651 118.803 25.9121 118.368 25.9121 cv
117.934 25.9121 117.581 26.2651 117.581 26.6997 cv
117.581 27.1343 117.934 27.4873 118.368 27.4873 cv
118.803 27.4873 119.156 27.1343 119.156 26.6997 cv
f
121.076 25.3799 mo
121.076 24.9453 120.723 24.5923 120.288 24.5923 cv
119.854 24.5923 119.5 24.9453 119.5 25.3799 cv
119.5 25.8145 119.854 26.1675 120.288 26.1675 cv
120.723 26.1675 121.076 25.8145 121.076 25.3799 cv
f
122.996 24.0596 mo
122.996 23.625 122.643 23.2725 122.208 23.2725 cv
121.773 23.2725 121.421 23.625 121.421 24.0596 cv
121.421 24.4946 121.773 24.8472 122.208 24.8472 cv
122.643 24.8472 122.996 24.4946 122.996 24.0596 cv
f
124.916 23.3398 mo
124.916 22.9053 124.563 22.5522 124.128 22.5522 cv
123.693 22.5522 123.341 22.9053 123.341 23.3398 cv
123.341 23.7744 123.693 24.1274 124.128 24.1274 cv
124.563 24.1274 124.916 23.7744 124.916 23.3398 cv
f
126.835 22.8599 mo
126.835 22.4253 126.483 22.0723 126.048 22.0723 cv
125.613 22.0723 125.261 22.4253 125.261 22.8599 cv
125.261 23.2944 125.613 23.6475 126.048 23.6475 cv
126.483 23.6475 126.835 23.2944 126.835 22.8599 cv
f
128.756 21.7798 mo
128.756 21.3452 128.403 20.9922 127.968 20.9922 cv
127.534 20.9922 127.181 21.3452 127.181 21.7798 cv
127.181 22.2144 127.534 22.5674 127.968 22.5674 cv
128.403 22.5674 128.756 22.2144 128.756 21.7798 cv
f
130.676 20.46 mo
130.676 20.0249 130.323 19.6724 129.888 19.6724 cv
129.454 19.6724 129.101 20.0249 129.101 20.46 cv
129.101 20.8945 129.454 21.2471 129.888 21.2471 cv
130.323 21.2471 130.676 20.8945 130.676 20.46 cv
f
132.596 19.1396 mo
132.596 18.7051 132.243 18.3525 131.808 18.3525 cv
131.374 18.3525 131.021 18.7051 131.021 19.1396 cv
131.021 19.5747 131.374 19.9272 131.808 19.9272 cv
132.243 19.9272 132.596 19.5747 132.596 19.1396 cv
f
134.516 18.54 mo
134.516 18.105 134.163 17.7524 133.728 17.7524 cv
133.293 17.7524 132.941 18.105 132.941 18.54 cv
132.941 18.9746 133.293 19.3271 133.728 19.3271 cv
134.163 19.3271 134.516 18.9746 134.516 18.54 cv
f
136.436 18.2998 mo
136.436 17.8652 136.083 17.5122 135.648 17.5122 cv
135.213 17.5122 134.861 17.8652 134.861 18.2998 cv
134.861 18.7344 135.213 19.0874 135.648 19.0874 cv
136.083 19.0874 136.436 18.7344 136.436 18.2998 cv
f
138.355 17.0996 mo
138.355 16.665 138.003 16.3125 137.568 16.3125 cv
137.133 16.3125 136.781 16.665 136.781 17.0996 cv
136.781 17.5347 137.133 17.8872 137.568 17.8872 cv
138.003 17.8872 138.355 17.5347 138.355 17.0996 cv
f
140.275 16.7397 mo
140.275 16.3052 139.924 15.9521 139.488 15.9521 cv
139.053 15.9521 138.701 16.3052 138.701 16.7397 cv
138.701 17.1743 139.053 17.5273 139.488 17.5273 cv
139.924 17.5273 140.275 17.1743 140.275 16.7397 cv
f
142.076 15.54 mo
142.076 15.105 141.723 14.7524 141.289 14.7524 cv
140.854 14.7524 140.5 15.105 140.5 15.54 cv
140.5 15.9746 140.854 16.3271 141.289 16.3271 cv
141.723 16.3271 142.076 15.9746 142.076 15.54 cv
f
143.996 15.6597 mo
143.996 15.2251 143.643 14.8721 143.209 14.8721 cv
142.773 14.8721 142.42 15.2251 142.42 15.6597 cv
142.42 16.0947 142.773 16.4473 143.209 16.4473 cv
143.643 16.4473 143.996 16.0947 143.996 15.6597 cv
f
146.035 15.4199 mo
146.035 14.9849 145.684 14.6323 145.248 14.6323 cv
144.814 14.6323 144.461 14.9849 144.461 15.4199 cv
144.461 15.8545 144.814 16.207 145.248 16.207 cv
145.684 16.207 146.035 15.8545 146.035 15.4199 cv
f
147.836 14.6997 mo
147.836 14.2651 147.482 13.9121 147.049 13.9121 cv
146.613 13.9121 146.26 14.2651 146.26 14.6997 cv
146.26 15.1343 146.613 15.4873 147.049 15.4873 cv
147.482 15.4873 147.836 15.1343 147.836 14.6997 cv
f
149.756 14.5796 mo
149.756 14.145 149.402 13.7925 148.969 13.7925 cv
148.533 13.7925 148.182 14.145 148.182 14.5796 cv
148.182 15.0146 148.533 15.3672 148.969 15.3672 cv
149.402 15.3672 149.756 15.0146 149.756 14.5796 cv
f
151.676 14.6997 mo
151.676 14.2651 151.322 13.9121 150.889 13.9121 cv
150.453 13.9121 150.102 14.2651 150.102 14.6997 cv
150.102 15.1343 150.453 15.4873 150.889 15.4873 cv
151.322 15.4873 151.676 15.1343 151.676 14.6997 cv
f
153.596 13.6196 mo
153.596 13.1851 153.242 12.832 152.809 12.832 cv
152.373 12.832 152.021 13.1851 152.021 13.6196 cv
152.021 14.0547 152.373 14.4072 152.809 14.4072 cv
153.242 14.4072 153.596 14.0547 153.596 13.6196 cv
f
155.516 14.46 mo
155.516 14.0249 155.162 13.6724 154.729 13.6724 cv
154.293 13.6724 153.941 14.0249 153.941 14.46 cv
153.941 14.8945 154.293 15.2471 154.729 15.2471 cv
155.162 15.2471 155.516 14.8945 155.516 14.46 cv
f
157.436 14.0996 mo
157.436 13.665 157.082 13.3125 156.648 13.3125 cv
156.213 13.3125 155.861 13.665 155.861 14.0996 cv
155.861 14.5347 156.213 14.8872 156.648 14.8872 cv
157.082 14.8872 157.436 14.5347 157.436 14.0996 cv
f
159.355 13.8599 mo
159.355 13.4253 159.002 13.0723 158.568 13.0723 cv
158.133 13.0723 157.781 13.4253 157.781 13.8599 cv
157.781 14.2944 158.133 14.6475 158.568 14.6475 cv
159.002 14.6475 159.355 14.2944 159.355 13.8599 cv
f
161.275 14.6997 mo
161.275 14.2651 160.924 13.9121 160.488 13.9121 cv
160.053 13.9121 159.701 14.2651 159.701 14.6997 cv
159.701 15.1343 160.053 15.4873 160.488 15.4873 cv
160.924 15.4873 161.275 15.1343 161.275 14.6997 cv
f
163.195 15.2998 mo
163.195 14.8652 162.844 14.5122 162.408 14.5122 cv
161.973 14.5122 161.621 14.8652 161.621 15.2998 cv
161.621 15.7344 161.973 16.0874 162.408 16.0874 cv
162.844 16.0874 163.195 15.7344 163.195 15.2998 cv
f
165.115 14.5796 mo
165.115 14.145 164.764 13.7925 164.328 13.7925 cv
163.893 13.7925 163.541 14.145 163.541 14.5796 cv
163.541 15.0146 163.893 15.3672 164.328 15.3672 cv
164.764 15.3672 165.115 15.0146 165.115 14.5796 cv
f
166.916 15.54 mo
166.916 15.105 166.563 14.7524 166.129 14.7524 cv
165.693 14.7524 165.34 15.105 165.34 15.54 cv
165.34 15.9746 165.693 16.3271 166.129 16.3271 cv
166.563 16.3271 166.916 15.9746 166.916 15.54 cv
f
168.836 16.7397 mo
168.836 16.3052 168.482 15.9521 168.049 15.9521 cv
167.613 15.9521 167.26 16.3052 167.26 16.7397 cv
167.26 17.1743 167.613 17.5273 168.049 17.5273 cv
168.482 17.5273 168.836 17.1743 168.836 16.7397 cv
f
170.875 16.7397 mo
170.875 16.3052 170.523 15.9521 170.088 15.9521 cv
169.654 15.9521 169.301 16.3052 169.301 16.7397 cv
169.301 17.1743 169.654 17.5273 170.088 17.5273 cv
170.523 17.5273 170.875 17.1743 170.875 16.7397 cv
f
172.676 15.8999 mo
172.676 15.4648 172.322 15.1123 171.889 15.1123 cv
171.453 15.1123 171.102 15.4648 171.102 15.8999 cv
171.102 16.3345 171.453 16.6875 171.889 16.6875 cv
172.322 16.6875 172.676 16.3345 172.676 15.8999 cv
f
174.596 16.7397 mo
174.596 16.3052 174.242 15.9521 173.809 15.9521 cv
173.373 15.9521 173.021 16.3052 173.021 16.7397 cv
173.021 17.1743 173.373 17.5273 173.809 17.5273 cv
174.242 17.5273 174.596 17.1743 174.596 16.7397 cv
f
176.516 16.8599 mo
176.516 16.4253 176.162 16.0723 175.729 16.0723 cv
175.293 16.0723 174.941 16.4253 174.941 16.8599 cv
174.941 17.2944 175.293 17.6475 175.729 17.6475 cv
176.162 17.6475 176.516 17.2944 176.516 16.8599 cv
f
178.436 16.98 mo
178.436 16.5449 178.082 16.1924 177.648 16.1924 cv
177.213 16.1924 176.861 16.5449 176.861 16.98 cv
176.861 17.4146 177.213 17.7671 177.648 17.7671 cv
178.082 17.7671 178.436 17.4146 178.436 16.98 cv
f
180.355 16.98 mo
180.355 16.5449 180.002 16.1924 179.568 16.1924 cv
179.133 16.1924 178.781 16.5449 178.781 16.98 cv
178.781 17.4146 179.133 17.7671 179.568 17.7671 cv
180.002 17.7671 180.355 17.4146 180.355 16.98 cv
f
182.275 17.46 mo
182.275 17.0249 181.924 16.6724 181.488 16.6724 cv
181.053 16.6724 180.701 17.0249 180.701 17.46 cv
180.701 17.8945 181.053 18.2471 181.488 18.2471 cv
181.924 18.2471 182.275 17.8945 182.275 17.46 cv
f
184.195 17.0996 mo
184.195 16.665 183.844 16.3125 183.408 16.3125 cv
182.973 16.3125 182.621 16.665 182.621 17.0996 cv
182.621 17.5347 182.973 17.8872 183.408 17.8872 cv
183.844 17.8872 184.195 17.5347 184.195 17.0996 cv
f
186.115 18.2998 mo
186.115 17.8652 185.764 17.5122 185.328 17.5122 cv
184.893 17.5122 184.541 17.8652 184.541 18.2998 cv
184.541 18.7344 184.893 19.0874 185.328 19.0874 cv
185.764 19.0874 186.115 18.7344 186.115 18.2998 cv
f
188.035 18.8999 mo
188.035 18.4648 187.684 18.1123 187.248 18.1123 cv
186.814 18.1123 186.461 18.4648 186.461 18.8999 cv
186.461 19.3345 186.814 19.6875 187.248 19.6875 cv
187.684 19.6875 188.035 19.3345 188.035 18.8999 cv
f
189.955 19.0195 mo
189.955 18.585 189.604 18.2324 189.168 18.2324 cv
188.734 18.2324 188.381 18.585 188.381 19.0195 cv
188.381 19.4546 188.734 19.8071 189.168 19.8071 cv
189.604 19.8071 189.955 19.4546 189.955 19.0195 cv
f
191.875 19.0195 mo
191.875 18.585 191.523 18.2324 191.088 18.2324 cv
190.654 18.2324 190.301 18.585 190.301 19.0195 cv
190.301 19.4546 190.654 19.8071 191.088 19.8071 cv
191.523 19.8071 191.875 19.4546 191.875 19.0195 cv
f
193.676 19.0195 mo
193.676 18.585 193.322 18.2324 192.889 18.2324 cv
192.453 18.2324 192.102 18.585 192.102 19.0195 cv
192.102 19.4546 192.453 19.8071 192.889 19.8071 cv
193.322 19.8071 193.676 19.4546 193.676 19.0195 cv
f
195.715 21.2998 mo
195.715 20.8652 195.363 20.5122 194.928 20.5122 cv
194.494 20.5122 194.141 20.8652 194.141 21.2998 cv
194.141 21.7344 194.494 22.0874 194.928 22.0874 cv
195.363 22.0874 195.715 21.7344 195.715 21.2998 cv
f
197.635 19.1396 mo
197.635 18.7051 197.283 18.3525 196.848 18.3525 cv
196.414 18.3525 196.061 18.7051 196.061 19.1396 cv
196.061 19.5747 196.414 19.9272 196.848 19.9272 cv
197.283 19.9272 197.635 19.5747 197.635 19.1396 cv
f
199.436 20.6997 mo
199.436 20.2651 199.082 19.9121 198.648 19.9121 cv
198.213 19.9121 197.861 20.2651 197.861 20.6997 cv
197.861 21.1343 198.213 21.4873 198.648 21.4873 cv
199.082 21.4873 199.436 21.1343 199.436 20.6997 cv
f
201.355 21.0596 mo
201.355 20.625 201.002 20.2725 200.568 20.2725 cv
200.133 20.2725 199.781 20.625 199.781 21.0596 cv
199.781 21.4946 200.133 21.8472 200.568 21.8472 cv
201.002 21.8472 201.355 21.4946 201.355 21.0596 cv
f
203.275 21.7798 mo
203.275 21.3452 202.924 20.9922 202.488 20.9922 cv
202.053 20.9922 201.701 21.3452 201.701 21.7798 cv
201.701 22.2144 202.053 22.5674 202.488 22.5674 cv
202.924 22.5674 203.275 22.2144 203.275 21.7798 cv
f
205.195 23.0996 mo
205.195 22.665 204.844 22.3125 204.408 22.3125 cv
203.973 22.3125 203.621 22.665 203.621 23.0996 cv
203.621 23.5347 203.973 23.8872 204.408 23.8872 cv
204.844 23.8872 205.195 23.5347 205.195 23.0996 cv
f
207.115 22.98 mo
207.115 22.5449 206.764 22.1924 206.328 22.1924 cv
205.893 22.1924 205.541 22.5449 205.541 22.98 cv
205.541 23.4146 205.893 23.7671 206.328 23.7671 cv
206.764 23.7671 207.115 23.4146 207.115 22.98 cv
f
209.035 22.3799 mo
209.035 21.9453 208.684 21.5923 208.248 21.5923 cv
207.814 21.5923 207.461 21.9453 207.461 22.3799 cv
207.461 22.8145 207.814 23.1675 208.248 23.1675 cv
208.684 23.1675 209.035 22.8145 209.035 22.3799 cv
f
210.955 22.6196 mo
210.955 22.1851 210.604 21.832 210.168 21.832 cv
209.734 21.832 209.381 22.1851 209.381 22.6196 cv
209.381 23.0547 209.734 23.4072 210.168 23.4072 cv
210.604 23.4072 210.955 23.0547 210.955 22.6196 cv
f
212.875 23.2197 mo
212.875 22.7852 212.523 22.4321 212.088 22.4321 cv
211.654 22.4321 211.301 22.7852 211.301 23.2197 cv
211.301 23.6543 211.654 24.0073 212.088 24.0073 cv
212.523 24.0073 212.875 23.6543 212.875 23.2197 cv
f
214.795 23.0996 mo
214.795 22.665 214.443 22.3125 214.008 22.3125 cv
213.574 22.3125 213.221 22.665 213.221 23.0996 cv
213.221 23.5347 213.574 23.8872 214.008 23.8872 cv
214.443 23.8872 214.795 23.5347 214.795 23.0996 cv
f
216.715 23.9399 mo
216.715 23.5049 216.363 23.1523 215.928 23.1523 cv
215.494 23.1523 215.141 23.5049 215.141 23.9399 cv
215.141 24.3745 215.494 24.7275 215.928 24.7275 cv
216.363 24.7275 216.715 24.3745 216.715 23.9399 cv
f
218.635 24.1797 mo
218.635 23.7451 218.283 23.3921 217.848 23.3921 cv
217.414 23.3921 217.061 23.7451 217.061 24.1797 cv
217.061 24.6143 217.414 24.9673 217.848 24.9673 cv
218.283 24.9673 218.635 24.6143 218.635 24.1797 cv
f
220.557 25.1396 mo
220.557 24.7051 220.203 24.3525 219.768 24.3525 cv
219.334 24.3525 218.98 24.7051 218.98 25.1396 cv
218.98 25.5747 219.334 25.9272 219.768 25.9272 cv
220.203 25.9272 220.557 25.5747 220.557 25.1396 cv
f
222.477 26.6997 mo
222.477 26.2651 222.123 25.9121 221.688 25.9121 cv
221.254 25.9121 220.9 26.2651 220.9 26.6997 cv
220.9 27.1343 221.254 27.4873 221.688 27.4873 cv
222.123 27.4873 222.477 27.1343 222.477 26.6997 cv
f
224.275 26.8198 mo
224.275 26.3853 223.924 26.0322 223.488 26.0322 cv
223.053 26.0322 222.701 26.3853 222.701 26.8198 cv
222.701 27.2544 223.053 27.6074 223.488 27.6074 cv
223.924 27.6074 224.275 27.2544 224.275 26.8198 cv
f
226.195 26.3398 mo
226.195 25.9053 225.844 25.5522 225.408 25.5522 cv
224.973 25.5522 224.621 25.9053 224.621 26.3398 cv
224.621 26.7744 224.973 27.1274 225.408 27.1274 cv
225.844 27.1274 226.195 26.7744 226.195 26.3398 cv
f
228.115 26.3398 mo
228.115 25.9053 227.764 25.5522 227.328 25.5522 cv
226.893 25.5522 226.541 25.9053 226.541 26.3398 cv
226.541 26.7744 226.893 27.1274 227.328 27.1274 cv
227.764 27.1274 228.115 26.7744 228.115 26.3398 cv
f
230.035 26.5796 mo
230.035 26.145 229.684 25.7925 229.248 25.7925 cv
228.814 25.7925 228.461 26.145 228.461 26.5796 cv
228.461 27.0146 228.814 27.3672 229.248 27.3672 cv
229.684 27.3672 230.035 27.0146 230.035 26.5796 cv
f
231.955 26.2197 mo
231.955 25.7852 231.604 25.4321 231.168 25.4321 cv
230.734 25.4321 230.381 25.7852 230.381 26.2197 cv
230.381 26.6543 230.734 27.0073 231.168 27.0073 cv
231.604 27.0073 231.955 26.6543 231.955 26.2197 cv
f
0.125 lw
[0.5 1 ] 0 dsh
131.888 149.149 mo
132.138 148.7 li
132.388 148.2 li
132.588 147.7 li
132.838 147.2 li
133.088 146.7 li
133.338 146.149 li
133.588 145.649 li
133.788 145.1 li
134.038 144.55 li
134.288 143.95 li
134.538 143.399 li
134.738 142.8 li
134.988 142.2 li
135.238 141.6 li
135.488 140.95 li
135.738 140.3 li
135.938 139.649 li
136.188 138.95 li
136.438 138.3 li
136.688 137.6 li
136.938 136.85 li
137.139 136.149 li
137.389 135.399 li
137.639 134.649 li
137.889 133.85 li
138.088 133.05 li
138.338 132.25 li
138.588 131.399 li
138.838 130.6 li
139.088 129.7 li
139.289 128.85 li
139.539 127.95 li
139.789 127 li
140.039 126.05 li
140.238 125.1 li
140.488 124.1 li
140.738 123.1 li
140.988 122.1 li
141.238 121.05 li
141.438 119.95 li
141.688 118.85 li
141.938 117.75 li
142.188 116.6 li
142.438 115.399 li
142.639 114.2 li
142.889 113 li
143.139 111.75 li
143.389 110.45 li
143.588 109.149 li
143.838 107.8 li
144.088 106.45 li
144.338 105.05 li
144.588 103.6 li
144.789 102.149 li
145.039 100.649 li
145.289 99.0996 li
145.539 97.5498 li
145.789 95.9502 li
145.988 94.2998 li
146.238 92.5996 li
146.488 90.8999 li
146.738 89.0996 li
146.938 87.2998 li
147.188 85.4497 li
147.438 83.5996 li
147.688 81.6499 li
147.938 79.6499 li
148.139 77.6499 li
148.389 75.5498 li
148.639 73.4497 li
148.889 71.25 li
149.088 69.0498 li
149.338 66.75 li
149.588 64.3999 li
149.838 62 li
150.088 59.5498 li
150.289 57.0498 li
150.539 54.4497 li
150.789 51.8496 li
151.039 49.0996 li
151.289 46.3496 li
151.488 43.5 li
151.738 40.5996 li
151.988 37.5996 li
152.238 34.5498 li
152.438 31.3999 li
152.688 28.1997 li
152.938 24.8999 li
153.188 21.5 li
153.438 18 li
153.639 14.4497 li
153.889 10.7998 li
154.139 7.0498 li
154.389 3.19971 li
154.537 0.25 li
107.038 169.149 mo
107.238 169.1 li
107.488 169.05 li
107.738 169 li
107.988 168.95 li
108.188 168.85 li
108.438 168.8 li
108.688 168.75 li
108.938 168.7 li
109.188 168.649 li
109.388 168.55 li
109.638 168.5 li
109.888 168.45 li
110.138 168.35 li
110.388 168.3 li
110.588 168.25 li
110.838 168.149 li
111.088 168.1 li
111.338 168 li
111.538 167.949 li
111.788 167.85 li
112.038 167.75 li
112.288 167.7 li
112.538 167.6 li
112.738 167.5 li
112.988 167.45 li
113.238 167.35 li
113.488 167.25 li
113.688 167.149 li
113.938 167.05 li
114.188 166.95 li
114.438 166.85 li
114.688 166.75 li
114.888 166.649 li
115.138 166.55 li
115.388 166.45 li
115.638 166.3 li
115.888 166.2 li
116.088 166.1 li
116.338 165.95 li
116.588 165.85 li
116.838 165.7 li
117.038 165.6 li
117.288 165.45 li
117.538 165.3 li
117.788 165.2 li
118.039 165.05 li
118.238 164.899 li
118.488 164.75 li
118.738 164.6 li
118.988 164.45 li
119.238 164.3 li
119.438 164.149 li
119.688 163.95 li
119.938 163.8 li
120.188 163.649 li
120.388 163.45 li
120.638 163.3 li
120.888 163.1 li
121.138 162.899 li
121.388 162.75 li
121.588 162.55 li
121.838 162.35 li
122.088 162.149 li
122.338 161.95 li
122.539 161.75 li
122.789 161.5 li
123.039 161.3 li
123.289 161.1 li
123.539 160.85 li
123.738 160.6 li
123.988 160.399 li
124.238 160.149 li
124.488 159.899 li
124.738 159.649 li
124.938 159.399 li
125.188 159.149 li
125.438 158.85 li
125.688 158.6 li
125.888 158.3 li
126.138 158.05 li
126.388 157.75 li
126.638 157.45 li
126.888 157.149 li
127.088 156.85 li
127.338 156.5 li
127.588 156.2 li
127.838 155.85 li
128.088 155.55 li
128.289 155.2 li
128.539 154.85 li
128.789 154.5 li
129.039 154.149 li
129.238 153.75 li
129.488 153.399 li
129.738 153 li
129.988 152.6 li
130.238 152.2 li
130.438 151.8 li
130.688 151.399 li
130.938 150.95 li
131.188 150.5 li
131.388 150.05 li
131.638 149.6 li
131.888 149.149 li
82.1382 170.85 mo
82.3882 170.85 li
82.6382 170.85 li
82.8384 170.85 li
83.0884 170.85 li
83.3384 170.85 li
83.5884 170.85 li
83.8384 170.85 li
84.0381 170.85 li
84.2881 170.85 li
84.5381 170.85 li
84.7881 170.8 li
84.9883 170.8 li
85.2383 170.8 li
85.4883 170.8 li
85.7383 170.8 li
85.9883 170.8 li
86.188 170.8 li
86.438 170.8 li
86.688 170.8 li
86.9385 170.8 li
87.1382 170.8 li
87.3882 170.8 li
87.6382 170.8 li
87.8882 170.75 li
88.1382 170.75 li
88.3384 170.75 li
88.5884 170.75 li
88.8384 170.75 li
89.0884 170.75 li
89.3384 170.75 li
89.5381 170.75 li
89.7881 170.75 li
90.0381 170.7 li
90.2881 170.7 li
90.4883 170.7 li
90.7383 170.7 li
90.9883 170.7 li
91.2383 170.7 li
91.4883 170.7 li
91.6885 170.649 li
91.9385 170.649 li
92.1885 170.649 li
92.4385 170.649 li
92.6885 170.649 li
92.8882 170.649 li
93.1382 170.6 li
93.3882 170.6 li
93.6382 170.6 li
93.8384 170.6 li
94.0884 170.6 li
94.3384 170.55 li
94.5884 170.55 li
94.8384 170.55 li
95.0386 170.55 li
95.2886 170.5 li
95.5386 170.5 li
95.7886 170.5 li
95.9883 170.45 li
96.2383 170.45 li
96.4883 170.45 li
96.7383 170.45 li
96.9883 170.399 li
97.1885 170.399 li
97.4385 170.399 li
97.6885 170.35 li
97.9385 170.35 li
98.1885 170.35 li
98.3882 170.3 li
98.6382 170.3 li
98.8882 170.25 li
99.1382 170.25 li
99.3384 170.199 li
99.5884 170.199 li
99.8384 170.199 li
100.088 170.149 li
100.338 170.149 li
100.539 170.1 li
100.789 170.1 li
101.039 170.05 li
101.289 170.05 li
101.539 170 li
101.738 170 li
101.988 169.949 li
102.238 169.899 li
102.488 169.899 li
102.688 169.85 li
102.938 169.85 li
103.188 169.8 li
103.438 169.75 li
103.688 169.699 li
103.888 169.699 li
104.138 169.649 li
104.388 169.6 li
104.638 169.6 li
104.838 169.55 li
105.088 169.499 li
105.338 169.449 li
105.588 169.399 li
105.838 169.35 li
106.039 169.3 li
106.289 169.3 li
106.539 169.249 li
106.789 169.199 li
107.039 169.149 li
57.2881 170.899 mo
57.4883 170.899 li
57.7383 170.899 li
57.9883 170.899 li
58.2383 170.899 li
58.438 170.899 li
58.688 170.899 li
58.938 170.899 li
59.188 170.899 li
59.438 170.899 li
59.6382 170.899 li
59.8882 170.899 li
60.1382 170.899 li
60.3882 170.899 li
60.5884 170.899 li
60.8384 170.899 li
61.0884 170.899 li
61.3384 170.899 li
61.5884 170.899 li
61.7881 170.899 li
62.0381 170.899 li
62.2881 170.899 li
62.5381 170.899 li
62.7881 170.899 li
62.9883 170.899 li
63.2383 170.899 li
63.4883 170.899 li
63.7383 170.899 li
63.9385 170.899 li
64.1885 170.899 li
64.4385 170.899 li
64.6885 170.899 li
64.9385 170.899 li
65.1382 170.899 li
65.3882 170.899 li
65.6382 170.899 li
65.8882 170.899 li
66.1382 170.899 li
66.3384 170.899 li
66.5884 170.899 li
66.8384 170.899 li
67.0884 170.899 li
67.2881 170.899 li
67.5381 170.899 li
67.7881 170.899 li
68.0381 170.899 li
68.2881 170.899 li
68.4883 170.899 li
68.7383 170.899 li
68.9883 170.899 li
69.2383 170.899 li
69.4385 170.899 li
69.6885 170.899 li
69.9385 170.899 li
70.1885 170.899 li
70.4385 170.899 li
70.6382 170.899 li
70.8882 170.899 li
71.1382 170.899 li
71.3882 170.899 li
71.6382 170.899 li
71.8384 170.899 li
72.0884 170.899 li
72.3384 170.899 li
72.5884 170.899 li
72.7886 170.899 li
73.0386 170.899 li
73.2886 170.899 li
73.5386 170.899 li
73.7886 170.899 li
73.9883 170.899 li
74.2383 170.899 li
74.4883 170.899 li
74.7383 170.899 li
74.9883 170.899 li
75.1885 170.899 li
75.4385 170.899 li
75.6885 170.899 li
75.9385 170.899 li
76.1382 170.899 li
76.3882 170.899 li
76.6382 170.899 li
76.8882 170.899 li
77.1382 170.899 li
77.3384 170.899 li
77.5884 170.899 li
77.8384 170.899 li
78.0884 170.899 li
78.2886 170.899 li
78.5386 170.85 li
78.7886 170.85 li
79.0386 170.85 li
79.2886 170.85 li
79.4883 170.85 li
79.7383 170.85 li
79.9883 170.85 li
80.2383 170.85 li
80.4883 170.85 li
80.6885 170.85 li
80.9385 170.85 li
81.1885 170.85 li
81.4385 170.85 li
81.6387 170.85 li
81.8887 170.85 li
82.1387 170.85 li
32.3882 170.899 mo
32.6382 170.899 li
32.8882 170.899 li
33.0884 170.899 li
33.3384 170.899 li
33.5884 170.899 li
33.8384 170.899 li
34.0381 170.899 li
34.2881 170.899 li
34.5381 170.899 li
34.7881 170.899 li
35.0381 170.899 li
35.2383 170.899 li
35.4883 170.899 li
35.7383 170.899 li
35.9883 170.899 li
36.2383 170.899 li
36.438 170.899 li
36.688 170.899 li
36.938 170.899 li
37.188 170.899 li
37.3882 170.899 li
37.6382 170.899 li
37.8882 170.899 li
38.1382 170.899 li
38.3882 170.899 li
38.5884 170.899 li
38.8384 170.899 li
39.0884 170.899 li
39.3384 170.899 li
39.5884 170.899 li
39.7881 170.899 li
40.0381 170.899 li
40.2881 170.899 li
40.5381 170.899 li
40.7383 170.899 li
40.9883 170.899 li
41.2383 170.899 li
41.4883 170.899 li
41.7383 170.899 li
41.9385 170.899 li
42.1885 170.899 li
42.4385 170.899 li
42.6885 170.899 li
42.8882 170.899 li
43.1382 170.899 li
43.3882 170.899 li
43.6382 170.899 li
43.8882 170.899 li
44.0884 170.899 li
44.3384 170.899 li
44.5884 170.899 li
44.8384 170.899 li
45.0884 170.899 li
45.2881 170.899 li
45.5386 170.899 li
45.7886 170.899 li
46.0386 170.899 li
46.2383 170.899 li
46.4883 170.899 li
46.7383 170.899 li
46.9883 170.899 li
47.2383 170.899 li
47.4385 170.899 li
47.6885 170.899 li
47.9385 170.899 li
48.1885 170.899 li
48.4385 170.899 li
48.6382 170.899 li
48.8882 170.899 li
49.1382 170.899 li
49.3882 170.899 li
49.5884 170.899 li
49.8384 170.899 li
50.0884 170.899 li
50.3384 170.899 li
50.5884 170.899 li
50.7886 170.899 li
51.0386 170.899 li
51.2886 170.899 li
51.5386 170.899 li
51.7383 170.899 li
51.9883 170.899 li
52.2383 170.899 li
52.4883 170.899 li
52.7383 170.899 li
52.9385 170.899 li
53.1885 170.899 li
53.4385 170.899 li
53.6885 170.899 li
53.9385 170.899 li
54.1382 170.899 li
54.3882 170.899 li
54.6382 170.899 li
54.8887 170.899 li
55.0884 170.899 li
55.3384 170.899 li
55.5884 170.899 li
55.8384 170.899 li
56.0884 170.899 li
56.2886 170.899 li
56.5386 170.899 li
56.7886 170.899 li
57.0386 170.899 li
57.2886 170.899 li
@
0.5 lw
[] 0 dsh
32.3882 0.25 mo
32.3882 170.899 li
271.338 170.899 li
271.338 0.25 li
32.3882 0.25 li
32.3882 0.25 li
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/DVPWER+Helvetica*1 uf/DVPWER+Helvetica uf/Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Manoj Bhatt) ()%%Title: (newsboy.eps)%%CreationDate: 10/4/10 2:23 PM%AI9_DataStream%Gb"-6#?s!pc2`1j5lLid!pQ,9:'p.c6LUJ,":1g:.=66aYJ6AdT(,LOG`qR$k<AXrB7XSUQ7Yb8,YOHL<u=X.X\Snk0_d`A,,U#.%.?e(pa/,&G7eHJ'[Ea&ECt9r%9W&N%TbpM";]2ESC!`CDgAT.XB[CRVa2L>g0H+S*$Je2CRsA6VoI&kg>.aZ5HdZUdQq%tAiNV'N%[q;,jpCf3F::FLHN-^K*8gZ%'GG=_-R!-'Cj([ta4j'qGKd;$t^L5\qj2OSN]7U&0?gm`Yh.`p<MFQ*5mJ"uf0g&"?i4gr!P6m[*%!XuCa*o.jB1Wcd*d8W4Q8Eb7QQ&a$3r^05Pe*)jO+D-erMZ;YJrQuKY7ZBuPd!lB6Ya=b6YhPPP0a;24),73RR0<H;r`33s.2"b<%AIqlTRJ9B('dq<aoX=eb[/Z=q3GLB4rQ/IF8Z$jgBbEPi8!AkVJ'lK(U9p*+8EAOsBt$7:l?<65po=gKm:aj]GEoB$]9R79E$4*=%7.mHK)I,0i+70@YMa;OoF3Le_"bAd&X&*a4diK)(!e?JC]72iN`hSMa#X>:f$?[\QEZ4m*Y=M7?I6q%%e3j:n/22;jhPT,+d(5aA%Pr]e*5!&WnH@mbUFjt,>X-\uMdc:WSI5K4HT:u:K!M[,"-LJN&?pmc/,HW%RL`Th5!10=6_YT6%6Bimp=#-^q1mA&Fl[GffBqTBu%KFgWVqtE_AT*\>ZJH!YGr(JHrB-m^FMadKE/AlC/L8V<c:M#qVX]44qnl@LPXcc9NPY=EEA.i&lPEcLB1R!AJR1-IETRZHS-3LA*%)/'2'_,"`E/4-CH&`,&SiCU9[D(69F>,`d2n91W0cRTb$%N-u=0,Y:O8=m\foXQN"I..eQ_49F2[":<cR?D2:,PVR^?q0W!k"RQr%hM!u+:\Y&KJtLC'_%Z&NAct>,hXDJuKfK0-JkZ:g>/@l0-a]jPi&eM60QMbTJjk8;pds<f1FJqF@jbb2csc!WNG&^j%pHgIi$\.b%<fkOo4<l?\^S)CdO011Q$@*HM#=%/\b`8bhr$3MBDr<"MK)*5YZAO<-#[RgbJ4OAS7S`3'Xr/*!_)eqIGb]L,1FJrQOcsbs\>3cK%?DIc'#AmjlPVQZjn2?[lGma.qT?rJB2p@?@KY.[WTaf5kj.hi5H&#df5TnQNBpd<UV)B/NTbKg$PV;6h'"jFU&ZcYU"E,u7\fu66%AF.[#679I1pW7LIO,TTJ-D>%WjodW=LC4#NkZ?efnrCa\\Q.Z@MC4DW$$B1XfB<b%enBk[]!f`qbM#"mLaXV/D%.G+XE;)h0'S_8%.>e3+#JZ*p'U=027%S),ahN(jI+Eb1Ii_r@6,(`qPCKPGq5jNAs3bWP3M!%Oe&oFQSikDLPCJ8fq5jNAs#e"nM0u)s-ND5"nlbia%rX%jS,0s]bi$VZ/nsOqN^X;tTGVPegPi.IQPY\2Lq/eqiTB#EBWW`?)rC6[K6OW9?l7mkh.VjN\I,pLE)e:5,YS32K(mI%G/!YKC%*Nu-F`B='(.>\B%>=Qq:-%ZBsSQ(%GBtt+8Ll;[e6PN[de&m#/V-OH,/k`0sPfSsVB`2>kC%tBYL7drnIc&e=!Z1'h5XTL%D*9Rh%;/(sOK3J`E002`'1dNf_r[0iWYY.kt%o"Nfn)NlYk`l`.UW?9%P7^HNE>2:_^/<KdR2LD_Dj-I,GcqrRO<Ms`140`)4"LRI[:h^9%Pb+'AV\HIjVWk+WatS>/&a5ad4.3S3:Jmed;<]`"H;^G/Uj"qAAN]H&R1DED;?Ue)+$A.g!M2S].7H_/bVDWFUVFsqMTGu2V&KK&%oEcKEs,jkNFel^o/5;i['4cKXRKS4(TGG>+6?*`_*Yi8+EPj9E8KWTed(D/V%4Gg&C7V%`8VV.;V%tIqMF3]).7I.K6uNhLA&*0i%DpssUg4M=l"_mG4=1Xj1-d"effJAb3.@`]gL;HE\*`o9F@>NnTi<<(*]ZlImd&PMP7Fr"C!P8o[U;CV"O\A#cA41g0RV2W?4B<dK%!4/Pc6\/Q?-oT!4L.VUa4E<MU"a\Zq.],7YPCu?f*7#J#:tFc%Ah+Vh:mFm,3!IqcjXP;KU5(%k#sG&,).ahm,R-<-Qr9_R8X=m)%.G^,Sl0)5T%8>rPk6[[j%-*c:<JjOcGbc<4V[0E0PRP'%,\DqXLe8!uSacZ:P_]9IjHKk"I\`-XHI01kLm5Fr13hl*Q:io3Pd-1I%ckT6p$&9uAAVF>D/E[Tt&QPeskR<M8:]AeP6VqqeKnbi$27bY9FZT@%_`nHED1i>V'(SUn\IrMSLF\[LZ3!#3j%IE-9I*.nR(HAd%1=1B2oM903Y8G9Y.++SbQ";G3.H;cHO9p%0Np+PAhSPGM5kYVlf:gS`7/@Kf,/5RfOh"UkGRA+O8)^0L00pkI6L-(c:J7FTi*RbC%CKsSQ6%3;R9bRq4:0)Q81gP$m9m,"iEg^;QhSp13BhS+/b$>.ZFLE$5)3(+bWG%Aqb*iZ*J#)CuaClOuc]LCp_(/>_AJWg216h4r%gBR)>FKY6VB.,H&jUJ%"V-gl:!$k5mR8fUF(jSHH6FZQbPUVhrBp#(:6JFkm1$!JgOud?KY,"Z[]\XC/ZbiZ:'U:&7>To?Jnh?UZ%_HJ!+!Ud-bA;OVW+Z_K362)h$%)@_.$OR'FpGasm,hZ\k:8Nn06cMRe2;fEB$;((SMg:RcbKPq9U`[II.Q1^1)$ObEUHXON-%(o:%PL6%K(KoVDG"g>Mi/@"KRLUUAEfIf,;G0o?b&TZ$#lo27rlrYcgI8A0:2:]DUJlN!/!QKrj!)()-IpaSN6X`f4&+rZYUQKX2iLo`%h-i13OQ$CO9jM&Dk+V+5<;/QkO-E]p"e`>'HFsg6L=,mSKVFX:_X>U39*f]_'Tld;O.EhY@:72FH+Cl[[2I,te.///Og1&)<mrl_%8O/uK4).2;6*tbXl]%mX5hCYAd5+a[A&kBB*T8`QHQot6L;,8*hSDf"L;+V."ES8pAnfU5<U$5t+^$OoFdpT<WM_Kd[gX&afj_PI%b!pW?^W9`alAE/1`pLsU&r&r).Q>K7!OYHIFluN!\q83?;n,N/b:lY'#dn>-^'S-YBe?ZS%<3]NB1.<RQoK^uC7"70I(Yetp.Vtk%fnh1>4&QqJq-W*,Q-Yh'X,OS7_,)8^D^;?Bl7Gd\V9&_sXWa,jr]Oa';SA;uC_at4K9<L8AYfmEqA!?CU$%)`$)2\nZ`2;7<0OSu%rL2Ok<K!+,kL:EDqMqT79$I;jE%OUbWY[(j2PWe-ZiS(G;Ith\"P(+MI5=8m=0+5Jj&Vt8XQ^#o[ZoCg'*"_R'e;XS$*%+S##0[-%/QEH^2#F(WI]>9Gd^S(*@Q@NUNU18WefuuZ)RbEDlc"ldYHJ]50IX[S2(>O3<)g%/d8L^G[]rl*d.CR[jS4R<QW!T#W(#3ZJMNXG%VRNOj9S.5PSf/?i!H=$9-T9EZo%Mk64&OBG<55*%dshWVZ4]LWO(H1jAAqZoK)15/rEl>OFBi+tN4Sm:lP(-l.t_e*g$u&]6Tn2%%7^&;j`at*0Q_q3Sb'+`SUP&9'32J^&-g:Tq]JT%LC>+_`J!X,A"<NbHf:mT%k%.IN1p6Eu@.0JFh_\Q9_Us_0\0;qC/-dT8M.E>4%QW2'^C\tFngLuEV)1nXki@"1:h+PuTW_"lba/Qcl8o(GSb%P]"MX2*WqOWt;/?A*-B@dIY^Ib_H1&KFY?A$j6*Ac5ZaSJ^B=lV3\%haT>r>OMu9EDefuk]V5`oJ5rMaOkQ!<^G4(.#f+S/#-di).JT3YR(gO0<;Ngj-c,hSt^Q=_.m4#.n6e;k:bgBA%>Y%0842_*h$!?%96a5^1\-I*<ebA7<(`>"=R/PjjK^UJ9kp$!]*Q#q<j3Z%YPL%Xh+`H;goD),0(^&!`D8o_G>N*A;("Smo,JE*>1IeQ%]8XN\EEE6%NsKiO'NJkMEZ2bSk+oMT<1pmUhN7Cm,Z.i%UZ"gj,3VLt==`+<WLc@49sUq'rbITP<,YL;4?c+aWEJ!X9kla,oj&tD0qn>(Z2Rao%h^P=.Rs:KG\qB"EPR1D&?V>dtH^mrE/+Ah*fOJ#N0mJXW=Hl1<EKi>!+$D9.h-ZB;`5ek0D2aKHp)jMd'oI(DB5@--]pa7]#9FIl%$^)/Ul2r9/(^AfZQ-8]TC0a]:;Ih8N</,,n(("VNBO\j"K++S[kc1NVDFW0diYla!hs%Y%'.\1^dW5G_(3VnY.7^XYXiPc3LW,u7%j-=njg`Y!N'ZsAH86O!>77s+QVIg,$BU$TbN:K'UmZK?m8b9.MXW91B)-S\TQINo_F_&5d2<h/Fmj]'@rQe"Q_uJHFqYlo6N/XV1%(psZ-gONI.6s%r_1/4sMq\,e08YE@XdA`Af'l6NYT<3Pm*YWh-#Aqf8/1\<sFNrb2FI[&F<b\q>ftQb<%CfnD;g&*jnkm<5iOA)$%Z>?4MC%f5L$X13FE?F#E79S050oplTR>s)L7;[0Gl=gBpCV2H\7%P%;6!hr1M12/3:N2h*XC<XsZkh0[J7PprHP)l(i1,agSlCjO%24]8$<1:InVZLCQ<rB2EksJ]f<[:&;6+,KWJ_DB,muC"H#(r?I8eq[H1ic_kiQ)9r8gu,5apd5^`G_Ho2lTt3j=/MU;afWmG)D&,%Y0A=o-G)WO3N)A3q^i)9,_$O64U>I:e)8?sd@`Sr+OAQPnWSn)A30?FGiVQbcZCjTO$!<$DL3[nN.$X'J$gF.1R;s%g*?6#*6XDi%j&iS>DKWPH7]bBY:+,G]nYFWN[::SkR4!0S^<n&t)S!7YUY-MBVnMhBqsRWSCI?rsi6Ih!o/;'H'5Ne5gWZ^8p!jQ:^-gUrQo5tm%9cnTJM%*#1!GOW'g()W@"#?)iBf[P7Vcm"pCoXp\2*O4XUK@m5Yhb<s&\_c88UJs@=cD*0Lt[j%9tT6T,W9It!!C-b(j_t/kdTE[%#YQB^_i/nW`L;G<5GQNEk9Mr'2-TBRA+Ucd@o1!1qh%J@r>s.K@jg;SA,PRg^D_9nj'JWJeJcims0V[.hUM>.B;Q^J4W(T`gSh/J%^C>\e)WTte$Qj&7#5VYWrb'q+_^&H=s7Bgg^RO%K&-%KbX4(m,d0o5Dn(e"Jgt?+`9[QbIH\4o!rBAUm&PTRDh9HRD4ruVNm9#r2%7U@5rj]=H#!#k+2d#_`(*r^j")5.mk8jAD$nL*^Nnn"ln<sK"!7@K,*48#fO;1kr`Grcl%O^_'_a,N=BmQ@cK%[sUg*XHe&Lu8\F%5Tk<R2*QA&N8*UtnH[Qcni<(t&W(aAH%n`1bhm\4).dr0AV-A!o)1aFY5;t/IF@>41cf(AU[pYm/ZqX&/%1otnu)^B2'-sNbhHYO%HB%%mk^Cr-bo0=#&;6kd7se^;e,DjI2!oE)dg>$O6,3@=CGsOdT$&mL6r+f8>`P_qG';sa4XBRm=A5"WblK([A63*eC]u/(i?>(H%*Rbpg;"r.[dLhXj[%!>.C[fohr+F[U4GZR+iSbM+--$QLg4,uZ0)CZgFo(Q_(FK/9*!Z#T%?Q*V2df)5K1AUn^hAPO-_3`9eTlY*%To&D\IR7j1)RQA9,R-<.`sE#.e9s@k46a.;)Clj`PDCBb#GtW91T=JdLgKj\)+>km/%*!Q`el%]'hUn7p>:&nUV.kj"_c[[[/4n6%:[`/II>O*D8m27`H@k)E"l](f/I7$cH]EmN,lMc;SYAX)d9o#jn%TAqIZ0\[e&LHiV9hYY2%H]9hiWsMj:1`u^%5<pHl$XAL&p'.%/k;!knZd-*p4Xb:H<L&1qs._FRC&MH\nFDW_.]Z!RZ9U6/dI$33^3KeFdU>'pfhG3msoD8?g+-S$)V>Y.1M5tntX=A%LQrf%08Wi%2tpWpTNqb?c(1^L!0cRq,kB._YY)AZC2<:uO7Y@9=^o\EN-cI#1>eURjCrel(]PVCU?C<9WVo!tobb'pDp/*og>0T,)5R*<g6,KS%)Pa!3f<@q>@^Zi'@"-\R39Uep^MW)lZS?:ViD)Qe\E*l!)0[%u`b5O*YBC63#LP2fB6o\.^/I*fJD=d+?R0)6'4&A7+\s4$D"8+j%*^$^F515)QLQsEZ6[sX+(-?F+g+-T-m%Vrr&t;'"<_h$A+!-jP-EQ#%K0C9J5JGKGs&k2^*3D=c#qIV"mHloOGDgPF1@ZsB$JHNW%d;K\c/#"0a&mXsni(C`c2j+([YaJi!S,=;$9)];p-%C]GP4J'lNW0L@`:&4NrXRT1mst?W.@'fO.@'`M.@'`M.@'`M.@'`M.@'`M%.@'`M.@'`M.@'`M.@'`M.@'`M.@'lQ.@'lQ.@'lQ.@'lQ.@'lQ.@'lQ.@'lQ.@'lQ.@'lQ.@'lQ.@']L.@']L.@']L^<QQche%=m%D_o/G\!c.4gW][Xh`d]O)q469aT4*kmi24Z\otf3l]?I`U;]*s^U2d7C#2`XQg8@\gR_*mGdOAe4Ms!^%gJdLHY+l>4)K:=$S$N2%`f712Nk/__4Yo7V?ll5O.$-s;`=Lf&5K_TV,K#i`SL\3HpR.0-OI$g_N+`2TFmuYZA+U<-I!\gW*jjXu&%>U;J+pO&oJk9d9LbS^%l(gHP+OWSNo:o1Cs/(]#oZsmZIWi<);7fWX81UrnKGjG3r0[Ba#8ZgY^X4.<r7)XD[h)VH9]0_kht4*AG=pW,pLB,)IDh8DR50r1%maM1aG*&M8F!.>ABR[Ep4IDfo_nS::[gp-=;<4)`,*%TTj;:\0H%'Sq,q].KQk4*h_);6fj/q(u+ah=1rEj%+lsJPL%S_G@U1&Am%l$+uIrN7FC3BGBE)kcQ5SqgF,QQ1LF0@3i#776nN!ger)s77o#NIR?*`naD]IpEg_.HU-\fQk*V[@Z]63j$LOcO)03Iocc2)(@%n%;Sm-KT5=i_jd?m$q9/A%#u4FqRu7`*HQqb:gCCRcLM&OFr:Xrg+=R^'2Ucmi9TV//Dnf)hS^0F)RXO@+Yk)@eG;5JFRVdGGqQFi9%BS60K+nXKP7LNosMiK$gi&K:kMX,hK\sUM4jbKUSX#'.FBNLp\DsOF\BqdP#Du"fY>YuL]34EHf\U1tP=udV2a6h!+AoJ'@/b"*$%i(=5?BM@,1D\1]_K9YmU,ZN0Whp8AD[E"mik7,Mikkl6DPaJ/tG5pAgG3rZu=ns31N6kN>FIf$t-UZD!^ADFb+X`L#JX7:MakNIC%C99>O^A/KUNLuqO@[^"\NW+1T5c`W:#7[BU=rDP`gZIi8_W2I$#q7L'XkQGVGfQ\!\fFY7JE(%fQD/7?0H#iKC9LmNs.6<V>Fe@G%XjcZ2r_Z`kl#N)UlAbe`[.2OM3?8OmdMW5!S>7YqCp[@M9'A.PhhEkFLP(GW<MS;G6tV=Z>\huK.L8qd6*hQ1glgQ%a\O8dQ"">3%4L6eZ$kX/342#@;Ti$qcM*^76^`Z$IGuqOjKL&'+C,[LGgM`'hUYdoe/+s]GoT2bR1-p`ZCH7uF#2aP&&1neZ]:C)`1)PCgY<Z"9%T^VBiOHRE;YP)W8?;jke7r-]rN*>W"m,G1dNX$6RA!+`KJ"Uqndcod(%E:@7g.$ZKU.\ZUb@i-'f\,2k7@8<sRJ8d(nW_$1Ua[IG%fJQg6!kVVs_+%U0+WUa-*eM+_Ub`8ukLkYAjjOULl0)Y!JQmmeLR<O@MqQPb=3o"h_&<WdD,1kO\mWX;`>*+,N@`N5)-cs:P.-tE%l9Ka.6QX-7(t3T1(h2V[8Oq9m&tUl5DER/Q>GOb__ehgDq!G\Kf9H!_#0uhcYgl+%]7'*5%9qVY'CV7`L7"k%B,_>9UM'l^dR57<%O0@YUTSS#p).VEAUtK7WKOiu+W7%\:S8Hu5[f75X^Q7+_Ve2QUAhuFF)S@5`N]S?]L/(l+D2=PP9i7`-)\1^dh)7d8`qZYlkr"4h%9hCi%XBIL1]%J)mRtEm;^D#6qD2&BL<AFFV23Vk1N`siH#[#g^;:+eQae@%skeHt"g=Qc$#]*ipM[3/,#eQ()oTQW;?e/^+Ie:@L%8@M(B/0FoM(C1+WX3'rC>-^_4U98uFF)T8Z74\n"R.8-t%Xj-MUsjf83&DR/B=eXJZ$,`i(l`BoM]3k)[9JHV)#:tp=;;DfD&FM5%d@(d`8^$7X4?h>WR\R,KC6#aHW&\$#K\O_>]_<f$<d-NL+8"q;G;tV77Q#eqA(r:N8!3EG?*B<X1AgN6bJ/h[O\rXHrS=R:#EK]g%m1_"FWOQQPRb!KI\CNg'>,/?oHUT`Lj(;9**KR<G2g\E%r&/p%fZ?=ZiF)4JFTICQ@3\k7`)ZFR\oQ8K6RitZTj'%.rem80e&T8H%?]p&1!W\Ye6S\lMMFOL^Zb+$h8>MUFOJ.Z.<@DB/>40arN(RY4>I!Tt5LR`:E,2SgrNfB?FoDI'fa:OII\1aT=RH,LBkb!P[rim+%(5:*@qZ+,/4)DgGZ'fL.gA5%B<20ueh$g^eM_R<<>E,,3DO^@]fZn)A,`RQ7k!(cBNS?;e@lopL2Npm;ob:PH4C\X'EbL)Z^!d0D%U;GW#a@)WbQGg/TGksmB-(E**DYpV\f2g>6Fhg&CD:3?PTM>58]6T$>8%N3f^.hZ3q;7i42IC]jrh#/cgj*<Q/r)hsC8*IpVQV-l%X`J8[8TLX%fkq+K@FI\m_%"CB;o]>N;`B/%_s@")9_OK\^W@c5E9g!.:RtOTbs0[7Q,6b*o*r>WH.m9B9\`cPOPX0USCpQC-3jLp%N/PX(icd)Xc)653(Sls5dJ73<&C>7kh&.EcU2RBO68Q,%AMe9,i/rF\0]<t7[M^P*#&fSQDh1G"%SZC`>0ORoN(D>_2t[3*0GG.5%#i3sBSeuk$IKPDO?PN8/dtpsAL^SM<m3Z.<U"o<F9SeC_Jt^u_7#&IPq"@ik<Zdj2J)LW:EpdsG.(s8nhmKl`SOVjL\D(#U8thgI%jJUW0&7"saO)FDK5&[A;4nXQ+9$nU3g\(uZSNB%?Q1,OkBCW5`5!f?#IE-CVYIefu/Z4g,aklu>jL$a6h8hoUHRdNOg;VHQ\'_C&%YJ8p$Y=E7$I(1gnH$igVnN'rZCJE!K@dW\W%-CK:"b=6LcO;^eQ[c[,c`\7GhrbH`Zl[S!cnmAfrn9=??ee*3HH$oXh&6&'-tlYn%_nbsW%JcZp%(U@a;#Yc(aPjZtA)kKLo[h'$V?r]`a#?apqNm@0F13d/2FKZe'5_9Ta72Y<5u(3C]2e<SL-X7*\glTRXhCKjeLl1B%Y!aXD+-/lqj876Qf'/#&MdQ8,lGI9mYioB_0n0"&&"<WKqC'iEJL74sR+DbF`s6#07aJ?d%0elroXGH7],GkYAjFCPccLbRd+[nj%Wdg"ZH@.MiN<a>g>Kr?V;kU1VkI;g7Ti*l*1BZq4+gB(rp&6AD@ufLBh6Tq'5JAfV>4lcOL^,T"VEh1>kn4(%Y+.qbFME1uMLctg%IOj_cok*hUh5pe+_!INdn)T8,(dL@H!t?Z16<:KH:^!D.DAn$P'"sX*(!r;pdqA^/!pEr8RB!?HG[4FU"R'ppp"TmfD-cjR4dlK/%p-+Jf5256)TEkl*HWCRAr`S^?c%(PW]%L?sTZOUL5L]Lo3RIQWK2=S`5"/;lk.4a\AUO%.d[:tLTebgO=9@;<3b_Y)5QQ`D[OkJ)%f'^cpI!d16^15b2#\[sdA=Cd.MlZolMtd`H'7[_LcEZG#@*=Vg(#<-`GD5mB7L#O%R@2X?s.nY.>hfad;")*,%6uW^"`4%6r;:.1%oN=0<Sm7Wb4l!\7N$?H`'^3MuS3gIp2:m.3IMfNoq@FGqpFcR`5c9g(HM&GX!VQ4)Yh-af@gVe5I2r-k!kL$i5B#tY"0H2o4hb^H%pGceHf:0kSL*b39]RO_A$>;r>&+;Vr5g`gRYfHY.05iZ12[0'M[X)HjoK1g`4Knh^Qp[,9r1&h;ch/Qj3Xd4(1^3_*htepUY22;H%@iA1r`E30"*K;PHhZ,Ji__`ah?>)40h*aN7IuH-s.e^%\T\l01!N='5k9\Xt@Be2BY.pjkBhh%K_5%K)_m>kZ)=sD@Nm86`]s2RS%jl<&-!1i1;BO18)cmPp0&>kS]-J8L7<&t]8jf8^gN>d>-VQW2PB%rrh6U3/#"&P*WZ,d@TRhH;W#,&#`#FFTjW1:K"f3+cpV!jS+%P9p8EAnH?@5CVFS[Y"kLJ_/p<,'YpoLZkmeg+tka8t#X%l_ecE5@X=cfu9$S2X">YNC<6TaRZ<,hJS&3du0W2\\;-l:aJg.H:G^%%cS&XAT!hspek_@>h%/o;%*!sqpj1Hdm??f/QhAgclV,=bWIck`ij2moIf&\`E+8Wb1^Qfs;led"E:<I"lAp\)7jFc8f,qu2p!]E'%drh.Xa[a,>F;A@F[Ek$/g\6P[OS.)#DuY[I;i7hmJ,ImomH9Pn[cLGp^$kAm5E0#?)E&EGGG=P-ekZ[AGhi/[nZG!Y_3fK<-bEsc%G'7@TGd2Y]h$=`/o]aP4#%QN_UYTkbr66Ye]TQ+V=[!:39D+Ime#i5!L,&7HaI8@`0NJh4<O6U2B:9k6D,%@jc=Q6E//D\"2]c=?%XaP.cb(VH#dh2&g'`D#ph2=ucMj<&;8dk"jX!RZfl=+VZ`+324F`uUCL]gc%BK+#'lf@2A<SH4gN@5V_Y?g%V13;8WP;f`i8^*`A%n_m4Vf!1ulIhUM`[o7,0+Cr-'RfPsi5uoi/q[-Fo7hpVG(-n"eP<'4:=TH-^1^!%5Oh%VqL9fK;'m"$TrlPl;k5JTWK*&/u=eOO+%!!]IkqsfSe(;ZmTM#l>afN?UQN]0lU)O\`/TS_!F5PNM^!!R4E61>OL=$=p\8gA'W'\a*55a,tk3P9,(^4*6T],)EZeb,^q:p:oJ%5d<5MO:l4P%4e+7ej.^)LY(*B5p+KG(^,"&Sqkk2,)WZ@gkg$YPDb#q4.(r/V=5DIjuIb+MOGkD^_IS3Dp1!)VICk=AnpX=R/2"_%e_?h*R1o8p0s]1u[MpiSR30C=Yc+#eMAHVJGHPp!6>?Sl9;jN]+-TQp^Iho5QSE$'BL:X\:=7)kY]m!2$@jPO"uk-OBK\`:jC1oi%`AFhI*$fnqmDnYAhmueZD<f3j)P_lOr?4mWIPa1F6L;$ao"bj4-`bl+RX+\T$m&#M@st\\,*9eAmV^^Ur!4AR/;FB%4rI=2CceRQ%0mk:%iPu&dY>N;^_Os$S0-;*/Y$d2W3r[O:/SR,Rg&0q(Xi%a!r87f2%ebudY2JHB[Xsh2#Q/kbRUNPo_`jpG*leV.XIml=C1!IX%VoNG(/A'3Ih`%]oSOaSREZ^,!Vf?hkb+a!c(%q?fK6aO:=lS8tF,0Sc@e@LMAFT@fKhqMa2lINUAY\HdB?q`I1eShXI2<sh&?$(A%07)?Md1)h7c/Pl7QMA1&1jZ<PR;O5%IM>h&B6p_2)F'RbVeP,:>\mV`-1U-B'&$W%Fn)HmZ=c\MraLNFf>%UQ+cCo)LFS'^cO0:C%iJ+Z7-KJK^/4C>G&;G3aA1:eq6_/n`J03s?b9X`YX*9kCnb@>@A%,)Ir!Lj<*6%-[M*o@SP(uro5'&DjB1B%>XB%]Ul_m;crEWQZ%n(?%#8Q3N!W]E@Mb?/C/)ob)V.>Z:g9ZWs5qQfD!SG7m):F9uG)="0E83s\j4eY$LMTq+G9b(:lqi0,Nac^%AT7bM9X;5ES,XbF-%"X2:6W_Q_7\*.O+`F.Z*@b@!NT:\nlACgK:4gEn1$s6KTP%N;^%K:Xa'^_k,;"Tos(0NqHj0]q+Hduk%8FihAi>IlJ8k4YYEj"u7%EW&l(6FVPA.NS9[AXNFMCBa*eFWI_7#*5h1U95n;lUlYeXE55IZSRfJKOnUd>UIIdAR\>>"CoT_X:SQ;Oo.8XoqNk@2B1b3[:?1T%gLB4JO^lt>KK1,JEaEYVg57CFCAL)BI]f4%et$Jj`_a[Q\Ye#Iq!?6V%gR89>[bY]2eXi2`lf*pZ!aRKU:Iorn?Ia]-uM^@dt)ak%0GFcCjV`k?\'tpVeLd>2ikVN_bHS64WG3@dU\30Ale7=m*\t78R4U)T09$Nq5876p8U;;)9\]WPEb^!hS!hj-%V$hLX;L#4r5Wi=%2]\&*/^4L-,QWEP"Ws)EcQ`F]-N4Hup:`E4jkTOj&\l8]6^lh<T#RB4S8>!)$Vc'l*sbd#E`&PDhDbJig.MX2hXIeSaV"2A>e1Ym%lc31#J?8OoOMrubdp>%e/-Cfg#@ib4nS%"Vb]%=$Wu)0'`imuUd'L69LP0sd4?bRdQe/SCF^(W'f;L[EqE'IfKYo+j44*<^`i46B%PI$W[gqSYl"+*Ob#KCW6^#'(B_,P>N1)'6RbZ;o76CC'DV&=.=pL.b%!$;Y'kk@AVH-c?UD1-h%+,J4:f42k@?Sa2>!/f(RTNA"#%ZY)P@6bOu:!!'(J(As?-$EYn9]A]Hl%?bk%*=qU.Qp'3bTEl(S7Ymq-?(>8VL\a0\5q6"G`$\a6b2]h+FEPZ[g<Sl165h-pg+dDi%EsR<_R9./Xa]A8*'4R+EbAGU;)1>2>*PF(@NZB`X(65Cc[-]lcguqu:HtP?W&A]NB`A`Ru]82b%DD1h,DFZfjpA5kPQK:@Sn[Fsd%*K3[Hc?:NBb*C]hHq<3IPO3egY\L>M4B5Q'qU$7FEu^T50.R!!X`*'FlqT%;?9CELIV*dfp\UP&_J;7WFOcf9/Ioh6IY5?@?A5S+%e6ZhX]$R*#_5o0+H?EeC6"`KQ6Q_4B4prY<,!ib9af:u1&rgoXC`]nq%=P]"M$E9$ra,@6Y;d1nTp$FQkDE2jLX,0Sj+KdoRI2`T%fr90mM0>^eZpf3]XW"**Zfcc#B5rb4Oi*+C'R2IX3.&XCkTu\ckiGK"`A,gFfGJk=A9L^'h9hq,a)/o'b%i,1jr;(K?If-nokp^r%d8nu2ULj_RBdt"FKWN5W+D+J`f#OW"6C,c)eChK(,K%aea%'(7LRc'KZLd`_:_THt0[eVH,-&>Z(H)8FBX%+$_f&@UH:Ms>2PEW9%._2]4XBdC%<t4bjh$YAeI7a8uP%1c9/\WDA,e*IdR.XdaMh>"jj,^+BFXod[DejY@lo]rEA#A.qho3rG0'q"a<dtFf+W?@-?HBa:%5sKbn]id"g-'%kjIlB2:R(Y`;rGEI?F`-$l)YQMk<7L;QpbK-p.^PgI@4$$IErNQ+W2j&P$&_E8+g"PtM?rR<]gg,Gl(Y=Ef6AQ*%%sOeo^?p@41U5Lh(uo%E46'56jHgGpTA,p.!\6[`>h<.9P[c\DT"OEWFG@?I]%CmoDr]N1l##d%>CsQ:EapRgX^.&OO_]8is(uT7%"uKgCB2Z9E@^I`PbRf26CHSqkp#_g%L\9bR8D_?kra\aBR#OF3=#+A'Hu!jODP:N)4Fso;YG2AH8EQfVGYjnE@2GuE0EojflR?nu%6C0?lH@L08Q0p0S(ONDYTjAd'n%<<oFS6So+NKe16YE#WL[XY564TP(:b@;pp%Br(6YE#W7l+$Zc(S)1(XidRbsSd=%\8"PSX(k;%=:UmM#+\2kT^*T/ODP2mQ7]UK%\8&CNHo@4k*AGWkj1+hQjgT\Ep-12bbFKMj]jffp).sSkI1mk[a#$0)*/_MqA=JC9VB!ge\VgS%*tm_&U:j^EVA&IMl%*?f-l4bDO#'kQkioLmPCodBADHS8?Fl%pLH$Sd4:Up%]h+aIdD3Yf%!L$BLF7LON;ZYCEE^UO5=9C^56$>^%ODfT/p1^8FOR+bF2[5;YI9]/!nQac*M)/_g2GT*m@*=W.Q74S*jKLuQQ.$V<@jm/5_;7Vn$bMD_eF&9u0@M=,LT.fp"dt4#KOhR=%&eYk#X>d&T(R!TZ*8=TW^#"Hu2EF([JHMRaQtO6HLfef^@-)]^p7:G8Y_'2R7&/aPPB4n-MOE/`b37Alj@7*gP,V05l'q=c^rLbh%m*<%0aKdhLB&+_KUl(`'0L"g;s%\V+eHqQi<bPOCejk2%=^YtcT9J!JT>tRW@B?s4q=DBAnm?odrS!>a:O-,DIB92]Rrk!#Qs$bP%J_(Zu0/lMl_).""k>!WdH8%A2cTI97.4<+=1#Q7IFSl&(S_9j\O;N6Ac5`SDh-nMcB?'&CZMs`t@EeEp"D<Z2*5@]n5DDu^WGqb$%TJhDbMF54OlqVhoh9'[#QnN+0"a&[AP6gN?VmdlLiP=9'gHX9ED1C&D4;G!g)gg_I=NsN%(qnKq>rZ/MU)=5qp8#kLEDDd?>bTuY%D4\8ojtUKV89&_1I8aYnZI67B3-RB'Cg<T]K<s!2?paQgSf!D:K5Y"u8",rkIdK4.`Tk]A91n&bl/(AlO#,#td[R;'),]M'V<MJc%';%Wi/'$TqdDtrd\p(7)lp@1R6Xh6q3:Tt:E4C*#,[foJg3;kFYtJ[2O,VAejJ9uP+ZV9`@2H6fPWOqbATYL</^>B.oH"lq4nB[M%hVE20'[=\]Oce8%X/6IjY+jEl#BP3%An0a2kA2]i,D2j?DCunpe2uU]a:QP31(DJOf$W.qF.gIf/g1\Kd3I]1b0O;A,NJ:p@M8+X%F"FP*St';dAA2%7m-2HULRPjG=i\sh2]aq/b=J+,S!+[+$$3V\;hm7P*ZA9E-GFIpV[f/aT6G$8a]<+hS3_Mql!mEB`?KSM4JBP3%kIeB[mgU3W64EeinTl*_m"Mj9?0g\W"mi&IjBeQb)FF,p-7>c/MemLHS&*U5\7Oj@)?'Kg0m0Yii>h8->>dX)nG]0+kF<(')kjiF%5+ED?a(E7A1b07=Rk%^iFZu>GaiJMoiCNC+0dCShq/?N[m+`MNI6O2#Q2kOc>&$6khJ6s:[@AllDYDT311+j9d9?o"q2";J<r$5&%0p,NW0p*LZ$8#a3YIJ$c*I7[2Y]+nO#b_fB,c"p7QIf=0TCA"mgg"E"4W7=WT0JMIqQ[;pFWm.oB/YG(3bsM<F#j>26N%A\8GAQa%6hHpb2Dk+#'KMm+\2'd0e9U`,BmqtQFqpI)RF!S,C&p6BY`5&i0l7p(n?<cL)L?D7%2ej"Sdf>6=45F3Cl!GCZDIBc]#">aAV\S]%p9PA9G@l9il53!npI]A`.tN[[!$KCamVo]>fBH6,n]t)g;T2Z%Qk%^cWT#C/&h.0WWjisSfQ9F3DOW!/\B@FV=].`Sbu-;pDjHWM%HF'E+e/SC&TUf=k7?;B\)JEElJoeknJIN(?5V#[X[o`8B(ag9VUr))(.!O?*F/6Z]N0to3M5bG2A"O`b=tPsGa6C'<0GVm]Y$>]k%SCP?ggf-9,p2%G_m<MUg4M5[E7Dh""2POUQ7X1+;\JSW=7X4kWR;B]bUM-(@Ch!Nh3fHF*+Cq\/?=`7hLFG^UF\g;cj@ba'2D)Pf%"irp8g%#u;nF-pFP9S40#O6llp_TsMR?Fn^#.Qq\pqn'8T=oKef?\#H,VMB/,6sXB(E"nqq!/FTM-n,\4X_e/!;49'k=,.H"Z\C)%l@NmjL91<Lb<$Z&7Gip_=^?b[Hr\=$fEbJ_$J=Wu?*[Zk_U=>PBP:WH3&:Z:<6'a!g(.6+DYJ=rDI7Q)G43Hf\l0Yu$5f#XDH['X%g#ZZX/f:6r/s]\%n$B,&7:QZAPaYWcC.rf_ZNQ04]4719-WDk<Ym&M8gA6(jHF?FhF3(R)a3EbH,eJb;Y:Y;l/_Nq#>f*FVL0^Xi%BaJl<^=r6`!qktE74r^ug<M*qIf-[`&:rhhX(Q*[g?s7?lT;PmeUF.6[jR1f';#Wf.9e/F*BiNoMCA/Gpj7b_']r;]>$";T#eAK$%YU1_c%jg8,.eDfMJ-AuYE'(=;(0j;CSEb3!%*9?-<AH&?F/OmqS8N%IW03[=GKI1M8ogG.\<:nA2(,!(Jn>4RF^3fD7HCP_E'[./%d^b/Rs84'9pV:jrc`u%$s.HkH9+=6DGSQb7a70[snHG=^Q8B%pjijTCnFS=^RuYAsZ\3-UZWoP>%/_ldl--$enLZhlDK[/!&Dqc0%Rr#[H1ERDs`l9sH/2`pB$nX0"j^ut%h%6l^Cc\..H1>]3D+L,OD!SL#/"=i.cU-W!Q^LQ\Q:kj+gTt!?SXErcb=u)22P!u'Sa!fp%$Y@eTM,m?f/1[48Ce/f#=_]jcNMa)$CcXB6'`2=)RS@G'Ia/\*gh,$'FliUUf.!37X=Ke<auQfm/24NnCq?HObY^+%a4N/Ql-,/b%9^[I=0Up?=Qd2Brl@R]2B"<$GGBPR$9rI/kP"Xu"?TCV7SQQ3Kn]CB7e*/RW&i9<HQ^(9XVUAT;rnQ1K3b0WDV`_H8bZf'^6\`\l%LC7_CR7DJ:TFu=MU##d6T#P\G]`GXH)1X2<cC7AVpMu@ha"_Df?Zot'<kC'Yk$XUie9Z74I[K6HX#%r<Z8`RfKA'QI:F%.ue-\r2%k!0!?*;*Vu#K88%Aqsou0#u5^:.*HD!7&'Dg#.^VRI0J.KL+/KO01pKhB(C=bZ=apUai;;,9G/N>NThkBIHqnmM&:%;TTI)a!4b[%(oK]E$^\D6l;p"mdOfDc3/nod/TeI@RCcU9l',U9:RO:s8("urh$dcJQFX>uA?PDLShbN]h@"O@b`/7XSh$V)3k-)R%;InIQ.k<@%($/9'&+'ILq/Uc-e,kPQ;9:95iLI0.L.")GUa"?lj=F+d?gKGX=$dB;:Bmn1Ic3uITgOf=.g6iKpUS?mR]S9?f7-(UDU.;V2-q8Y%_6D<ia'2l[i]G='W[1,%U!Ar?%<^BoF13r;4urg)o4:)iN6/ah?3SW'K!%RQT)Bqm8k7'l<L>;BbIJ^dg14HN?-o!,_OYQ)g/&k!%pDO=]mX2L19=tuNFg_tn:DoKoR.41FYXE&<6aEkY@o`!J2O._E11nVGbM"',)(fjO)!^G'_AOYqb)F6>q(jqLhkn8#^']VTDlu-,%%_T"$I(V`0^m1cj/6$-CMDp[6rj3U<Zg]OI\(IacGdV9K)XGgTHU)'n;AgUK6Emi3k;_GV1l8;a9Y@)_!dQru\f,c#,^(n`2NN[P%AjaiNG?f9k(Tq_TANlR7\9")6BVEneYEUtA5*9!E]Z&RN=Q+.[8pU=Lmd,A^\?dJ\\C9`VRb,&R33cN-IQHZ%*lB_;b>-<%Fmg`C%PFG4i0tVWD3a4_Op@41Zj0VYF@tZ)3f'/bVgs<jo/DLV:rPdkON5dd&ahupFDgo<d92"_P_WC>(b\q,)U*2)qR*Yg:ICg1O7'h3,%=N`FS1o;-iB)OiC?M*Z-kDZW6Jer&R[]HOS;-04>5*+T!O0RcOlq4XNf/uO&AJ,[MO5]A\>\Qm%6S_OBlW';sa0fl5(GR=m1SG[u%[l3d<\A!rJb<>F_aEJ#YHXue(1sKrcZ\ZBOUG6Aub+m%Cj'&s`E;60<FI9[ob<;kFY`S.\G`F<(UU/\FN*4KP3Nd$dDTY+O<11`T%Bdu2tf@Ithn.aC`dZhD\_^uIukWrD0KfAqX](?1[o1A`C'^,18I,;s'91"HjI]&F4B4p_Y%Zbq&oXRnLl[657BhVq)q(c-m&ZTRd%[e7Iuh<K*)f_f[RkMK<OmVFE!4\,/D0gcjc+aIMt1qC'OQa^;&P45%P5`&08l`bXJej-:dd@CWoR"VsB-TQU^8kj['phY!NcM#mO%K)4!(crTn`.L@cu);Mh1%Q0nm0"SSskPcV-IgD?*L!!?=.btZAdX9rWlSkm"^P33EWfXUk3Z<JfXD'pkh)@5$mr9q)AVK'Hh+[Q%%$u63O)8Y6&2L:$'@8:$m/_P:pCMfYdX!]u8]q=2Vj_4M]m:3RrR.H9b8Jr>X)tk5Z:2E*sep]Y?2n@>PXpDl.7aH#lV"mb%Y@9Ds%&+M@DOBC]Glu?,&1)lC&1YCrHA!B&^[[!6a11+UYdg_*%;M.%I<o5B(-^[-[#siW;]$8d%AYn'LCqIk_$b=-<f%"S20%=$K8b5lU%ZoFfcD<;Yr(_Tc"gMTj="lQqGUmrdaqh\V<Bf8RV40^iW19WNC&6F)7^/8,qqj9BZVVHm-';N*dYiV]m,<_C<b[6PQ%QOsU]?%"Q%WL9@KPa?>&m9Ot8q6fAYO$S45O59/AYB>+.Sn5tD6jA6[2+BdJE9E->=tS*h/ucqJ,sSD";9bP`gZ%jO87gb+#?8Ps<c9QCj`+iV%=3R2NB"%e^S9dQ>STW03N$El0"`<3uWE<J]cg.l8\PcSMcti\JX6Orq!gc(PF88R8fBIFI8G4_ldmr&Z.K$/q:00*YaK]bc=N"fB%PMC_#gpj[KXrig%hA[+/4YAS6n'(WuWLPc5&fQ/T^(??`op[u!?`5c9]#JO0rF=-D3E=J3m)k]V>b0PJ(7M%?/rtq9*)8-B@Eb^B%N[p'r9r3MW]!/ScW653@p6ReG!-rVcc0lg\k[Nt;HE,OT<u)os%cG#!A9Sd]9Qa"r/3r&35_gh$%U"=p.qG)!b+/]LYn>4@!8;&<%3+`1PPJ+r;k,tuiH#isGD.JRR2u=R[AMe.,hml%&;DGGPU3ouVfp5j,O4OcK=A_8CO%5[DZm_QL,28.njg.0C>ZO]cI)hdh"h\C]%jYOn^r(KsOZYEXd0?Rp*^N+n"I"id^DJmj;cX]-JWPO>#IP_.B.<e-^f(F*PagIqVU%D@`(:tMXX6[5cZn6c55MN8$c<<-OFo<)i%)iC]!TB"a(9<%5i?e*K?XRm]ZrTlleeVLg@lh]9bm(*Is"mYr`n4]nZ)/DC]>M%1bSdFSp/>95=I9"#crK_2(5PnSD<<2![lXrF*%$tT`frTpT]ET^CaeFg//3&B\B/oks?F]CXQ@q_RIIV_KqCfS51ZdNINqUt`^XDabP=4bc!O"0/>?UA$_qm-tqp%T<KH!dq]+4H.i%Q8`/65.>Ylc#Q;9WU"1Q,\4bQ92!"1IeHe?Cbd+.Zc'T3%Mb!e0!`F^lMB18oeTg=H0Y7Z"^FD0k1RD&H0Y6oEP*'5Z=m8Whn_!f%^;!KM5Pp'c7e/33f2';mRJoBG4[.`8#92">S9=d(HW`ZUX1#16T7&A9fc4iFFo=:oD3n)N:WJ2G<W*V[Ce8GVFh=sFXL,Ot1JBTZ%k,@TY4g(3Bo]BRLV68]bg,O"V5KBkgV:>1EYNk;V*oEKrZqc7EXm>/Q'VDW\_i6^8fC^q3iTdK?R:\Y.;:f`83Td3AT=p[\DDtk6%Y+Ia-e#IlbDJc\^lfTnhFl']Yp/V&,WQ3%t>2.Zh><Edp<;#ibSjg04H*XX=a)uSe7pS@VWd\P$pj)0$fiRi&h8SNTlXsSTcf(HG%rgY@jWd`1*E!t4hj7HP.=P(l>-"h.fS0R3Rf(E6>oUo]"5C:?\jOc6QqUmBRbSf;)Fo>oKWN5;CF##L`>sJ3")aef9gi`S^j+.Zm%[<'sm1Vm29#%M`*os<Q#4k;'e]5Hp1fagZti`rRfT5er!?U7AZ4H2QVh26Q4ELe^:%1':k%CZl#Z"ombA06'":Ksn;>ZsSIL\9ru%)X=tfd\b"q'>^am+i#442fUn*n7f*p+nr+)Nd*L[jdX,H(O^K^e8hYE`R/?h.dUJ)h>+auIOadAbR,)'E,]gZQ*M2rTri4@&DGqX%m=h\Q5<";enPBuNRIZqGH$ZIseaW39W2Bt56N,lW.3&N3;;ku"1Eg#9j?U2eqKco`f:2_7iOUZ@&[$lolbZBaXX$$"Hli\kPN].<%Z6/<=YJG:Pn@JQ<(laP#S"k!&.6/:W2YKYim,VTf2CuL2ja)6QA9ND1:3VnkhP7-':J,n[rl/RIFRAr(Ed,2]MH)R1pri3ilU<_F%H?mkrKJ"dQS%E=fm:8a^"l-2e+3TdGIH(\e8Z2])D\;H:o+^eeFH4YO\o6luAb/OsSSlFdlGh.l,p8nQA3=fIg>7j#9p(-lJYp%&%]H6mp$o@SO%!)kp2<3n;+h&t$/oN4+F_u(Y)Q.LW30R<9%_W;<`$2],jXSAD/=4+\U[dAP$bfi7\_3?hM5FSGmL0uhRA^dV^U9YA%cXcZo,$Bo'aqST#hNIGtiM2lHY<UH;p%TZOp&KPX5uGm*D^;d]$u"CLC7C8\8i$Ree"l7Ud:V*r]ej&rHuDh'k7;KKSjT?YDd)\_%p@j^JfmBg5"<J$b8)GVK%^QWX"rZ4"CCt$'mNs!qn1gdGiC%N]rQ>]dr4:eoJtb<6+NaIKqfN`>L6[h=BG<X"<I6r-MhT=*[l##K%UR\q;(5eYP9GCsJEPFQ]-_]YrBBb%b:jX=NT<m;E_-U5jJ@;r`/q*dW[TeSDO.N5pHh<l?TKQ]!=0hppBn1nBh$[r,@j+o(&W]_7%KJdN:D*:@3L04+:JD9!Knp7/l5p*9UkW=U]as<a(EEWc:P;)iqlD'F;&LpGN,]sEA=-)@nSjXE^YsD`e$QucEoV2R3Db7EYm]mo\%lPEZa#-^rQ`:!?h8g5ZPED$=YG7qkkj?d$FDmc2>n&<U`"mI^pDL*nZOJJ>*8NP=)Y6M$@FaG/cldjE3c5(NPm?O>eS%RIs(@tTH%>Hc#leDW*2RIB$@^6/g6_.Q*VJ`^gij4i=gHUin=/nL<p?J1TmX(u7p5YN*`U$p:%J?1FMoE<6BNRd>#rX0nL,"V\_grhQ_qE(Lh%5#&N\NI.=IdmNSs<Mfg?lWsQ6h@CU`q[pke+osCBidCWl2]TnERKrn'rEP$lGOGBr2UKtEIS;DZKeJ2Qr$Bqh"/1Npa9Xbbqh<\@%%p\ueWKa6S[)2MJe(jq;6c)>F5Z[H(o+1hVIbYAd!g1=0kC(4J!PBMop*W<EBM,at-o%\_iG8c-:SdiP&'UOgBYf]>$'hGRi5$.[%P!ZgiRgLi9Jah%S:<;Ij6Tub.#cn,qb@-WtIGp6X=Qs4?+CKI;,i0#>O$=>H-Iou*,[-_!'D13BW6R&HX.8Ig$5P+IVR-=eZ`4@T%D"OjkUlD22s*-.&LW+7<hN5qXYtec3W1Lcjgr86C3*+At[cW<rcb#5_iVb5F&OYG;)<'NImFk5[APVeT]U9uI-']^;p.9q$@8:Y8%2@o:^BJJ+k*b]G(X90>%IaJ[OUXM@p!j3P4)JggUbruefJ^(J\&.Z\B*@]?u.u<YoOqbucjlMJBq04nb9d<UL;#aT_.L1#b&0[>O%X2ELT5X?aOc.*6$n6USsLt2?=JJY9*k6f$P5gr8A51SbSj/4\+TUpj<eJ.4:E4mMtYD-Tt.,O]b77q/WV:,=PK[rR&p.'WWY#N5p%c"+"'DnJ8N@F:m`ZZC>aBMWqM55Gj[5]9Cb]5+s"1$gQ2R<qhRq8g6r"><oA?<Wa1,UrkYoWl5<6(Aie/e$6K)mFMJAcsU)q-`ba%c>Vn.!"'@YDQXmS"CO#5^"tT.oTI(*g"0C\b5"mn`rVEp-#k/3"o9@m,/Y=]#L5SI:O2().W9,22)5$L>;cS`b->N>Op^gnae*m>%n-B"_'#kB4k6-\;jn7c?#.1`*IT:ZE)DY7V2o>HM:]XJ*!_uH]6#WVg4h]!,-]$ee-/oIs](hRon.n8`WgFZ)27O-o2s1@3Ba2g]%hNqQFk>rm)KD)?Z30aj9TTFmIFWUQ.KnF+i@!]9!WX]$*3Nbqbq0iRJ%Y`rqk9.>^DZih,m"'JA@,1h-U=Y8;($I*0T^c<mQE7h<%J5RdrF*.XcI&j^`;X$:V2p>7S?[*/F-[K2kQ?+pbS,JjhL7oS.`]C$"6UZRm3CL9g4esNd$VLU`;n!Zq*lg<[=!^9U]_^8d=<06#%B#8A_8,t!;@`4Tq<A_%Ck<8'PqtS)E:kUP^]/YDOR9(\%7RYg2;0kAhG*o7A+k6So'hTSNCN038[%&SU7r_,sM?1E3+M045nZV"#%r.pN3Tbl8`K=u#bd=clD5A=7;&?O.L-S5]hJs!bf];[FbPfp?dcnCPlTkuO^ioT=PGq9=dH4q8S?%QWr6nd8"pC)_^I*4j;hD?Wq%E8rcUeUEZq"LM5c#WA+:Ee#q.PstmLV6aK7X@7i8Zn*9[HoY(jqHjJlr'1m3lF6S][O`!:fA%OTh]>AmB^!(<bH%%>*G.%V!POu(%^p[LUeBC$E:ZrEJ1M"@r/Ub,^]KbjJ/,RLc-qQJE%*]K6I<K[;Nb/Lh$\Mi\(AiK?X1+`R$`H7QbD9Qb!,8-0oPpq`>Qj8,#.G%n%kFSZ\A\jn>c@d697P`Q(_-ZI#noI-R`Qop,OYf8>2e$M=K2XmH*+@,42k&tuAs2pNn&.Fk]/\>HQ&:V'K@OYJQL>,3?b\E9m0nUC%84\.%\fDqk0_gl5nn7B$9t)H.H27m6-/(ddIlSlu:l$hHLm?_pLejV!#$Xo!$$P_ZAa--8lg.rCnSp:.Z?NQ(SUPe]LOOG+MKM\j%+aJK_q\=IrYtnSF&1_g^#9ND0XVicPWncIrSI;^FM\dGjP(Ug.>?N7mqM$@SIGL$m6Wppk[=QY6d0&b44rrPd*ac^THg'`i_U3tp%23:`aho[[P1_mD3d*Phbj@G)tZrcdCXSs9qJ;1=5miYZNpPO9E#aolI(f0F>]T6N32-qTh@7@O_<0?[oU-SQ7;c.M[U&^0B(Nm(]%SK:ZSm)]YKI,!LZMM-4J6\=9;?udX)'abKuA$EN1GFp'&kgLb"U*;l(8hO0k9>Z5]V;<`"ri&sdJi>lBf\iG*P.?GV]+?r$;,DUs%Y'sYR'LX0J;c8]bTED#)+2MDeZll2Y`23X,7>*]eX$:M=j6m!:(_FHLFb/U^ckT'pF<I`@ZnWu?V7UHSBDl7?W1;g=3&caH2N<#F%C)DST1&bllARc]JAa"Z(*!Vs$E8LgDS\gkgIP]jSpis>R$k*$LSDlj)OGMl>,e/Y`&]7%EaKu%O$b02h!u(?(G`a^/2blH:7Uu<t%lU$'aMJ75BcRC)9)+Y,+^?ma@G%-Ac))46)$BUHbJP6R1&0pN<,48jO>-/NQ#KaC3_asd%_cX>9-_RiJI#2$"?i7G+b4Jf<Y6HFf%miF=0OtG()<g:V(cd@Ht(E&,#La?[/BWO8=3ioN5#7*q=I4r%U1hr/1K?/#-Z!+Fc/i8<lB4'#;`jiVtMEK)(m`<C#Rd2Eg"m&n4%An38]GN:bE^6pNmZ`AOF7Z+M`98J%rE$pe_2_?FI(GQfN"#lcBS%G_t&2D`FmF^pO59:HF6=WMqi;$LHdr:VJ^(TsVdLMFR-lTT/%+T7C(N9X.LI(m58a2XaUcM!)*LsA4aT;SeX2jieL&q9ua-YUf!E_$N:=kaAHr.?[]$]$A]pnKQ+3:JDF[6]M\N0569^j9/q@r(,l%d+-\qqpF<6Wbe$^"/69C%^.c54Qt5*?:qDJ2ej9h2I6bmgs?4*)=:&8&Z"M8d(lF[A)]@HX'm;hl;h"c:r!88lQRA>3q(j0:l>k1%5WW2aK3BB@4DVO$YNaDO;@4YSLi*9'2E1bGe6A(C3<"oU.G_5$?3aIMPJoq^(!a"DE-.9%6)JfaK`mlm'H,5tBfZ2RN8o9hA@S13%<81Hqk#dm@Ob[d.ifd<jOPVEWJb:YsLOZ:jfTL<B'1hnsL"-M*<Q\aj.\9/=aU0J:j2^,'>%g\ME'rJj9Pikb,s2n#i2_?ckoA,(%$;10T`.'_(Va;E_BdZDG3+'k>.RY]7n0tD?(&'Jfmsj\S$g)"e:A%t*\La$>+pZIC"eG%;c*OH&i@s$=&]<UR=aHP3e'b95iP%I#%+I>"o/cYVe$0jilqBgia=<\LP0\Fc4L\MYkNTid>f`rkl:uWf-'qY(AD'g<KejiR%W9%Z&.M!#8MEF-K-P:<WeH6fH(SXWa"1T-[%<K9!.W5f.,$PB*`gcg\\O]ai@7/n`X.;4*H0=1.?ioiZ[4AUfbQX4F/0TNia_io.CX!EKrEB!*U2:_KBrn`r[]oK_DniY<JCMf=(%.sI>R9RM%Y%.3D-fbb>GL3.'^k=2.1q-5!N?e\P8*5qUtZ#t@gOW(49e-[@-cUI2_dUnSXh<42;-_LF,iJmf\/Q2K%<Krpb=)Gh@%+9deu9R;FJ#(.KB5CfjJ+rJoArSW;kh'nM[`Qat>O;)@C%[7E],\<$gWq]+5LTM!2)W]^["u41oR$'lDkL2[!Oaa[:YKbe(Rf13]%*lQ"+qb[+(%g/d[3Q&>`Ug0fp1;)+kHg9j?*IP(j2W3$e\Ia*Pd:C.RA0Bk643.koTpHSLDu17tes/!]#1/V$AA`F5"82@!O(0X+%2%pN/M[*Kge4DpXL^0Gbj!Yu$8/4buZ*8IL1o4=UZ*gS<#hS&ZA.T919XY]J"sg.Y#IeqC(o%-VBHeS!^k$c5*#ZkS0-hUa[h!FM%RAN#a-k7<U_Q!]ni]p8>/QIQKL[)Z'%_8^$"HHSCL^.&\SO$Vu-16nq#.jKfR.0oEF'+N1*nG=e;?DM@<Hp0BP6dH.[9+e-VSPaI%,#f'D_SP=!J>E#b^%EG))*B)$i2mX/OXf+YK%0Bi=o-dEU>huG7/*:"F&LA3XFs(gFgkFiIfBGB(_<kI&'c5q*eoc&P,T?f!L(K:%.6_>GBrH;#]\`9)6@%lr@OqbJln7ug@I/Er/5_Ua5E$Y]O?bHh+:h?U"_eS*O@eq+BZr;^%!21*Y.qu?*&&n`Lh<bN8@XIjq)_]q%0I])4@[@4<HWquU'bZ_Zolg#mrp<A#d^]6^KCbE6WUL^QC#41q)BTT^h+S6/$(jMakPKuq5T&A8)6no1;Z'\,s3=md'*BIFB2K60%ck9o/1p#`-PN5knI9//6o\8VM,I`;u6jLAUi*)\6V5b15AHM8r93!A!J!?MD+NH%`$/s]IaWVtF<G/fN=;)QU_(%hb`0<TPOL56&%E-__O$q\D!e_?f2O-YJJBX,)ifk7[Mr67AgWf4j(Q'_*5f54Wt7oRW%f#K*$V'R4784eYVom.D77LTTfbTXhoZj=3)Y9&CHeU0*)%moYql_OH%l.`O6hJqADY)EWg89XINK7ag!u>BJttYkLl=oDQY@'7,t5ohEY68b73Tm!TNgT<3=SleMsh*-6?Pb^:(m>f<NHo6D^^%.RjJ2Cjcta``V[45RH_h'53ljp[/FXf9%na:jF.F>\.!;!<G>QB%ci<X_m-4oej_+<$M\jk2H4eTMqM-_M\>SbXP8`!#c_BQs#:3%1J4jKhTLI>`!!n4UJ4.tbm:+87XA>JM"gX`='<a_5fn<g`Hsa#ROT7m&j]WO\STG.a(H8YfiY9hJWIY;ciV1[Y(X<:Z2p1PKD?]0%^`JXJBCu[52Kgk.@j/KLJ*eC6e#9cS2Uq\Z_^'5$2T1T[2eo4+bg[R+&S6T>Xr)<A8!FI'D\&U\/5+[+D.GJ7KB.kFlGel5)t[/r%MM0@Sb!u;iV6WDH?k(dks(f=V7G6Vn>rX>RJu,aR^'grY#k'G48-$*,OaXS4-L6p+&W%3A7qdD@LTQdM1u4Wp7=+XL<J.T.m2#fk%bt.6K=K:I5)f4%hZR[>`Z4S*1XDAH=J&t2(1Wfn841`Y2&;.8SpIaVD&52&:6X&\LH0-hV_Aq!5Q<t>O!BJC%Bp9+U_WY"X1f!bQ%EMWtJB`VJLTQ.gl/Nc39H#\-hYW#==.P`VIV1&.FD4Pm6:0Ie9nQEu.2`:h[GDE01J2<?<OuiAs6uSRu$\o9uSJ)K.*j7Q!"bX(*%NK[LZ+\m^]Ft9XcM]!&<HfKcH>/4ITTQ.gl/TbV@o,/p!VFbO`h$=aj38S[nah]Jd'`5j;E^]'A1U:MCgd(17OpfMb3I'WiZ,Ggj%*5$:omp^?2%P,(5)Y=Hba35f![V%$Li7R^G)bUZV\IiLD(qJVqkp4<X43>;h2qVDp6ZUDMB2JKeLI*U-Q;VP(T*r3FEW]82]TOMV%.lZ*SiT7U;UB\7poJ'+_YqrZ:37uC_a8q>G$I#jb'3Bsg&#:JER:\h)rdOU6PfS-*_Pt)!k&^%U]agEe!ZULBL;@<HRF^:--:7mO%1I5L)lGd!^#UZd<'h1h?D;]dP0l/VG5GYj/@Kqgsl\,>e&3f<1#7m\FX6jb)V:XW`0e_GdSNOj-m;7IcQNXbSam%,JFA@ggN.k(3%8Sil]n'jmbc2De+qN-nQ@2L7j@HiQL\tdj+eDgYJ%sqB9q,R)!Q&@Nam=CbFPnD6<ETBoG$BNYe,!9bX6d#@;(>%uE((!(_^Soa;%bY3Y/;9YX!B[.BS:N<ilLQ#ru4h4E6f0.NNcX%s@n.Hpg_1^1Lcn8/3%NM:j1?iO"Io^qF*U\8-:o?C_d:daec/U>965PubSA02B%cCaeP6^.=@>kO:k"#?,)FH.#93HnK,cPMZdRcK=kGKojB+bu$B9[3NmX*3>\@jUA8>VdWFID-@r9cfsUJ+gf<jR0s/[sB,]%-cT'%;Fn'\W/R95TB(i!9d2FdCbHK4S^WcBKZSj"ZaG^'&37bPT5Znj'FmcBZ>)@9aFJJj\XMktUmGC!W\S-_O6'mQ$-uQ\?P4UHK0el9%`Z]lU;JrGr@WP*NE9W3!EeBA>E%a4rjbBd@bU#8ojTak6\L!"X2rngij$T`/O^m6hh(:J[]N7!,"n.1&('QZX:/=?TJJ]q%g]K:d%CC]?,'En>lSA!q9?FFn7m0^spj7a52qjE's,mUX/:b;,s,mUX/J4Pt$,mQb@39VbL^j\S4j1.YKW0\Jjq`C:48hFK/;K<o((GjKT%q=7cN]Og1/pet*OnSL7_\"!A9Gh;;1YWi`V7CA&G%I]`GjnY&.0"Bfe3rZJHPC8;0k/-(_*aa^ZrmQB#Yd%)IT=pCU6LIL_FCpE,%OeP/#1K3KlTrFGhBr"#d+GZA:WQ<I\;2pfG`9QM?NQh`1;@CIn*La%..I"HRpg^ra^4#V`M3:\+5Fj";@f6Q[ci\nG`9)>^MfibK%5JRg$IM=o!GHscYn.p]OdeYE,#YkeVf5p/f6:TgnC\rpZ-5hmq/b`#"=l71\ma0cIBs$i"Kri/'oG['lKm2L348-UX>iWQZn1N?D%QZqH#l!N=+o4R:U+L:]oP$.tZqD3rghfKqMW^VgJg\Z,U)?C`CQ,+\m4!NaJS<>;a'"OWc1KMDAU^#&^D6*q3U^!M9'00YBX3jH/%T:VP7O['t&'Q5R^/*#ICJ@P*o#nG.qX:DnH0RFeBROfUmY/b1CS]$L,Dbl%E<OSapFu+nQPtW&)UpqWc2E#VcGW<tT#M#@h2AA;B%4'(ed%N#90fVhi1On_[JbjOmA2c8pe2ra^sJ#.=^;qV,`g4`M=I.JrVb*ZPJ5hehAIdI2D&AW]+kPq2u_<1s/FFcc3WmM.,Sq)\1%1HIhZYJti!$3tNR'%\W?)2Kaq_mP,kJaKkd/pnL_>6+]$%$LGeam&.5:h(R7F@qDKC[ViF,F<i-nW%SXh)P>Ga=cHEAfNVU1]IEq%/hT:3qqI6=S*DmeO.J'>&K6ZSIbDo,Hf66OC&FKm@IWkA?dHMEK]UkA0qfp+Tn9qKR7R11cptTI6$EViX"_WL#>bhC:C/hLPoL_)%<P7YY7NL9]reD,P0LkqOl)kGCAP$qjk_RgsC?Yerg;Qs[TU%3,[]\i2:/FS"W4#cJ3^LaQS#$eJdKN8'/sbH![>rc+pmdnJOVoOF%>X"'g_Y(Q@]&-;AiD6-k^AZ`dj''!*/l5j/pl[Gh2&@\#b2kWL/R>#/ZHL&jg68,Jhr:^N'PV1T?kCUiT*6Io7spFC#c>7T/"i;7%"//o$MRC.=riEgHc:\(sY7f,pj)o+P?(FV]5VY5U[W5h<=rH,mcgaS9q`\AN@iq!HNeQ!n2)E3+InaDfA1n]/?)\i`%uI'6K<8-Q%H$Q*KHqjpr:qRWsL+[4q%AK1b/:+$_]Hq(P-l8\^D(>3e5g&,JNRdtNfh$2*)Gk:ua't:UX@c/D9Ehk@biU8j&sd$_!VTB&d\*?u%%'^?.Tr.Z/_EN3>[FGL:p;+!._*B^hV$Rdfc?sitJ"ur^LY2nSnWs"oMQ[D@)gVX=kZXb`2q&b),Zb];H_\mE/;3*l>\!p\ln"m6%l8m023K'%Ic"%El*R9=7c<hKHc.WL'8G34lH2f#8gJ)1%Q&p%6Ic<,a.$McS3lX1_6!<ku,R,!3KdjW5UH(t>)%&u]Hp:M,b"to,%]6U\;>r6G4P?c%9UA]Cc*;V<nOr.fBh-E+#aG#V[3k`LV,EASkHJWUJb;+8rSe-EtGHn+4?0np;Pl_Ke+lkb&cKo#tT7=*:*MKUM%*QeQ6)tM"r7huCXmo6]f_*8,n"23f'31/Jf,"&U8RnOO/E:qeB(bR_(jEd.jY#/"JDH/SPLG"\A4t\&H_HVSd_772]U'uBr5C@GQ%j\!b.rg",gL8E$=r5^B'%cP%@7ID/^`B-us/CHaGGOM+J;$784raOoZX+!fn,Y$1o3$\.jB]U,H-*TW<Wa"L5D,B2P<b\>`<cjQ)%'b?CcY5Gdg^qM2%d1J!,lsV%?nRGAT2VA2?955Umj[7jkr9VEKoO$,RlkU9fqU@+\OPPN*=(4h'a(Hs>p9$Se2qc:Krhm>E"irTR%(.[2MNnN6rqAa?eHfZuo^K-+m-pi9^3\ZQtZ=DFJFhC/J1O/d&!@lE[RW6UFPZ"[o.aeq2Bh!8:1t5Z%g%f[cTHTh^aua6;Yd9mo%+)BVHR*`Y%VUX-)7,kG7?8<b4oVAG9(sQ"MAcC>)fZFn&:hOq<D72*[DRnZYn^;jU<hq4kV8SD!qm*(Yg[5u"ArgFO=h^Gg9hj$@%hQC;pID4ME3!ssrJGr#q!$TXsB5'<20-RoSCWQ9(6O#6#qH[0WS!ipfLb01O&t:W2Jd#Dq0Tk0[2@)&ki9#DIIrfn@lsr:I*:/_3%o*#7dNq(*%]hN!MbJ-'QqY&.!pX]<g]cIW,^pm"2/MH%I9&6NV5-K>N!IMqmMsZ1@Vhkjr\Vh`eb8(q%??p#p9X?,!#h:t(YNP$F%0f`U(OnS7GM9Yu=*'YMd5W\BEY/RAof*9T`:U=7rU&>P=S3)[PhB#;3N=Y].<mI%Q'loN85pF$3mm6fbcfNi,59%$1D>n)EeU[[#%Ir]QAIkmul^S!eo21XlZ-U[;q<:<U0[3D9PTLg0-s##9]VBK%?jN!'+j`GNS)I(h*JIL)SC-]mn:`;/ma\WfZ2;16EHO]`%=?*j7%#58U,'Hcr<f.NM&AIAtC</)S?2<!K\*.*iH8Cg1$9X`mZI4X/C]_:nH\"(:F@+8Epk.:cD`@Ya%O-[$:>L#jT"_-nZQQXRpb8G!@%3SoC'bT8GSm@YBc::D[AK8;<*gajpT5ktni2(4IieOK`A/mS3R:_0T)aF*p<djlR?=Qf+"=7n"Z5c2_bE7"Bm1#m]R]+FA9r/g=P%2XB+_J-`HJ"]1oo$9iF?]f-oe)3BRK\]Tc:P`VPLmV[)bWX\\op3+F;6XcTX*I>fF'R@O("@1g^@V8d!fQtU_NmC[YpZtD,>a>/+%s0[V-7r@/UGZmCE&ZRdPj(S[^bIlpfITa8k#d60/+o;C,Ri%;7-MW^MHM&_9H6:]nN+[jaQBiGZ?8oL(#k#1_]=1?"&U/G7O]p#j%oX[if6qVk^luRKn85L=bQU@Q44*oM[WgHg#%p(AY(71R1*7E_g#$&ir`bO1pBHfg;A;BJL_d[U%%I3l,+uM>2d5.[rfdrSXeDeuC%`FK^<3)gd>$]!`OC/>b7K.$U98>Y%\NYqIk[a?$K)%O(D?"un:"Yk'2l^[C0QCT;FHEQ%m,d%Ogc]W0<Zo:O7gA&<>-/':`,[ZN!%ntP[,1mF<D+9;d)QV!oAJ`$I\A^$Fj-:nc^*SrV/8Z8Z6f"JK8eNn9Pfn4#XD>OuJZEk=mh+bic*YPFlBZ+%dKu'@Zp[[=uYdZi$%,WU(!-`M/e(i.dGgP>'jbo+2P!d,.7<`VCs`UY8@L"GWPfj6H3bT3^>(b2-qo/fp<kcDQc0`W]5j?$>]j/kc<:gJZ`J?#nr#MB>p%KC!4W)m2OR2mdX5Lren`:eZD]Z\W`)>\bIB2YCfCW:M="2fNXS>.hle%\#mkog_b.5E2^=6*o4<eHO21a_qHSe]]$op,VVT0qGOF%aM$s-M;Da98(RAgAGtq*b5l'CTIO[QD't*A*1=Yc#O(2S:o?PAW`:u"KRKX\gd2_!i>EP)Hk1ls)W0/*g0N9Kj]=%FT#=e;F==_Y%i'V3in;lIl3TKGud2`d*^KKG(GW0e@_EW'TJ7miN\!YIL2c'C[ar"=MV#_X0A_`b3rU)L0Y2e@Q!?`FQ1^=KZb8bM?@@k*U[+u^!%14+B]%aQ,efG'\82F@aOc>iB[.l2jrGJP1AF.+9EVH1AR,-PYY`6E3h1a%n-1L`*@osG#Nlr+*O"6(r37t[odbN]sJ\2gsIAF4G`%:-F6b#Q'./+u::ZT1e;kZ(jO.."X#^-)Pmcf;FYL)2"NS<13Qm6P7.2QcHj+OF>J$aI]Y%YU,kA)l-f&!r(k25Ea5\,D^g8:aAG<%Xaft>"Ki_:lk]Y30B6?5rW$7c.1fcLYW3E>IcSK1?DNUh'YP@s#<_A[mml6QDq0@5M*hl&,XQVP+$:6G[>UY='FBnhhUt8Y4IYF-%FDX$n,)dUu^[qof]=(ucMVo]k%uG-I,u!\97=[A4W]6j!eY*6a)'7ZG+,ZHUrpgRgPgstA'S/B8@M)28Z`TW_OlBGKhUk"S_eBEh%LE[k"bP3-A#D`t<hDQ@25ZVi(X@4r.M]@WDpb!Nr7Dt250[+P&U%ruq&e@G#OU+mFnRi>#'H13<Tub7AZt`XaJO91;6P22Mqt+qb%s.RN3n^^'[6XHjC4R[QCdd-VsdR1PR[KuTCroBc/c5'XV:dhQWbcVdKdK4Z#ZUS&N+eq790dmI-LE^2PfIKRjL[>cB:]qks&?QHO%Rcp(0]%(OHqbT[@YPd?H&T!QU4MDn!'JX@_5BA6)%2'qMq+Qsir:_`]lgW3]qEtIS4g6k9Auj(S-Ah@OIZ%<s,Z'O))'mc/*_2H\%7IAeT=+Zi'Zf!Z3>T"f_Ng1QI"KiT@mdHN3BaO60XZa!=/W_ZT8L!T#V:+%AcQl7Y!`1oMf[X8lQCD([/;r%>)C50+8=!;XemORN%IT_!%>(],8aK]:jX3IhP7VNG_9.s=]5QRBX%#aQ5[$X0Wk["'6/I<U&Wc5]@2GVGDPSW6V3D:&e#)Tm6_-rKd)^H&BpS!D<['[=N%eKb`2Gm&D3C`0,S@\sR-hF4b!/T>a]$rL1Lhjc$M.t[sU$b],0aK.l?,oh/4e']@A:3AQEKB-B:?#FMAl>i=ZZ9WQCe'TYK6,MF(%Y*pW2<I9o4'^1.L-nPYG%j$dFFl.Z=GQ_h;/!D6&j\'P5O0Io$+\IZk$QrmEij=dqLi46lZtP\iI)&t/!O=\7i.:r]5lq[2\MjSW%)'h1:Bc`JVPsL$#0_:YW>R&;OO2PK]EpO#E7i3XJ79adR4kCPXcJmV5(aSq`U*/5E_Io%A1.ZqY(G&>'@?Ai,Q(Lbj!T"?Q&$8Qh%K5)fGT/\%-^Nf?N"plP9L/Nt`q8'u]o,W,0B-dC6*%l8$iqA,Eq9DOtD`HNXPF`$:)[i:#b^IAP?uc/b%cQfJX[rT4RGF-#]gDQ#%DE(nZN!-MG\P*W;#)NP<_^#P!&<6?TBEl0&N'ZI,UuapZE(5GooEL/@`tp;eGEf]N%4935WL/l.DU-Jp20:`IS?"GbSrnOh@X1G;%O,!M11D2#Vq$.R'!6W`*aruCJUR==,^P-8[B-^/N-DV[>^&=ArN!-h0Boq7/MsgeCoUG^'-'%nBm97IOiNHP1I7?O3'&=F^>$Xm9%P3<VbK1SBD#$Z^*+m4pJMIqr8lmQA,#l.i10"8n>M<__JdDQVqD1(S\,`F%pCQbLLT93f26S0?#*`)rhkIDN=i`gU/2J4<115E:4%/mQ"t)RQ?m0'55?WRegpH\2IQ93Nl_Mo-[RdW3(+X^J;ln:[PkpG.&I,`NW\8KG2['Z@hVR3_HF5n%DPGAu4>SOjHECK=5OY3J;%%G<mm0qie]ZU<@i^Yqm#H?PWt&i\3n7`YK$<1,DH06!GU,D5"0c%YI0-;Z`0D,<eWMQ=>r'`3"[#[%"l*GNK=gi\3oRpPgLkYI*XP%&h!'U).t2qn1+3:S#0Uu_Y^_WahHWbM>kA&h&/d<G63!N'MO+eE%*2s,u<\rFS[1i>9!jh9V)DtP!!#>U<>PATs`=7<NOd,+OOo`%5B]Ktou2/MP1iBBc8-*[?l'7+6:Sr'6dQU2@oaqu[scn0!gdOh_PO_[Dif3ko7q2Q(V(mlZ%^''3"-F9,rq><:dcoIju=U5Ws`.#%5sf.g:15h68^J=8+rXUt1il,!/0#d`H;]=[;d[cX&uH0-cWm3'%2.cWO@@$p3"-GZ[p1=tMo-Z7nraapgYsnXT\Aj90>:!0(5G2M%Mc;Dc8M%'GjY064bA,R3!fX/Q2GYqeD^N(/&b.(\CUHiZ2Ts*g/j!tu3u`6p#60BubY$"i#HNXDZc#B`W(6L6EE-k=5a-l*d.O!'%Ln8@$(JM.\S0\obp;iNdDG%LMdPE]u1NRuYSM)Ac_W+P!W'9,$/JJRUkNG%!2#kO[@^5gd'O5oE4[(L;,2=WnWE@Moi>,?C7U?R#%Vm0jIW`Y4mZ\ep%CJ1MTH3kApi:(h,Tf=P<,R:r_Grd)R4-)UpR0rR]'fG0&8QT1ORf(u95^<#fMaf,)!)ugA)Rm^ifdA#MK&4_&%)#b2JW@=]@M.&UU6M:t.VETb3l0gGH!Id[BO<fq=OK?SDa0h]dTcM72*e<N^(_YOicKX]N-R71Km;+i\a[=RZN!l9'Dk#)pE_^6P%$+"#+]=G)>94q>P/ET`A[n^S^-!je!r<_rJ$12fj"rrh3-+*!dfjbYQ5ap!DAj@JBD9\3imcl]<IVZm8/Y`*^Q?kY[D%V(VU3IEs%XV"Uecl\<N-l_sH$n1g[:c9Ha@QRMLFi*YhW(rKS&S6UWN:<@Dk"]B,.N:A0C0AYkQHBER9it<aRAI2T2->(a4f5&#=3?9jm6G_A%)u",`B$(=l7FV'?'tnH`2W3;.`'_XF]RM,_LN$h8Ah#al477RCMnrNTXsF<S/-_SH036&ULu-q'H:H/XB,L,kL/=#Tg\3)%%a?79%F-R(rqS_*tWAOa$A;p91a8:h3)M+A2OR,^gCP]87AWF('CAuESKk^4+`gPLC3K?0#U5B+P/)DH'(>IQLMFCo5MM6A7k/K#3c)'MO%(ACLN3$rg59<lhcs7"m/@u.RY6Lu]C;TM82^hWHalseTQ8&U8@ku_#C>G/83^=3)L*:^jJ>u7%+CHFU'dGEAT:eje$\,Z#:!nVPi%G#W.)_dSNG$<A_7lg^?KKfIS^hr"djo;qG1eZ5Fd]d7ceCBYgk[8@LQoafI8E\/PsT22b#\f?g3E%eU0,c=O+n2;Y6BhGnsX;T]:%1i[46eJ"aGim:ZMG1,e!R\l4/;!e0<J:=<-Z0&rL:ag7Q8rNI'Q[`)7=]Mt]hd)e4O#]NZk\XMH.*!'-kcW48a^(IKgRWr<$DPM#%WdP;cH5$'LKj:S,ZJ:1>&1Z\#!PaPD*30ja/^)O.;'ALc7)[U]cr5>SS<^K0FR$_dAfl0,P6[Kq3(Y&(#1FO"JhhZ8Y#-Qh5-+>t%6mFf1n[Ssh+<PkXd*%Zu$keV>3W;g$K>ceS@e,q`5sfM?E,CcJ1.W,:`H%-f/.E5Q:GGH/V1V57TCrHqe/#DM8_uX$F%:PNGBNX/%RAnp!kJe"e-+CB7K8G;OpL'9(+MkMhc!upH1.ZA\D`s]i4"7/Y,'Ab7-Ad7t^Ns3C\3BQiM$0W["f2IPRR%"@"dgS&a[8fQoeOP!%4=s8?<sAsMe`k4%EFk6i>b647&m#8DBC;8ReXcUB$/R1X9p2h!SJ^HI8FTnDo9^eLK-Y2MOJpUUga%_[RO#foBht>Z2OE@,]g4FB%:#KG]"pq&1\2-]])'j/V17(RaOEIiTepPRA'8&]9o>*s8EnY`A5se<[Ak\A,nRP->D]^%GRNqr>oX@nfo.OH_(ZUl$,UED$%[4iY%+DJbNK>^JAq>&K;8I"q;$WS,S''#D!&#?$[4qR2/+*,29O=3-XAgYV$=*KB.=*NX0,(hp-eBk'60**6Q/gi4c,g9L?M(=3HM,AA5%P.35;U=cW5@^[V?:19eB#r+sZl@QQ4+r%8Z=3Q6.fJ]0DiK'%_'\HXiIqef.D9\+#fI&ZIck6VbV<7EAC(DH*TE-a!!*p"8"sLEc%N0+5YB_hMNIJ-lJR1YRh^IIK(G^5^RNg!gLk+4>DML,6iSg4&Y]tRT>N6M"XV]T+700eh)nE0&;h<@.bs7j7AQ*m^kkc_PFJ+)20%=nBBBeWV<ZqA?pd-#*8>f3YgsnU"W&J(B[,e1e=kkHDB.h]I(ClEBd[W3:(LonOO'X5A.^rSbFC^\/-7iO,lS%rLFtcbG<$IK-SO%<3sa9^PtIj2<q:$p`.g:Q*B'7G@,]]ra7>8]mr=qs5$3V?@l/UQQF^]pHLmEJ,%^Lrn.d]*Zk@B>N1+@p!5,]B)Cf*K[T)W5<f(a%2h&6j=(SRBJ[[hJCA]Gt4gn,$UY<M5IC]@KkDf0]^H%@)o$5HXi*T5lji.Z'+6p`@[MohXf<;pfpq9bCde[U#03AbP5P`FsVjjld%rhhge\,,miCJSDe&tc4<ILbDq4C@hs:Y2EMbniEJpF/ni[53P^b@5bD;t$]aY??9[mT]Y=^.t9o=DZK:DP+;A\^gW>@Jug:r7Q:W%Zr<p\HiEEO?c2`7r>4=fDgg0-SVQpIrThY155LU*ebXojCp3V(W4mTHKFdu&hu@/TAH"/1CAq#P?'#!L5O@an+$@b;9cnkmQi..B%e)gEY56(RG\(@hnAR+*,U&=<`Y1*9#iT4.MJ,.r:^]!3%hld4PT>-#&k_WfD?a_$5mbJaVd,4hPYMO-n?68HEh]=oZfr#p@nB"n,%r8IC"q"V\#]<C*Trq?*,n`M"/s/.e?q;?o*o>1J*lg'$]5Q0euO8o(7CC_J9qsE"Ls8BXDrk\E.pHNo\kFMQp9,fkgfnoiCr`bYI%f-.?tqsiK,Id]ooqo3uds82;d=0LA"*mW[?`cGL8r(m"OrS5T"rpc9:?MIq+JIQt=D?#"4qKL8^_Wn!@Cet((?[D[':VQGb)__6T%LVILCUeA7#55a4Us7Q6'^0,9:j*Tm'0@XmgJ%YBDhu7kHHi(Xg^A4`,oDGUQP3hu*b3!X:79cDWY?uSCi@@-!/<#'5Y@%#9S&`i<%HMFU\)>_\*^&6@BJ,J*FkP^J/&)Vd&X5BN+J*t^FIeg\??M^iYI<+(.I&`\NCQ)IuqVTIfp<4a3rU8jDH=-HFs1Oq5@pI)Is*HcJ%CL,7Ys*HcjmY0!4+odq"jDu_Fc1hH`;U)6AO>GcY4""03mE^/u++#Nfe^8]SOl.V%p@`C=inq"j[f?0#^\a)kld'K4q6fC0-!pJH%*oCkmjBB:+1XYU[)B-Tmc!S-R?>Qcln(mm))uenK+5'uD7o;U^=+#DpZ#s>YDS6gGnC9Jsd?!S3.^.[[S,Lnk?.lDm\VG1S:jMYP%%$u-u5l2V\!I=I*pn.88=-j_?[&^oQ0>@3=]Y.Zf@D"S6nXK:1WH[6)*Zt@MAc(on^qVtkUYfl0i/@>^a!hsVq=s!*htcd;O5I=Y%b^[FhB)cG\pYBc$bW^CA^]$6bBqCe%FekYcN,`,m&:XN98)F(,QY]ha\j"6@la6TSbr!;j0H\nOIeHi!s-IL"n#u?t%i[qK4Slr7%(P7u\qsl]'M#+?P[HYZj=0j5W)YX+#YC?)T_tu*7r;%e5I,e!Ujb.=m+4%^tVOu,l8#q(-I!L)_puO/YnnfbYPEilPLDRS=cgQ<"%:T3*C2u`41?T#sCZ$o5MIl)WK2tsbdpd^Aa<q#k!gcP5q^UuY;ndQ+uNCuoka/d&mi@ECGIp.24^\m_f:R6dN[cIJ$s5E;,><fFf%i-G4;YI\Kc?RKpo5@43;04&t.^(8Q)n]@]DrPm@DU%X8R(EU<cc$-8c>/"5@1u<GA`607_^3odI<ugTK/:Vs./!bFPZUTFYJ+uod%oAS#FS8QWQ^O#N,YLn%?rh*7(m:-(krqZTlH+cs+^KDMhs(]a5bocQ>6X=sVa*9Ts_<ZSrS!W'jng4)'S[[<!YZBPOF:hhS(ZCo\%k25,AHu7A%Gkg"-^Af-WK'H(E"BJ$:QN0g%^'HB?3F.;V^@ko`b(KIB^A`sRGL<?rK"*+VlOpR0)&Ju@c$6#Tp=:>G,#"Vh:\btm%eq<qEkPk,K%DN%<I-4T"`*S;Om#/XUo$@=&D`e78?VFPkKialCm?8Tf^IceDjG+9G*XX-:l*C]oh>_;KQ_38spoO5KiM4"$rn]?C%q@j'V075+crSJR6j7KbWJmf(;o:``,[+"E7823:[`SVe_PTHg9(V\8NrTL(jqE37\bUpfkqh8`sZXna>B7Hejn`[%"mR-2"OlH?h%m`,1,T>()0:qZPI[sEYH:O98"'mo4"L+i=BBh%%.pc#@oe%Qd0:u2N00BqTpbOaWi_/#Afp@oq:Iei%"lTY^!2a<aW4$=^KpYs?(%KQn/1]4)SS*e/b<gCr@LY3`JZ@um7,Im9F\HGtWR2iK,510ShjZlb:JdhhXBce.ma^@B\0^7@8/IjW/-L-BrRT)Nn=n8rUHoJs,@%B4U(b]_T^Zro3m>QbNE:hp*I?hu1NP?;G@\n;Z=Qm?Ql]^%K4^d2W)H+7",eHM;dT5Ea#ZlhfA=n"]>Aad;4[2=[%'j#3%Z_kD#H%gUI13e4J@Y@qr,nl`:$2?iT5?3.:RojtFL?b&=s<q<u)of'h9$bDnb)55m/6n5B8'CG5UGIs@4XnFQ2Kp'2\u][)*(rAX_H^DYHA%/mZ-@n#3q3pP?MQN,*@lj<*a3TDnKGYM!dj0kX414LC]bWC,?Ur3:I_a5?jX"`jY8AN0G@T1=6kJ#X/BC/=cX(Muq4VtY&q6o@$W%f8Smj6`Ym\o6YD`Ig5<9YO@E):@YAD?fmHrUR8St^\0i0m1tIO+27]j)ip#7^QE^'D)YG[41`gSp1+-Kj!QQFM9eY<Sr.N4dK6lM%eXnKZrq?'OpL!R3)%Zc?mH60lo?O._/5uA[j#'!to_guuoO"DLAU=<%hlq>)(]JO2C.9<0SmFY=.e-jfrd9V'qXg?9piPd?&)V^m%WN:$)H0qN%l`[KprTCA#DI@b;PdBd^a-C-\p$M_DX6mj+s88OLSj)e/Q8FuoRj[Slqpoi'Njn8\ejo^2m1b'Hb4d"XiKo&-O-O=<%^@lUE>.!B2mK<L0p3bPc9RI4h(%FM*[8$;N/gIQ:I-fC%]F:-Vn0eKAIQlUQiVe+NpVQ7rr5tXdqO8Q:D'HiU`r$<0n[.=04nR'h%Q5';^s1NaQot)#VMW*AM5(5^l0AO816:Kc1i3/dPfaQ$8htc4)J,&eon,:Q;TA5D:r;VNJJ+gY3nR.m\#?*)E+2uSKrpK3nB)>t`%pu$r#_u&l^Dh%?0fDfghoacQKpq9K&kJ>aYqW3ceq"*shrnqQ&h"KQ=qt11I<c<_:X*+Bi6^uPL[sIi;h=0@Wp&BO;hfk^L^%?%;%YFjAFs6e\S?IZaf:]8<ufDkWl#K(t8nD=briPCQr]^tIJ_>Er<TA<5ZF?f6koO+8Fqf*J(#9QsIgm<:.Kme4?p>*%(NpL#'8s[Z5%hiIY8HHYh4FO,\[hnAZ'T<tl(=lUJC4LV4.S&2/P["#d`d0JS/q#(a&YQ+Le^]*J]s1uIbITN`@Im7$Vr91:Pp&<eDi5LH^Ieen7%i#HYq03n;[nmX&:EP(,ZimHtqeLN=)a51)[@/XZ#V(Pu\A4&,"`lg8'ok"#j;!2l6NQZbW[B-j2!p`4=V*`FmCe0<,)!_$[$FS)R%$?]Ra.-j+p!8HBG>Pt%fmEa)qdIN?UBH-El[9Nbo`quM>;\p1Q4u?Cl^21o7AGD+GQ@Dl0qf0B2Aa2WgL?&7ML@,6YlU"=3%(3E0%6cng86XB^XTe=6+?e2Mf6CkR>:kA;5b#4pF9/\'5B+/q[7tj!h-\]-rqn3DJ(FlXQ<*:^#CrqEBpl(p7s/8b\q7_f!]S*lAp\QYg%?)YR8:h?V&ZR$QRiA647r1cSaa89F"o-Mn7]\c<tW$?_XYYpRg@KS<1`W4&WY;JKk_X4j?`q\t^p"MHM'p,*aIWF$@/]SE(!PlG*%Y<tFTr8BVb_.m_46L")8+\q'$+.oO0O`<oL:c[sQH(V\sKdf]'MN^RI."D-5,Q2s>TP7]36ds[X3nr8q.u6F4(aC?H8;6+qp"M,@%l/,\Fc/Wh/0ACZ,[$7%(5@KE`Qm*j)7EXM:nOW]:_J!8Rqc_r1IAG%?h[fU\4!T]H&n@_(EhrR!(Q\4W/W?c+foKpEj+Gt4(ROUK%9ul_?-Znkk(;Ke:L?hFP?S(cA2EYmKrRqUGEke9MG_Sl^G8F(OC4Dhpqn9sO*FHS6]mBNqk=L_F/Nr7hW#pOu\=`Ca(A+J>VdtV3%qAF[,qRY`*8=r]ZHss>F$-Do4YEl=ac2V//+e"uds#gJK'2m'k-[W_^r)p0qm7,DJ*ogmHp$'5mcTq>[O4Y6rHc#+K/D"H;m\a]I%O/Ah)\"A6D#qtHX-i<h.nh[Jm0n#2M1B28$bKZYD0)#cbTDqf<eoe7qfb4-;?C.Rn`L_YQ#qtHX-i<h.nh[JmoS(#ko@#)UB-;W>%bPB-!56%JWbj2QN)?P8?<hI*)r=$T!T:];ZJaDu8b0R^Q[20R+nRlP,l2,AE5l1;5obkh7s-7u[<LN%Iq,i&UB#JYb<NF]iq!U$n%E+l=\Y4\dEnJ,j<OD-9?gYR7Ga8P!bZ.$4jdak)AMtLdHm`QY9gl=;H51O+dfr\Ia^Yeb2q0oU2k$$c22Yo@,ek*2T<NO^_L2H\6%m(^,M*gh:qS+.?.33Cgqh@Dg10jlDLR]$&#Ri=*?5L%CMm^"3L`&"S/:IQ&sEqaf.KQrgAI\#MSq_0k4A\p838#<+pZ(S0bS/Be^%,-'?Y_/K)Fad\h`W\W5bNW3sW+-ro"jPkrA>`LQaWk&)7+J@CDWF9#d[#-"P%V\nD'_c#V&^q`UVtsdh6o-LV>&`)ZqZ4Ie0^5s_%AR#baZ`q\k6q@]hA*jH=c!-peXl.b^Ci`hJ8M"`X#An??U+2+D+7/-l%E%eC:Nl@-[s114-(`,6+o6UU>_S6d^*Bet$XS1C1YRP4%<jp6B>MT$a6"C:+/N34HWA`Nns6"r[[j&t?(_P/QNpf*SLa^pkgcKiDK/qMLS,I!m"e@Te&FEBA,A."%)/PCbTu;"2O6l!Cge=2Z%oMGctrd!92%r[YSfP=<QDX]b_dDsdI0M`&t7m8QsZs$")IaI5Gmj"VG2p#Cr\8cS:FkUWm:!Rtjg4QpXrdMBsG!S9iM8@pLV[(2M%FfoZZ0ZPj*`aW;pp=k]]/2P-]p"P)&#(.`Z`BK=L[tDFGo4$Usp.HO)q_Hl)TEeF\Fn*:=@p_b'-bbK2$K7_Fp0l_pL'ZBcU-[o5%@2jslB^2L\G"^W!MUB^5NU=2*T'1IU,FXM+DAsdkMW)t8VRUU`>N14(n3CkAJm-enIEs,n4@&dod>3KXJ"JP_(0:2a$7UdfhnaVa%ii^h0&hWMk.\:l:O"h]qWL4_^_AVlPR#ci<7c'tO_jqbBqAr-hMY5MU2f'@$/Q^U$623R)ch'<jmO80<%%.h:GWqL:R"-]A#!1tC%S<+81mZ<_"COiT>Za(mniKBHVL9DU2F+%>kn;N47@Rt9.bfeMtjI/m7&SG-Niq6kX?=mGEjlD<X9@',50jGaFaV@us;f]iLe-8Ug%M\6W.Edb8Wd4m"M";c\NH-rO^M:n>TUsHta1$3^CI.]QU>SH_GQVj`m@ZdaSR&f8W,YZDs_^/`+Xr'bIVWR!uDjd%1<H_'](#s4p%S;R_5-Kg7@kmh\D$U9A<cLm*NBUP@u5GUos'k>*ME\8iXR%3JZ5o`SD7HG;KF2aG\E\;UVR%FhELS%/LYQe$hXr*?UP'!,(r*3\2%?eN!ZBiU&!07J:8R&!Z59[_H$3Jg>=@`Uc-de6o7m5I<[8JgJTVWiuKa%Xp8orXC!)3rF.UapVPUicd)V[H.7jlsXCUGB5?9X$m]%Xr-r$WU%HYG+#<GV+tW;]`?4)H3'80WuZRrY$UfS;-2N#V<SECUh[Tkb1@@IYPD@o#j(A`m8EV/PfZ=Q09XbjIET2A]r7$%Nn-]s%3I5,+5WO/,F3>Q*0<]D<rS007,"jT3U<M$n?Vfct]2eVX1A.BKa\8fFUJ/Aj1S[X70r4-(f_i$0=jMkD4Hf@WSQhrUqRD5t9%D)#%0pRHGD7B>0Ya8'i@3k43SOUKIPG[\O+$!q>5&Lr;drTpHOCFWL/&n_M*k0"<p$FXHG5IVe;W9=(HI#.;l&3[%?!'3<HP`m*Q+G/5%DKdApZJ9W%leB:0NoXKu(LckeX<X"C/*9oeWS:ac\-/D7)hb9/gg,)()U.#K=4Tn0Y&>^Md)b#X@ueUi\Alku'DJLM#:AkrU"!K8%Y4"=:OLeN-5>'b4HM:+h/%\2Ah<Q7HUi%+R",><2*On\sX"HG3pW?g@;Kp(k#?1B.F]j&kh867!Z(!@grDIo@`LL3GO>COQ8!gA[%h%V4&MW':F@B[f\9\:k6Se?5F1r_[Tf%u.O[G/hsf"T;\$"MQCoG(idhNZ'J[4B8`Ni]p6e4Wqkirllt[XHB;@qP+f`L-5i2KUC[%#1&nbAZnVrTolN[Hjc@EF\@t$=7mo.XmK^Eq]f=K>ZRqB^%0XNCgAdnQJ&iY2uRJSHcjq5N*`j`MKHsn]kSsJ3I<@C4!SB>$m%3;%YNUfuA)$:=BTj<\AWK2mHW@2g`4[X]13Kc;V-r^tfbm]U?DlQ5D9LVZF%5S(g&FtDN_bm;pSs")WI#YsXBjiE@*5VP_IgrNh]Q,>%eP=?>L%uIo\lp6ik3B7QbD^7CDZQA=[OukYR'-lf,F#Ad(O_LNe+.M@CSh_Vle9R*I(SkS=11k<KA!hL*$"d#9`s+jf-s9F/$C01%4`^*3"2mmS.2OZ]=6q7WlPY]3J+K"f;RTmhJr4B855rdWp;E\0NGQ:S/^.2=Y<!>>76!Pm<3=J&;mj?'9%=k26D`sae8RBF[Cm,k%0q#&N)4bq5M4:X]F7mQ=Ug1SJFhEj;\+MX\Dn6q4eQZ8g-L+<d%26-\h$ARgHK4a&M0b4NUboc#L4a2d=)#K-]k[\$BmNjqQFV=6%Df^'?DK9kG@F#hEH7rQuhTMa:4Z;ZT\_^?.0iqGXcdee#V9@BcG+5K*k_Lrjn#Z8JW,6r&]#[Fl3u=G<;=C!;1(s8oG<(!$=,K"a%=6="Q:3Ok/qkeg!Ecc&ZM0e&5FH/2kZ`[<*hH0B;OfQa0FIB^Dou#\"XA%&(-TdQg.u"7rV!A\u?O+>iUdh6FI8OVs.=,?#"s?A'%bB<<d5'7-e.9]NF;RE$)V<D4&\P1G``bLp;G7@D'8K3E&N?l4/gT2[6&$eQkh?OI#,>%>R-^gbhQ(:UsgS"Xi,jF\mJk)E@s#;WV%\mhMZe6C),r(=tu_+_Q,/RZ0HoL^iDDuBrdoaVHc=)[DAY23-50ir:^/7Pd=f\oc3hUla<"6"%[;Y7!b2^[dRNf^(&[s>S4l#g&o%*`_EI4mJ8ZR%ZGJA2?SkPIfqud@1?:RARHBXF&Eh1@oIu'(DK<G[!&)*I2naDL9Xu"=ORpLT6nLoHRr1>pBTucauYQR@e\G9p)(@%OsrVn<5JKkO+O\/Y.c3go<*NfoCK,ZMtqX"B:\jDa)V;pk@;"B"@&,#R@OitEHm(QMpPo_)VMYbkFAbGG!=?mp?E1PTpgi&q,!?l%oR(WW9^2@dF)Q,dSdu:a1HchKdU@Gc<&u0c=4`*oHFDF@p<?(NdEBm+il7L`%>-=TdY:3INZ;p%b(G[6g9=\(c7HX;MiD=lUYplD%?(*\43XTb,ClVtnDG,7IT;E'USOH6$L3YgGVQNHbd`\9i9-e6K&S_:kBu:K/P&qp=Jr_2%FkeE?B02pR(?j,CBfV).SM(m:Fh>.S%n2l5Z3H$0X"-?]JW"$B4V@Di)[G>9j1(q!'r>]s+2OLH1\[qL2e$Gn\(^&Y[-L)mN,"J+/IYJiu*p(g]kkY_)$"iC2f;(5YoW_n"%*;TE_n[L):+8bF^[9c@7kX.cf1\@B@OW"!tD_q$Z"N_p;W6Sk850A#R=s"Jjl!r+;3Bi_KE][EP/@XI#6ZZ4#eVB_IVWoC#INqi7%XL+4lO%H=^lW3m`AZ"dQ""?jo.M8&N\*^V"Xcc3=>3-AQp9(qqB'e"\RSn"Dm#R+=caR]1R'rBh<>d<$f.Son3Kj*mNH4L.D85nn%>Ubm.JMh+G1hPA5R[Xi\c^:14ou/mXI;hnVFSCp*m11r,_5poac^W&B6\Q3FG(!@7P9Xib#JSU>4?'&u45u/_jb2GJ,t3\Wb-l40%;@ufMqqM:3P\jdqIdju:6B9A<PP-b>fE!GU<`(+A7ESrV5u=BDAK49rPeE$>HGu(dg_jam7E/ZRj^uY])&33.p+gf>l2&_qV.@cj%4^:V1j5/n^n`WmCG[+2>`*mF,k\4G)A:gD_'LN1QdM+?5oJA&.,=PC!&5:I"UqS]!oYeAD"?l!2`"\aXjtKS,.PmHiVti5HB+0&(%]B,9R-f-[kl/XS*oQ45/Ak%3'Si@7X$pCk_;MLcZ"E3LfFN$k=Tr12IA7Xmq=d;"Yg;/4"k]W/F5"grlZ7iNUW;-s9l&#q&s-?f6%<$Gn>*d;1DV!<9Xn0g"kNuH&-ZF5PcR]HtQ]#j5lTHbN"g9C75XR0k.04Wl<2DJ!s8O$3l#[Bfa[T=4<%p@UmC$*sedY>REAEi`T%1JbL+6!SHkC&=&]2TM_8S7mU-D&BoQQ8T.1#$K[4R(502_!u%+gV.C\0s`\qOE;LXo\X\X`\<@7FH*Nc%)$^q*;OmK;_pLF8B_<>%C*P5N*7[MRY(:Z\)`bHXp261U+aN1NI&PN?XBZDRndDepEU\T$WS'$AH9+UAG0Q,rOI@b,i>[g<ge)\@XlsmBI^G6-/R:(u7WPrm%"?to)S=L!/1u:je@(YO]gQ8`)hqLplo>^K$?8FO$nsTl2Ph/UUj*mJj7pT(@kXehj$$mN[N%71E.k!h^WWA3UmA[otOeSaR]k+#'%.E:&'T-r,<bg)ELlC"4+4u&t3qom?lr+'tG$f[SFlbgb\1K*jm*U[8!j2aN+jQTg*Cmh9cm5!JQ6me"FOf.AJq&F[+k(43,l1qh,%nQqNK!b@bN)Gd3o--]F79kQP`Bj[jgVs.blZ:13g`nTqR_WO@E3b(_1bJ<WJ-L+#;OguB]0ir!4jD$:N@]#_S.a(L+X(@Qq.tCNP%R<h&]Q'&%YAO:"oR0tI/WN.%gb=l2[4gR(&ot9hk1/lNAO3H,FHCLm^T0T$J[4=P23\Bf5VOmZAD')k*IAH+qT+n,9]aIH]F'<=5%>WjUL10`)IUs.DrW^UN8h``i?fil"2Pca-'Kk3n\UsEk:4[@0@ZQ=R-lUc"2Zh:E_MqNF)GWrJ,[!.A\2cfU.\j#K2i91hs'$4UW%:AmGTl@UlJbgnZhd:_dpY@G^MUPb2@F)","N_\BJYoBgO7ae`HG[3(:)3B]!_XJM1/L+h2ro6-7MJh%=<T9.Ha,+/5VX/<j8&$Y!%?$B[Z7UsIVq-#YWo(@h0L"TY[\[&V8I:__Yjs=NGT"=@\U2:N8aj[+dMj-?#[#1*<p9ub&cVmI62s<a\;9/)AAa*@L#[)J>GKeLA%*Z&GQ[''I43ki-sd>KbD;tMj."MH@q*U#qg#ZLB$M@"QSd>_Y-??TbudtM_;noV]-$a[2U.P";]8SlJsAQH6.Sh>^=f-)D&MM?PI%W6;4%NC7(E%;)=e>F2,.VOfTlFA^1gRP&;D)elnM\%V%#H@]eA*(o$Xe%R$3:Xc:KVWjgM-.?s>o#!;T(AKRXV`'pAbKbLN9O3km%RB*af7_(Q3"Cer[lZf.FN-&?-g+$BpolfiZeccMLNchq@9\5"f)bek[.'4_"(Ze5clh'g'?/%^!BU@sE/a?u[c5=uP`fRM73sWp]%7K#mAlnYT-N1=2K[8kL).dNJ.gH.97/'=0PYpSW"18m-kS@rU%RlNRb+_PR$MfSNc!=WT-7F)1Ep;6g%ZM(#:L0;-;CC9poaP+h7%m#KT/0Vp4@03leb,h.S--?\MI25KXupt613VeI_0DbHQ>p?)"jOn3`gREXFGKH<,YFCsYTVXC_]/'BJ*,0)EVf.RF8aqkLCU//nT%XT:h%mZ\c\\L27NAb)Gb]k?oeG"!_GqJfpiJE/k/>8bo!D2%[r;s?A\/nXsOH1.$4B8n,iLX0\2)P9$L))I%$PD6o9_ei1=[)$Rl%X;VK(Pi&tV%1.AY9n9W^p7B4s9c:Q^N9T^WTHC!m?IXm%*\Ts1GGK8-=I%$o>aWj\Tp9<4kGtJMREsLL2P7/iG%*@:<=(@KYF7F`%2ICU'R*SiG)s),lA6(VGeAYrVhpb^m2W&!)Q`5A%Y*7J,`XS?W2pL89Rr@D#0t:XNfmMgS:c@33Ae/MFNFN:;k1b4:l/&l'CqdkT%0W+D8Bp#BB;m2Ca4>joR^(p&-67PdV0pPsNnTe[q\$\EO!V20mQ#GcmkH/kn9'+fJg[j9fgJkm=9"k"aDKERPCXE2\j`0.,B(9`L%c/P4):mf3XL+JoNAF[$,JQ[B\Yb/5rVLBo!GhUT]/C$]^bi*?+[mgj7pF^lt.`Idh=-[Sqh^\o2R(QLDBU$0aNY(=><=^&?p.?oA%jm?&*'D(pdB!mc1Rlk<8+`D!%H$eYO^[a:Ko=s\HJ8a!<s#h*'VOBTUZ+-7EYR\AO/Rch"`Wq7J>O':IlBSIOR$rtB+D323Q?q/0%X0MAZ1K-VDHiCXml91Qd#DoD9Xf^I7e6F-Z?#kg'F<!^#kg$e!lOW<HX&$4J]H"155%32NQ3W/o(:U/FclRmAi@H.adZCe84gj!G%H`P^s@S01,c[Qa59g`]a*f.p%:ZJgYp4/ZWnk)sTS4qQ04DGfr$Zm8IUIC`X]e"=5D>&8GGc"o!cq:f*Ji;P'<S]d`-/$dg@ugVB%-6]KGG<IYW^pa[R,.h4RPZn61hT7'Hd;:XEKCb1?(>k!6CrP"A,imSnHUMU(SQs(,db,9@Fb'P<<jL:;C<8q^9)H[l$)qdPhaGJX%PR$2^KD3ig`W2NQF@\=3kMYUbC9^s-HB`[@G*fH\AiIl^p'hn*:`!:o]5TZL()fRM3EnL-DKBGj+"b+R+sMX$giHr2FnN^a2sQd.%e/j_CN_[tMa5TKGd<Wt/$SW?_()\J!G\*tBHhC]JXhIP#aHULV6cud^6I+0>(lime<j`dG4d+$ROOg!bn!Mph]f%DgHi7\JP1g#t%mC?<(K'-US`og4N:V^4%8ns2GXU-MII0=;/Um?Rl*0Yf0XUDOiP#Ofoeu]k1H-96rgg,[m1F8j)GMWY4q_>Hn""(Wm`P0?.%u@^X%?HEPGMs2.P7r=0`!j+JkID.JFO7qCtXAde9g,5e0HNS"K0bHD"[6!IDabGe?o+>BW,c!<[5BG%Tq:`<&+<nF+a-9d1Eo+na=i"r0%?%_a1CCRh>/[W;Wl@HkHbZg-PRj-_?NG<lL."&H&388T0b?V>QF9WCW6;%03^gIBLLrO>_BV-V0#3<F\9<q0-#?)G,#?t-I(>l-/%nKA'EohKAkqc0iY1q=#lWP-'$KPFU3B=goSRHJCo]B2@f+qj;=mtfL(dIoh!D/sb?;gUdT4*d*n(el\ij(hN<[M^=Hn9p9jC;apO%r_bDB:&?IRoif-.%B5B56E1jhKq5,X<PR,6Y[o.*d@UAufJ;!T0JV)s[aeoQg'cuS93rnp7MAJIpcRh%b-H;gp0Pc(6WUr`2Gr&j%3tn=BmFu0h1_XEaG5m.ob\P16jlN;*'%5M*hZYpFF'B8S]k-5'EcZf%GKD:;d;]_'U[sjG'P2G@`a`d=-YtC.+Y^G]003qQF0dC,%T]cgFCdV,uF=&Lk-cM=3et2mo0H91g=(Y>*]$+21X1^dD]As^/kW,'6nTiVge7J?XpjGoYIb;\ahGA5fpQN:Z2TiHta9J/Oi%7Pr%fT[d27?`f:DA*m7qsK9;hQ+o89kl2?o.E$kX5n@VomqCm8!ITYi9`]F-*5t'd6=oq]@725a`E1.(BZYOQspc"1tn[k'G$=>brmFT%'3TUBQu"k9S6GN6T6G;](+G1b\H^X%[6_VR^<X.SCDEa$)j@Z_c8%l.C!2[AQ>Ej1+nO?JZON9k`<e'DkjjTE6pdV.GF_k'N,K4>%PDr1.;f47Mo1i'..)cfefB>?Z)&6:+h\Q5u$`c505.`^.l31hfISPG^_&:>I#)&c0Ut(:l&juks20YTn)6?FEOj3aWG?E)nim!0U%Zq@S+dks1I\Y("ET?LIW\!Ri[c@W@,m&2kF+o<V>kdK*4JXgSq46fODc)<8:P`XJQH'^2mhl9(!fo<:UP1g;^gC(2u7F0(tNR+BV%:m+Nm,fl?smG$^hjC4))rO;=o2.T02874bu??+DnTYMgO681qQClGO1R)\@hX1aXJ"S.FNoUJV,pcRgDL"R/'k)=O\GM,i7cI!Ss%]^*d*ZV=kTbt4rF"XTQLidKsJG[FN7A+YQ,g;m$qI%jX34.,ls>.g\t^IN[ClN>_<:1<g5*D=(l2I0rgl'fQW@eF:%OUhM+]276?%0?M;"jeh`/#*G!\c@8?cFr&X6M5f@5Xu67RH'^XV#m515S'X:UHL8cJ5iW8/@J*[O95Qps?#m<3`#:=)Ts<>`F.lVQa1Pr`qMm.I%<Leh02!."I[]ELSMQ!smR4'p/aE]/*OqAoFU2+QdEW$$m)qOFD$kd*p]Clu=h[[D&hYhAE:AZU'Cm/T!37$8m^7Wtbb=i5Y+G$aG%](TU%UAM.f-4U[0X(2s:PNa!X8%kW:RlO$$1%3hcbg[];Z?Q=cC2e_NEXWR[/;hAV'nmp$&qWCN@8h:8`AC$X?gUQ-,`l*7U??'u%`og4Nias_2"NDQM`k6M6.l4&g'G_bjYdmO84NAR1dmIi@b,,pFM'aA_,S2k&f3UjDFT9nF`'FI86n>iCVJC-&jE3_)2Z"U_#/"_Y%&MNX>kl$u[bJ"?DgJi+@M)<p`97eN9-+kS_*IH1-dJ7EZ'1W>l%rAPpcI5;FJPIW7Ae#@X>G>?Z,fVrIn+k^c[?l@N`s:0-73\i<%'Ts^c137gcA)=7&dhFrp[5W)QJ54K?`=bSjkWIu2"kh,Y!F\WCl:hc/9=lK2r\bqg"lR8VJTXGM8?3&n,ajJ4*$31gGO!.(8&o!(%bo@dd=0tTI"Of4lO*X5\[W$I6A)=2oq6W<A@dj*HP(P&e@gim8^m17CZs$9uOsqOk*Y:5VY?jV<FSs\Ebi&R_74UD/U2+ilo8[j-%iUB+P]Mi`IO'^J(kkNnqMD^XG0g&k0#eW^(eVZ\V9F8Q)J?V$pojXAbj0//g%M-W2>1%CH?/o]tRi%]_AG&6U]u\LO[^D/^XbWcS%m$.A*Yjtrnqgk:)C.4geWu]/)R1ds%oA9^`b8f6Dfi>VL@carM$fnrn?GT7*KBX^HO*X3*[W%a%=Gd$jSL;'<e34(EqAdC*i+s2[%8jsX--mqSSADod>`k7?cVV-_*f\2:8!dQ%)"qiK=cog5(L"V%[ee2#%Qg)a5iYA&e*3tX2/af%d/:o/Theb]b8?3%#-&IFGF8e71%mGtapA=hFT=mZB5hT;a-`)qWT)P+oR:mN[Q.1fOmK5W8P]Y5mN#13(+n$<Ss@6q"dWs//AL^5OO.EInNmmXV%(kA&Z3)UlsOqhI5%VJC8pZ`TK@na+5(JrKL<JB\l*9n(!-R=MEb=sI]3-EmY9o=X`sXa?Y,&q\(*_A6J\+JL0J$)kCgM[AGYXlqa#Y0hO=#HG)Hd?0C`%R"d'=9G+UlHe@mF*57!OO_mUjR&m$R,Z@#`3[/Bs0b#ih1%(b/(64Er.pC>A10rpU;4I'j;>eRHF<k?[VGWIiBo-8XEKAp&=5/LP%jljd'F'`qPX]eLI0dQst,Jo``dh't@iuVrRiTQ*1U(og=dks=M\t'f-f,dR51?N?o.Pe05a4Q\JR"ADOat$Lhlo*u=+hL;bE'#gJ%6El&.fFmKk7'snd#WB,1!JMMf&Y18r2)GiRTKXk\*0_$W`7YsVH#!i\f^_S:#$29>R3nBSN3o$N=->!U4rfe!+2ec;&d(:3D;fGq%I%jX34.,ls4PgOT=lF=]YVemip(^$Q)C%DRpiD:uD(m#1Yp^H'<DZVWM+HTM:r[l.7negOp8GM*"%)Pb2CXl`\H_4?+"5>?#D@c4%5*3,>W:8@Tl`m:gCIF*n+VXeFC6;O9.S:6a-l`iAQk/86W5N))RO]?iP#J_[YlrN5\eallU+B6e_ST;7;g4,NfV>E:<.QL\"19=_%5#>$!AcaFDK[E_`Y:UYMVjQQ[X\p^qF;(4c4K6,,bet(aKF3bp:Jh9FAD>u/Pp22W<0Q5X<J2RWN6tK<Y7]!s$C;?#.YDHR8:p%D%Rn(,i_IUU'i9:mI*Fi5K"K$ufP_ui:;,2^U<Y`c5',HVRWa6p;75Z\b?<@K^Llhhf2)^M?79-d:W&%pI5^BH0n(&>oCas>m_8]=7%;,AdkWh>q/;aN1f.BLGfV3jj`@]I,YTh]luXB7%Zdks=MH:M8,U/"hc\td&N4<)GY'_R2i0j-q.8Z%.pl:mOWpq!GRNHd?]\Vti9%/K@g'Wm"k^`b/0'$._t?1$T6a^)@V!*ofi4YVGDFeRGhAMNUgaKM`hk7Dm_E'l:g0W6UC$P?3;]c\(I?5*("V?++3E]>N?1ZluM4%gOQ^!J7.1N_qKjMm\Ei^P[mBW$o994pgA2Q.R%72g++#k:0u=_8enZg?/tOT(DLNH?7.;loqK%(h*p)YZ/qI)[V[+f4Mti!;+[L8%`2-6HD\/=]'@C're+AJdM[I]O\jkj;=)[7#l^]a0l5DACl0I/KYq4Xl^YX]>A,^dYMu/sWh?i-'[):Tf2\F#a3Anj\[sXoIMBn"\%Z$F9rq]MWn>u"MWSGdmRo%1M@dodo*nM]"fd@>-g[CPZlpMEG,D_j-)*A[-pZFt@PknU>a3LR&?[A_,Lj_XIPO*/VP>CF&em5mA+%fmR^1P1ra-3*d.)QOOm+]_>iGqt\5\1D)'<8_d`k]l@LbHqeWrDo'<Pj;"b:1sU1VT1;&p)K#-_>K<a2>'J']<Q1JOFI<Po"+/\*%14C"3@:a4('+Oro3][%LlNO,W7o(Qk_Z!MTKiZ=O@-U,M0^!af<e((C5F&J:"W=Tu;gc`hVpr/9iKN?Y.ALP+)+Kha<"fiUp2E'o%on*m@GEpYrH;hp1R4s_1\VB5IgE+&f(El6R3ir#AD'rR?"?bUCn!^-*P",f?EUd1$R4S$kO[f[<,eE=KMiN30MU&sTis7qkLdlKT%7+]dJ@,(7*I^K]9F]]Ti18G\0EN6)LCpf7PbFSpVc?>m`.#+#/HQ7BE8k9@\,qK8&&lT3TV=lnHQ+T^iiAm=/nTiX)bs5os[Ga\E%C2oSp2;?^%F\bAsBA;iV$cT*S)Y\6r9F6QLa+X9`A0QmSbg[U;3g3LL3r4EQgZVhbVN8fl5p+$@=H'r&dm9l\NT-i\E]K"qfM\Fp%T[c"iKY^'0_s/8n#2^(m%+(pG3/X?@U/d'tR',t)e?al6A$..e0u[Tm/aXa5p]^`Q"cTdVIBpksH(0/U@2_cc,/X/>%VrC%,4^#H%e/7=_P"2`JJHX.R1_7*0BJ?=E3il&O))A?nRXf08Dl5`m^R]4#mW?\+W*]I7>V]/C@YQFB0omZUQtf9rEC);R6nA+.U2+ilo7hRM%'@%WLVMPa"o'CDO>J.o&Js^Io#69f>nebF#[B:UH9U(X+!D]"X'.9NA8P[NM^0*YILi.k.)Oj6ETGHQsMM/qeLph)>n;,gSM72Yf%m2&\<('Pna[T_o<4sqPkeI<PMej(LX==96bj'i?U7ACPi&7)&H1#'S;/J^sd06RQR$5_S'25c]ol1f+uQ"g+9:`O6IM\hI_b")iJ%$+)QBM'gfiUrKoH-FlOFjE<5"Oa42&rHOR:]"SfW_kJKV+-'p`8uT1aDWk+f[C*eS7-cc(6TL-9VFa=[9M/Eg?V3_k`[S=8Pu,RK%>1%1B?%_a1Xi"//%6Y#+F4C6`j]Q(6L\DDI;_VX#5C*qX>,qp><W?PH1D,.orJ1T%nLp=c3XBJ:A2ch-d40h_9\82bjL(kk=Bj@&%&IIsl^\*8WZjaF'/CX`.aOr0ZkJG-:q"HKt-,dD.)=]n@G[_P.C5n-oP>B:-D?j#TR)ce5'&tb>%eKPDN\0pm/f'iO!TSN1Qu3s]%>(%8h)eqo!,m9L1YZO#ZQstVlC6-QbP?5jU4=AT8^)",56>le"U<lSq=,/+t2T;CPY991aN)%<=0TF:YL#uG-JaI>_ap@9+@AB0E%+r[5.<-';M9KAB>h!a13L?A#$W5;#i*uX[M_9PfJ@L8`0(8f.7<Stac@i8,_-EF'eacm@d+2Wa\)oOR$Bqb5)(*N1*<qMnUfD%Jn%"f3%p`-%I!%2F_g0"/>KV%><X\09-O0+O1Ce;kkI#RV,O^5YiLZ-b-\`pI`e-!J]5n6BJpLfY:"h!UT7fVE4PP]X0mZg"--iQ(>W%m;1urc:/0K8.lNnm`Q+3\cG4O`i7Orfi()V.`E#gfB>?Z*MqEHT951\Ci)2W[(Kj4a0<Lmg/7SJE]30K$,o/3XXG;`P`XId47APR%8"JA?!%(W>B^(rP!BKW4P`4P0Lp#.5Qqa9Y>[l!G]35fMknqZr_CrlUTKK%#NY4*Q4<f_%Qs9fY_EiMtAiN4(qG!]RkWIu6jVVP8%3m<@dmIY*Glp>YV8&Ioa^p#4"Bf2QF,Z@#`O@p!k!b-c>JD-2<J\7-\4;ZI(5*(#HU.hR:*S)"sR.O4>GK:Y57M/0kQ$20\QF0d&%nT%N$$&Krh#n&=!0gRH]m7C;H?HJ(rPNa!X8%hAt-N0GEo=S7!<-V6ZBlZjFF<-I:D'qh(%V2tl5q*uYaNoNEo-U_q/5Br<i]5+*%>1%*s>sn46pD=+A9,.OQ_N#JR0Yu$tU_/!U_pkKV:PnTQ;lX[4#8sWuHmp6`3sS//k!L"qg3g8[X_emdO[h)sJHX.R1_85&o4@7j%-:U3of4=;Y3P;tg"0Q"*RWc!!.E(l['1i3PN33?uU-WQ%QlaA&JHX.RZki-lH<k,t#Z6.!aNGnlh7Zg4VFf6/.oQIaD^pk6_E()]%.'"MK8MMLo"dlMGasJi[;-Ks4N<P]^8lk@>M(ZVi`,cW(9k=:!*q91,3_+$GnO27`.R5+hP<E,(E'Z"X-,l+1&jISurHZeldH=S@%.n9g)'!7>O_:1p9_:CPpN->@K!u^\HaUUjJ6b0*X=R-T`j8kcFcttf&dfZ'Nnfgdp0JXbeNW-SHf')_+[?Vs=Ef!h=RnVGl4QQA,%c`i><A7:tR!Sa=7qs<?j4DN\:_a)Ko=BB:XZ*t&d0+\^t3LQBlT*#kV)Y:m^DWPE7S>'#@-((j_H-?L#[$<FE)=okaon^1so3!D=%`Uhf%_b?;cDs[]PCc9e)A4[&=U4ef!5S?qN8LCiG3#+lCBLJaiF:G>U]T&l8<fR]$b^9$;(e*7!*Ih!'oZD+6n3Fse5(o2<p=LTV%-cu^L#DAB+e;L:oa'\3K%M-o8)UWI9?)."YB@LNBk(H1I'5BQ44e_F>5u4EiBf2W>9NR8\Jegg_ai&GV?4*--d>FNZko-0a>u6@m%c9qtCA,^.G:t)O$a(4b&rbS^,M6bAF>=9K41MTH9&Lj6,b*^KsM.qf,-FL=%-;%Ul.Rb"EfD%Jn%HU^Uk^A[MS!,FQT!"E&<o7&(%@DfAN+D8;g;'OGg6kK_Hr&`X'*s&AprUD#8=Cl;S"go)dH'^Xf<=1"=Y+^-V#Kj<*6Nk7uo^(rrBWp_oo_qSEF4g_em5d[a8>?VO%,`.=.*$WIkp[#jU8+3(pbo@ph:Gb\K"OT*<(:,$*mhONmjI@rCHQQ)<'i2K>@(Pe(pXq/u'Sp1,HTh'.`E=sJgam9%N%1P^Z7[)c%R@<561('pFF;()J4@MCkF3L6&&gQf@KX,KP_0@"V$H.</;'OG'6lAQC+u9Jk1Zi37@[^ag?L:H,[?jt:$F'`],rgsqhJ_.bgP&=[%Ssl$<+7nK]3P1Yqqu&9]X#\,2`'bliS?Qst9T4_nV3pLIZ=5Z,FH+VA?;[*7/4VJXKuC^"`*9n*fF-u["nfrC:b9a9l:KDL"SIST%.EVo.9i5Z([>FR4>bVth-IXh3%s^ZN2IQhu_WJ:Hc[[G5B&D@p7"i5^S?W1#*>Iq\@^:lC&jujLm)\Ls[Vmf29tn(i2)eqK?uh-*%.@+AQ7b;+XZgc-&<uIQ?@<;'\D.ga?HT9jm2O3?hLk)!i3I.3_CpZPp(.:J9G*XrHh-:SPh@Wdu,<F$=-u<oHc>jSe#@&dKD07IA%ARUd8dpi_Vf-qUr!GMKg9MEUrI,+P=<cQKfGR07%b8Knf.\\XQY*p;tQg#0C;C"PMNQi\S:m6mc,Y6SK8cg>P*S'!,C'3ik-a*Ou%BG.[n&\V)<eV%\#9LM?`"E[aE&kG]kWstlu7VED[Y@s2q$)VKc*qbDZCudR!`dIR7cFdI-C*00.$1@n1I:=>R2K*CDF]^5o-HVJ`%$tK_b@f0A&6]=mC]n$:=nqpK?S4qQ04R*r@fuW:K)=p;fG3"sUG[l+c9r-PP_3)q.D=`LKMmQZ_U*Pj$/@Ho_`!Ue;%'b[rN=B-.%0:-?@\&i_$c9erQ9qj6ZY[fV"A#qLM%TI[_X@>&Vp/h<M-*+G)W"j$RURi_COb$/+1ZjTiaYY'Q*Ykfr^X"ue'MoT:A%<&n"!1=+%%B)c02L6*H85si/<uOe@Ibb0tm5d\<8>?4Y,`.<c-kAA?'bOoTdBl5mblKfmjARsG/4"B;c@s*.$ZD7%=4MYeXRB0XD/-dd]a&R)%eba.td\?V=ocELk8bLr+&9OrH[`Y7E]a&R)eU(HHna3&sYL^#E]m0e[pOlDR4g^Q9cuu>NrB^C+C>R,\KUt_u&F."DgS!7qU(,95%Ci,C84'eQqh'UT.\6e`ThPl>am!t<\-1;AcSQ#.ZO=3.YmqDqgHSH,c-&S:u&4Itq##TKN[o!iF?I:5k'27$QHI[?Up'g2hN4E=4%FmkC<oV1dP6/aK]hU;b!p>SXLKYN3-+kJ$;4X@_ngeQZY\jRK`9qH-:^%Qk9ch*tR#^Pa_QsX<$Xb>nhS4WK^<YW7Q;+BJ$!>hr&%If:Ai=&R`/V3;?;IMcXo6RKF'lQUV(:_ASP\_V@t-n]GtVbQK6'(eH7,^D$nLtR]CP4o1rTebak:(kl;6L.2UqZdk0,fEKZ'MU8e%j6J#[c*'r6b*Zr_;-_u=?(:6o-0ToM8b-1g&@30O6D0>a)>k^9N?k*FK^OsJp(+/J8Vj!>'Y#O>283DfhUYSY:6;\7jF*s[Di1qs%!f/>u5gCX$0.Z8>Mi#M?TqI@T`/j!N%p&dp`;Te6+Na,j-A<'hfALtsqhd]t8(d$72cQ/'/_hcdT5FaO-II0C6.)8l"9tmgAB_H!%6o9Q<Ng^ocRNn_DQ!t&sCNR8\rA%8D-"F*.6B1de`hK7s&*-F,pTfCJ]pKE6/JV\].%lB1#aH+32c*.9?6uZAS4qQ0HKG$]6>Am?%'ET0%R'2=(BMaO,aI/:]AHbeT0bG9P[?32qa:QhY1)anFJCK=$OpsbbRVQlUm(GCo)q?b,)m*a$bV)n2`hj5/O>G#8B.L/5`KUpM%fbQKcQ>J@9Z"7/,NSLHbY@pANa`NNG(V[B?OeKmb0c/</+YgaUY.$DYLH^5EakeBaY:)i'&86(k)ad1q6t<04WjRtXS8sHeFIPtU%i-NrNAYN/#YW3CE.5S`_TgD=*H6?iu^6]RFmDVJ(U/kjF>[gT)A&qKH]ocK`nqpHsRUE_Hf?<&)ZVGX6=Id>AC@em&e;nAN6$`ND%P/!=qK^HaB&>&,OCl4u)82T;4#.-;Q8-aB-)`eFsCLk-XI7=*NK8fT!";%#?lX]`87N]F6[-qEj;1#TZ,`XcRL`]/1ROJ^u:g4To%2P<8k8hL?G+'(%AD_=?@T@a4EIn7d:$afmV6kA?P](`L^UqN.ObgcL8=@i(JBnhR2gRG&4:TnGsU'[]4I(f#tp$5*BhRr<2mqk4-%074;k9Z$P0Ju$)I&oo4E^W]d<HZQb7^'A[*iHn_TF#%%]l\4eEiV(^AhOEsdg^\o2V*NfV1A!iW,^V0p#hk1c+X$lYO:Z:WcO=f;%[Pgb[Sj(OOq+WU>**Y(A^FYTU&lr8oL\gRbJpUDrU'a&F1MP^h$@;Ck,-Xlk-t=mu,GHJ0JCN@@SKKp]Wt\2\?)-^sn*L_VdHh?Y%A'bjV[j-9;S=2e:!6uj::Ep5#P:.Y1\=BeBLS,=0iks8\DS]FungPH1h]TLeY#i=r[jLQ<$+!!VS()r/bZCHdCo4!s&*-F4pTfCN%]nhJ4F6?haNI**Gqqdj8Zh/YGVj-Y6#m1L"CM:ENrDG=,Q*@Yj.7mrs=aejm3qP\_UjFaF.,'l@5f$u.LUAS-6r\Qf.5b0\2jKn*%<fA>lY0lpJp[&gbGd%kD1;FTk\*lVH$Dn4pO>G#8B<.sVacm>B$4A@-""^;^;Sd+O:f(8#d>FNZko*n^HZ+@e^94[lA9"S'^MG'a%9-nm,B+hr)<j)!=-6arDFu/9l\7-q]SZDGk"a8uBX\q!lFH*J*^0`c.ib-JjhB=el`&os^klI;Gr*Dih[O4j?0SD)qooXG1XYDf]%elIghdj*Mdl(GSDX;AZ2T4.db@m9GnXa*PV2E">oq>eedInq$Ig5@7#(r$lq`i-M*eejfVCFdHokn/p=1l8B/p$2:p`o28QHORJa%B7AND@%M-*5gH0S0.Z8?Mi#NpiVST0TY$TB(mnBO.u3TT's1@j_/t[?=2/*c%c:pCLYXC9?P+BKV]7j]1TB9T$G,q?8dGXjKl&R6%/uC3)kLJG/&U\jm.sasfCOEhp^%p38hj`q\N!3bSQV_1Y(d3s:M;QJ`ZM%a"8;SE#L]]%rZf-uQ2R_iq$bAa,jE<5"OnH$S<l)cM%J?T,':dAFF2Q-@"'p,*oE[KId=[CD@9LO&pAWa2VJq?Z8Ni?E5S'J=4=0Tip37CTL^$P]<E-rd<hQNiur,P3_+%#T"c6R`i,7*"]%-m9EM&@Qr3?:9-^rn6#N!<TfrN5BH$>\!)Bn#b5J44S\!]_1Y80Q4@:W8N"'(r2OrmqDkYHa+j77gLm0*IH5%e#i5f[Xak\]['&h%3JdO9HF`q7i!9?<o=O\].4oILI-^Z.J0)e"o^68o.=3cM6$qd#LO$Y+9]g]fqm/F.B+hl'<fAAmY4;1:pXLpS^F(QXgS$3;*>=c^%LB9W#1C;oN.i/p8;aMo3%a=cF9??*SPBhY2#/7POj@kI*Z@_7K]#N>phH(DF8B/;qTX]C>2bFGL!LuaN51t/q.@Pp_&g:9ro`B_5%(%EK#XT:GGhS$#K[[=56om6@dMe!G9CKmSc?Xitlo]HT`a[i6l>IgK,R##_78r%Zm6)GqD^o4r#b@K\!XAUmkFH*KU].YBV/2HA:%%$[)3@n]<VK-%gr'^oT90maKY"S3AFL6uN`dh";ICi80QKm]U,r?foL\mFsAE62=>H-o$2q%AV=,XYqKj@s+VZ@\a_QkG#A93A8q%92)U^/[`W!DojM5d;q'Kj6MEfc*'n8hHXtf',BYHqfaQl-pnO+9WIimJtBZC'&n?f^l'Pe$rL-+Z%;#'>bY5=4.*V#HHH'$'s%_"%Ff1Ch0<mE8,4pR>==$s#/'-D%M$R1IG*oI\&6#Z):$lp(C\!?`.@OYU`n-.*gCR;J?Q&I8M$!9[MTUf3oK^]tH;?$ug63s1W5""F%?8m^SN7(>CN@_m+'WpSD&D]b+Mr%ML_a,135o`M@QT57rTL07J9WIhBJtTf5&q\LR@:P8TLhVff*]>rt0M"ARU[Xa@fB@P6q_CUf%R1V(gTeLBeFN^7TkQ<f.jumRSAhTI'GgVokY8'J^7Qm`Z7M_Qe-Q1=n+R6l0p$V2W`42/<3C^'J/8rZAD+'<Yo0CTsG:tHpfo(^.%`,Vu>q.Q%\`Yd*$HR$SEjAiKp1r49nYLgD4;%o_.:mP0Fd%AW]6_utN7>XS_+t;f1Ks,#r4DZZ>9s85qU'[]4I(eCM4au8(8D*:b%!\)=I5]c6P:k'P-RIopR<E,C&P`U_BN/W%k5YP*u*Rrr!%S$"=YV)BaF;nSjG@._486B^,Ts/p\mNBZu([WB?8:@q(JeCHS["g&>%^@Oi_fH$dM["h1Id43*J9\8KS[JM^X;C,hUKL08GVVT\Mqa5fR^mW^?AHX$#&L@RK.`*Oa64qTZE[bgAU8EfQU(Q2ccS`.;le\5I%ONtt8$f4-NhI]I8AjiZF"$)Rt]r[l:0;=+b3Ch^9H8f<%65)lV9iTE3;`(6+,e?IsX5+S/#gA\)jJ/l*M9UJ`T.et28;2BD5f?tc%$,M?]@G&RI,&HpNCYB=JQY8gsa`IupQb#u%3Fd&Q+=aQV#jM/4T-7#a.u;i9.3Z@M`-?XM`*:=VdX@uoY`e0W\r!VW\kaDc@JFe?%@32%Ol-Sb6/[]n-2*$$2pcnQ\(#WG%&`?<`B(Wd&1UKb?"Of60?LU.,].t.BhN4)eB*f4Cl.\XpH5T#k?:5*n/i^-2k(j;8-+9[h%QX!-PiAPq`Z1X"K<\H]<5%,Vh%Y=F26eX\&kQ.2Fo3OnJZPQJ*W;fV/JndB8-7HL$\OlA\oSH'0RmbllHI;Wf8/($i#^L\YX:V)O%O7]H`1TV^30.%n-_+n)pO_!HMbP'Aj9s9]pUC!f5I(eaWlHY&O[4$HK<0U:S=5>=-qJ>86p0o5_3j?M,/43*.;5X%hG:'M,F^44W%g\?*Jqk>+U_QXW?!qQSbPpo(-[%j$up"@KqT>X,c>FI>`g?iF.rQ8l8H^a%0Cf2ZIEt,;(]XLPo].H(Fm?*LI]X\NG!#GnEE_>pe%)nF7mL_:>i*tgL.('tS4^5F2C2I`jYnqgDR#&/_R)I5"C?aPku=R<f"_L008D<fIM3Mh$T,O!gELOf)<B?[hlP6X1VeX3dbb9^>g%8:p%D>;(;@SaIpJlqPH'>K0'^H#qeB3_>#HaI,HbAHb)@&J5nc7]F;Z8uBN`[)Ge>\KTNkaX*=M5_A)9>-E3Y``p]7HR1_tH[?u`%c$LRGd_(n]eEfUlAA$I*[t1VeoA4)-HHgdZV_mjRP[_1:hQ+2gGou(X*H9E=a,$j.kR5FR-!!el$JL[m,JE5&7Um+VE7MVQ\8H>$%\8'lYWJdk0]XNf>e\&ArcsH>#mSp*0+2F:$mqDk]HdO,"7e>L);m1IbZOX\24chI6hTLdo%p.#&[?ic>$[8X!%%GHi0OM$rSMKh+%gXR`R0<<I+(D-Xa<_nhG<@?$(He$g#_Th@fLc-]BTXdPC$/TI[0gjgNUV(uj$22`=kJX-Kl=g>PHdO)AI7@\5/eenp'\/X!*p$;.%C0lh^&m;D`D\'k9.Gig3iO\s6QF@+:[JQX_&*-EApTfC:]pKEF$NCD=@K&tWlCm$peps8^mljt'mpPEjldY@iB2N(=ZJW'qOM^R3%V:rgSq0=)q;S/hAFmR4<"O3K]*TgoVR;D[q.im:aO>G#7B.Lp[7+^@C]mH6&^ZsXa("&T/^%pONh#f[$hL2j'_GNu5\^A#Jhg<%`%>I2iFh#f[$hS$#Sq0pl+=*n*=?43D=G"B!rX#V_JOp&H65Z+FC)gUg!+sL9Qe6sNS%\aEDmVHa(qE',"<Ji)YY0lp"pKIRG@3Nl+%Fa:')Op8VN5>e@c7aSFW;*q5O:M^PYIdl]#mq6.B2#c_PXlqZfY-IYGpLY0UVQ_9P6V,DT@\Qmb;L]b/RIooY"XSL-&_U;qB$>$X%0l:5\WjrQR-=)3p$7&`VU%Mmh7KDEAKMenc'm%P>MXD1N#BD/rHW`YSSjXHIm^o\TeCqmKKqc35gSF]VVdLdb6$*cG06V8W9.+k#%Y=M;;'U?-TLh4UJ96?;j-r;QILtIV7+U*l>n\cWC23O#(>FD5H'<RGT_:6NVbM:j;]#rg_1=0@i^-,)ZbWV%DakY&H!qp(qaGnDl%Hb;G.qt;@[1A=&Z,]bUhHG3]smaYX0\^t$^%_Kg;@i`7YkI'#M!qii+$%!6j\B<UI)Yq=W?=iQ4ein@I.sem8AFB%uHYL=ZJ.i]I%6<%9bK^aAL(ZP'BJq1Oj'#KH]ajVAA0PE%,9UBE\\&!-FXk1,8esR$>qLP[;fG$^7H0q,a3k^KF?n\7-TF_\Nqcsh5m"nS\gc1LF%8k.buM6>6K;YSlg--5g<8Q-[7T;4TQ%8tWPQPD@D8OS(JQ9*71C.&b?T2Kac+I/Hh<er#W/tqr)pQk!;mLlrt\O9kOqb4A[MXp@(%cD5TTXeLh$'9U/K.q;m=M.qg89'n43]]9g0;Dc43NNZErf5AV=F2^;bb@;cl7-M&7;,[)?.MNW=PRqO&$&`)HM(*U'VY7OW0mQ2<%H;:>QI(e`,p@3<^Vc1a]@u%3Tkd?IQ;YA]m[^_GK+f1O<a6q^#'0C;7CYZt"I%jX34.,lsHGTJii>4Rcrh5%Y]Nr2$1,\9HS4W9X%<`$+=;*sck(,l&V<^_"VN7H_-:H!Wq&`!Z;27?i]?Mi25XB3'T`cETUCO<X7l=i[=HP0oN7e%OhaqN6O<P6rWF?)3c(%4S5NNQ?q%2^+!ENY/_<,RUs@/)h3o<1jJ:-H1=76-ES.6tT37ABa46`&.9hMjg+h*@%1aP<oSECN-uB]fdGl*Kr4M7A6s`!o7J2cN?1kgqBd3%A1sg5?p7'4'[nI>RUW9cm7j+4O]Soak@D0Df?;uC9r,\>QV2IH."t3E?@!enWg?_Afo&B$HHUtH"XL@+:e5>ZC*LbE>1%*s>smr>%m\Q,r@3O>7C&-,kU&7#aE[4LX'<'QA,pAM%-T4<fSO=WOUW06qP8p;/SK=UNhhTcuh:m(/i;mA.o]dkWDfR,*k7@N:!,#3AV\+XL%8L.j+n3G"+@kX_,qu1DK`9;_6OpM51QCH5^Xnu\(Qu7L\!gfqX-<noU!G]p_3Kr%-XIs#UVM%3/=4e?6\7-@D-s,eqPgbn!aiYVO%d3Z;/leW\:3-[sGjQGW$<8K6.j.Q$,O>BJabA*?_QP7W,o>8=*)=um/6o;oG3biQn_)lZe=YZ4M\jk:%h4)tje0,_$nq"+;p(4VE%KAuJfcD5TTXf1+l9F4!.,&H`M6:=2j(i!qr+X3gt7E7]9NNSVZQY^$G`f&>0"SniV0A/N<e7U;sGP+l.P0rU"Mpslmq,2:OXjk%c%;CiW`q^gJL4nsmeCF=4B,Q5&;?F'.!RaqsYJFn3hVe#40!r[GNA7Si\CEdV@4BZL/_H,$a,p6hu\YiGNfnh=iocj,;2'EQHkfG%X%C<e>-$IdH.g@b8n&b/[R&fuWo;4t$2lU60U0M3r&;'/iBDK![_d6f831q&k5d#i7q5#%+XC@a^9Ui%h9kgkXu#hhB/3m@K/A=E8V%qm&@-B2Z4*<Ji,jY4;2Mp3*hf'bdq>eM8OqjR%9$/5*Br+D4T]QPFW.`<6>2STc+:=d2TsWc1_X"`Pf*HeP8lK'!tV05YXmbn0MC%=NKu!8)@KpWICej"$)RP]rXQ/?:4iCk7;6m#60_$_*b,Me!)K8r8Eg?kVej3_=c7Mo8[XWYeuYQFl^g?p/41l*l+2.m:?FFHL_X"%R>`ra.9&]^Ufk.71De62^q*&Td;<^5[_4ND406^!91M2<bc*Hqa`H^odfbj,@S',7i$U(/aqIX.RB&%lSgT;V;)h:ECM:DcIF?'U%fL=GaH8efl:T?D(UX)t<<btiGqkT)oCqU,/;t3?%8JXfkd>Es:kSd_[Cl]I4%WRmsC<0n&8P8TCJW_(&[YhAB9F5^T\r=/CS9SL\%.CI/5W8nVoP2F+*a4@<F-\7YD;3sFf4<aYiQ2)[:6S3Ue6*FTg$),3t1!$q^$.:JA:BE9AMH9A>9\9&c<I7Fe-S4D1.3Xad@`lo1%/m2BM14iiGG_g<f\&2Hp9h[`JXO](j/;IVq_?c<?@(iAL/K]Q'H,;nG4>c-Rm&`iK:hUokR8iQb"j)''AH[VJ_Y0'?QTkBi;W^m)%h^*M2:k:+gcKR9DDPHI)mBuj^(fp#p733t+Uc#@K5>n;DeY#Y0_*k\XY/oi]hi9+Mr)hX9[.Lp.-RnK4.Rb"EfD'Z/HX$=Nq<ruj%BK&oOb6VNpB[$W>PIA0+TNX"GKM_Z;HM7Y4];^sC5hMQ0qM4.HWOP_S.bU$M)IK[bT*.$)5mDs&ns%:ifR+=]TH_(N(@A78-6a)P%aI(.Y80o?U):Hs"TS=0TBpGD!VJCRm]Y.@EG*n1i;bB5ST1X$n.o[fe:Rb?gl[pN-d)$P6lUhgfX?B:[EJ8.JM,n_f9\83KFo*Gm%+:Jkhe<)DG;4uWjOk9^ml"(%SH8-"ofL!U;QjGN67R?E5CdDAR.n11GfD'Z7qgqQ;)$s;Ukf@7h4gjF[$_Mb;["2c$BG(s;cjB6e%o:j&*HaT\Upi7ccdHP'("7(*s[7NAe^:.2Go%8CBR<`XIQ5G%YnnO=U"Lr0U_u-G:&]OJ(e/UCr-`:XC@L8oIFM4]&RA8uiLmNu5%O>!j?=u,\7cD53IXh:;@;aS.\b_VUCigHO2<,3/*:AI;YjEE<NZ1X:R[bhd3(F1P,*.W:HXj6H8#p:r5j@ka1Z@Z2lQkI9B$]*%e%EI^_=:*j:pZd(1r=1"^bA@fe49A5_d7Am@&`?GHG:$/k6P7X,eE$e/')*t?14@Br#SJh$F;,"<_P\b2+d7K+$OhqBeCLFiMI<>i/%0c>%@(MLmZL2GCgU!Po`1TB*WMN[WXap9<kM(L@H,,-Bj?e!jtKc'YS,J">UCM^\gIGn&_$&\o$,p?XTODkNN(EOkT3I4goZ<g3m%GdM[MH(cX`3$^Voa.pS:=0tTI"Of6B?J*!]f_>rg#ht^=.VrJC>@Dk]6*afj$+UYV0BF["?clC$^6Di1HWea;10rr+L$d(+P#L!K%Kd(*hb8/&B`TD`A8_RKOOKB<4Od.5*`k5+^;i+s]m1kqWnqpHsRUE_Hf?;p8NDf3_$\`apakPN7=)j#R4HMA`gWKrPojUN![GHbB%d!@(g)D^_qDl)*u]V6-(?_n[ua4C^SS)eZjS\k*!'e(JJ!n49CK]5+E1C;jcLskrA'!ee+ba=`S@bRQHA9/]*:AL-5(lK'`7+Vh%%gG2B7T-l0(b<o"\eks#W3>CY-S4VXF<fjI#;*l[Z:2GPj3LMd]R^9\%dcYR!)26rn\jk:egm]"%Pb,`%Y8A]9?]HNa.68"#9H*Z2%Jp]_<#ja**1Zek9M"W5He_JHu;beVh`Y(tsk^&6cl5&G>1Zl9:<0L\f)3a-/!,#3>:Gu'MOsV?6h\<MSBI8T&*GNBZC^nIR"R]hi%\&i_$Xr"UWA\<"P#;KFNCI`/:8`&%F[aR162\4tCqY&Ub<LlY`!3Mf9*Te_bON?:@G5;E4"*,`6HWd1IK'=1Z05nT8pV""`rK#=1%%OLpn%';ssbl]qh[_7Wm>#1`KoYU;:E#D*mf\=fL(=<nJ;p+g@aY&>eFr+/^CN"7a;0?KpMaaScgUcNJ:JtpKaI/:[AHgJ-&L@Q[%Vm+"<71fu+:o_'W<@<3h&`!Z;27?iDhOKIU*JI4-*$ZcjNMITJ8>1;OB+hY>'dW+a6tGApNZ%F%)9"H-ToEf)^ql'%#rX5sTXb9Y%X4j%A33493EEE>8j)"hld](q&3KpJVXIrWJVM&>d9%Y!D/<FP`;%.8Ye9MLFMH4g=7+^XK:&B(m&Vn6c31,dGo'79N(K+rgaI-T+%AHg>)0bKgu`*p[`CdKk9IXIiX)f`fiI"G'"-"sHtoud!obdj^3`K:8LOLN9PO!T>)4HM?JgWKqmojUN!%kf%`iQ)$T9fSGhm7fXS%J6p&aSqH8S^0]KASYbLFC^Ci*b/gbZ..orC*l+2.m:?FFH4^aW.Hd<XMXUl""JL9$2c7h,4s_Gn&k(@8H>WQE(+,t8k4;2APIEKQ%9g)?o*lscAm:?IkH4_G+'3)j2QrapL*-4njDrq0;SOuB12i4]bocj,F`Fsh,&q,/MakOk3]fd(##BD/RHW`YK?;*a&NYZ0LqtOWh%@iRc$boA<s=36?I"Of6B?KBu@\r,:HjXP:XOc.:DO>DaKB.I$r'iRG:7./=+?KBu69eUMtj@gclZD-Mm]#N?[golDRDddF/EiCI*%HX#3:RC_uTc6RJ'XeOr''9U.mGK0Q]/#L9Mb\D%3a'1aD-A<'hfALt;qs"llcP%(GjcG\87,js'&=j&H-B\1Aj[,\N8dM9>M%p;^%PGpgsSF%%_T@5;od;q'Kj6K/%c*'n$^1GG6=:R4aFb?W<8Bq;sPJY"lTNs4FK_4j/D7<JIP.Z4teMSAHXWl_F3^fb(F:`S7p"K-%%:n.e=D"E;7-mHEDERl)*k(0$og0RekXX=^3PpaF[bg18Bd2HZ2WO\9A_T=61V-&?6)I9O_Df2\J[(TI"D$l7`nuM4tOP"p\B+hYN%%7KMNP7X@CbD=K:M.V`-2RTr5-;G&u.QJMCI:0ao^%iA?YR&uNg6`fL[Mc3h+&ckpaI/:[AHg>)0bN(eP+46C8J]bj,0=S<j!cPM%MH20p@(OA0/)-P#Z%=00^@$Ornnl!E'6&`V4HM?JgXD%Kojl2N<_s(V@bl[([TFKBp,9(HOB8f`k?tlXYLg4lH?\V<m472fL/a:B%O-j.)e3&7;.GN#ORe7jsLeg9J`2='`Zc1E<)r!@P.$'N']agc#Z<l)<mRtbgB$=lsTd*nFT3.oA4HM?JgWKr0ocd!6VB:NZ0ki&5%4XLrphTk@U3gGZ@D\??NlfIO$`l)VSN;54>$H[5#;b:`q!Lua:Si0EI(JR6#>"%!aCHP-uY.&NrC^nIR[-b2"\4ri9E4r].%QRtV%.obRI%]&5caO$\X2Glf(-6Wec(``dBJjF04A@Nm8\kT&;E4rLSWZ;>_2XD*MK_uU4#p_@BEQ<Xkkd-P@OC/^,EX+jbH)H]sC[<?D%H`M<0cmrL01qr#.-GEg=IQ]*m5g29q-CI+.H0`Y^bq)h_#BD/"qeY@_,`)Mo[I^Q=>V^ju'ld4W2@&;:_Y19-YlrN5\mF%GmR:r+%c'[rfV2G1/`+E"?bl]qhYe>u<=YHM&?r&;Xl<)f!8g:lS@huKXE$f"?)8U1\>\!)Rm44'rb8Km\a3]odS&0"a*eia-S4V@><fjC!%;*qL.R984Dh?hrG?1gpW+70(h-#>4Zpar4UFM4olh2'^W/o6Jpj]%AOD=4M?U=MGg1J-?E$EEc.+u4+mHH(>J3LS*<gO7B0!]ZCL%4`+(F6$!L<(Ud*_$_sJYOB4+IRa3-ENa>bJXNq\9O;)`P_H/EG*&O!KL/5%qTfC:kE4r:ML+RB_n]bm7Ol'W_)n"femYR\]4`-Wq%]f>LWh[RVUq@5F_HGqKq2R.!I*;tt!nhlg2G^;+AD4i(L`a$T?b4.=j(]/cr4Ff5EfujXVocd!6'S2(nLU7B`ONB\pmIm87!,#39%cUR?3Lp#.uEq\61Bm4#2"PFq=Dr[`Jg)g+]!6uj&0-^bQMhoFsAbUk3*]oboBXX\H6,N'^M+/p09#UJOolBd%4sqn!%trtc$R%0q%D_slGAHecR0dVK3)OTq'Quikd?G=nX.U0IH@_0S2bLre0S2!g6'TQh#V7_1J`tY5n<\@?)VM$'4'13Za&Ml#.9DOrMam)]:ksX.e%H85<hTb]Om`U*C,VRh0O:fDs0>Ih&'R#'rnS["*?4[-`!:*46I7%4n57EiLC:fHdFh<'[lc(T)=D]n0'dqsgDI5Z*X;%Y)WGF9:c%%X<6qfN>`,F@fN>W_2Hb`n!f9Vp_"N.Uq\_ZY65IHn)6A5qaI]e<:,&WiS#-9A-X^An.gEVG"3eO^+^K]>C"_mq129fUJ:EPD<iL%L+sMPb6'bgNkMNe:bSPrP]3+B99YRZ7Z?&NYV@8uAF*llS.;8GY$T&<TdG:FlqL\U5sS:2LC2j_=[AN@?S`lP>UC"'JjrV1YoIM'%,bsFB&9W!cg@_LiBP5OJ<`:Mt_qo/Yb&?"-:#1(u;4F.N)8RA2@G"aXVA7jhg"r`'g@S!<oUJV,pj*O!%-r%,#^&Kf*[>i+Q.NO;%[-)!(I<mUo,UC,<&jkF8fc]G%ei$*KdjJ<F^OrMHX]M`6G=f@n/B$0a(r%,cf+([Roq80DK]d%_de$u\5Xfl^)g'`SZ9bL]9l1Mb%Va%P_c^U`hqoCf%Hb1]"fp3a^>,,?8h5@-i7T"FRB@=#N($+VuPRqN:$/7d]9h\d4Z)PErRVhUF=h3Q<\cgWCfN/c=3#QcT)bS-)%h.eDk'UAuE-5h/56)%[Z$%X4ZYg%<,7'qZtNLJTMLa/g\<B(J_CNQ,/rOT8Z,.'j[7*53=ZQU$K#BD.7HWj:@SkMI/Q<>*sqFF;\%QV_F77@>HoA:m.;jVh:*@W0jI`d'?%__]f#2od)O'SYDhJKARPB.L/&`KUoBoE\Z2Hq$eFN8^_KPlj2?MH5q<q1IoM?a!qRDGkRP%(kpV;NnY]-%UF?&Vc<#h;&#!88dH0fM63Ji%\=D=m;-U(U,uYTeY9$_kIJU`CY6[4GmATA5dbi1K1f-LPN<LMQP$%X7?e@.9u)Yk%ZG\;=C5R)oaWXiiQauZ[>ePBq(.322Ml]2n*ig9V-EjfgP+7jRAEcOI&?)uCM\QYW.98I)p:(l):=4lHPNWojY?u3k^-a5UX7'ht%<4r$E>@40R&*-F\os00)4c+h+Cfor+[]Li1/\^m([C9OrN1>JsNl?imU?hL<D&l[,*uX[mJSO`;4E_A+Yt-&'&*hHh#1E.<8I-dW%@7q:E,$L_N:hpG3&@k1Z\kT&;E4pr'=s2LjO:^-$<;[)_9+&fD3Ko!,X<:4jVM'V5ImPQjIm=&q`;&$>,0><17'#Bm0_M^Diq7)t%'sG(sdu2i4h<MuFJXf<E?</4C0-UEunTqfISTqh"^$EZ'JXf<E?<6\:7+]e3nTq<99N\AKPYsVE+Ats@b7pd50-eQdMhhY*%<e*\%Ij:gmJ>hV?8hp-0UD-?4?)-`IlZ::gkUNCf'i*u7kEmDR0-^bOMhjo]3FR"eQl$=%9/4nnAAhT%kSd_S?XJ:"S(n,u^,8V_nb1$T%m8":X#BD0iH<EP&?;*b!loOI:[Pocmc+\ZZ[5VT^>Oj7H+dO7^"P4%6gC!FF^"tAJWuIuNDiS=eG>rtu$P7'uB<.sQacql"59f$>%K4q,10%AOl&k"A"._-Qn?"CWd]b](@QrabsLrV8rl,[Wp^!u2NQ"q_&.3YWUKZ+T!`"^DU;gVbCT=gm54X\]9^0\;*m%Oat2Fm."%Q$Do7eJH_u#BD0QqJ>8?f>L'f@MP%\0-8%g7Y.9,7TL]'MH20p@(OA0X4Q)1M`=`a@iO"A%'_O?*Q9H,AtCJ>d<Sk\QX3&d_5T3,%`]+>q9OjS/U\70K.RU+I7))<8NNUm:\+f0f?Z4[k3rOBZU!W,W"$)Qo4ftYV:SNg'kh!#u<PNu'YPRoW:?gBRLjkCdrH^>fp$:3a%k)D1VF1tV2\#\%kq4K&V^mVRqB`h4Yd3N7Rf0k#?=#<9<%BHU^'?G3M<lsT6l3$@;lg6IH`+$`63fk9MG+mWS+dM,>S4U7t<m[WY%;aN1C-u=_(5VW^&AZ5;,:+XO<>1%CH?/t79lXSse#C'jS83AeA8kNDo2^LF:X,s+nOan'/_7r.8O99hbeWMh.arab4T7a*NX-]o#%U^7;3+V1an6:3pA$DD__6&],<#q>Bh!q\0AI:j8A<XoiSaXB.i6sX'2=T(;MBX`rrM/8E2[gf2$e2GCg"#uKH4cLjW:SNg+BK'DN%F$GeH9X[$lS_Ah\!1ZW`4r_&i,eAi8e#PF6-*,R#2;7nMe:k@mYWYrbNsB\P[<btALL*X\nQoZo]Pg:]/#unSO0&FCP?*+?K%iT@%"kG3S>;[H,kn:>'da#V(._OT9G!msjj+3^lWa8_&Tbe@R[!1ALQlgoQVAdY72&F&rPj4GA6OB2sE4o(rI\[VmO#/]PoghG15!@BE%Qd8]030G^6Gc$>^;$<((=1";9C3V$TGV5k/I(`Lm4W`!H'Qun=NjA/_8`-^$%rXP^;5D-X[\@"n0PqFq5Y!P=hS0`Q(4AHU\$;hZ%Y@s2q$)VKc]i_sRY:)%[k#EStiE+53:dlGH.D^<J6&hI()*rNsClbS-7&G1U$:hN/j@l$8[$';h\r!RkXY2bkk;27qlHkAHZ8V2I%0mOmS;Qc?$AEcOI&.HkmgO*+/6sGV_X1=5MoCRl/F;m?ofR!)a*-&j4;96[+(l6;sO<HV;/'-0%CIa%$'8*>2@PhmRKhSCX7E7]9%NNSVN2slu-\)(GS<]X&%^-H1a6LmCeUg#K&.+4#&+XMS*^hX2&XAN?'Z'A=F>bY5=4.*V#HI7&&,Dd"`N-RXZ$M!8&qf5S)*lsa;%lX^f_oHFounGkmkFQ,`q7RpgFXW.h49=1GJA@_usMq6X=+sbqWjoaq6Lpo*-.iKNT+9+NgAj&k]7PC'\@!H![M*Z7rPo+aY@tg]L%Ei;7?SPBu8_=sYrRe8"oj.GTHCL:18`7s<]?X`6@"3@M814gX^L_:?Xc@cr4_Bu/>?XYfnn>T/H-)9t!7+^XKg%r#2b1>=tl"02(%HBkT;E[KK9C_]CYHBkU&HY8MD[l`0_esi+703\tJ9X=>sU>t>Z>HcV`CjhJA'*]%/MSrG,N`,F>NfJ__fd]T&1(fWg?,g,;:.u4f%;gX\&P?5+`d0.oU^0\H951^h5S#!"qNt8L[jRp'LhRoq_8M?roPjk/mmueG\I#(^2r*1V9BU.?_VCo/\Zeg'<NJrfnHQB+X+j[l"%=c"'bS)fpQ#\s"k8I.3/M/CUY-dr8/G;Qd++bMDpL0g),)I"k!TCgchKo?pMlQNV^eU#?B8[Y-jd%^i,!6MKWbXL#L"JI\1-TO*]%"JZrn'A^UXMq4Yig`aCYQK%Dt!)#Xbh.-i:bDMJUA4h[H_p+!UT9]%sFF]Q?5.ep.7\<`'mpPEjlfIEV91YEt/@<H1BdUAQq(,r#%8=7_$?ZI*ad#04oPVB"ar;kksWnng/-`8m%+UN3>kgPF3oOPN;f5&naJ[16FXr(0tWBE`<pnU_UKm?feKjIFZJO5d/:_j]V`5gAt%'[#JNXlqa#Y0lo7oes=;ZP[l-+iO`pOG1/h0L',WdrZMS@TXqk'NV7[RY$C;W3[<R(+1MlBtu/*Ci@['%.oEX.@OYU`n-.!=2.?\%<GrNYrX(t+^<PrNf+c['5gCWT0.Vk*M^]gG(TMC0NMRnoHLoTm;mnULAYr8FMLGe/+'UBsTB*R=juP*DKr5Iue`2iu(H(>d"W_nD%,m9)Y_B?-1-4"Uj4iqigX(2s:PN`umY?,Y6L(&sD`RRU0%<"&j:#L[+nj(Kr=.cU(PRBmCAlU",Otdb+&^_R"-YdOr%#URL<Ji)i%Y0logogu_e(^-b8%SoqOC<.de.Or\UX-bOd'+mf;A^'$u0gV$rm7Fl]?I:5k'27$QHI[=?4pkk_N4GMbp#0cA[qU:f739O<<9n*!%4aJh/"Nhk(QI,47dh8)kC2]e$LqKGs4X\]9^0\32kr<6*hSg%_Va(o;jHGH7[H;$'4aQWDK^U`PBJ52KqFk^#,#36:2Y<G#f@YE.%H<[Wn!dqkn:d0D#]WJ,LiWrMH#BD0MH<O1/SjYnG8gn5o,o"9s6:+!*'e8_#.2o$bK'4+Y03q@^UPu],&LHE[>!sBV#oc`XSi3?s%S:W(2/o6aaQQm+P,`C0<KT5%(Xch/Le-FPTegH<HN;;d0D0Us4:dI9:r(q$4<m[QW;aTst$\L-oQlt7\p*B/QY@pq!!gPQIj6IHG%=!$"]0L'5JddV%B`@(b4+D2=gQPH=[8Q6u("PMgo\QH+mi\8C%*04o0:=1Q1&kpp@HG+XHTa7EL$'jHuF@,s$,_n^OH!*Fi?;*VI%*(n61'a,33:tVB#:umnC;Dc43NN^s7f,!]_$d!O)_ddaF"m!&n>:T5$U(TVG1'6id@b<Uk-L@jHF4u-rT<_>82hC0>\mDRhj$D?=%k!O9QL>UtnD!AuY4==>_o<Nr\]nd;Q0gB)q]QGEU'<kDV4==>s-)5Du4P/53[JFa)N&e-leAi^@^J,7fLOB"X8]D_oo<NrZ4c'H'%Otfa7Ll]kr_uA;feH7gq>(*hg/AZFfY#h[-DO!tshGtB%r&AfWD%2V#PX@STaI1!3Z^'.+@S01J*t\c%F4-!Y11t)A#Q3WqXchGT%e4%sSe=2LRi0Q/?W1t^;(:3g7NX'SOU&&R?>#&U##_r819efTpVC@8keDA+u5C#[JH;:>QI(`FkXfRCG5@KH\ej17(>B%/?kf3cb%P?,AU+@H_Y!OIeo86?k%5b]-O/"j;<6[nY52E;91\V[C(XPXfXH4qf*isp'R'AdlJDCER.3KmjaX<9qb+sMqU]b;0-gglj@ZCB+`%PkBc(0M-fub;HY5YJ0jd0u&\C?lcZ69rusdo;E`Q^mW^;B`f6!d3Jj)I_qBfW>!YlUNpTkiL$6BU(uK2dl"XAYML8<T`b[[ZNMB[%^TBJ6!!;^VcD4Mp.k&f'.3Ug=J67ZW"@uL2huK5s3gG4jd>Es:kSda1=)WPBHDn&"1d@rK?P1lnV1:[i1[3H5$;0r",-k*01h3]a%.AetE6.Ogaoh]p&Wt\8^?/t5slSfe*SIlsC>9OHjiF(mBcuMU7q,(a1<fj$l;aPlU0-`YY-QX69Xk%TA[![I*p=kufZ1VT![Q$#P%KZ]Z(j$[=#>79,EH@gH*J2<&4b6Tlq,"`-dK+bW3.8F@+ihRq[\+)F+q36iTD\??Nlc&-`/j#)G&pD2B:=+\RFmO:u'?0!_S4Teg%<fj!k&WrX)6"S89E>$_A-U"HBS``;dWFWqLK'4+Y035h.4Cj,4a_\G]5q!+Z1>D3k&;nL13KmRYX<9k`-6R!j]^%79*J@,:f62ZM%Rg\.J;YA.dT`iUt\6c.`f29[.o=d@FiHH9)9]^LAB2YbU<\=h2VM&?AJCoSYONFlgOCYd)j@i2=Z@_7K]#N>PeaETe'uEH/$r@Xe%O7d*_NX'SOU&&TeeKftW%.$u)bkhGc)PY!>jp(N/j:n^o/AZFfY*Z/ts6+Ri9i2p7l`S]NMX%@b%c)@PB@<d*<iuf[VM(3/&V1Kt%-d;WWFuD6L[[f%u._-Qn?"CW8rB@J%ad?-@e:b<]c)o-=E'/Y,M:B]S$M5N7#YG\;UK8!N)PbA]CEk>A\O7[R%A%?O]hlD)`b^@5%3T_/,$GXnA%mfH)+D4TPQPDpP`C+7rCdl?kN^6?KbX8>BOg>enMH20p@(OA09@]N0ENiZer'WGX_q0XsTktL*&)^,josB8]]kA%1%KAD2TE?(I(VDtkUX\Cq19eOhNDNj<'>VB2d;1-!//cNkc1409'X$lo2+D9-'QPGbK8OQtK[jttf`=^K;?R7Qgo@kRhBU*$5VJC:e%>eN9`SQ<Ee3phhm<VX8G=,GZ$5gH0*:FiHlP:7_&IRG<m32Du&X/*aII_4YRXchGae48)jeF*e.>(m]`,,H^c?=FZbb4,JW,Z??@%8C3QU^r!)%N;3UULmFDrASVZd>3/X;@O+6]NNH9^2m:e-Vg^9RT`Rg\qVnk2(Ws`&E$girg-C*n/.#H%D,8(t;adt1KT"Pf3%[LI%OqCt0U->YbTRPMWahi#Z1"G3+S;U(cGT^X^W0\7KkJ]hWV^H-$5H\J4\]AM]V^KZgAAr56ko*p4;8;GhjG`m`7MLO5E@s"Xj+3^l%V*8*P9hD48i&i8n3:g6G3#>`bl1AM374W[ZVJCRm9YL80?=`><6VH1b6pZ(Pd'@aKog$eJ;kL1dJdeN0X;poUR#b>IJ%!WKfl\<J%eg&gg3$YB+hXYpD^@UgmMe'OehaU&aahUXO9=@8dj@;:;F%XX?/oHbk9iEODbRIH7buI73Wti4>@9p!\n1WALRMu3@Ks',")21AP%S>9i;CshDEEB@UrD<0.Qh5EqCd1)Vsr[ObY?OCTW95SS/&e_qI;]6UhaGm+EJl;%[o&jj($?q2,]<R^G:,hln.G_+#@BN0fW`qr.%GEl,,@M;<?F6a'Vn1W\r#o`hi%uJ[(NZrr/7\PpH04F;HYRPf3319N&W$2C6d4d%u<BU5\PHdKmJ_!<,^Gtl>]QbnXnFV_bGhu1n%FB3P3-LAWF3;#?'l"o^b8l<tFSC[ZhU&OH3^4fD`=6o#f^L!_P^\qg9f`N*fV$3RL;.S#-8IG$rImr,K6E'>Tk^LQm\gb!/e2&FU%R5R:S<C2+=BPY7C@`.LEMBEuW>+Bk.%1p3ik(!4?9:/f"#/"tOj6Q#?'GX?XBl0oFlEaW-WfgJ/[fLZ"p.E-5K*\0[Od,&h1mJCq%[DR+6ZYG@?o`Cnr]8EWW5:teU>C.`i=]G/\@IC6C3hAYG;S@_(TU1^m8"Abl-D&m[%hR%/p5&>,Oq\V$^hE,;K'H_3DbLV5FX#dO%mT^Gcrq67[iT2(K"ML?m&[G[\[O'X`3u=I5q\rg?7%nQ<XkcuNrMr(,7@QP9&`I*`%l$$BeLhK`jYLWQkj9&kd@/Xjq]hW86R;5:%)bF#*-rhmt[D*'KO"6b>@-`K_lPbX#+'2Wjq2Ca^-Td#+CqDN/+<0hh3h<I]Mc/'e@Ic6Y];qb(pc_o/`EStu:46-]NfPhM!V70c%3MH#+i9t`%^oc(@hc(uppXpiA.QW..g05lRa02p/rn*)9Y9.<&j5XdALj95f6>n(trmab\rn,AL^W4X^?Z"DjW9=CSCNl%DhnK1O%m`X=Bj1YeSmiTojE6SN2.P5W4NZsD<7T(9[2_3TEUWZCkcLGqh>GlnK-j<$m0Nu)hd/*JKaZVNOf*>6R&#(DFrUl89+EmkL*CVBi%NC"5u?.obc\t*^]g7@[JaB_4`89N*hmB4n'j*B;rT9mNRkEE,anpXn'F'_`'d`]ai*assb+*?n'B47^eo<N.@9XFkj[CM0tO3=%3%JGfVilO!tH+4jZBGt/H?Dl6EVSZU_fm)+[Hd.r'[?'V-`\X_7M._rb_A"Ej2hnLQQZVOj(bJ!Ftb#<!TY]gfFoJWuT>e^Fsp0i!(%_lm%+C&KMP;,K0?C1Ds(+#>+(3/o(V]V[_XPE-"^1$9QG0"mgOGX<[`3K7Gp:3AOg-U_3>7'ROF/^7:AIK)4`5U^D,c>aIF^4.<G%=\loV;e\P$G8.U[G*6n17&\Vt5u)U7E7gBG>riV@<CN.`J^`=[iRbi2^hk5hg6u.6r=^uCC]_aXBu-uSPfWK;8ql%YCF<e2Fuhp"%F1tT.2HLVjZZ$hbbuKGqHYP*@mD9E$Yk[t00LJBV.P25*)25>kS>;YnN2/AP&9^)hc>^KrUCgS(W9=F\CO[(-h[r^&NEEeHL_)6=%:RM:o;<=c6,O@2lj%1+[3Ah^HD%7b#FC:WtCki3>Y";L<$]N[).`=MtQDRQ:NH[I;b@f-Dco[&FqY]A>M4R(%WAIL3aqd.@-:L?V%0Nu)h2#I7Y_5(s`F"Wd:q#1jCe$Ypn;e\P(G8*(12@>/%]%.A8`S0RlI')u\RakD8$<#\8>.^glqu.3J_i`I2+G/PHrY%<3)5>;Q%BgK(L'KPhA8qj#PCBqijFuh>&E5"]7&J`8-f1i$4mOHK\4Z)H2G%.O$FSoOe%DXh%o2Jo_llAMo]q(r=)Kho8LPp?0kD7RNG)eUh%'4[aOfW<=tR_;cs'Fj,OZK&26_LQp6RP9G%0a-%]-56LYV<u:j_e:Ed?eKT)r)JoS<48=Jjsna7b@<k#LaXW7SdSm6RJ67hUZ`^%%=M9\BBX(0%!0kZ=,K0L8lqs^&Q)(?l7@a/,>XdA]480SFG)XZHVT8Eg$9OJ4rHN:FJN<?4,-,$6&p>o)0A>%u&4ZQP5i?H?2]5"T%$AqSd[.[OOp@"jZM7"AA#f5QuLZg#FnpW0t!89MjW-TCSfeaaAD2oh,Zsfc(FIS"0XsntP$]N[)$IJe.FD$oHj*iJ"quD/*ZYg&9%VpYW[mjOpqm3H8lSN4*'6abAJ2dPVDkgo+#,)X(LBPFUNmGf[#j2DTq?5HG*q7+Y#d:X-tP]DrHbFBL'qf:[2F?X&E=/DkZ##8r`%Q#-J<)NLV:o$iC#q<\-)N&3qkVp^05T2CfT@&Hg\*jPFT0Z$R,$oORDU[a/@;NrYte(S.Tg\9g%/(qY?%BX1<^&YO'mA[H8gLo$k%l=MCmT3nmP?a3eVp<Rq/gJ_fP[Wb\mZ]ORF0?Nq@[5?D@LqMIcBg/"5O5<`Ef&rY98i.P,8u7a+@D6Or76)cBJ^N1W-/80Z_DlN^%[<YRW+nC&\nGIWs1f'qOfj7Nbf#oHV*]YII0;&Nh*[cDcELMj7;/$6h4,@IkBC2gAmJGcJpLe2MF`b)88&##.Fsn15IWU2XPMT0t%f#rjNZaG9OS+fo#okafkhQ(`t>/9MG'tqCsmB5I9s&?6#6NMk4)#=/H0f],BbsQ/q[T<m*osP/1/H8O7i1DoUn'-JjD_i2p(0l2V%7F?(SNE*"Wo@4ejeE2*7J`M1>j'A-no2JnDm2Z@J]o=T4I@R*W^.#BOM\g6Up$-[i.oMV3VU=+$L"gsH<70i,T5aAV![[!ApIQ5r%mi]L5D%m=!+0Asu;`J1nPga?=<7I]deLdQ(]1TX6;_-l,:RK=lKTgnq-]Q>q$7uh`$51!X7]BA$IGa<X%R4bN/9+Rj8'@Q1:^!c]%BiOsZE;TXT_L`n%?``6!9"occ`_%<RkGbi(gH1;VH94]D[2pa(\WFj,cWoerF:Zt*\L,A$&\'B_<PCV?3>Mc,IZid&J'kcOmrC7K%hGN@bgF3i`r'LL<?TpD/rQ9;Qk-(3t8p/%Np/^/GIK(aArmG+Npkb.%qisoM?Hs-)Pnn?9N1+6H4%X_Ao+)9QIQ?4lodeiMT"f#L%9XFkj[CJo<Ii]%[;O_/"1#sDXk$S*0.P8a8)$Q1TS3l25_qI7D$T>RNTQ%JHUCJ*:-l#LP[CaShIkIjkY]e@#%RS6tHbh\3J=q0;%buf;t&QhgN$^]F<Uc+Q#aQLET#Ud6kB#5iK.Qa%f5J:'sID=IoeP'`LN=$!_rAuc@\d1)fV$5E+;<69^-ksCaZ$,)cMOcB4FE,#f%Y@^auJlK4<f'Y$>hOF%n[W(WEc/,+=DoO_rhGGQLgF8@/Y!)L*LXEMMmCaB%MGfZGVpX4(jk=@nTqPA)jP:8Zo@YpfoSt-)hG0cC%B5&t57d<J-U1Y4;-l#LP[C_=*J$*.kIK.er]_uoRG^CnlnFhkD]&#ml<kNhcOArl@#EVot4d?e-HUk&O3N^P+]Y.N%)Cd%-hTZ$\%T,j+gmi\q%D%qkRQ56=68aUouoV.pW'==\W7_dbZ_Ymg]2UE.TCjRm2^6:VSeefRn.4!m/6"JU%-ku#\$14+l?Gbro4(FfKi:`S;%.=tC*N7RDHiSJ4o(2Y5Mo5n+[kC!Q:_=STKT'3QpmX6d*B]h^lk5hoOmeeBd4)-]*[1_p!(g7U2451=940@=[:SptZSHq3`D$i6u%V$5d@UAtt(Ob?As4&_VQ12V,AgSWG*g>(qe'G\<sC$i(om=Rf@N;uQ?j9:qcFZrWd@adDrr-CFr0o@`o$(\C9.?i%i'W%j.<-/5?%[D*'[s/V%s!Nj&f^.52N-NK1O=sVEmBE>\g&/"X0On*0)?tscSSt0b8n5Ho&])Yio@\OP2XM%W\I@iG$"3T=6S(L8sn$@[WT:=4!%<*GCO*CYdtN3'\G%@>f(%;2SOmY5eoLC>SrKTL"\])8p93VT*9="s@ho61nmrIb'd#1$4^J[ot=&b^ATj[.K1k$DQHnmC`R2H0Y+%Y%<gk'bt;tWH;/apOQgJD,M':PS\%2h"fk_MGEUg'(#!"$@.SBh\2bu?p7GGVWo,AB_9$57(&B1g0`ssGP2O9.B-&*M3.9=-794n%Vp^0<mjJh8m1]ot.Fp\5T%N900T,IMKMQSfMGiPV>5P@rqnGbF6V;3)N5Ut\]?a:&Oi[,n>*/.m7>ALH66Qo^g'3S"SMm^4S8T&Q%a]0c^Q-3n/YEJ<8F,4HIKSGZraHc54\9V6Yl17kXYjNN#NkLuMd?t3eFrWpnURe:t.,F;I%9-:pTl:pPh,W0WE!i]J0IX$8(kdLe%#H:OUH:JQW0-^cM'rEkqK/Op-d-6K=FAWXH?Jr26='>9GJ;c4M[;-8CKU)"eB4H$0pcOfWXS[sn";d%CS/R$V2FgM#3\e3d\l3)m%(T"(o"\riWQ$)!A&:jIcm09@Z<;A_q1dGAVcVnPo]$Dd!EPY5h-/;R:PL=$?$R@Cg]7g'%<JlZOi3`2Z=nd@4L4k%j&%VV6b4fV_%amLO'Sk9CA]q\-'\'sI'0bOCP".*@i(YSc0GF@s(WY?3(^hN2>ZL10M94]mQLm8dBO6HCIpPD]7+>W<N'?Xk[V)!mSp*#\sac,Xd%6&LMfiD]WRP^C'6.Dd&aOXAEK/k4.`m>SmRMA!R.7]DKo04Bm1CkENWO\Drk>`jW4BGd#K.bqbQ'Z'i$2.3LWPOG]/-L.&DGq(BG%pPpH2hG0aMLb8!?&=ZG.cnVn*4t8-$pPr/5Ea&@@Pl'CjV7'4g7A^`@55980dlWHbH96iO6b+"U:/3"^.:;T1<0a4\\Xh=N.cpZc%FBh7Lo9]grjnmKBE>4,:o2Jn$mN"`J]q%LKJJHa"3,$0(*umc/Hlnn]iMmTgb2p#(=#p!UF\?Q]Rm`JWY>*gJTXotTmjJh8m1]m4%@+ISQZOqb*:1pYtMc,cHVpX4(V;-D0B4qMUcNMC3IAWt7?GpP7]n1p@ViM"`W[ujD2;)Xj.@SqsLbhY\+E[bHo\*M\g]u`\)R*bj%aU;?#k'Z+37&G/BiUuc(@(]WW^pM:@i%h2dhFodqO?.s?g08.DHZqnlfG%bc4?$$&3q(l>B%&j,0^T0A;RG>TBQMnM:=qQ=q6[m\%Wer3I"/iQA9">HFQ8S667$SSK9'l?r@>RgQ;-:1Q-RgBNV)F*&Fs>thq+SYG<JlZOi3`2ZEVJ8b=HkgZ&ltTn)@`>5ejgtM1J4_r%3/',C?`D7XPC9[=0sYNfA(7<QW#JL>[gK\O-E%2kgdJ)'!C-_4RhB6m]n8k[QVT(IC6jDA#@t_>8X7IHQ`;+HABE;uG#\kCSU?7P%=)-'&SgN6:bi'C?#rteX"l\<8ACoQa'TTo/4W$!.l+smPq&YO0<0Vu6[uAo+.cgU-C@IMB*&<@!s2Eh^F6BO0^t_#/"FE4a_SMQr%*,TVl^;k^3X-AZ;$dQG\<4SOMr[R+1Y>PkE;O^$#+m&U%s1NC>WO1U=4,O/f4,(PfQaHb$)+,`2ou.VH!Sp[g!P3Ih/%=!]?R=NX%5FNb"[c+c'9_lDi@6FFF4AVdWl/#9Jf\9!?7l(:Ic0'C7IIQUlHlpTE\10p92fMstX/,X]VW!lL*TqMU/)M.*lqlgUO@fo1]q^Cg%Q]Zqqj0-sO_M4"-T#.1CRuci2;2iY(VUJ=bQ$2$m`@9Qm%\/M1ZMaI4q:W^4;eSJ/G7Ze.2NkB3OR:Q[dF`WrE.#+BD)u1]2+<UQ%J^N1WV;6@jk77'pZu[ik'Nk?]c;fe"cVnOD]6=rLp,8(SE5>u1`i?srg;geD8@N)GUJ#W`)M-)c>".7s:Yi0ORs,`YjhDW"6t4J@%Bn<j>'I!0n$AJ4)CBn`5FujRmEkXp8.p!H_W*E)5J!G3Wp#249/[YED^!c>`pFkntUF'F!:8.U4m_:lIdSAst]DnJ;[!P<BE]L9#%<SDl)FD`*Kg=Yn)Z@$#odl.Gu5>S*ZmQRE.Lsf%l?n5#dfA,j/:=n88'_sA!*K$j2V97o,p/cP6Ik!1qet.^_(1)G@7saTRcr4XE%][*Ou(mU5:>9)bS-N;Xe2\=)+G7155U(e?U^hN2=@dh'm%^<22rf%Kcoat^5gEGC0]r03YHg`'Ym;4-1dJ4NVc%@D1FO.9BPjRW'%'s<?9d0O".egg@,YK5Du6P"&3!X^U<QXkN9.j4I`>!VNs7@_&M65\BZ0^h(bG[fE=oFUDmFH6Il.S<R<>>AsXQ$M9?^*bORB\1^O%0`oRK^DL)\6VjN^p"iOKg=n'@Ofnr^^6=UBK?l3K(F)T9HSteE<Jj]9Ea&@@f__i_\YReXU<TYH,3HN.G@u.0U6j<P]oOQamDFdB%ql^O@9PmOAd&C+H^&#;mJa]SF!8fjf\q/>a?NK&F[<BKB9A9aJ#&(_$kPMp3d7\1ch`H^'HTPC+pf*$qE#&QGp\e$sm<@LWWO0Iu%4"@fB/q!&i&Fb$Pa(LDt;u7L>IZ;/Cqd\Rh$n/fBAd!PcJSlQ!To=*\?YEpu`:I=qEOgbNGtj!.MBLD#UU@_N_!d!J>FjLG/qQ.A%L&#j;RU/TB#="p_\IYH3pnbF-iN$Xi%:<3"g[q=C;%\JmA[HV^@/-Lu,iOg,O)$NXs6M`2pUO"qQdSREO!l^M_^UfXs%!2$@uq.\%Y]MWBFQnr48nGo>FB07R?/cB^[0&WTUs4*pr\Ta/0;Y(f?_YQ=17Y0,q>j6+rp89O_bZKfD>F9S<JlZOi3`2Z)#1eI^CSqY%/d:,%4WSpp^csoAHos\+8h[$/JR>.kW)?AZ)>W"$cuqMlfP/A>K_+TbI,V)u7HJLbmB9pea7Yk\YgCZUHkLD4.q=A]/A79[%"=$Oj2u>(%Ec>tsZn[4@VgXN0,2J9A=Ob9VBE^;0F+o00b5C0aLGjTr`LB(V(UiQ/8hZm+JKI1NgP8WSp^mu&Qp8";FNg@eV`X[C*Ao9:Fj"Ic%Xt]?8=Zl(:g;PiT-?Qs0f0-\GR9iKA#!\it\.9f5V[kip%7_,RW?\YA-hBW<s'1e?U)+ZKh%^cU=#&\eg8)*.3^7BZ,R[sO1CHFA%5e4@$#T*StFo_>JUB=U@V`P"lE`%]lh/Z]2.k(=uig"%fF!6mKo3Ia\\;7#KdS.N=-nt(+,XErfMK[k:LIXgDXk0',TX92G'Vht#%l1EG1@H$sd0HM[s(e+cqhj(a'L6-^1bq/dKlE'leiI><Q5iJ6NLG7ZS)Q3-!)Af.s'eH8jXhqsDlH6t.5PN%3mn.$I95%qr7h@*C%@3e:Bd>E,8j1<<GXD</-*JF,>C5O/,!i*08_SRDP^3fj(V07@cD[sn\^%f,K+*`)<bqT&$!p;b+65f%A^X19?o(Ml4S5/Fg=1V>"%oj*c5<4@h;mKsDQr3c6/iK(b)fRlTYr:k%:3"Fp>;OUb`&I$=*3/',s2d>N^[]f;;nEK8^qg<q#6#$@nVMIRpEiQef&q7SL*.=YA%7pffPT-%rc-(/(31C:fa%E<fUKn@]KB\]k--gk_l5&Yjl<Jj]9Ea&>j,lIQu>N;'3d!:+<M5JV&1BI1qC7q398W(:.WQf@TSbPp%%5(B21Q(jul33E,o(B1h)]]_D`^[K_)0`58UfW%G(4bY3sIYJ9dBXi^NEj^CjiL"T]i$@j6V=V^%+@R:l.)T_8Xe>1T%[Gb\[1GFg%HOo*-H%uI;5(WdF&#2sGS$L'2Mi;lgE]2gR>a(nb(b&7U[C_%-0,HW*>b4NXpB:\f5-H^1oo9(35$UG%7@'fd,9pJYAW*V5MA5]-%E!`;I[DKa5(HF<WRu*YrbP-=mWGDEX\;;UFm_^Fe?"@Z\2KI7=;nfca/4r38%k_:tG#pZu3Q+[0N/WU`pY_HEqA`rX?LK9DmU_Ua%LY10;0X_PucVEXH[Yn%JlB]oQ>lipIBI'uGL`g`p!tBkHF#ZL6I7+*U+&8MK3+@lB#WnRb#X??SY3K7Wpu/UR=$ZQVd%&g;eg5Uu%cbnhmk>O/cp(9/JpL.T`cchRIUh^o5%6KuMR9buM<48=Jjq<G6Ao,7kQ#qVL9(;cRKD(^JiT[0qj7"9#FRjC6EX9UPg>o0cBqI33%O`0E1G#T2RlifjOEs7?Ve]BpHjo&LtiK*Nbfgh6:dn=CeiCDD8nKa)\3;JW29N7EsG2UT7C_u`f,t4&uL/[Ij1&0f+%]Gqo\]md[%q=2;VTo>&6P\(9:UWBp2OTk.0.baOr.N_,i-eOpQTX92G<(+!TBsb<L+SataYQKk+g0a-s&H"7o2h4VUdS";/i0Pi#,NTW^aOgEF%f%7;$&#,V<*$aQm]+1<N<JoKn_$R$I^B26tYH]s6qZr_d2j@G@r#UJr?\1+tKTQsuNDl>(4rNnfl"p>7]-]s80/-SA.hMXK0*+hR%G"gg+H1U'g%YPFnoMV+pp^qUg+A!X]]>.";?0CuNdV&"V"hpB59)BDN.4RB0dFqeji-1GFjj`Fp'X[]+ZS4]6%gRW?EUXKoM2Jl)%Pa##n]I-q<E$r'B7NB)3Bq);a;NU10dFqkli:EL=&]U:cU?;-S8Ncio,pd;S7(jR1dO:@g<D/\r525",;^BgB.9FH\/:&5b^'a[b%r/i\Y9Pk1K$(2lbV(mQIM-`e1pcbE9*(&(%"HG:?I7S:Cd>*C!V>HV^YG)`-\j%OafBs"B5$ffWD%;fORFbYQdHKWHZC(:s[;uI"%VbfA8ZA)GtiIoh&O\[WsUFJ^3E]L9#(&In(lOX4QD$.ZRig=U.jo+2[D_he#jS2PK-\d`TiI?>NK"!RTV0;[mDX1OLh32-,U7r5Z%XfW?3I4sl,cc=&T-B=._q=,=CJ3DiS,rEO.,O"9sV2R_Yl.Wo!r][+Sp]eh("(\%PIDkf"9aXeS10V:?o_Uph_IR"gF,H!Rq6B'l%9]H.D0;4e_+$ni=LJ]IilP'6r$Z(R^pKsRN7)/bZ^L?te##-;+NRmN\INQaC/7D823:g>J+rYm2NY/T]U-9Pgb"7IkWt]E2*^md+%\eiia]fO1*qi"u;0NspGo_\*1aqS:@<X>*8:?0nm'YT`CoR2Rb:jY9X6=.BZH!_0XrX2ti\bBGsA^%i3<0RiidTM:\Ip]m6ZhF>>%!DSdW3Ugd9iD0Y@PnqU@N1,t7)+f)Gi[qS6]$*Vs?E#s@Wu#\,8l<tDSC[*Xo)AOO%[Gb\Y6Zc<s*Wk5,m6Ar(<HB3RQKBm'FO;*%efNUJm.B5mj*ZpU:p*DfWa&;7Ihd7d(RO+d4#Kmi5?M+pYWEHh<*CF5*CZ@/NC)S7[^?@TZZ^Za>O6`uI^)n;JlK4<f'Y$Y^4/W/%q<O="^%EgGioU&mj;t7,1?b^E5i+"`0RF\61=EQqhY3;[k;AAfE-`k70Ch9%qRJ!XWGWTUh,W[P="&iYKuF8?F7HLioNn8.=M:I8%['u55/K6=r>gd)Z\c+S:EK,"g`0b3A2J[B!H2eW:/i6Dh%%7,ZF%M]qoMf"5mi=iq]q(sT2cmA3[#1D>Y)@\egI5,"MJh@Zp/g5I%I6AHD2j!am:]cgBqleBWAYMMjZs_cQ$=%rRn@p';D.%&f'^bJ\ciW<TI'eGS;H,ISVmWo>^]30*nG>FeJ_tsL"b'7@"oR4C`7iro%PTT[Ka2qBWI>?)`pcX<Hn9YD>mV@O64'f_lqb@=AB2b9&<T3*;?3Qo01WP$ThTcC3Y9:[KAX!O!XO]"s=RC4h`J`/MH9(#S+p`>?%kbl$Z_>fD>Bk_TF%@mG"]kJtp=+F&@lQ&F,]o43BQs$d^'aQ%W2^=jnSP`?SYnIs+X]5dYs1;[$S$a2Ndfc61(MfNs,;_QK(*Iup%&TVe;.@4)GV)B-fg$-F@1X:401`BF1;<e?\CO[(Rn"!oVHOcS-N)AHVo;r(bbYa`=p)/Q]V49lgcE5Ht^FPhY#;#F[VcZop-rhmt%[D0l%msd"gBNr+2O0-Lp^%h,=/3Z4^(-)5N_P!&]&l/CAV`#'KZ-eD8A>_N^]Bu=,'tqCsmB6$L^SaOHf(uQ7F7(]Qo_C.3MIP(6%Ba3QYLobq@=ZJ>^8SsJ5A9?&#L6EVtO16CPA0]RbVmVE"mr?:ALF/\kplXd4R)qQ?St8O^*580R]!kNbU81FD!&p7l62nFC*N#X=%-3^AbqQ.A1(k1@gJ_t9Za8E%SG.r;X1BrDcI^Fg5G8)M#16Sm-7m"-S>AKuS5K?O.lUT\u.4TXpe(S)]iHn(9B\8,WmQ<EYRniE(%c">TiMO8`P8^THVU<S<klnnGe7lkO%Ng^duXh\OcY-RQ3]+-O"G2V!bJ`lpfHQ5a(4?\rF/:9s=F)N91]8eNNBc]?FRr+`ji`mEu%06'::M*>=RG#gp(mPctf8a*fK!LZ.+-,/5%7,6Nf8i.NV8qdqj@5^'GMPa>k)(r\+<=43T2QRVj*a'rerVKD>p_8mCmi_2gD%t,'%"i"s\WtbL#[SZHB,R$Db;"qCrn=;0\pd&;q#&pSeo4"bX8fn1:Z0O2<T[BMA-Es@*\Ig_D>Lht3@!,>(MI,5JG#p-fIJ5raXJ[tc%R>X')?jX!HoT'dQRU2U`k)<'5:q0rig50\/FullCh>'f_=Edc&;WVq&ql:]a+(%pQ$)J;TSd1IH9CLn69WrZiC!J,s66Y42g,sL'%N,UIBUsni[;3[eS3/uMW.L#itpl-o[p`^&*hm&pS].,?pKbbAM#E`qCT2>"d$gjPC_f33MGLbqqI\C&1@T9a_f%qk[he2!b%E.Rn%TVN6Y/M+T]a>:Hb;6PhOdjPs*Z`W2"]5YXWGEM>K3r:-S.EL2BRmoWu<=h>iI4WN#Y0kmISEOWE]hWu4^g8`;1Itpfb'Bas.:_%/%i:M#\@mKd2l=6L_'bs0TWA[dCq#.;AH+81J`i8/kcG($&@kKot()VG<m"US<-57GC*b>1%3!/7,J&*$WFoNs9J_BsY3fPA<e(S''%i--Y>6/Zr*`&sWAYk_%HQq&"W)/8h2#6`X?l83c#:8(qf7hTc'_.aH0N\IsO,1SsaQU.F'MR)2?3ihcI5+r%tL:(MTjr#u4fpY(1%@J!N&_!`:4XM(1mi0"/IOkR``fP-fX%B%rOfl0ZEM,n#j2HS#pn)9HlUn'WYK95m`lS8sm+Gua_$hD!+aL&F?PX@rbUkV5qjL!rP%%].p&FGFUON*:eWg0=g=#F!UT8Xb7TMmb&KI5!YbXEPAPp3)U.->.(7O0tNLgN5V83F,WQW>dh!rDiLggZNu4GemRUq&SsJ@cm]T%qpVNNK$dM2_7n5D*$6d\.EL-?(%(I>:VcH!Pg?W'R1Dmtpq<Gs)`Xtu<VZN>)u))R!N2QSq=c&TT.G:</_Ke8"iMgK:6S6Qr!s7(%rmO86T_qT,:Bg[29LhNNoE(qu]8F>k";B.EXM#9^,fY5P:(H]S8G#kbORF2YVS.p64JF's2OR#mHGD[a\jpif(T"(o"\riW'n$%1%FeDiOo,'0Eju_X7S.nF24bX[8HNt-uDkBjNS=$^.ScWN!(C,XCgT/fA<0:Wh1i:gh.f;IqQ)T?%%GJH#PX<e'Vc)H!71!ibUK#=6%PU<u;S4'#L^>Mtr-jR"p)m.pr$@\UEgqHRXi:f7N$WMGfQhL7'^f5V0/L^CS,2_6PTo=@N./9?`o8^TUDReq5BH?n4>`Kh).8#lK%C$i*%nG<@29#9t;O-P=SVfXBlT1TIu^8&cY[o4\>'`:.q;^qJ^3*@^*<*E,f*Mpp?[.[QMpjM;tR3V+KhJLb7hL(q.^>FIh6YO<O%<t+'][L$LjCOs:iP=Xm3365d*)r2^mcJ<G:P+kpaSCZgP!l*("<WIT@Jfg%=@a0DcenG6N+gf&B.u%;UgOsTJp3iS**R?sY3Ui!g%>_eoH>`b\SBK4P^.f6rDr[R`X^S.0NCNARP2_!C0d8O_0^/pDpp+f8%WoX'V_K5d\m;inlc"*_Dfr?HP<&I5"[Bn#hn#q@p+LUon%*(n;"k72s4-V3l/>(H&^7AdbXUte:uVDdD,G.K#-eEJS086(g?e-K=1eggCmlOsi3n`3";k.`RJA\uemBn<sA'S5t$P2\8/;ZjI6%:-@F\q0WIBX,8<J"/iQAMS8J:=[:THp&u.3JGHnpZK#>OTr6<?H_4/[I4D-F(An3:S(a[tg?G"fR)o"5)A?+"._:2[g0_hUGKpib%dF?/;eA6MZA:CV%*aEBQkbU+gmn4>p:N@ZAT)%*TU5b0)7c3t%OaXRLdJ$UDT^Nm9h8!alYJBU:fmRNQT[+91YP%NUd`8)/EU+hT%CjXi;coUrrNMT9VKGF1*VIfM)Lb[T'o_IaQ0_!,;Lcl(>@u&a)CBn[i$ZeA#7!^<,"T4&WgHLQ_R9sPVgLOcHcSi<OO_l=K_^-a&%<Qh=a<p99fa5CV0@&Gnqfu]X(>;XAo4DFFcRd'PY"g385Kei5,J"_j3r3$(:M+@M)T+;'H<Jj]9Ea&>jo_Ym`nOD-(c%dB]k/R\i%1[4X3Rd'PY"g385Kn?/-TcJ3*D)`P\7WQ41%oTQ&;6!krCO_%e*uKU(9rK6ro-+U!7NWTO1$^(L-@JigTb,O`%JYHm3_ApE5&gk&%.Rg=W3N`5pqY`[Mbe:,I)`pqdRdXXOq3XPk]p*.,I71d0MTR@^lno7>RQFEbl,$qno3H[0E`J'=j`L@`YOM"-V500L2PHgTc(?",%2Y#ZDE1jBPi?'86'_EPM<(<RC5&0Hh1t58Zl/,0Y)\K6A+p`>7B^MtlmsCb\kukBu6'JPKo>C;s"O]qWk2/\Y:9LOS6G_6rd%7d6%1S"6Wanbj88ju/[lB]iO>s[EC6EsmtBG2dcf_i:.('M@9Ad!QNSYV1d.28L*Xmqc?3IT`fJM3i;JR>-J\X_7M$3ItDW_[hPpeV#M%Ir7@UO%=RGbm=4[2$'Iq$:Q%TC7d.DQ#ull-p6VgpqT!ljX=/IVmX9k_!dQRo,S`5Q@R5PSJ!kG\j4\:Bh%$IW&aja;^hKm9De4"%.Am\@]?9m<#@(7X8sRS6mB7Z%H_pXnV`$c+`6J<F!8t1V.(tjW#(DDtJ5JC^_G@\L%A-9TD><HYhkj2ZX&>03QdaYqJ`-8pq$Bi6%IP-JI5IV;u?!unC1dgaW#^H5#$ABR@CHF_GG1uK6<OuJ.DqCd-eLdQ(]>DDQKo-0Y)G':(c?BH!GED'c1kY9B$B4k$$:RX5Ba75t%E]Qa<=2)RGGZCRg<A(2W^I#e%[n@t8eE49/bk\EcYr0Yq;OU2P&I$1&3/,3]\@!"1AilP#><C`A&\+l>PU`$Kg0Z#^GEkshf'`>n%-kQBM0V90c_Pbf`K^U=@n7<m(dW8u7o6J\P(S2M8ma?`aMc*OH!iNH<b/*!5MU!-sX9jNon`?5opmYX<$%oE0!UaZ4_6<'#)r!<h%kal!@,MgV(TM^rJU6k-:dp8g.pHgSXB^Nc$Squud\^?f1,F4of$OXV#aLAX@PXcC=WQhD)4*AF9JA!`ZKGG:"$rS`4>.^gLr6;Dk%Xl4+@H1N!42[W0lq5pI>oo:6Q?9T#"<\h(67L>i&i_q&W6cb.#MBI$CUU@SR^u)kPSka,d"cGCUnV*aZoUB2\MI5g#1@FND$D45u%]m'mm'Akf2T3k:'Wea"'Ea&@@0`4]8`%7jorI_XR@H[@qju3IAVpYX$T2BZWBdYCSfDZM%c<\Slo16q"VXdSu!Q0+\F9AGK^C%mI%FkmE6s%f+$*+A%-3jl<0n>WdFiFgX[?dbo%*/.#NT91jOPZ.U@49^I8V$.:"ROb;bDgrLV5?Hk3"bsd1fX33ur)em/pMl$b:Se4'%5GRB9dS<\(gAdVqgpJW0m5p@cE'>a'E;5HNDW%nq=*aT<-8^Fa*CL4=kP$"H#m0B@[,Bn)LnoA:8_Jco88Stcm.:=#6KpZX;n+.X%75$>u];n'l?)K!'2@he^H%*dgLrRnBBn=0G'LDKaOeBT"M`1=pg1URT`p#C4AlOtGU(\BG]i>u"O5iM:dWQ\X5k9<+I3.?45!>/H%3.+5YFDiNURh'fN%4=!Rl%;>CPjY<!*`Ne_U(u=^buGU00,&_je8RSR_=RQ?1E;4KhmM%N&:6nZFDn'RFOGfKN<_;]C#^?Hb,;WO%;&,j23LtWqX#U%5H]+tFMi7r6@sr4oVM\;JV$.@d;$2#\S,&]5Ag:aPZ*?UP5h!KA:'7<r%c:.2"J"&O.Ls3pZkjR.06tFZ$(gV/%L*lsAFF"9G@/(3Uk2&S$TN`j,g#hkYaZjFDh2l_Y'LA[$7^]Q0_V`$gcl+h8M)i=lh]K],]/KtP?LK!Lmc>\0RfcU,OUO#!H#*Sh%m6]%,,R$Ua0Nrh()#R\T.+5(hrj/9hqcjhF1B#LP1WJ#sL4jp.KL1X)2(WqX,:n\.Cg&e3,t/NjQIFPm-/iL[TqPLBkLC'Yo[,GY%oart\pU1As/PB$91/]pN(+lR47B()`Xj'iSI]mP+i"&S._;P>B$O34q$OhJR:$/CFU`@,dr;LiB)#X@BX;H=7/MQs[MJa1<^@NWT%5J*5Y>"P9/5@i5Uf)XH9ct&0j84k]Z)G6ig\l#p"=Z%WXH@aJt>p\IuLRp"oS'MhDcL3-Z,%B#"BdVe#Ll?["KgJP4[2fb[1>;92%i,$#s.U813/ru-'[!#MBpt9_%-l(N_G=+?<[S2@fUPQJ,5FrS^/5;t`8aRp51sMa/oQZ<'UU@]@_iI*>23&a!S_*'lE;CE(#\!0M%@d\(Y`?UMpjq,C)*+h1&#9t]j6.$(!f'Y!r^OPk`$,:uN#,P)Eq>QKq,Wi9qWO+qL.nZ%Q3Mf&s^P#1XZcruCSWiI#h74e"7G2W0%SQ-#Gs04cr"2Flg5GMH2k515<5.W&(Sk9@p^8"6.[o4^,M16g_XAfV#D6@K0C`Ctg7SSbt]&?V8X8Mko<T$FRU!8c2aI;STKmD)I%M=abNi9qZi[(UkbhrN*Ug3>T.>W*X2TNmtI3D`/%;UKMg>:]@CIZ"3f/u6Ud'5,#q4uapad8OaF^NUC&p3$dsPWNY"i,j.r!3gOY%9p@_@'iD;V)(j*5qL-S?=QB%-B_.\P&<f:)6:@u#eDl**S>:BR,W1,Kjhs.hkOVB'X,8<J"/iQA6G`[8-h9KT!U:J=^An*?QG9*b%<*D!F'd^LUND_b3O/.<T0:NJSr_E/!n_YW]'T8PP[B7TdO4c[3S<FV#?Lr@"dDtUFW:_$^nY;VMG]kaJ3@?1%c.a[SbjMG[7n#@U%>5PAuHXG]-jqT4VhH-((qRFCQen5NuO7Wb;jM-h/lTuCn3MhW!X+D$#28cBd<OqiYCRppPm23r^"MBpemoaE,lQ&Bj]o>>j"eM0[%RVASNBP!)^CXqJoenq1i]1Tf`SjTR>HZqgiIC;gU]q`ZUcTe"c+7d*<V3BYB^2+]V3J_h4B^Mscn$fLJkb/#j%b1E:?P)hmWO.35%4,RQq)5Y2q4_l]_j5e^^QH+rTnkj,`h^ccje**^AMSS\n",s1Tp#="W=Le2+n2^csK$mS3_8(7/nb..#_L1`XdH3u%:;-KY>#mg:%/KjhKMJh@Zp/`F4Icjfi5g>.TkM&Bll2AoTk^#`2Df;OMKL_C&P%lVIQfN5LdlYUK8l;Tn:2>=oK&<J/<X=0S<"oUes.!*q5*Zlp%Hq/a,0-C2fqZF\'+4:M4mrLi2Jkr3H"Q*)(a9'2%\qK#9\9EM^pHQo'+S`YB4!FA5>!VQt7(g3mUqD"4OkP2^@&IYOG>P`'Y9mKd%6_Y1&XK>J(I\-_\glJiZ;`5iXpWq$Mefb'd643k/K?1[6Od&@W5H2mV)`p3Meks"KF$HfVK%(0ef'WkGIs\^/.]&!['*5lJ;@H6k%#l%A&&F^]/[_84u_2>&8T"/_fS0!4WSF7'7cW*E`/6kY;F+o/%=-q-djAb9:XUt9`HS5YP.P25,))XpIFp_eE,c<C>D=)E'n^lGH%4X@Wd77H$OWkB,Qr`Gs"!3<L4fMhq8a*NqhJ2jh+;OT'0-#2e<%OW^7!3E.oCoX$YS076IQ];r-<JlZOi3`2Z0_er8S_;_Lq^I*f%j'+;,\\uohBu](tW3HFWS>=rO1T*/"VfoXjcZQrpG@jpQW9=F\COZM??b2Q#>/(p6WL]C9^hET+BMhV;8!NQ,K+^n6L/R-/G*FYK%Al/nm?=:-`="sF0Hh"'Pr:/#Kch/F+O%",.@dp3NA+1L-^qG`/>X$(N[/!gBV\>-jc?F#T5Xd+MH@aJt?,>I>)U?]I:sF1on8<9m%G7F__L/[I8LtXh]Ulbe^W@Ssljtag=bXeWhS5GNFU),ekh%^G!ptP/#KAX(^^)`(%^%f]j-C8%21C$.=%ZVpu'FIXYZZb>U4$/um%"4-d<SWr<;'W&t6[.[Q\pu?]UOZK0:KHoj]ph"oFYMo+ORR-]\F^[rm,74M-UbjJZ@5CG7:F:_Br^BD9MH8ZB2HNHEA%?hnnAk96%9XGHn5Q4\n1*0\H$-a=b#^SJ#PYihFrfMjocYf3SF7ICqBYrU0.4C(.;<b+]nG>E`%:7`pMYi0]]9Ao^%n;)IedddFmi[e\j^[8r%g4@c9.t8KY=;IQGLXlsFU^0jGe**^=`8>e/9)/@@)C$S\k""6;<(.e?P\0c?6u<o6asiRU_!aeLA&MoM*MY)sgGS\F9bG@M@8n-q%kkj"4;7(U\1a2JE0-M$Xm&CW$5,&%b&#W6KqQr-HKa=T/7i*T2i<'Qh<CEO$3N`5poR6(u.GC<++_4n`@t^S;%5\.;QRIe<jV/%L%JuiD<9/u;HqEB)L6rf+Bj`4Q%/*QlE]86(2eoo8$'/MlN`sah6oMV.2pE^.k8NBAq1ln3]S:.ip#;alTpX)+3X&;o="/iQA!l'd:%@RZbV]b*-*]jKdH`ssgZlQZ[;HQ/fu1ZPQF>F1>Ro..+\Iot4=.+_1gTC*'dIXE>Y8%*U!7LI^o(Zqic5^Fm(r;29Offk@jm(+L@%2XdGbg2XTE^0UJD'r@Se"\*9OKn)De2E8>"g-3iQ-#A$80:k(P!T:,eCC./)W1?:I)G/S'G\q3ebZPm%31&4\2P"1?U(e?U^hN2=%&Fd<SfcY&l-?2SGn&h0a+d-/(1BB_7:6$U],\>GH:hk%ea%dRcHCSp&I#tC,<-/5?[D)dZ5:<md9*kOlM`hB_++LO9Vmp.@\ETSR%H@83;(e`#m!q06S5.Jkik(?m#PC7PjE_2-dflC8c.ieI.[rUuY+0]_R`uf7_%tdP/Tp^NT5qg9BgVUd.](W=@Q%M;E-BI=uVPDL3%_O";LW@7[8(F]3d'me0m>5O3t;mO9cO2#D$[O%DL6D3fmkef]_N2SF9T^]QOAnCAZf4TRDB>]3(#X:]+#[Gs3.L6"0Il[9ET3F;M%I4o?si)=@+_9XM`7ur@VcYVuUd2!4@kN>kU5*Zm'Hq-UY$O>SbP(Wcn:a7JQ2'BV)SF>CbM#eujSk9A#IRX?!.]6)G$^Z#J(+uM;%Y]/\cZtnJt.8#lKC$i*EnGA<N;XccVFhm5ESF7lZ^=>eSH3c)>pkg6MhDV't'nG3A9S6#ORhPETk;pSlF$Y\@U>]&jWrW'!PImMs%8li=ppR0'6M+CF9"T[FG7,-HdMPaR82E.hml'eM^3ShZL[9Sl(U(d=']i>&]OCt\(CF2pM6HY0U+5g:!lQ&F"4ael+Me?c<(Mb6>%AY%-)=k1H`lsq%5oN(MVJ)aYZ3E)D@:%@A\G\:nDrE!pgc)u7)q=\t=Klg(*0:82_l/SUc&GPj04g=jA;WVq&ql:_74piqSr''tJ%./1XC:Z1(?"%!0F5E$1C'FFMW$=uQ_6NG872#T(Imm?Gl%>>Ub?Vs\/nFFt0-/a9\at5HO9f$eg44^SU_54'X!eTm>e!s8p8^XQE%U.k]_SN`\\3o<FY6W^+_kQXdtIhd[pL[mF&-++%o'6aA59gE=>J$i:t!..3JEc7jPGYX1)*N,sjBu^N2cF<,0(0@=\<A(2W^IlED%SoZ@Bs/Xl2U[B!Vr!rZF]G0>hWO/>W4,TPT4,#H\[@lLQa.pI;Z-r_[MXqj_Wjo'b6KN5kql;u0_,sX($rqlA`E<qI5%q$LfK8BY%iuR(mb+u;>1*N[k+_]EZN+7!)&Z*(t<-tYoI%T+3g-][@U%:C-f4]K&g1u4e7cA#N3D$c0!'k55p<2\Eg0aY.*rqt6'G]H>C$i*u%n9k^hd==,&G+L't)c#jC\;d`=-uhc9'FJOWeo6"[3'AO[T;IeZPCAopMC;IWVmX8H_s`Y"TL5P6GLI3f5G#s9#b$!a.Es^ILa)'>%:8)W6^9ndSnqG!MJ#tGW((Qs/$QQmU<4SOMrX'-b:d&f[M7%1aq%5eT32:]Un0KpOn0@-OSeO@aYXibm8S[kp&b5Aj.NM$D&;Q>H%DPlAC,2.Rhg/t'-O69.YA?>0^quZ<aJ7&jF%,phVRUPuO,3E2q(,d9*&DH3ZfOt@+`p#AnA5nbEU(\BG]bM<3!_QC\:a8m$N?0C8%4oqK*fLOH"!_QB7*m#>*U37`,eG0M$F]F;[<^>nFIt`S@E0n@iV)G;YUs=0$A7a^mBkH<oe6s=GS3eD!bLuu5Q^s.jKeK;$MlIJ6%),L[<[D0Sqn!+M$AF0T]LZ&!29F_X(oMV,lp^qW\4Y!AQJ5XgI;O`ai4.Q?P3Su8jOK28YF9AGK^Oj?FGY=Q.A*q)]1ZZl+A^&S\%;D4jaM'#S*dA(`.$n14_26"i!B'aWcC&5npF"T\W;H.`?VmX:V`U@k]KY=3?&T-UU%j9rK\,fV`Tp^l.+B%ZFPR:Q3efGCVm.>hf%VK@kqDltO@$s"B<5M[&8I_n-ERfGdJkY:"]Y!-!ZAD0Q'7eEX<66XIt)@;mR&qs9[K%7u;1.XB&(p2U/5^ppmLPG&,U$+@F/RX!#%C^Y##;$WdjEg!/bk+^,lZK/qaCZk<5[]@P!FT\PL^B2K;f/B>i"M=h*Y88qqf#MPF@I6^P?Gs_Fnk3&Xi^3h+>tu=^nB.Z\2Goa6%U)Q(or=qTs3TjVU!m'gdY%+sm5lR-j*T(Q4nu8trjC]1":N?er")hs:L<Fbo0r0!,>m#"HV'o=rVmX8HaR>$Ph?B!*+W+Q"o)"<N%4-9.1mhU:uKog[8P>o=g#joF,.lKG-15h;93ke&U0ZGEfkGPT-a58M/\?4R(.2,5/=7;-b[$^Mc=qL6F7Ja]WUg+gYV`%&gFunf:%g?D@m\Q'80U(Oo:X]7c<?lQ5![O;p)J;b]'#I[K7HUj3H0-^eC2PrCQau1H*dHQU,FA[pQ?Jr26<rr,'O^Br\r/%02@XA4C]d2K;%HUeZrDl6ER/:b*_0Rl)G"TBq/j'r*hQ(h6gSC[Zh+Q&[/MDiMt6IBj]R"=qe4_Ce/UPQXn;^`W.>Jm<k4)nbto6L(tX)aFSQdaYq%"m#->j%a#6:c*sAmhgMGUt&CX6-"0`\bC7Sjha6F0P@7oZZ5\BaYqIbX!C,Fg!cpD<k8!RBBm3Mnb`=9X)RV+%/_K`p_6nNnJt$W%]oAh()Jc6/8'#l-0T&oB9g`dL'LD!f7Vd45Mbasd;<Fr:!VBo-R8Rr9Q<EpA,4FAXU!1oN'`b>P#EZ"--5;b=MBGkMUY8isichaA%I_&FH5<*,umjERK7&[$3Jr&kDZL7)o$@fXg*VdIUdt&Sek<&=bjf0L3Q-3n/Y7gC&bE8'Gs/.G:r;BrYpf(E.nM:M'dVC/g1LCM6%IfF1`,(BQ-<?aVl(.<O?WH(#$rDb%jIt:L:q"p$m*.d:nqigQ<-(^]#$QOUb!BVd/:bMYj$2D?!c,CbN-+ifujcU;mA](Kh<^HMO%X)f'crh%WJfpaq8^N1d:WUs.n;"-7JA5O8!E:P)BR4A;SF(;V.PMKD@i0"ch<PteZ<WW!-Nu54CK>@\[hg'G`M=eDU(_a@75t'J^%8;^1[95Q9cYS5=m;`Z!Sk*ctu]te=KXoe+eY>uB/l\(ks$NC!r0Gb.R7o,rbs5$TugWPBSZaG9OS%rYSr@&BeX`RNGi9q[$]te@L%Y2\pIH`qe4htQkOj%3%>q*/FS%15U$V$6kT;$>Y..24s%>5R5LcV>QE%6EB:c]##!;6!krCO[(KIs<$l)WopGRQic#0-:)NM0r1d%*C[9IN$NWl5;f+lA]-TTVt3<jMc*OH,,fnVY2\m\cfCu^Dl5qH+.T)BOT+`C^9I9f'&$YeWT]uWBq0[^'BeSMcSPC"8l;UY:-\\W%!<-tOae,t^Y1+,#^-e=^-\1h'>4Cu$7'aLR,TL"XQeFQm^d\Q(0Mo2F`uMUb#Z<$(>'m=Fqr>Ufp/K&/(m3rBaD!="HR^W2pPpHM%hF=3_GO2<Q2rjTlnFkYj%_Z@R8J.bu@8o=hkki+=q24"^N>LW,b]a-=G^1nU4d?fHHUeZ_D^R!#?EpCd?]<b(S=:rOhoRGd;,p#`%)`Xtu<V660@k<ec(da$4hd>f3;2.(&<*F801MVpoAJE#'IjATc+Dc+-Pi6/>`Zd$,;,K3@C1e9,IlnpfV)HD2@a"Mt^Rt%5,_;OZ%$fZS(bu#aFM?)jDB_Op$L!`'RD3=6%jNU+ZMn7m>gKb!>+-/>H>C3X"?>0/p`E%?ekc(ohhIk=X:"i1]UCI+"c#*/t]!3"-q/1'%%G?'NXDW%nq=+U+$hF\N"mM?F>rkJmh&a0b=Pqo5n5t'D\-ku)3Y_JK9iIi"B:8bR!;3QT2[uAo+.e*F5e^4TL^-%JWFSXt?1CK#3%Vp^0AmjQ'>D'\69aTeHt49@N+4L7<K*hR8aU(e<T^hE,<,4CSr[W/3'2dZqGhaqm!K=2Wh<*CF5*CZ@/SO29nDJLm`?d#E)qo/hW%jeL6*HLE7^/uQ+l9"dI'JeUcAlT"#U%-5U(+.gtI$9aXie9a]JB5].Ibh)h/%EC0LWIIe-;%:`>V$6Nu;;'39qWY1]mlMKX/BmuU%AT#p2B"fob)&mi)USlOlH1.]J['pMEF)LX#J'Q<LqWGQ)Z%#hHW3d](4"AC,;f/N)mX*Hq&F]LZS8D*uad;HRhZMUD#X*kW`-V`O%AoFG@7_0AZqd0+*1d?_`hu=_S4TP?n=toD$B\%$q[C]&E5<l_6V`&G:6Hl&@TW7)";eSJ1G7]?!nd0m6<GBJiG>fCPn,AI!HO;@'%pC:Z_2HkI.eGHo$U#FuB1%,K@&:Iksip%OQUqN<cd:K3;X$\7A60?AVbc3F5<c4hC^C%\>]cSr9GrHILro?g=Z05!P#8FF,UF+OJ%:8.0kClKD0m)7.tcK?d1Y"DQk>Y]'aQ$n."VLsX.W&H0sk>(M*=nLlp4?/2j))V^sFp^Z_E+pCl^#el0q-3YY`e1<A7B(;fXo28n%IK,FX(\W7^TPfI3s4>RV^d'T"#gMH-#arb2]7e$W%]k(t14ag:35!&;5!%]="Y!&4b@kapK(!i38nHj]KUCA^7j.Z<5ET"8+9LqI%'["'[V)%Kl[*]=R\`,NDMB!@2_l.`ZOn\9%'GLk^]_`h%5+<jqhGH\okFYHU\d\g3d`7>$>IKHQ*#)DjW-23MpZG%['l2PlU(Ai)%@^E`#o2JntmN"`R]mM)QKN:Z]&lEK;!B%j\5%:Rk-3Zgc0Nrh(W;BL`1Daof15(rX_:18kSk9CE]qU1cQW#@:Db)s/TX(*u*4kKa%LQ5ti<K>cqU4h"L?Y/*[;k;(J][mBh'`.T,McK3oo'G`Xb/1gCVboYS`%"u=XAtIZU@*_\+.m>"iU\OSL9""d]WX(VoQc^YX*586%p,94lCJ;hdL,Qbj9U;$4,rpiogM(N-;"*GtM38p)`0](COXTklkTj3BUWBdN':!fa8e'R!3pE>/q;Tdn<FlkkJ^MnNV;Cr$.JRf/%qVPm);"/e03QZ,icr4WZ]m%udJ`T`3Ao%F(2Q:LJlLP=7gno0m=toD$9"i#SmB//3qt>rb]^MJQ_S#pG57@(S8djdpU'.j$;$m^&%rpTk<bko,,Ub_D<Zs_a''T9-<Hfdr_rUCVE27:Ou'j\P?4a<u9cr4Yp][*N:DR<=jUommJ!DBiL$_FBi]qV[@.Rg=W3N`6[k5Cu"%fL;9c+&V/rXKFI>rmVj&!UDOT%NTC#$<][GY]<o:#8UB&gS#A7Y/sP=Vdj/BG$!Ak0r^SpI-)#R?LsGVdDr=8OnB2.e_WchnDVJ-%k9=KUkt5U[Uo%p*e@eUlrcD5pp\l@l1;Cq=bkm;l&:JqgKr]D3OnS>P!G<@)K'sdur"WeKr$%m[#=ZlkWdRn0I@j3J(Zp/?)GbRq%bBL"n0^l!J@,<u&1j^+:,0ms1LNn8.4[f&qhkS4['u_<I9r"?K.eCB(1<B8%%@mICPD4-l+U1)p(<h+qO_/O0:cJT_G*C6*Vje*E%jgtuu=&k,Uj`4Q%X3CJ$q.8FW^L:^1+4&*BVp^0BmjQWNm1d\Ro=ht;Wm(?)ARXFoBu.H+PUaFLk.U@4oDZ7ZJ=#tkgePe8s,0U_%4$iL<>!VNs"er\i.,6/b>6;BA2AbTFb&rO@YC[T)I>B+T40-I"lrVoI,4F=o+S=>>61k^3bhbfemU,%'Q3sOj,4D:8<HKh6Hb6A]%<TJRh_b_Vd3IhZI^4/_o+G1)K$8%A6%O0-R7\OcH@dV&-_+kfd(eT!d+QAh6#^+=(mB.T#\Rdg`p\iA.Fp7DbCmc>TG7s,=Zln3e%MCa)l8[sGZ95OaoCif\UkB*%eFtP8=fEmM&egg1's.qEOQeIsk'4/EQXnnQY)"\AC!:M-:UIa'k_Ke:[-`5p?FCND<fhP9.\KjVC%CcSWB<Ta7"i<8.>k/"lCbP0`2iPHec;e\P1c`"r$[8SIRJkJ+DEj0seS1a/EVp6E.9o;j)EiQfQg3nIl-KAIe75@*<o)8/8l2@F(%;e\P0c`"CFbt_/31]B`DR9r\ol2AbKR.7A['G]H>C$i+PmLO0b0%q:0&1i<=&%:`oLN[F%;=>oRltmFD#9qa'^H.mh#<VKjVm_L]%OQr.Zg0LQ2F,<sqjs1\Hnm&h=p:Q`:R8C(8;=%kY$4a6FA^40+#HP<XS!J<0,R$We0WL[Dc@(bj41E`%Rkc_[Hf="%R`P)">(H#]%7>ALH6K(!bCBr^\g$-<,2!6smcHT?<8sRS6mB;]@qkjOk&8NWt%q<]Ucc6l1LceJ0"mOl@AD#X.b+W67C3'A`VgXR[S8RLL`&07r%>(OrP>fGJ?LF*7(S'U_9b4e-P?82+Q>%$b="baRK/9#JldZ,]$g['1MGHtLq""m/B.U,Y`EtrcRB7dsd[<@'-/$SqkJ/h5Y4G=QH%HNt-mD^-^Cn?T#f.'/t_J7Fj^(L>TL.4BLndFqmfh>aI%?;>?$k)(ek=8[F[-A%gU$fJ^M`3P_,.XYR2[c&sm:)b7.Q#>(2Z>5=?%e4l^1mL&L`fX+I!U_iBBN9k^=JImL+8dj^nUPQ7C;$^DT@I8^?%6"&j%><2YZr4b07FWkm7S@N^HLD%2U$_k)%!1Fi\TH[>H7uK]%WnpUkfulp<(;(FmB+`3uj*:f#\+ru*'bsU2"\riWQ$M9e-14^2c+Anto)7I+4-1<O<*D!E1CBmK3JG?IPdM%i/p@*L%ci!Zh5=MC%U/\[nf)@/jrn'p@%h3o8dcHO\%"C%rWO-'iB,&@LEXG72Iq^"qq;q5l_dE4'-N0tp7B(;fXo28^IK+YrbkqAUX3CJ?(TYc,.a?1a%#E`UOUJu]0pO,8%@G^`15F$LiV$6Hs;6!hi5M]?%IG\R'.X5WWGlo_WbpMkJ%!jBTR.lUbc/(p`#R`9P--]Xh08\T/pR2K8U(jE7%A[HV^RJ1ut6c4$n?XB'q'`,>b@b!Pt4F9/D_@%s?f8!,8L<PucRT2A*Q.p$?Y>Xi`Y9jWTRnrk>b9-=NBa?kT(<h-E&8#jM:cMTc%mDU<aN;@:GDaE5YBn<p@Pff<@g0@)'pK`DrfkToFmmr/!n"6'I8I.JE(;tPiJS$PWrqE0hXWbs`UNUqP%b8*2]kMUXMMam]['j"d%p\m&e%:;H=jo%UOJNgin`7-l).!lneU2R@pI0o#20.PGiQWZ13Mn3?hgKb!>s2AC`<jW\<]/dsuRoB1i9*BPJah)a.8bV]]!<]+D%SiM*(ULt(@SF,8`/4tdB<%XlQ[n==5DSO-en%KA%q_(YihG\,S][&"!7JDL\cYVuUd2(a?T<]$sWO*f)4">PZM"f2]`;@7`mJ22=%n\13<[fKAS>J>#FlaS#;kTR=kh+%mXU9Y):,\qtCmi1mo5k/9i"8Chl]9ki98PpsA:2=ncGQ1_mYo;1GcnND)n(Z;TcP[FC.P6bV%NZug+:/Xi,2,]o'$p1"#RB^Bg-nVClNf%`4[.[S3pYX^q)h`qJ#lpCn5!6.O+F4AH\G$IWdG@'\k[4L,(QTf&e&<O>R-sOU"tW>#%W`hT%Dj>\,J+nd*QhD'Y%ENqsII6?i9VSH5!dsGb1@8X`jUiXu[E8*Mdgc#[oA(aHZR?#h0*$[/h,X%E=#[.R9u*FDpUCG3q-J9F%+Q"],9RAjT6<'X9ggIu*2ke<j>?+Y!-rhmt[D,&B:U$uZ!c^f#2`-j`qF'Y4=s$U'fqNMM@^L#fPL*m"5/=^@m>J)^+?sA1("fV4%(&iW:ZW?pN=$U]=M##gtGeXLdh9CL8M%!D68Z\k\6E0>Kr^WB()uFGZi&KI<:l]<hPj4Q5mB)K=4-k#,i_="N]d7(#;bcHK>[lon%1h5u!l6];k7Nn<"7oJL#>MJMsT'Kq!2Y"@(77GaGWgsmaI4pc)"`)^8,nMXm#d"3+5QJK^B&J)*!G-0o$)`jmWD-3@ND@8'SF.)3%_*peWH@aQ!?/aTM(b:-3WD-,9l1,j%3a&1fcqA("hFA8np>H\mM5/WSJ3rXF!@I)ZQ\_E>.\]bMSC[ZHomYh$JW@!i%EIJO&#AH_%_N7);V3uX:U?2lNSYTpLER?-(`D5'M*;Qsa3N>tVF9AGK^I#X&YYo:O/_\j5._bg?($dY(r[/;Ng<qHOI>OCK>]pGX>>.E%7T;Ht%YZ]NP52+HMWZ7kXjg=__W:u.8[72RGW:pA6ML$@h=]+W.Fno-03(Yi22RNjF2*[_k=B"pQQSj\.;:,iCf)@/l^7W@>=fD)n]ZpOC%+n`PkUA-).SjEhM]n=D4[neCTWE@o*5I&ZA7#KE0ii&e$`MdPIXM%X'4ceq]b%-'b1!da^%ANTZ]uJSQ8k=:HV/fT&4\sc@*ur9>%flUc.92\Sc%AVW[L#2Eh-DC1g2>Kt@bE%FId4ZC0<*D!E*CZF1N$Onp6)?L09f>%`G]LAo+=J&&W9=C[CNgM=hpJ5]N]%/['%B^`%4XWE\"F;OLM"coRb?dX]&@,a3!bB2<(EaYlGB%dOMGf](QIFPn"lAujYJ<P1HNA=+>(1f!J/3[,8djRjUFr<0i?[Ls-9AO@GIGs&%!4;>\_F2!c77B.S>5PA9qnT;1L*I"\Q5;ed!;aL4$<-CAU?q7]M@MS,7Q@E<"Ai+4^oXOc8#^MhXo28XrHspc$h/W&JG0X\IQYk<%Y6jh8=oe"+,a?!$XF.qm8o<")jKs>$!+Itr/V*R5UgBqG:NmOuh`''u#Tam<hRc%F+FW^UJVj]HR2Lm\c!4*_Kd%SJ[#Gc<3Gg$i%/)Oq[3/`Y:e1IH']*c4>]6t(S^@/EL,Y<";qfCto9o;,1V$68C;2;ENE!k^D5E[]lP.'%0RrkrA9M1Wc;(<M[V6e=Th_/?pcu<8]%Pj_DJo@f<g:Se6X5,77ZdS?M"$;3I+@H;P$i[NdL/$,`bV97o,p/a9Kq^pfSC4`jO4?@cUO27T%^-Cb?1.Fr7fRtI2]<mL?pW)>l%0]*t97leEOOqaaujg6pI+nqN=M@!U)0;`:eQ1*&,K8<4j4G=Q<HO#[@0-;^*VKYt.PHo@X5X\Ya8(_@;`0fn%qY]td3VU/3dn4JK%JjlX9_1T#rSu:"gF71LiltmFDO41DS6a5XYo:RYrgO5S-MfOpEQI4Dl7G[_4_3j)e[UE3;=S_rP5%\[9T;U+hFmg_fm-V0L8]pkb%eE4->SGMQb^44]/W3h*24"@gme(S/_h9UlM$G5aWlGg34Yk$hZ]tj'8["-soMAU\%Ku+.&CE'-^mBg<ef(h3un@C)<h$/nVC$i+@%mLRVBV(sCb`0<JGY:&o=iRpHckoE3I]o59;q2_>q3BPu7?I-_Uqra+V'ii/NG#fd\LM-Xg@F@nEq1J9b,0q@&r=bg[;.S>&8:kLS%;T$li1?,s<ds:Z57569=R8-!&<S%--ftZ&!S=R1\#NtacT0GI6-UPM!8?oX$.%L4A`[Nu2EEZ0&4SS$-+p`>7B^Mt.me]KDH_K9i%rI&/kLM6Lt:OGk.Ld+\3"mt/D,h^pCb+n3oeE/$:SSh-n38^k&+;GVWl30XmGEmFAS_QY<M"f]"D$%CpEgp"r.'i4,'ZpsVT)5_/%l!9/?hT6d<]drX0:2>?EGYdBi;<C9,aRY!uQp5NML+2d52$'Iq$=us=V(u\(j?o;hZPg=4RN*&b_l<?1=nehTPd8;]TZ!-\H!$::%oMf#PmPAU<..&;!7nTU9TCD6d_kN[I7nU<A77B.S>5PAIqpS&-V$<kW+nI&lM\:pHoT<#Qen<J8N7o]piPDA\+=K>AYUJ]+O]&>S%;6!krCO[(JJ"@R*VDa3g!mR>RL6\R^;eQ3HG7_%Q2@>.J:MU2iN-769XAlbu6Vl=0+Or'=[CZd\5CK]!2')uKd/;!1UP,C,IB\s/%oo:6KhG-srYZ,B/9sL7.C6[33?n'^GQtQX]CNGbhJ)3BL5ha,N#tUKQF&qo-!j_$hZs_cQMH"pa8\'8j6"i6I5Y`-A02TC+V];Wb%77B.S>5PAeqpUb#ei6YYcMYfK9[W'":O7n$mjN5Dm3KZ7SuKu,+$4I'e+l,jl)GF4h8!alYL;mc<tE[/^3K,^BE%hgiE.p_.P9lY%MA"NI:0([a6Dl^`II6[dn_!YD4[Zh277B/al)29g^[KX/p`W:Irr.^2ht[T=2i9kH$8(cA%O0T_7\T=,9\T<]muO"8I-C?b@QFiJ%q"GX_laG3p?00uD(!7>tWQj%m`6DXNhQVl/:Se3qhbg3(gF*cMLUHilgJ^1^n:oKh5'da?U*9kcb@p:G;Xgka'*m*34RS+dJ*iU9%&=&hZ$OXVCaLAXBPYDerWQiJ34+/e/i-ZV@*4W#);E&Puql:G/^Uj4;D=,-BY,LsDJR<#ol)D#iiFgX[@+n2pY2A]tk-(qY2Z,<l%hko:L=/DkZ##8r`Q%n1Q*qr"=^J=.f'7'RQRD6u*do0t3_p>8A`2$<[LOR!:S%lOX3q1>ZI"sTh\ghBiS%38&Vn^Bl^GODFZjBD<%H2bZ#[e]Q^B"C^Ac_rkBZr8A@Y?8^?F?!\=47[*_4/u2C.[SW<?fg6RQaW-T2E-5E4o_G(c!gh*;eX"bG7[@?2@>."b,h/d#A0kI%Hc;6;e:oa1U`e2>UU@_V_s_[_ScKB@d/?5Urs>@qP>=uN"V9Kf,i.3''V,7Im39,K:)EI"b'3Xm!#DCReLdQ(]?8%[(C/\@Xke&b%UVQL"XiT-#.6KbY(-$\3&TfZN$(&(nVD^@ng??CC8>j),?.).j.XHZpg0LQ6pPT+VMm[2l;hU^V*mdmiVl.rEL@6O"mU[[&(5!p@%M,(>'%D%GGh.!Uu-q7c$e*3dBb/0chOL@Kn^E*AqKV0FUO9QnuTR&(>B_[T+]R/E&57-"oE!)&/K,a;"Vn%N6EA<>K_/``6W^QdN%e]uOkk'g(QkH?Q4HkK:PT`l%c6"Jg+-kpP-[J!uiVk"lFq,Fpqqa+Re"JK]NXkcu$rhTepTj_6?q=>ERh@!52Bn<uip'r;6hF:DM%@_QM8QU+A*cYd.%>Ei%;UnHoT7Vd45M1<3&"X(0DmjEM^q@`9n7/cfO0`V@04,U7h)24_n!2McTpVZ2<iEtgjT*(a\+prJ9C$i&9%nLkoD(`H.,1jf5=abM4m;e\P9c`"ss\!%LH=BMq%aKZD=5)akM+>Klo<-/5?[D,>P^UsY.[<Y7WHiE#J5S<97D]0>15,0GJb"eZ"%hJA1@#49?'K?iXcK<@gDWa&;7J!Gg3^LO5DKM;H[I\MLpNup-_ln`>'88T&uLt^;Po-5LZ691Nba'=h&<4@h;mOAo8HO^L]&jl&1%LoSdm_6\=sOn\[lPG4YFWDje8)eFr!<Kj.V[uAo+.N8?`l6%EfI3$3b5D^Z^qh$,ZKWD$!!fl^tK(!PEL$@=+U<W:njODdgN&-ca%O%M2Lha,WtN7RDH+MTQk\^@ajmsNA,)Z?9^hS^:7:Se4<hbf'agITK1(MH5VYM$eWRBPToho#22/kSFW$]N[).O)Xb7e'<?g3aYK%N5#<da7GIUoi,*;neEJG]pr!Z;jF`q%mtMdnA++4Nuk?,Q(g/IRGkOH<tY8uND9qYG67%%AJMX;^<qPe4,O#c4,"kl]JP'NmDNqD%oD(K8WYD;Pjg=__62C'H[`4B)W:]rMMHq;GE"VLY"UMi%./;gCdelqqL*'YJo;C=h.4SMPe(S%-jnDOVL_V(-b_2)Mr?F'o'EZlb%B`ZA#'G:+`$AH8&CH!p\G.N7!E5#Pl$<Is>ZZ$d6buIShI\B-H(Re0HJ"__%cS%*UpPsP^i.P#Wr'FW:fC8;A'OTDB6Vr3)?OoF;%V'.7Wf)?"+59;+<!q`$sH9EJ[?lr1-_V?Y6.""%O_WOL+Hk<Xu*u:EnO-HdsU1W@@>+;S6r4arBTWLAeY6n%^CEN:W+mc285iu\n%#*s:mEpF4+g:X]El,(]sq(CKs?'V.Y)`Xtu<FgPK!+Wapg4T3-iT^67bb2]W@S`g<R@cb`=MdVO/OWiYF-9Qn2s,+NmFH*WCJn.(%!i*08MTh-l+`!In&Y3775%<0bg^ldG%QZbUS3@QJ23cgbd#ek%I%8D:6S:r-d0Yc_hC:4os/ktrbjU%^JX@aU^Ak/rKpYZ4"Ynn3%`8TH!'R[!Y>Th8Ek5p@gfe0OE<K_r?cZm=*G#jb$0s@/%r1,.)?8L/!fZ1Y55kg9_$suK'n-@\dVk`Xt.;S,<`3tP4OR&dk:NmPA%he.^GA:C-mY/pP?f;co>.P6bXNZnnh:8.S.oD;jGMTkOJonptkdK5j*-rhmt[D.UCc`TW&Xb>08+!U'XCP(sp72Wb06;c@_U/j7Q%+6AE`<L':X\X_7M.Pebg8h^NDD2t/TW:-@B0tn:?Sk9B$^8$4r[ugiS_'C$<3SEQ1i6'.O%Dc;4U/\Rkf&eG>5@2^5L(b$;W7S(/%EpVibS65Lq+qNR#U$-.mBmcsn-bak)3kq8-9aXeS10V;ji;ES`_/7?K3H$Q[eG%-DmQ^p.;eX"lG7]W+nr[nT2O3"/]@c>_*D"in%h54FT"K<%OXh>HcIfG1j!"<Seg'LX6s5fX$'?Hb;$Z<\RLr?c$.%L=D[U[n6:-3(]S8[$WT<!jJ=h'EVjsi>T>7M+-P#CadaKj-`%8\E@t$n(-NML(Sc;WX]lPV7>`<Jj]9Ea&@@m/6321t5,q^&&u!5.`075,0Hq_+p]&CMBeK:?k@FU2*c*-rhmt[D,>\c`TW&X^oto%*tmtICNAl"C2T9B;^gp7RVJ+OqGFuj>#d"DQ-3n/Y7gI\1#bNhBK*3]0>QHR[(h9M1\T[&7,uH\Jrjh<S&do8D87&Nh'VojC/RlM%!i*04b0Rg\/d;`$T1es4X7*r]c]_%L.P1r&M@pq:7TMFMbq%LM_&#l$>icdt2Qd4*;$r1e@'k)Y.JfD)!Z,_1<lM,SYg(d!qb*E0%c+\B9q=o+?Kf<[\fY\Y'f]O4LZl(j';NrYte(S0*kg+[u8"o/@`FP/8:La:TM>V`'CJUc17Ggu'j4c!s604qkaF]c-LV.lnqj8k:%WYD;Pjg=__62Fmh=gYGSdF<KFDD^,)CEQ?eG8)1q2R7iZM3bA`0l4)&0p65OA<`l<PqAoA\I-d"[(S[\m)h8orkcs/OmOf=ml17&%5t'eg8;d,q(Muq2aQ^XgIAK$5^#(\-.!gHlg0FmHpBA)(r(:2Z%sI+L+T;:IpN_@,:S@q_?U7$>bK(%=[=:X"`qt$Aojt^)s/n*t%Kbbg0$rSb-kbl#oddI_4A?8u:(nK%MrYM-pFJA0%ZlnTpMNE3IKd+IH[$P0B3PC*D/)P-\\uLXd=h'EVjsitfYHfujARatRPmOp\%b:Ee1UPR%$P8%Bde8TQoj=A<!H(A)<7]@=dXo27eI\/g8$VJ1;E:4#rMHSgQh2elc7CK,BJu##9F'L/h&5N3L.J)IfgH7G8d`EQ$%+R,%''ii/NG#fd_SR$i:F)(<4.U7E%CQ@/PT_;>g5kHjI%OpcZ$?+5@?JJHGo]!=FI'7G5Y"DQk>Y]'a'r'Uc-#QY\c+Amap&3d.%)j%;t<15!,%O)s$7]Gl@AaR>$77IgU5gK)e5384Mjgo0udp7[kT<DSUUc.,=OB:=(Tl5MG;eZ9[G80TB2@>/AD6,mFgL@&c04^UA%d;'[9V'+;?UU@]@dI2)M"gdp^G=T1>rk0/`9nM(tB`ZV*'_1sAP4IfQ/@G;cA#C9\:!RtK(X,l.._:2[g0]QtpBgkWd/R&,fimCc%pV5rPInNaf.P2e>NZoS&:8(pXU#03LHr)2</f_[gCmRo]E_VFK]&?V8Ws&D#joEHuUc)$/&[8uVX`7g2YkD%"+S6ZX5/*"-n5LK$%2pUEfc&M=@SF"h+4t]E(.U,Y`F-WHV\(o6Mm@qiSC%:KcVR8-q9rL4/((>TrOcF@T:cPq$mD=ghSM&,i/)@&$D:\nBlA!])GEnkO%5+M3Qm2^85#1iOBc1pfSeXf)_oGp=^^3h1gS:iHIR&URiB23)#gVZ%t-n0bt$&mHl$:DSk=W.&<WLOCq/l[S>P\,Z!M#sVtWsjDf%C]B8Mju($>1ZpqGh1lXh;3[fL(HAPQ'o%18r*B]Vn%rUBO]L?_^QX^IVS/4+KRSaZUf:*_>kgf%-MtqD)u*N1[Y^a?Oq\XB_l7`Y%kkP>M4!,r02P()jW?6rRHN;MJ6:H%4TU>Hc"j1:6Kn=;nBK-b]S8`RXjO4-^;3dkT\X_7M$9c/aI(9d?g5Xoq5h1'eD@coq?:$G2%5D$\i%j*6eG*/UZGELSC_CdU?]<hlH,q10%J^<%SU$$W=0+jPM%5K4ho`Hj0fTh-C950.D7hi3&nk"Cc95?JrPW$+hY&q6ZKM0k6%+BM:4TABo:^Xl&=WO;3UNtP@JKo%3(b$I[r3^9>=`OCt_=!5uA-@XH60+asTpBkHrU(e?U^hN2=P4JcIClKQGOn/_q(-+U@`$4A+%MG/CZ8MQAf[>BnuK:fAVPPU7a2U>`-d1)Vsr[L&1n+W?aSl;,JQ%c7,^T_38Z[haK>2\um75V`L6K,@cCE%FIgM+QcB'7pUmFbJg%8sRS6mB7`+qedB?je\MU_38!YJ,1NFSm6Ul/KjnM+sC;_&e7:j6N[[%7L*r'8p;+%YG)^G]a.D@];m(Qc4@Vs7Xr$8q^8Y_h]:j1%!9Dj4Bn=ZU'FFRj$K:&1Os8OCCec#WTOas]%8]V.V5iKR40&Yc^Dd44E2cR-Rpbo=b/D"#BhtQ/6JkXnj4c!s_VqTP5e>Y5#56=;%DSb::<CEO$3N`6[K`:[[5JOTZG2Wg0hfn^OSbb\,;e^g0c_rjo[$-_UqtX0[]C>4[@&La14ke6NWY?3(^hN2>,4tVj\=TZo+K&W?%q]+[dBFgd?5X/]X.@!UUjEaGaUtn>s1l;5?@]+MM?ZA5'oiDjN[aWr8jlc(rT?A.5eIng0kK-rFg$a7_C?W@+#f`3n"J=#*g3b*K%&`0QX3k]p#U(e?U^hN2=ddp&o9jp3tOAdh)/m7nak8!LC6%n7P-^5!=9:4$-[NTot\W#]O4c5)ZiD[=fd/71M*/c_I#0<b#Z$t(C%qd$6BNOr8VOSCS'KoZu"YW+A-Y^eJ!BpGHO;NU10dFqkpkO2TL*SNkA2DOn%6\74)pA8@F2Nd`o+r9'2;RC&IB]*^M$*16ST@R[G%<JlZOi3`2ZiV>Z>Y\4cCcSGYtZhMRnB&5V,>^RECn,q#"JUh2$XRLTZ/Jpo>.m2]aCNgMbhiII6p+Wl\.hnkp+/h8OL4\)WB`ZP(%'X@FV$AI,"Bq=9G@"iXdHbTd3;#.&sJEK"OQ.p$?YJTo.?7%d?=PN@>+A@3uAWGpX_<e/.JEK"O=F<2%g%9BKg3b6Odg+2.cM,`8%Kr\*NF9AGK^C&:O%R"*n2P19YW^#u&:c*M+/`?F3&f+hDWUSl`g5\Z)47.9/:qBrY(9T*<:cFA_\uY>u5h9*@BpP-4Z"V+^%q;Ys%pPpF4?To)rXA*Oq&D2di>,O0]<]*=-3e>]4>=I]s2kDQu)%Ql0eG%_t=jZtD>+kI-74u<569+e%Us/!&gK\u8E3`,4(+q&1<&L1\%B9f%F[q4r\SDQ8:?%ng+[pY2Jj@$;OdXn!];)jYB:8,lB[$:lO`7a=i6#t9EkdWY)UaXbFVqP@Ok'-;DSggK.;8IJi&>K1%i+YJ"%HR^VWq&'>mWLTn@?i*p3q'7)\^Im\<K(;cQ!R>mgF9AGK^C&7N2e1o9'E*?ng>'NQ,KZND$ZNh4Lr>WU.Kn[4qg_m`V[qF'9(t&.%Sg?,2<R^-/[gLDFG<Ji+46D_,&bY=<B*E;AWO1UG4,QFRq+0027$62N%^=?@B*G3fogGLB'GR+RB^Mp2oD<.*_T_K'\Aj/Okk'9S%1EI=MYc#p$RI;QPnEgq4KsE#K7fh?aG[,3n6dHH!8Pr>CS4[FZQ@Ia8ntn<*]&M/1==S-54d?eiHq0aIOhrO]&p^Tbi98nZ!c-E`%/eNA7Q(h6gSC[Zh/`02,6Gn_2e*4D&^^PQC+Y`0;;7E6qE4QK,`@Ln]N>MWRKZ*tS:J1tf.RccbE*E.>eGRcC25N4W<t_5+iYbGL%fO$hA8[Nh7]nVii.28B'A<#b&am%k(9ZhSUUaB*<-s'0ATDg<!hb,ssirMe^e8pnP5k\O,C"g7Q8Ar!ba3[^J6)HQ4qrG[qRS)b>%S?=;ne-h5dmOC01YES.7%W,Mo,3h6QEEkhMm&@AMju\GgHlIdV$Z0b@jcS$39;m6-0!pLn+<a?c[!#N]q$'uV7f9%fog2W8@ilgd%dI&#D,/0VD(hB$Q39YB,aO9keZAbe-9&79smB:R%qZb`rc0m_r.lY4]%BnQ7.P81+)$LlA[;tkO[e?mQ$TGih4fd@c.P81+Nf(Ca%DEbBQ2rC-WU>\cJ''b;r0ZW%C!n6Qn$6W5,Kqd$.Utn/^5Ya8a4]&lIV^&,i7=Dj<+&6U$Q()\=>1$ZlkJ7>`<0&a,Atg/dT2FO.%dO55n#[-1ENf?$Kj)gk(E`%_J$la`Gg0LQ;rtR#f346Le+`Q?beG!g,',_:=4bX[$Hj>dhD^-`*fDZKo1iPKu7a!'3,9;IRe9hKi%0/-SAX47&oe*hHpoB0/-qA\b;NNoD0Jsu-Vo'l#\$@fRfIIMT!V[n6?SaW<qDHEY_<A(2W^C&8YA)FtMoDch<o>W7Jr>>JsDh.2R%ZiK8NMF`+V8_J6E:2SijmBkj?l[52idB6)=d1)Vsr[KnBO32aM6c0W_U:q.pk>`eKSk9B0^8$M&[o4]df$Y%7+ZURUMTU/<>,s,A%WH(#$rDdh9I;.bZmDaBRM#+hgEK$k#ZDZ+PS?F=an`=<Cd`=MX3F9/CM(uF0SJldc.Rccbe*3dF$I8*-Hosf$Hfi5L)"mWUk@9,1%.CA$q4,?:Pq+/$g&=qO&p9i;-k@8)8oaL5N,"S9?B^Mp2o5C8VA;pgHO\gQ!9I=37WO0J'4,Q:N)bKSA9rZCjBKP`\-Kk!B9e%WE%e-h5dmOC-05CR$\6#(I4J,o7lb$6hIN'3FAfR-1$Li91f\@B?.K-^PAHE_5$q&V+?E)dL(b2p#(=0_S1:T@2"k8Fn.s6pGC@I0u#%^uf:Z*+.DK'V1=.NT\L.l/ilUb"&932W%B3>Y]'a'q>6]]W.^M7J+IG5<Ocp&GsN2<=*f?;0.+VVkRE2RK)c@.J_a]M+ZH=SQFpA%W0OsWEr;cC$I"!A?<(Z#NsQqtrkV0*#1u.$YKE70N1-M74%[iq;+1TB?VVON!)PkM<u"^a._:2[g0Y$GpMIim_<(\GA%.fGoR4dL%fFUN"4bXZYHj>dd0:rg<Y-Csg?8(&LfFOiaRl68:+9b3Y0WKP$;#[eZ2/V^\,+;4%k5[qSi-Hk)5l$Ea!oHIFG-RoCRtt`>D88\(%h^7!_MGd:C!i*08$HdjY?Vp`C/ti.*>XA23q$Y>h'H-[$P&U>Nnt0CqjZgcmb(#FY:qi^!QN`WR*</6"rhIr`MDk4H#YP-TTJ<5-%+!!j`^qHKK_7*>kgfe1sVhg$?:)]%<3fbhl@[&C@dnbH.Q2b6[@o:6):h]\1$Q'>WJ$dGIR!V=4%_c3C?RNbSJ'K^=s#&@Z7LlP<%N(Od!`PST4<"\qU)Y!s09rNS]oR6.>:IIC#(5R>C&UnYn:e2t<G(M/NV\@hdV)ni.E(ppt\n/6l<tY7h%[mb7a28cbs54/C1$^9q%5ib"_n9Z*GdEul$)[F<8dl^"Cfm(_G<5al3">4J*Q&krYQWVXSHi[CB%l]#q=T<W8R(2jM,5^4lU$*U%C"t%I-Z0T=549/+<=sr-%jg=__$2Mp7;ZT4S0Roh\T81(/!pchm!9@eB7,Q09"J#lBm39_\7Mg@M8pC)1!#;=YeLd],]?80T/"ISdk9SI@)N%T<='AT#N1(G/%4,"kp\hm_847O4MT<GW&;NrYte(S0jj$+'@m1sQ?[l')X:WD70!:(dbe+"YnE_#L0$<GQ/G0dS)p:9@,grOVZd;BYo-l">/[C$@^%J%2gDQ2)gO%/n(,]7SQthUtPr]n6U([o"Pp@rEi<r%B#WfQAh8lZGXRMQ1)a40)K]kLPa<g+u5k"OK@D`_rP\;e\P:G8,>snr[m,%`0K$r-e[_'=N]lGNOVrOJt`nqXh@^_rhDU]7Dn'ui6OUuc`\Ierm@#6U[0!igqA\6d4#m[DOsQGVjljN.%dpf\0qN[DAfS4<@E=o%FJT2?47Vq=;%fZgI_(3<pJ2TFp\sCa76b)+pk*'(r[9e!J%AmMU/\[nf)@-5^OIX##\EDCPE55)rGscdNWc>ZdK5<p.,s[^,j!H1%<,2$Pa%e!'O.>[g1R+q<<-/5?[D*'fO'?[?j,PSh]l(EueAn[o0RH<@G:t'<2fHp'GW3#<n$p[)qm%_MP_tdUg0-f%lVSjZnI-Q2%]Uf_RViN23;=#;ld_1T+3;JW2bQe1'n6s/Tr(,e0,)Sh,W3fQ%q!kGQg3gaNFC%ao6IWu]U&anI,37TUU$u44)P?Nc`2>l`o<Y0l%MC;FVVmX9k_N1Q]R["4@YAT#jc^kHIGL(rt]B<#?ZSYZ3-[+Ntmb(T/e1@+ZCNC5Ehk*&&rsoS6s4q0Gi;Y`sr5b!4^cnMML4iJR%jN(Fb8aVkn8[,u#S]:]1.Rg=W3N`6['RjBPcu>h<SbJBrS3F)4$2,6i@AJiKiJ"_;lU)n&6"Pu?XI9j"\n/6l=&Jb=WPM,?Ess5]%qu\(AnaoeL=niINk2&S$E%kbg^_fC-#DO,AG%`GdRM;U0A[HV^@JG?;!lOK"_udjFPf*pHVpYX$mjNeUD%t+o_s^6f.La'f#?Ma+%Q"ClIK3lmD/hhZ"9,PCS9k>)3lFd#hH:CihIQaH_-pm@ncR*3(iOd17-T'5lf+XV><[BKA<RYXGXCC[Ge6*ph",f1N-#UHs6B((O%60YAUJD`NSj&nu6Kef9l;OJ%Yp=\tDjD;FLT3RSSU2Ds@hC8LiAur+CU04:;bsdO\+#DKBeiSb"HPoEEN-/n,Z,]>(Mfq/-=M#tM%75&U`];t`(GV`cf0,2?nf1Q>\l/U<I\Fkj`g>5:5r*gkG3>/b0?TC*6hb1I)77A_G>+;Sfqe+Li3OO,O'l(It7!]Mr:S@skhE_;!%gF*cmO0*9/MqVm_SQ=u5h2Yd)JlK4<f'Y$e^AkTAr-a&l<Ufb]cW0K/'O'G`*CR3HHmEOCq"m9m_;G8A'n9#Q"o^]<eB*<WGIkTI%8&LKdV`=9_75XjS=Nl(]O_ZTp$#V`1=f783Mpo4H(DTg6"@c%"'n2ba94OZkbe"[skd+b3lSAn.7iFsTN^H1-1/]bt(EKP)77AkK%>.^j!qcirnX?G4lAB=\$*Df5Q5M@Jr@!tL=We-e?gtK5:[/$aIV].^jSF>#m.9GW0kQXdtIhdARb6>!;-,1So=pQ5bI4Q0GYWeiE%?8jr;nT'31k"C.bE?Tl(H+AI+;H.`?VmX9s^4/>8oh')H<KT*;i1"9p4d?fLHUeZ`Dkg,gkp>`r@]E$qJ'+;,;EcSTn9YDFDB#_6%<VZOk(%,F4O6d[AR/((b!;VOA:Se6l?;[HNdmjJ'[=:W7P^XM+?]b2NN_2,(hEfNqN7Qi8qVDUOM?\qu+nJs]A/)]n4;h8i-pm=g%'T.G)dU$t<l,9DlcK>@,Y0'VA>Y]'a'n(Qr)L,G4kBKj_q>LsF6V<L)WO*f*4,Q^Y)+f'0n4[[/(N&eP8Ek5W#+dG>;:,cAf'Y$_%rl1PdU<Fu-1$3E@ehr<`et-4>l5^&(]o=RBkl$KX\7'uk\rfT(HD;TOWG"<B`[^Pn?PQskXaNcX-XOOe)GIFu)"\MG+R^==R(\KT%]Z.^A#5l*'*q438mL`FM2(9r"&P'QY=-<7OX*9Q&c*rACbMRC1-NlU3]*7\q+X5U_,o+.0r4ftKD+BW@Ljm2<_n7NC)0%Lh]I-Jf%j9,Mu,`lgfJ.WWVeOC;sm0]mo"TNn]aJr1hc#O6V@?,,\QUA&=BA&&t(&el?-7\q+6ki\k[mmK]$0"QMU8_ig^O&#janO!]WdHfh%SE9".BtlnSrpt`s(r(EW&gr%N"JjtEH&I[*iAFQr$fn_.N,.R`<[LGm_MJb^g\]frF\=GqDI>#V'aaU*B&/&1]gdj@4V@eBFj"6(%[F%CJ,&)&.DJ>q@'\^ElNih'Jh<1O3mfm:RG&`kp7@`2QK3jWY@sDpeGW1IQ#(ce9YUlsEaHXZs*T^l*In-UPKpj78Z$guNHeR!>%2*?a2^-)`#o!F,:2se>6?B?,dH>fRuDGi7kagd,H@cR;)c'8$]*A&r)*ZhEuU.f>^e$4=JfD?!6<J.P`W]J@:p/G$6q@)OeR+5u6%pt6mS,-XDi@:OYC7-pmf8qZZ6WKTa'[Z!UQlh7LUqWc97@t/8PR$W#+e:h5dS5HJ9N=nI&9k4ePAHN<LP`8@&N3Z;%hOMtc+UIa1%U1<N_Y4ig:_E2Sh0EQb"b^RCn6D*3dXBtQ<-%>QVaWPV*M.5fTCbi8&YUL*c_PU@i6HtYWfY5&brU:(pGJ<f>=hc=)*qS26TXRF]%kQSLO^@rNlT(\TZ8ApeZ()o3/CSnnVWG?b[GHP_`&7o%_R?$[hHf*RY"%-A5BO9F<G4`5n@Tos4lt`e]">F[n#SlGXBFG5(9h(BZ%AX^K(NfDe?hiffM%MA'3EAN4!b\pK'`rj8<?@Wu)IBPqGC6(I]OAc:>"odPs-45,c!2Tjh,1%eoAnoSIk-jZJmqJ>lm.Lr@N@gCk%b\p&0B#0F4!,I"d6/lX_M1A"I*UU)FKef(5fO\c:6+17":*p6`iC(`;;4G>tHFfX(D#aK\,!268rcVU#kJ*R;VF/eTq;7P1]@6J+%F0!eKQ,_4h9/hmbYT,4fZ"(0_YqW7g%p0)nQCPHG`GOA8D1?lMqO<$@/3.]]MG$].ZGWa%M"O4/J/'H79l\k.7rLWA,=EnZ%o>>W%d>M!<'W-=4%R7qkLJFDbfUT-+r)AHDk4%1H^71=ic29,ZR@iRro1c.ZS[aNK%@d-d"92<T1@n3n!B>'<6YVU`7+$ZV-S@K#'1_++%IH5(Z-B@<2^(WHgM_dlZ!dhp6Np%J]'UP>;al/$cS()i(2U2gMmC6eFjsW;2AV[&IE*f&^`SmaT*#48#l>U(#I+@2S3ZL#4oB(#[%bbM#Z*752ta#Gh(G2fBHAFY01LeRf/*3Jkmb`#8dYKf6S"5tIplT0*oXu#6Og?Z[O*3EZ3LeRZ9\;BhF3./[(bRs[8*][EabkW0t%T<rd/1QTUPJ)Vk:*$pC3m,Z>"8(liL4.I+Bo.oESHWn]J:GBbs]*:<V4gA'.p51XEW\YRYoFtTsoG$,Sj&:&:do1@*F0=X:fB11I%#-u:ZE1$qtE$cB([2t/LYPBVbR0UT`c2!\$+\H@Qa+r]09ac&FkD*_0;4XtK*jSg0dM'Jk2`\c;ERWtmF49.p,^WH;DORY;H90"k%LSNpLP\/3.E]DB?^?fg'*KIGCH#Yf.:8*6`*#47(l>U(#I+@2S3ZM.ToB(#K*0-K*;4BQiCXHW3fjd'_'1_RJF$p78Vmp=#SErD0%\;;Fc#!HupLL$I\M=\7&$S%])4YEZfbR=&t9a`eG8igr*7s$HXa:\6$4)kqsF=qZm9+FJ6i@)s@GOOrEk0,&joU\%b%S,42]K#_E%_bkD5.LtXliOh2k<Pq\F7)kH9_4'=fZ.4\0NYGEP'Pk`KZH5;MV9>Bi]X,G:@`jg@Mr@pGkeq<XPp<.F*Pke9BSX89FB*GXEU-0B%Ds&fab+)j?H;H.PEQO',o3(<D0jRWk926I-k`lW<$k1>\1X^olU(^Uu\2dp950#pocS87fUG*+,RAjaO&7i$3`*o[KW?XlX!!71k%J/TR'&7ZCZ+NHT=.06/rF<hg%@;W,%#'p`UF==#..+Y7TUGNg(cF<#U$u%7HfdI<FN7)+<ketaAN7%^M-k5]%L2JnAK>Fi,#A/K(%V86PI-`/UZZ;DMK<i<I'Ml4CqGU<X!&dqNr&YLI>mW'O+(b@^f`JHsrbg1oHPT#1*)M<U0bc=/j!Wt,$0Gk5J'V9!k#Rgn>eReB'%OV`OuQ:f0u"pS6><f_7>L^TK';DI0__8&b)iD>KC!6g6,NG1"7>VI#X>PKFA,9N<g3rdM`Kqts2a^$#<lnE$__&?W&.2WJV_LeVe%5Z1^/Bdl?S"mIfKEs@8iY[C'=#RUs::k>:D_jHbo;klTSTF75)L4Y()knN=f$\i4aRSJTAJM+E>BGK_;4"MO-/IW@#_l,#QN^q/p%5o2tFJM('B(b*TG`WN">q8`YgN9A5\/X7E6X)]U4_Q"<-Lp.5=+sF$iUJ!s$E!:f1<=YZFXCLcL&.hkn+;FspMVbKP9dW#-+X!jK%D(F\"("96N5$63<(%OZKO8M6OQl?d_5sX=,-jP<MU-^dEk_crd2AqPjU0RJgI$*(fg2;]N6/)jr+@mFRZOsR$:^dEXY>>WOkcR_j%U:(Ac6'O8rTd565$G@R6b6kp*C(m6V7&;>H^*7t.0eOq)cjQ#f(j\Kr)FH/Kg?4hN8c'KR6.5Tq01]82kQOQD=(O9:m86Dl)(T3N%?BD#XTGD(?$.OR.2//Kg21\qmQ!:0j7=,2Q6,=g`:^[V4CR?p^jYj%@"m%Y@"U/^!W!*p<D,:Ti\$eSDWu)W^>!^+]DU8_?>1T>]%1pj?dZ<0"6!D5Ws1T*McB\EI-"AKgX1-s8/*_k_(TKBA)1-s9(8/%C6ki9729G$j4fL.%lqM8l1[fq2/1m&*]UA72(#eKdhOU8T$%!jFscd$:ek9L.<A!]J++Z8a]R$%f<79gjT+b=<5N/a0Le6mN&#]3Q,&TX2.b64e6^2Gj`<$mS(QJtOp$M*aJUTmh3)9ep,^6llUp%+du)pro-'cbY6D*(NCQsrl??dkub6Rj@!!_72V6:A7ftraiYHu-Z"l<Dn/C;Y35q,Cok8GA+/`>9c@GmPIP9p(?Qm28,nMX8'A_q%`03.<49B53M@Hk#Y]5:Hd`M\+;1NaC`<PpU='jnKMC9%"N:UrSfU#=\Z(rZi$IF2NdUEdl@aV=k;'6YA;OL1R-XH5t6!H/[M'tWX%OH_8i5VdG;.$1\+-`h5kd\=uo9d$S7:"BHqWaB:2+9a?\:Eq,YRUM1H8kq-If-Q!r?bf'.$S+ST['+I:)'W?Pnl7mF7oo91SKnSb%XH!`Uk_BaBj*)"o)[QWFXdk;M\B14$MiunN]3g'X/0QX"NWne_&dUPL6i&frnIZL?A3+9B%u[@g3Ep=hP)I9`cabMPl2\NQ,%Zk[%-84_)eWrX1da0?5EsV^'7UIB,5D=V(4ud;BCeDsX1,ZF/k>#4UKtC1$a1s6m-HQ@2>k'>3Ye`rNUaBo^69@=O=oJ+]a.e#A1<27d%e"btSg478Ge>d(*VPZZ#kjEm_XtAA@M-6\XO]"[.HnB(,ME9+g:C0"0cu_.1is0ZoCUs)0=$_igo[?hZf;XV6IRq1.aGJ[LgjXt]%`o;e1m:@Lo\h?5m/u*C"APoN=L?Kt(K6<4ND;3Lq3lpa`@8".rhlc=;G9,Xf'D8gL@@a)?]B7J$*gCYCC6nS&_)L2-rNU_"NC3e3%9"W<tm55!SmTiHl*QtAs.2*r/@?gLb#D>P5hGro'\(*QUgn9C$IKg!08QQ-WEY-J.-V"[1q@?Pm-VYS]c,(;>,UVP3Y40THjG`WU%NuSj_K8kGEX9AM^paE#uJbc7+:W#/,5a^fCaSaKVFf>I+B$/[BNHLf$Vsf'q?-Y*!oS!3ercs!fO2F.ABDarbW0>8tF>+DJbiL!T%:-Y;PIX1YbiUQ#bS&Z'6GLmA?Sc?&_>8Np(]t(iUG^f5]<BItlo_JLFnbhDGleT0+k;OL>s8)N_r!/+Se$$M.q;_G:&\$iopS2'P%reJrcTi_-T^Sg7-D]^&bgq>p:H1Bnic-=j9Dse^NWJ2XZ[\Ef"g_]^GO8#89kb#>6VfmO[o_bnBSmK/k>s3\&Iehsjh<XCaDBHUm%rcE;UO6cPL5<`>%piu[THN3+'^UNCl]/qM1p@J!-cL2im^HC@;gn):YHN/tdm4/fuFnNZ0s)RrXOJN5n~>%AI9_PrivateDataEnd