%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: fourier.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Manoj Bhatt
%%CreationDate: 10/4/10
%%BoundingBox: 0 0 268 195
%%HiResBoundingBox: 0 0 267.0547 194.1030
%%CropBox: 0 0 267.0547 194.1030
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 9624 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD04FF7DA8FD7EFF527DFFA853FD047D847D7D7D847D7D7D847D7D%7D847D7D7DA87D7D7D847D7D7D847D7D7D847D7D7D847D7D7D847D7D7DA8%7D7D7D847D7D7D847D7D7D847D7D7D847D7D7D847D7D7D847D7D7D847D7D%7D847D7D7D847D7D7D847D7D7D847D7D7D847D7D7D847D7D7D847D7D7D84%7D7D7D847D7D7D84FD047DFD06FF527DFF7DA8A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8A87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8A87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA884A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA884A8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF52FD06FFA8FFFF7DA8FD15FFA8FD17%FFA8FD17FFA8FD17FFA8FD16FF7DA8FD08FF7DFD75FF7DFD09FF7EA8FD74%FF7DA8FD08FF7DFD75FF7DFD09FF7DA8FD15FFA8FD2DFFA8AFFD2FFF7DA8%FD08FF7DFD45FFA8FD2FFF7DFD09FF7DA8FD15FFA8FD5EFF7EA8FD08FF7D%FD45FFA8FD2FFF7DFFFFFF7D7DFF52A8FF7DA8FD15FF7DA8FD2DFFA87DFD%2EFF7DA8FFFF7D7DFF527DFF7DA8A8FD13FFA87DFD2EFF52FD2FFF7DFFFF%FFA87DA8527DFF7EA8FD13FFA87D7DFD29FFA8FFFFFF7D7DFD2FFF7DA8FD%08FF7DFD11FFA8FFFFA87DFD2DFF7E7DFD2AFFA8FD05FF7DFD09FF7DA8FD%0FFFA8FFA8A852A8A8FD27FFA8A8FFFFA859A8FFA8FD27FFA8FFA8FD04FF%7DA8FD08FF7DFD0FFFA8FFFFFF52A8FD2DFF7D7DFD29FFA8FD07FF7DFD09%FF7DA8FD0DFFA8A8A8FF7D7DFFFFA8FD26FFA8A8A8FFA852FFFFFFA8FD25%FFA8A8A8FD06FF7EA8FD08FF7DFD0DFFA8FFFFFF847DA8FD29FFA8FFFFAF%59A8FD28FFA8FFA8FFA8FD05FF7DFD09FF7DA8FD0BFFA8A8A8FFFF52A8FF%FFFFA8FD25FFA8FFFFFF5284FD04FFA8FD24FFA8A8FFFF7D7DFFA8FFFF7D%A8FD08FF7DFD10FF7D7DFD29FFA8FFA8FFA87DA8FFA8FD2AFFA852FD05FF%7DFD09FF7EA8FD0BFFA8FFFFA852FFA8FFFFFFA9FD24FFA8FFFFA87DA8FD%05FFA8FD23FFA8FFFFFF52FD06FF7DA8FD05FFA8A8FF7DFD0BFFA8FFFFFF%52A9FD06FFA8FD26FF7D7DFFFFFFA8FD29FF7D7DFD06FF7DFD06FF27A8FF%7D7DFD09FFA8A8A8FF7D7DFFFFA8FFA8FD25FF7DA8A87E7DFFFFFFA8FFA8%FFA8FD21FFA8A8A8FF7D7DFFFFA8FFFFFFA87DA8FD05FF7DA8FF7DA8FD08%FFA8FFA8FF7D7DFD04FFA8FFFFFFA8FD20FFA8A8FFFFA852FD29FFA8FFA8%FFA87DFD06FFA8FF7DFD06FFA8FFFF7DA8FD07FF7EFFA8FFFF527DFD05FF%A8FD22FFA8A8FFFFFF527DFD04FFA8FFA8FFA8FD1FFFA8A8FFFFFF7D52FD%05FFA8FFFF84A8FD08FF7DFD07FFA8FD04FF7D84FFA8FFFFFFA8FD23FFA8%FFA8FF7D7DFFA8FD26FFA8FD04FFA87DFFA8FFFFFFA8FFFFFF7DFD09FF7D%A8FD05FFA8A8FFFFA8A852FFFFFFA8FFFFFFA8FD21FFA8FFFFFFA87DFFFF%A8A8FFFFA8FFA8FFA8FD1EFFA8FFFFA8FF52FFFFFFA8FFFFFFA8FFFF7DA8%FD08FF7DFD0BFF52FD04FFAFFD06FFA8FD1DFFA8FD04FF7DA8FFFFFFA8FF%FFFFA8FD21FFA8FFFFFF7DA8FD0AFF7DFD09FF7EA8FD05FFA8FFFFFF52A8%FD04FFA8A8FFFFA8FFA8FD1DFFA8A8FFFFA87D7DFD05FFA8FFFFFFA8FFA8%FD1DFFA8FFFFFF7D7DFD05FFA8FFFFA8FFFF7DA8FD08FF7DFD05FFA8FFFF%FF7D7DFD06FFA8FFFFFFA8FFA8FD20FFA852FD29FFA8FFFFFFA87DFD06FF%A8FFFFFFA8FF7DFD09FF7DA8FFFFFFA8A8FFFFA852A8FD07FFA8FFA8FD1F%FFA8FFFFFF52FFA8FD05FFA8A8FFFFA8FFA8FD1BFFA8A8FFFFFF7DA8FD07%FFA8FFA8A8FF7DA8FD08FF7DFD04FFAFFFFFFF7DA8FD0BFFA8FD1DFFA8FF%FFFF7DA8FD08FFA8FD21FFA8FFFFA87DFFA8FD09FFA8FF7DFFFFFF7D53FF%28A8FF7DA8FFFFFFA8FFFF7D52FFA8FD07FFA8FFFFA9FD1CFFAFA8FFFFA8%7DFD0AFFA8FFA8FFA8FD1BFFA8FFFFFF52FD09FFA8FD04FF84A8FFFF527D%7E527DFF7DA8A8FFA8FFFFFF52FD0BFFA8FD1FFFA8FFFF7DA8FFA8FD0BFF%A8FD1BFFA8FFFFFF53A8FFAFFD08FFA8FFA8A87DFFFFFF7D52A8527DFF7D%A8FFA8A8FFFF52A8A8FD0AFFFD04A8FD1BFFA8FFFF7D7DA8A8FD09FFA8FF%A8A8A8FD1AFFA8A8FF7D7DA8FD0BFFA8FFA87DA8FD08FF7DFFFFFFA8FF7D%7DFD0EFFA8FD1EFFA853FD0DFFA8FD1DFFA8FFA87DA8FD0FFF7DFD09FF7E%A8FFA8FFA87DFD0EFFA8FFA8FD1AFFA8A8FF52FFA8FD0CFFFD04A8FD19FF%A8A8FF7DA8FD0DFFA8FFA87DA8FD08FF7DFFFFA8FF7DA8FD0FFFA8A8FD1A%FFA8FF7DA8FD0EFFA8FD1CFFA8FF7D7DFFA8FD0DFFA8FF7DFD09FF7DA8FF%FF7D7DFFA8FD0DFFA8A8A8FD19FFA8FF7D7DFD10FFA8A8A8FD19FFA8A852%FFA8FD0FFFA87DA8FD08FF7DFFA8A852FD11FFA8A9A8FD18FFA8A87DFFFF%A8FD0FFFA8FD19FFA8FF7DFD11FFA8FF7DFD09FF7DA8FF52A8FD12FF7DFD%19FFA87DA8FFA8FD0FFFA8A8A8FD18FFA852A8FFA8A8FD0FFFA87DA8FD08%FF7DA87DA8FFFFA8FD10FFA8A8FD18FF7D7DFFA8FD11FFA8A8FD18FF7D7D%FD13FFA852FD09FFA8527DFFFFA8FD11FFA8A8FD17FFA852FFFFA8FD11FF%A87DFD17FFA852A8FF84FD11FFA859A8FD05FF7DA8FF7D52FFFFA8FD13FF%84FD17FF52FFA8FD13FFA8A8FD17FF7DA8FFA8FD13FF53FD05FFA8287DFF%7D52AFA8FD13FFA8A8FD14FFA8FF597DA8A8A8FD13FF7DFD16FF7D52FFA8%FD13FFA87DA8FD04FFA8527DFF7DA9FD16FF7EFD13FFA8FFA852FD17FFA8%A8FD12FFA8A8FF52FD17FF7DFD06FFA8FFFF7DA8FD16FF7DA8FD11FFA8FF%FF7D7DFD17FF7EA8FD12FFA8FF527DFD17FF7EA8FD08FF7DFD17FFA8FD11%FFA8FFFFA87DFD19FFA8FD11FFA8FF847DFD18FF7DFD09FF7DA8FD16FFA8%7DFD10FFA9FFA852A8FD18FFA87EA8FD0FFFA8FFA87D7DFD18FF7EA8FD08%FF7DFD17FFA8A8A8FD11FF53A8A8FD19FFA8FD0FFFAFFFFF7DA8FD19FF7D%FD09FF7DA8FD15FFA8FFA8A8FD0EFFA8FF59A8A8FD19FFA8A8A8FD0EFFA9%FF7E7DFFA8FD18FF7DA8FD08FF7DFD17FFA8FFA8FD0FFFA87DFFA8FD1AFF%A8FFA8FD0FFF52FFA8FD19FF7DFD09FF7EA8FD15FFA8FFA8A8A8FD0EFF7D%A8FFA8FD19FFA8FFAFA8FD0CFFA8FF52A8A8A8FD19FF7DA8FD08FF7DFD17%FFA8A9FFA8FD0CFFA87DA8FFA8FD1BFFA8FFA8FD0DFF7DA8FFA8A8FD19FF%7DFFFFFF7D52FF27A8FF7DA8FD17FFA8FFA8FD0BFFA87D52FFA8A8FD1AFF%A8FFA8FFA8FD09FFA8FF7D7DA8FFA8FD1AFF7DA8FF7D527D7D527DFF7DA8%A9FD17FFA8FFA8FD0BFF52FFFFFFA8FD1BFFA8FFFFA9FD0AFFA97DA8FD1D%FF7DFFFF7D7D528452A8FF7DA8FD17FFA8FFFFA8A8FD07FFA8FF52A8FFFF%A8FD1BFFA8FFA8FFA8FD08FFA8FF7D7DFFFFFFA8FD1AFF84A8FD08FF7DFD%19FFA8FFA8FD09FF7D7DFFFFA9FD21FFA8FD08FFA852FFFFFFA8FD1BFF7D%FD09FF7DA8FD17FFA8A8A8FFA8FD05FFA8FFA852A8FFFFA8A8FD1BFFA8FF%A8FFFFA8A8FD05FFA8FF52A8FFFFA8A8FD1BFF7DA8FD08FF7DFD1DFFA8FD%06FF7D7DFFFFFFA8FD1FFFA8FD09FF7D7DFD20FF7DFD09FF7EA8FD19FFA8%FFFFA8FD05FFA87DFFFFFFA8FD1DFFA8FFA8A8FFFFA8FD05FFA87DFD04FF%A8FD1CFF7DA8FD08FF7DFD17FFA8FFA8FFFFFFA8FD04FFA852FD29FFA8FF%FFFFA87DA8FFFFFFA8FD1DFF7DFD09FF7DA8FD17FFA8FFA8FFFFFFA8FFFF%FF52A8A8FFFFA8A8FD1DFFA8FFA8FD04FFA8A8FFFF7D7DFFA8FFA8A8FD1D%FF7DA8FD08FF7DFD19FFA9FD05FFA8FF7D84FD04FFA8FD21FFA8FD04FFA8%FFA87DFD04FFA8FD1EFF7DFD09FF7DA8FD19FFA8A8FFFFFFA87D7DFFFFA8%FFA8FD1FFFA8FFFFFFA8FFFFFFA8A852FFA8FFFFA8FD1FFF7EA8FD05FF7E%A8FF7DFD20FF527DFFFFFFA8FD23FFA8FD05FF527DFFFFA8A8A8FD1FFF7D%FD04FFA8A827A8FF7D7DFD19FFA8FFA8FFFF7D7DA884A8A8FD21FFA8FFA8%FFA8FFFFFF7D7DA8A87DA8A8FD1FFFA87DA8FD04FFA87DA8FF7DA8FD1AFF%A8FFFFA852FD2DFFA87DA8FFA8FD23FF7DFD09FF7EA8FD19FFA8FFFFFF52%FFA8FFA8FD23FFA8FFFFFFA8FFFF7DA8FFFFFFA8FD22FF7DA8FD08FF7DFD%17FFA8FD05FF7DA8FFFFA8FD29FFA87E7DFD27FF7DFD09FF7DA8FD17FFA8%FFA8FF7D7DFD04FFA8FD23FFA8FD04FFA852FFFFFFA8FFA852A87D7D7E7D%7D527D7EFF7D7D527D7D7D527DFFFFA8FFA8FFA8FFA8FFA8FD04FF7DA8FD%08FF7DFD17FFA8FFFFFFA87DA8FD2DFF7DA8FFFFA8FFFFFF52FF59522753%525227A8A8522753527D525259FFFFFFA8FFA8FFA8FFA8FFA9FFFFFF7DFD%09FF7DA8FD17FFA8FFFF7D7DFFA8FFA8FD25FFA8FFFFFF7D7DFFFFA8A8FF%FFFFA8A8A87D7D7DA87DA8A8A87D7D7DA8527D7D7DA8FD0EFF7EA8FD08FF%7DFD19FFA8A852FFFFFFA8FD29FFA859FFFFFFA8FD0CFF7DA8A8FD04FFA8%A8FF7EFD0FFF7DFD09FF7DA8FD17FFA8A852FFFFFFA8FD27FFA8FFA87DA8%FD0FFFA8527DA8275327522E522752A8FFA8A8A8FFA8FFA8FFA8FD04FF7D%A8FD08FF7DFD19FF53A8FFFFA8FD2AFF7D7DFFA8FFA8FD0DFF52A8FF5227%527D7D595227FD0FFF7DFFFFFF7D53FF27A8FF7EA8FD17FF7D7DFD2DFFA8%52FD12FFA8A8FFA8FD16FF7DA8FFA87D7DA8527DFF7D84A8FD15FFA87DFD%2EFF52FD13FF52A8A87DA8A87DA87DA8A8FD0EFFA97DFFFF7DA87DA852A8%FF7DA8FD16FF7D7DFD2DFF7D7DFD13FF5252A8F827F87D2752F827A8FFA8%FFA8FFA8FFFFFFA8FD04FF7EA8FD08FF7DFD17FFA8FD2FFFA8FD13FF52A8%FF7D527DA8A8A87D59FD0FFF7DFD09FF7DA8FD17FFA8FD2EFFA8FD11FF7D%5252A8A87DFFA8A87DA884A8FD0FFF7EA8FD08FF7DFD47FFA8FD11FF7D52%27A8A82727275252522727FD0FFF7DFD09FF7DA8FD17FFA8FD2DFFA8A8FD%11FF53527D7DFF525252A853A85252A8FFA8FFA8FFA8FFA8FFA8FD04FF7D%A8FD08FF7DFD47FFA9FD11FFA8FD09FFA8FD11FF7DFD09FF7EA8FD57FF7D%527D52527D277D527D5252277DFFFFFD0AA8FFFFFF7DA8FD08FF7DFD58FF%7D52522752275252522752275253A8FFA87DA87DA87DA87DA8A8FFFFFF7D%FD06FF7DFFFF7DA8FD2DFFA8FD17FFA8FD11FF7DA87D7E7DA87DA87DA87D%FD04A8FD0EFF7DA8FD05FF597DFF7DFD17FFA8FD17FFA8FD16FFA8FD17FF%A8FD16FF7DFD04FFAF7D27A8FF7D52FD457D53FD177D53FD157D597DA8FD%04FFA87DA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0BFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FD07FFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FD0CFF52FFA8A8A8FD12FFA87DFFA8FD13FFA859A8FFA8%FD13FF7D7DA8A8A8FD13FFA8A8FFA8A8FD12FFA87DFFA8A8FD05FFFD047D%27FD13FF7D7DFF5252FD12FFA852A87D27A8FD12FFA827FF277DFD13FF28%52FF27A8FD12FF5252FF7D27FD05FFA82EA87D52A9FD12FFA87DFF527DFD%12FF7D27A8A852A8FD12FF7D52A87D7DFD13FF527DA8527DFD12FF7D2EFF%7D52FD35FFA8FD45FFA8FFFFFFA8FD7FFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-10-04T13:57:30+05:30</xap:CreateDate>
         <xap:ModifyDate>2010-10-04T14:21:53+05:30</xap:ModifyDate>
         <xap:MetadataDate>2010-10-04T14:21:53+05:30</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>188</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAvAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9UtXiaVrTalK/jirznyv&#xA;J5u8u/l35i1LVob1dVtEur2ztNWuUvmUQWi8FM8M83qLJJEXanpAMzBI0ULirKEsvPgHx6xpZPiN&#xA;LuB/3cDirf1Pzz/1d9M/7hlx/wBl+Ku+p+ef+rvpn/cMuP8AsvxV31Pzz/1d9M/7hlx/2X4q76n5&#xA;5/6u+mf9wy4/7L8VUL2Pz/BCrw6jps7mWGMoum3FQskqo7/73nZFYsfliqv9T88/9XfTP+4Zcf8A&#xA;Zfirvqfnn/q76Z/3DLj/ALL8Vd9T88/9XfTP+4Zcf9l+Ku+p+ef+rvpn/cMuP+y/FXfU/PP/AFd9&#xA;M/7hlx/2X4qh7yP8wIfQ9LUNNm9WVY5KabcfAjVq5/047DFUR9T88/8AV30z/uGXH/Zfirvqfnn/&#xA;AKu+mf8AcMuP+y/FXfU/PP8A1d9M/wC4Zcf9l+Ku+p+ef+rvpn/cMuP+y/FXfU/PP/V30z/uGXH/&#xA;AGX4qh5o/wAwEu7aFNQ014pufqzDTbikfFarX/Tv2jtiqI+p+ef+rvpn/cMuP+y/FXfU/PP/AFd9&#xA;M/7hlx/2X4q76n55/wCrvpn/AHDLj/svxV31Pzz/ANXfTP8AuGXH/Zfirvqfnn/q76Z/3DLj/svx&#xA;VQePz+t/DbjUdNaGSKWR7j9G3FEaNowqH/T+riRj1/ZxVX+p+ef+rvpn/cMuP+y/FXfU/PP/AFd9&#xA;M/7hlx/2X4q76n55/wCrvpn/AHDLj/svxV31Pzz/ANXfTP8AuGXH/Zfirvqfnn/q76Z/3DLj/svx&#xA;VZoV/wCYf0/qWk6xPaXQtbWzu4Li0tpLUf6VJcxsjLJPdV4/VQQQR16YqyDFUi8+/wDKDeYv+2Ze&#xA;/wDUO+Kp7irsVdirsVdiqlLPwnhipX1uQrvtxFewI+8jFVXFXYq7FXYq7FXYq7FXYq7FXYq7FVNJ&#xA;1e4lhAoYgpJPfnXoPDbr/TFVTFXYq7FXYq7FXYq7FXYq7FXYq7FUis/+U51f/tmaZ/1EX+Ko3/EO&#xA;inXx5eF3G2tfVmvTYqSZFt1dYzI1BRRzkUCvXt0OKpBrfmLSvMP5Za9qmlNNJYzaXdmCae3uLX1F&#xA;a1Z1eNbiOJnRlYFXUcT2OKsvxV2KuxV2KuxVKdZ1O0sL/SzcEj6zP9VhCq7s0swoqgI3SiszFlIC&#xA;qTtSuKptirsVdirsVdirsVdirsVdirsVdiqUwapZJ5kudLMlb2aIXKwqCaRxhULuVqq8iwC8iCad&#xA;KDFU2xV2KuxV2KuxV2KuxV2KuxV2KuxVIrP/AJTnV/8AtmaZ/wBRF/iqrqnlm2v9Wg1X61cWt5Ba&#xA;y2KtAYqGC4ngnlUiSOTd/qqpUbhWalGowVYzP5I0nyh+WPmjTdNkkkgmsb2dzIsEdG+p+lRY7aK3&#xA;iUcYhWiVJqzEsScVZvZWFpYw+jap6cZJbjUtufdifDFVfFXYq0zKilmIVVFWY7AAdziqFN6sKG5u&#xA;pkhtJFDRCRDE0YCF39VmanQV6LTFWHeURNrGtL5i1ChKgQ6LE5QulrMskhnZWpIrz/sggMsYAoKy&#xA;VKGeYEuxV2KuxV2KuxV2KuxV2KrJp4oFDytxVnSNTuatIwRRt4k4qk2va9Do2kXEl/IJrkKojhgR&#xA;43maaQRRxwrzJMjOwUUfqR0riqD8l6dewI2pam6Sa1rIa41FkKlV9PgkUEWwPpQKSopUEksd2xVl&#xA;GKuxV2KuxV2KuxV2KuxV2KqNzJJQQwSRpdOOUYkBYcVZQ7cQVJpy8etMVXxSrJzABBjYowIpuN/u&#xA;IIOKsd0awtLLzrrMdrH6aPp2muwqzVYz34r8RPhirJcVSLz7/wAoN5i/7Zl7/wBQ74qnuKuxV2Kp&#xA;Zec76QwJM9tHFNGokR+PrMvxyxjjRqBBSoYb18N1WJ67Jceb9XuvLFtJF+j9Hb1dWuCA0cjkBoLN&#xA;viLivxfWKH7G3+7KAqzZooo5YDH8IZwAoY8aLGwFFoy9Pl8+2BUTirsVdirsVdirsVdirsVcSAKn&#xA;YDqcVSsx3txNNI14bVeDenAvAmNeQ9OVqg158GJrtT4f5iVWK6OD5v1y28zSOiaTpMiwafEwak0x&#xA;Ssl0qyAcQXkVISRUpyb9pOJVmyRRwzxRRjigSQhanarKdhQim/jt2HgFRGKuxV2KuxV2KuxV2Kux&#xA;VSu5zb20kwRpWRapEtOTt+yortVjtiqSancxaRbz69qF96UVsayKC0qGMACWFUoKtyX4OIDVArXc&#xA;YVTLTdQS+gtbtWaNL62juILSQKJEBAZixUsK/vVBoSB2OBUBZ/8AKc6v/wBszTP+oi/xVPcVYRqH&#xA;mNvMH5Y+Z797N7B4rfWLN7WV0kkVrMz27cjGWSpMVaKzAdieuKsws72G8h9WJZVUErSaKWBqj/Il&#xA;VGp70xVXxVB3+qW9oHSjTXQjMiWsSvJIQK0qsauVBIpyIpirHtZ8yT20FpYaQYb3X72lnY+vVHSU&#xA;oXnmnjI9RI4VVZHXvUDqVqVTLR9EttB02xhWVmeIlbu4f43uJ7ph6ksjbVeSejFqe1AOgVMAvGxh&#xA;QRmII0SCKpbiFkVdipBI26+HUdsVReKuxV2KuxV2KuxV2KuxVKdU1XTXR7BpJX9YtBM1vFJLx+Es&#xA;6s0atxbiKeIqDirH9evZfMmoHy5pDxta3Matr2oQSVZLAvxWFJEDKJJz6qgVqqAnYkYVZEtpZ2Be&#xA;0s7JFiaP6xBBF8CGS3KilKcU/wB10p138NwqPYf6XGaf7rk338U96fhiqrirsVdirsVdirsVdirm&#xA;YKCzEBQKknoBiqUPrumSXMTLcsttCDK8wSVYW51SMmbj6RjPxb8qVApiqQ2SyeatbR5LdU8t6JOX&#xA;9OvIXOrIf3m5FHitXZhXvMK/sYVZRbJLG4hjgRIoJTErAFQIDGHHpjfo3FKDbbt0AVKNHvYbvztr&#xA;LxLKoTTdNQiaGWA1E9+dllVCRv1G2KskxVjvnS0tbXyH5lS2hjgR9P1CV1jUIDJLDI8jkKBVndiz&#xA;Hud8VZFiqG1C6kgiVYFD3U7enbo1ePMgnk1P2VUFm9htvTFUs1JtI0axE99dehbQE32oXMlS0vo0&#xA;+J2XevqNHRR4BQKbYqknl3QtQuLm686XEEtr5g1AkQadMxURWSUWO1dSSFeRYw7sOjkdVWhKsseR&#xA;LzTvWgUTFlEsCPt+8Q8kDbihV1FfDAqxZYZLY8XZgJoyTMBUGR1lC/HToHAXuOg3xVHYq7FXYq7F&#xA;XYq7FXYqgb95p5V0+3kMTsBJczL9pISSKKezyEEKewDHqBiqU6/rUXl63429qktw8cdroVgpVHuL&#xA;uZmHpBmOyDijSN0Vasa0xVR8v+XB5VsvrLTfWLi7b1vMNya0luJD8VwoNeCxk041oIx/k7qshvlY&#xA;iE8+MYkCyjkV5LIpj41Hfk4IxVbAyO9oyksGgYq0nH1CD6e5/a/1qbePbFUXirsVdirsVdirsVdi&#xA;qWyp+krt4HFdPtiBKu1Jptm4H/Ij7/zNt+yQVWPeZtTlvmj8t6XI0Or68W+s3MZBa106Nij3G4NP&#xA;UReMI/mbkPsnCqdaJplt5fjttGs4ymkhStita+k6jk0RPUhvidT8x/KMCoq8VFvV5kyLMsdIRXly&#xA;gmDB17bepVh1oPniqBs/+U51f/tmaZ/1EX+Kp7iqReff+UG8xf8AbMvf+od8VT3FUFZt9Zu57o/3&#xA;cTNbW/hRDSVvHeReO/8ALt1xVic7XHmbzLc0Tj5f0S6jgMqBmN3fxkBAVPwmKymlZm7GQD+Q4VZw&#xA;ihEVQSQoAqxqTTxJwKgoA9tqMsJP+j3X76Cv7Mg2lQeAbZwPHmcVU4RII2haZZ1iliVU3LoBN8PL&#xA;dT9gLue9TuMVTLFXYq7FXYq7FXYqtkkSKN5JDxjQFnY9AAKk4qgrIJa2k99eMsLzVubp5CFWNQuy&#xA;sxoAI41AJ+Z74qxbyrYT6zqH+KdRjkEV2zHy/AVIeC0aT1frEtTs9yqRClOSxhV2+PCrN3RHRkdQ&#xA;yMCGUioIOxBBwKlsUbfUbnTmDSS2ykQ0Kq5jNTAysehWnEMf2lriqtZTi49C4WUSxypMyOtQOJkU&#xA;qCKUqq7GprX6cVRuKuxV2KuxV2KuxVDajcyW9ozQrzuHIjt07GRzxWv+SCat4KCcVS/X9Rg8v+W5&#xA;50LtKielZoPjmmupjwhRa15SSysOvc1OKoTyjod1Yevd6hdC41q8Ik1bj8SK5VBBAjn4uFvGtFB3&#xA;bkXO7Yqnt7bfWbWSEN6chFYpacikg3RwD14tQ4qg5pvrWnQXBHC4WQRnga+lM5NtJxam/ps7dt6Y&#xA;qg9Oljl86apLGeUcmlaWyN4hp78g4qx6/svPkH5iNqVtDd3Wj1UIqXUa2n1V7YReibWSeP8AfJeH&#xA;12l4V9IFVJaiFVL9F03zXp35PeZLTzKs/wBfjsbwJPd3D3E8yixAaWTld6iqEyh/hSULT4giVK4q&#xA;z6a61C20yWS8aFbtj6cLRV4BnoqE8/Amre2KpF5k1lYbKx8u6FO0d7qEIKXkQL/VLBABLeMaEV4/&#xA;DFX7UhHUA4qm/lnSLfTNIsbGzWSG0somh9JwwMjkgtKef7zduR+LrWvhiqcYqhNUjlNoZYFLXFuR&#xA;NEg6sU3ZB/rrVPpxVBia3a+l9GJWjuFtrl7sslG5SBIlCsPBCR+G5xVN8VdirsVdirsVdiqXazLD&#xA;wht5pBHDK4ect3ijZfgoevqOyR8d6hqYqxfzPdN5l1Y+XrVGn0TTpI5PMciLIySsCG+oAp9r93WS&#xA;VRX9hKfGaFWaQCRiZnLr6qpSB+P7ugqR8Nfiqd98CquKoO7X0by3uxspP1eceKyEemT4lZNh4cmx&#xA;VS05J1mpLCsfEzIjqAOaK0aozcSFBKrSnHt26YqmOKuxV2KuxV2KuxVL2uIpdWMZNVsoy/EfETI4&#xA;FaKN6xxkV/4yDFWJ6VfW/mzzTa6tLHLJoliHfQFMb+nJKAEa+lUrSj8mW3LUoEZh9sUKs4tkmWFf&#xA;XKGcgGZoxxUvTegNTTwrgVUxVLLkzRXV1bQHjJewPLbNUCk0YCN8tihH+yxVKfLr6hJ5t1R7425k&#xA;bS9LKm1LGPj6190Le9cVZTiqReff+UG8xf8AbMvf+od8VU/Mmr29jN9dnkY22kx+tLaRqHluJ7oN&#xA;BbQxD+d2LKq9yy4qoeXtFu4Xa61iNZda1d1vNSdWqluluVNtaxMoFVhJFK7M3Nv2qYqyjFXYq7FU&#xA;hLPBqENsSypDIYkVSQGSWRJoTQBjxRY5EHb4TWgOFU+wK7FXYq7FXYq7FWIazr97HcONJZJtW1SV&#xA;9M0e2cAIrWpf6xdzV+P04H5cuPWir1YYVTXy7otppkCWdvK031EMlzK4PqTXc/Gae4lY/aeTnyqP&#xA;5j9AVOsVdiqld2yXVrLbuSqyqV5DqpI2Ye4O4xVKNHljk1WVnBW9kgWS5WihFYERMse7NtJC3Khp&#xA;0rXbCqeYFdirsVdirsVWTTRQQvNM4jiiUvJIxoqqoqSSegAxVg99Bc6zd/4dhIjlvlN35mvApWWC&#xA;ymesVgHFG9SZAY68qqis1BVBhVmOnQiOFuHEW7MPqsUdPTSFVVEVOO3EheW3StMCorFXYqg9VULb&#xA;C66NZuLgHvxUESADoSYmYD3xVj3lYW6eadVht0dIrewsYR6hqWMd5qKl69CHI5bbb09sVZbirF/N&#xA;WraVqn5feZLjTL2C+t00++iea2lSZBIlu/JCyFhyXuMVSTQJ4fMF4/mrUttDs7qVtEhoSLq4Lekl&#xA;4I6VZliCQwgD7XNhXkpwqzy0hnQzSTvzeWQsqj7KINkQdf2RVv8AKJ7YFV8VdirsVSLzDCsV7puo&#xA;cigFzDBKAKhvUkCRF91+y0jKu/Vuh+ySqe4FdirsVdirsVS/zDrNvouh32q3BAjs4Xlo1aMwHwrs&#xA;CfiagxVjflLSry0tZdavLc/4gv4vTs7CVlD21mrgRxt8RoWZhNcsNy5pvxXCrMYIVijCKANyzUFA&#xA;WYlmNPdiTgVfirsVdiqRKXtvOCxVpDe2ssqgKfieNolIqKiiCp3pu/fCqe4FdirsVdirsVYz5+1u&#xA;TT9KgtLWBbzUtUnW1s7AneY0LupUb+nxWkjfsqSx6UxVdoWiwabZNpBd72/vec2vaiCVZppUHJy2&#xA;5BPwrGlfhSnhuqyRVCgKoAUCgA6AYq7FXYq7FWF+UYprfzt5ks5D8NraabFbrSgEPO8MfzJBqx/m&#xA;rhVmjAMpBrQihoSD94wK84XyN/hT8rPNWmy3v6Q9fTZgZBGYAIrbSo7CJeHqS/F6Nopdq7sTQKKA&#xA;Ks40rQ9N0q1jtbJHEENBCksss/phV4KsZmaQooXYBdsVR+KuxV2KuxVK/NEU8mhXP1dBJdx8JbRG&#xA;40NxFIskP26j+8Vf4b4qj7W4W4tYbhQVWZFkCnqAwBoafPFVXFXYq7FULeSXD1t7OREuSFZ2ep9O&#xA;NiRzCgULbHiCQPupirC5Yx5p87RWyPK/l/QpDNdNzkMd1qEBCxpQMqKlu/xgqKNKh6GM4VZva2Np&#xA;aljBEFeSnqymrSPStObtVmpXucCq+KuxV2KuxVJ/MH7i60m/CiltdFJ5CeNIJoXRgW/l58GIPUqO&#xA;9CFU4xV2KuxV2KpdeXKyxzkXRs7SzJN7c0UDiq83CyMaKFH224+wIINFWLeToJfMWu33m+9jljte&#xA;P1Ty9bySShoraVQ8s/CtFa5Hpt2KgBaAgklWbW9tb20Qht4lhiWtI0AVRU1Ow8cCqmKuxV2KuxVj&#xA;WjWFvZ+d9aWEyt6mm6YzNNLLM1fXvxs0rOQPYbYqyXFUi8+/8oN5i/7Zl7/1Dviqe4q7FXYq7FXY&#xA;qhtRiE1o8JLKspRGKkg0ZwDQqG7H5eO2KoDy1KBZraklikcc4J32nBLVP8wlWQU7bYSqcYFdiriQ&#xA;BU7AdTirENb1S8uBb6JpgNrr2vp6k9wnIvY2VKNcOf2JAnwRA7eqa7gNhVMvJ+nafZ6YTpyelp0h&#xA;C2EVGHC3jHFftfEfUfnLybc898Cp7irsVdirsVdiqT+aEtG0+NrqJpoo5lkMaEKx4hjsTv0+1x34&#xA;17VxCo7TJJns0SduVzDWKdiKEumxenbn9sexGKorFXYqpXckkdu7RBTNSkKsQAXOyg1I74qw3X7i&#xA;31e5udJ4yTeX9DX6z5ieJd7qcD1UsRxCq1f724AoN1U7M1CrLdLtGtbGKJyTKeUk5JrWWVjJIflz&#xA;Y0A2GBUVirsVdirsVdiqRWf/ACnOr/8AbM0z/qIv8VSWy/NLTL/zUNLsEgvNGaR7Vdat7lZg1zHa&#xA;G8cLEiMphWJSplEn94OHHFUFF5ym81/lR5j1K5sl026TT7tJ9PDTvJCXsROqy/WLezYPxlB+FWQi&#xA;hV2BxVntnew3kPqxLKqglaTRSwNUf5Eqo1PemKq+KuxV2KuxVRvBW2kIryUc1oK/EnxLtVa7jpXF&#xA;Uqg4wPDMXDyWs7213KKFW+tFZG406UmZB7b4VTvArsVY95r8wwadpLXQdXhL+msaF2mnlWQJ9WiR&#xA;V3aVh6YavUjFUJpGlazY2M1/fyonmPWLhWvGgpMqg1WC2jLr/dWyGp23o7bFjhVlMMMcEMcMS8Yo&#xA;lCRr4KooBv7YFX4q7FXYq7FXYqhNTLC3+GY29Q9ZxU8P3T/EQBQ8etCQPppiqHsHuIbiGO5oZLuF&#xA;XmZSOP1qEKko27stKAfyHFUzxV2KsP8ANGvaol7Y6bYwomuXhf8ARdvIQ4jZg6Ndz8T/AHcEXIsq&#xA;1qzKtakYVRun+X47C20nSoncLbs9xdgyczO6uJWnlfiheV5yrnYA1bbpQKyPFXYq7FXYq7FXYqxv&#xA;R72G787ay8SyqE03TUImhlgNRPfnZZVQkb9RtiqZXflry5eX/wCkLvSrO5v+KR/W5beJ5uEUgljX&#xA;1GUtRJFDqK7MAeuKpR5n0XRtH/LzzHaaRYW+nWp06+kNvaRJBHza3ercIwq1NOuKspxV2KuxV2Ku&#xA;xVRvSBZXBNABG5JPGn2T/NVfv2xVCrbvJPfWk1sI7CdKKyEfvGk5eszEUIJ5Ab+GKq+nSzPahZ25&#xA;XMJMU7dKum3KgpTmKMB4HFVW5YrEaByWKpWPdhzYLy3r9mtcVYXoVva+Z/MKayI6+X/L4+q+XVP2&#xA;ZZ6cZrwb1ZAgVISdiOTitVOFWVhVudS5/ajsgVXw9aQCu3ike1f8sjxwKjcVdirsVdirsVdiqhco&#xA;rvArDkpchlIqCDG433G33/xxVARQzNYOqryv7SUzcdgpncesyKamisJilT2OKpnBNFPCk0Tco5FD&#xA;I3iCKjriqA1/UNOsNPlutTFNOt0NxcS/EQvpMrKOK1ZmZqUXv+GKpN5I0+e5a682anC0Oraz/dW8&#xA;hr9VskNIIFozLVlAkkK/aY+AGKp7pvKZ7i+cU+sNwgG39xESENR1Dks49mxVHYq7FXYq7FXYq7FU&#xA;is/+U51f/tmaZ/1EX+Kp7iqReff+UG8xf9sy9/6h3xVPcVdirsVdirsVUrskWsxBIIRqEVqNj04g&#xA;t9wxVCyCCPUlf1GWSo5chVOM68QoP7NXgX6dv2sVddn6leC+LcbSRfTvK/ZQj+7mPgBUq58KE7Li&#xA;rH/NktzrWqp5UsbloIGgM3mK5jNDDZyHikatTaW44Oq7/CvJ+oTFU7tZBYaNbJCi85KJZWy1CL6h&#xA;LRxKKKQkSf5OyrWm1MVRtlara2yQg8iKtI/TlI7F3elTTk7E0xVXxV2KuxV2KuxV2KqNwQJbatN5&#xA;CB9n/fb+O/8AwO/0VxVDWHpxXDwpC0KurFASaH0ZGjJp2+Epx8VoOi4q6FxZ3xtW2hu2aW1JrT1D&#xA;V5Y6nud3Uf63ZcVYvcC68z6/czQOW0DRJFigiI/d3OrQMw57mjRWruK7byr/AMVjCrJ75y7R6ZbU&#xA;VpVBnK7elbjYmg6F6cE+kj7JwKj1VUUKoCqooqjYADsMVbxV2KuxV2KuxV2KpFZ/8pzq/wD2zNM/&#xA;6iL/ABVNNSu7i0s3nt7KbUJVKhbS2MKytyYAkG4kgj+EHkauNulTtirDJ7jzHP8Ald5qPmA8tRjj&#xA;1yFX9E2yvBE9wlu6RksQjQqpUlmJG/JuuKs1s3vnhrewxQzVNEhlaZePY8mjhNfbjiqvirsVdirs&#xA;VUbwVtJxvvG42FT9k9qr+sYqo6iJeDGMrI6RPJFanq8sRV42G4PwsN/mMVQHmrzFDpOkJKls19d3&#xA;7C102wC7z3EqMURgfspRSXYj4VBPbFUn8veWNT0HTJbRJYdVl1SYG/mlaVSZTGqTH1B6h4KsTJGt&#xA;KqOI5YVZPa6eyTm7upfrF4QUVwvBI0JrxjSrca0BYkkse9AoAVGYq7FXYq7FXYq7FXYqpTGkkAqR&#xA;WQjblQ/u2O9AR99B9NMVQ8qzpdLI06rEJwShan7p4vTVKHqWmoR/mMVY7561Nrpo/KtlzS/v0We5&#xA;vVWq2Vkj/vbrkQQsg4cYv8sgj7JwqiNL0W+0y103Q7Q2ph0yIPHP6bJxPExKXiBo7PV2JDrVt9u6&#xA;qfWVklqrku008p5TzvTk7Up2oAB2A2GBUTirsVdirsVdirsVdirG9He/fztrJvIYoZBpumhFhlaY&#xA;FfXv6Elo4aH2p9OKskxVIvPv/KDeYv8AtmXv/UO+Kp7irsVdirsVdiqjekCyuCaACNySeNPsn+aq&#xA;/ftiqnqFzDaxx3M/BYo3/eSPtwVgQXBPSnVj2WpxVh/lRbvVNRl8y3ZMxSCb/DWnSfC62M8hZJm5&#xA;AcZJwir4rHxBoS1SrLbJYZZBcW7D6qiNFFGgZV5+ofVbegbdRxanjTrgVG4q7FXYq7FXYq7FXYq7&#xA;FVGenq23/GQ9v+K39x/H+IVSjzXqtjpdjcTTqTJcW7JAI/imknV1S3hhj/ad5J/hp0P4KoHylp1/&#xA;badd6hqxin13UZ1/S7NQJGkZEYgFTT04o68NgGrypVjhVvznruvaD5G1fzDZWdtJqtnby3Qt7lmV&#xA;BHECyq5jVmd1T9nkAWqAwG+BWM/mB+clz5K1vUra80+G5sbeKwey4ySpK7Xa3jPz4xTDdrIRxgLT&#xA;my8mCsSiqX3/AOfWqWl1ej/DcMlnaPcj1RfyCVo7Vr/k3pGz4hiukTELz6lBXclVUw/Mf8528p2s&#xA;SW1pZ397cRai6GO8MiRtZtJHD+7WNXmYtE3rovERFWVn+ySqoXX523cf1xDpkFq9ndTxrLPcO0Ml&#xA;vbJqbMXcRJ6Mkj6K6gUcKHVvjoVxVkn5def7jzab8zWaWYhWG4t4VZneOKdpYvRuCyqBcRy2snqK&#xA;B8FQu9OTKso+u3P/AFb5/wDgoP8Aqrirvrtz/wBW+f8A4KD/AKq4qrQTSSgl4HgI6CQoSflwZ8VS&#xA;ez/5TnV/+2Zpn/URf4qnBvLRbtLMzxi7kjaZLYsvqNGjKruEryKqzqCegJHjirGfMuu6JrX5eeZL&#xA;vR9QttStV069ja4s5o54w4tmJUvGWXkAw2xVleKuxV2KuxV2KqV2SLSYqSrem1COVQaHpxBb7t8V&#xA;YTq6L5q1+XyyayaNbS/WNdbkas6rxis4uYUhSvCSbh2YL0krhVlXoWt6lrHPaSVWPnzmUEoVZQY3&#xA;dqkl6b8ahgDvQioVMERERURQqKAFUCgAGwAAxVvFXYq7FXYq7FXYq7FXYqo3TKgjlYgCORevED4/&#xA;3fVht9vt8sVYJoUY8zX0XmO5aWTR9FP+4O3SkizyIZEkvPTo4IAPpwUJfiC1TyU4VZrLY2d3fJPc&#xA;W3OSz/3nlfdeTUYsq1pVeIoxFQa074FRmKuxVj/n6/1Ow8qXl3phuxexmH0/0fbC8uiDMgdYoSsq&#xA;1KEjmUcIPi4NTiVWB+bvOH5saFZ+WrvTLGbW1uNIJ1kW+lzzlb4Nb/vjBysplLc3CxH0yByYqeNF&#xA;VQk/mT83dWt9Hubvy9b2sxvZbiOCTT76SSyMV7BYwl3iuogW9C5mmY/ZeNSKcatiqffk95g82a3N&#xA;rt55l8vNod9O9tOXNtd24krG0Qi5XbHmYkhWvpqqAt/MWJVegLJqXBi0EIcU4ATMQfGp9IU+7FXG&#xA;TUeKUghLH+8BmYAb7UPpb7fLFVaMzFn9RFVQf3ZVixI8SCq0/HFUls/+U51f/tmaZ/1EX+KoD/At&#xA;xFr9vr0Gqepq0dhPptxfXVrC080U91BPV2tRZrWKOBo4vh+EtyPKhDKpQnlC68qflR5i0ifUm1GN&#xA;NOu/qu0ypBClkIlhiE893Iqj0+VPUoCx4hVoAqzyzsobOH0omlZSS1ZpZZ2qf8uVnantXFVfFXYq&#xA;7FXYqgtbXUH0e9TTvTF80Mi2xlBZBIVIUsq0LU8ARXxGKoby1otlpWmR29uWkYGUy3Lk+pPI8rO8&#xA;0pqQzyOSxb32CjbFU2xV2KuxV2KuxV2KuxV2KuxV2Ksf88adf6lobWNvOttaXEiJqknJlkNpv6kc&#xA;TAEK0myMzUAUsajFU8t7W3tk9O3jWKPYBEFFAVQihVGwAVQKDFVTFXYq7FWF/mZ5k0e18v6hp36Z&#xA;gstXVIJxbLfwWNyIjcIC/KS4s2CHoaTRF/srIhIYKsK8wH83U07ydJ5Wvmv9SbQP9ytrFf2FZpQb&#xA;StzE10s0cxJc1m4svHYEFxyVRcFh+f8ANbWD3eoyW91NNO2pRWw0oxwxtf28USRGWF2ZVsjPKpPx&#xA;cgA38pVT/wDKeT82Gi1EfmDFwlPovZPWzChm5+tHGtoX+BKJ8UjciSe2Ks5VLzggaWMuGrIRGwBX&#xA;wUczxPvU/LFWyt1+84yIK09GqE8fHl8Y5fRTFVVa0HIgtTcjYV/HFWN6PZQ2nnbWUiaVg+m6a5M0&#xA;0s5qZ78bNKzkDboNsVZJiqReff8AlBvMX/bMvf8AqHfFU9xV2KuxV2KuxV2KobTYpIrC3SVeEoQG&#xA;VPgFHO7D92FTYnsMVROKuxV2KuxV2KuxV2KuxV2KuxVD6jFJLZvHGKuxUL1H7Q7jp8+3gemKojFX&#xA;Yq7FXYq8W836T5a8yeY9S1SbzbYaZZWN1bRpFe2dzZLFf28jIJUvku9O+sSs9m8YdGJQJxVhRqqq&#xA;H5geVPJvmX/DNrJ58sY9ZgtTpEd1LFbai19IUhuedxG0hWnCPmOe3KRTyqRyVS6T8vvyns9Hsrq+&#xA;846VqEVmbvULi8kS2upr1X1CC5mkKpK7SERWrWrcFNQx2/ZKrLPyD8saDo+majdaH5qt/M1pqAt3&#xA;kaCP0pI5VDsz3AaWeX1ZBIKq/GgUDjir08W8oA/0mQ7UrSPwIr9j3r/ZirjBKR/vRIOu4Efen+R7&#xA;fj8qKqqKVWhYuak8mpXc1psANumKpHZ/8pzq/wD2zNM/6iL/ABVNNS1TTdLs3vdSuobKzj4iS4uJ&#xA;EhjUuwVQXkKqOTEAVPXFWDTebL7zJ+V/mvULjTRYNDZX0MKRzfWYplFl6haKYRxo/F3aJjHyTmjc&#xA;XYb4qyRPzA8huKp5k0th4i9tz/xvirf+PfI3/UxaZ/0m2/8AzXirv8e+Rv8AqYtM/wCk23/5rxV3&#xA;+PfI3/UxaZ/0m2//ADXirv8AHvkb/qYtM/6Tbf8A5rxVD335jeS7eFZItc02dmlhjKLewVCyyrGz&#xA;7MdkVi59h2xVEf498jf9TFpn/Sbb/wDNeKu/x75G/wCpi0z/AKTbf/mvFXf498jf9TFpn/Sbb/8A&#xA;NeKu/wAe+Rv+pi0z/pNt/wDmvFXf498jf9TFpn/Sbb/814qh738xvJdv6Hp65ps/qzJE/G9g+BWr&#xA;VzRjsMVRH+PfI3/UxaZ/0m2//NeKu/x75G/6mLTP+k23/wCa8Vd/j3yN/wBTFpn/AEm2/wDzXirv&#xA;8e+Rv+pi0z/pNt/+a8Vd/j3yN/1MWmf9Jtv/AM14qh5/zG8lx3ltAuuabJHPz9SYXsFI+C1FfiP2&#xA;unXFUR/j3yN/1MWmf9Jtv/zXirv8e+Rv+pi0z/pNt/8AmvFXf498jf8AUxaZ/wBJtv8A814q7/Hv&#xA;kb/qYtM/6Tbf/mvFXl+qflz+Tepm6a587/vLsn1pUv8AS0d1ZZEImcQcrg0mNJJy8goKMN6qqK+Q&#xA;PySh8wpOPMiSy3SXc090dRsggMhaKSIqsYVfWhvGT4SKJGvHda4VRj+QvyclF2bjzoJ3v4mjvZH1&#xA;DTgZXNtcWkcx4RIqvFBeyqgQBTUFlYiuBWUeU3/K3yuANO8zWTAWFlplJr60P7nTzMYm+Dh8bG5b&#xA;me+2wxVdx/JT/lt0X/pMh/6qYVdx/JT/AJbdF/6TIf8AqpiqZaV5h/LDSY5I9O1nSbZJSGkVLyDc&#xA;jYHeQ4Fb8va3pOr+c9auNKvbfULVNO0yNrm1lSaMSCe/LRloyy8lVlJFe4xVlRAIodweoxV5xqOt&#xA;W/k7zfpXlny9pWm6bpuovbyy2cFuIZbx7mc28z23otEgazijWWYsjVQgbdcVTfyJ59m80an5gspL&#xA;KGyOh3bWgEd0biSULJJGZGT0YljUtCyijtUhh2qVWYYq7FXYq7FWPSa9q0fn+10BoIBpNzpdzfJc&#xA;hna4M9vcW8XArRURONz4sWP8tN1UB+Wvn2485adfXdxp8WnSWdwIPRiuWug6vDHOknJobegZZRx2&#xA;3G/SmKswxV2KuxV2KvN7L8zr+TzD5ws/V0y8tPLVrcz/AFeGRoZkltt1imeRnZwy/wB5ItuEjb4Q&#xA;ZDXFWT+QvNU/mny3Fq89munzvNPBLZpK0/ptbzNCwLtHAa1StOO2KshxV2KuxV2KvMR+aetwS+cu&#xA;VrZaiPLs1rFZQwO9vza5vJrX0JZa3TeqqxoaGFCWNFUoUkZVnPlTXP095a0vW/SWD9JW0V16KSeq&#xA;qeqgbiJOMfLjWleIxVNcVdirsVcTQV8MVeV235x6wPJ/mXzFc6C0c2j6qljaaVcevYytBOtv6PrN&#xA;NE59YtcbqqU6dvjKr0fRNR/SejWGo/uqXtvFcD0JDNFSVA49OQrEXXfZuAqOwxVG4q7FXYqlHnDV&#xA;7rRvKmsatZrG95Y2c89qkxpEZkjJjEh5R0TnTkeQ27jFWE6h+bt1pfkXRPMTW1tqL6peSWUssko0&#xA;63T02m5TAxNqymNVgZuSSupUcg24GKvTcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdir/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:1C9A33A451D1DF11AF4DB8170CF9340D</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:563B600855D1DF11AF4DB8170CF9340D</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>001.007</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbo; Symbol</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helve; Helvetica</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -194.103 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 194.103 li
267.055 194.103 li
267.055 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0.5 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
262.216 182.724 mo
259.065 182.724 li
16.2656 182.724 mo
19.4155 182.724 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 45 /hyphen putdup 50 /two putdef/UniqueID 28352 def/FontBBox {-166 -225 1000 931} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 718 737 523 538 688 703] def/OtherBlues [270 281 405 409 -220 -207] def/BlueScale 0.0437916 def/StdHW [76] def/StdVW [88] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/hyphen <1C60D8A8C9B81F2C3AC7E044D0946E6D2305FBC1A5806554FDBB52A75CA669> |-/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A77988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C312D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1E4FEB02B613916D7> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/DVPWEA+Helvetica /Helvetica findfont ct_VMDictPut/DVPWEA+Helvetica*1 [45{/.notdef}rp /hyphen 4{/.notdef}rp /two 205{/.notdef}rp]DVPWEA+Helvetica nfDVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf5.83594 185.06 mo(-2)[2.33105 0 ]xsh262.216 160.324 mo
259.065 160.324 li
16.2656 160.324 mo
19.4155 160.324 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWEA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D088E8E1B4A929D159FDB3710FCCC02057052369E6> |-/one <1C60D8A8C9B7EF327C10274AD9026AD10E2766BF7084C2014D15DE02958A6977C33F9C9651D5788EA2FB530B3EE42DE5824448> |-/five <1C60D8A8C9B7EF322448D34FC69162D5B3FA33847725A6C54ED91995E45D690B7D0E476479D9EDB4F61F0B8E7F37F7415ECCEF12BD0BB3A993663B38C8EEAA49F314551016ECC1F8DE4119690672560B970B6156CCA876B5A96262978DF14B4FCFDE401A9555> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWEA+Helvetica /Encoding getdup 46 /period putdup 49 /one putdup 53 /five putpop%ADOEndSubsetFont
/DVPWEA+Helvetica*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one /two 2{/.notdef}rp /five 202{/.notdef}rp]DVPWEA+Helvetica nfDVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf0 162.662 mo(-1.5)[2.33105 3.89209 1.9458 0 ]xsh262.216 137.974 mo
259.065 137.974 li
16.2656 137.974 mo
19.4155 137.974 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf5.83594 140.31 mo(-1)[2.33105 0 ]xsh262.216 115.574 mo
259.065 115.574 li
16.2656 115.574 mo
19.4155 115.574 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWEA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF19407412ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWEA+Helvetica /Encoding getdup 48 /zero putpop%ADOEndSubsetFont
/DVPWEA+Helvetica*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]DVPWEA+Helvetica nfDVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf0 117.912 mo(-0.5)[2.33105 3.89209 1.9458 0 ]xsh262.216 93.1738 mo
259.065 93.1738 li
16.2656 93.1738 mo
19.4155 93.1738 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWEA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWEA+Helvetica /Encoding getdup 32 /space putpop%ADOEndSubsetFont
/DVPWEA+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]DVPWEA+Helvetica nfDVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf6.21875 95.5054 mo( )sh8.17188 95.5054 mo(0)sh262.216 70.8237 mo
259.065 70.8237 li
16.2656 70.8237 mo
19.4155 70.8237 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf0.390625 73.1616 mo( 0.5)[1.9458 3.89209 1.94629 0 ]xsh262.216 48.4238 mo
259.065 48.4238 li
16.2656 48.4238 mo
19.4155 48.4238 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf6.21875 50.7554 mo( )sh8.17188 50.7554 mo(1)sh262.216 26.0737 mo
259.065 26.0737 li
16.2656 26.0737 mo
19.4155 26.0737 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf0.390625 28.4116 mo( 1.5)[1.9458 3.89209 1.94629 0 ]xsh262.216 3.67383 mo
259.065 3.67383 li
16.2656 3.67383 mo
19.4155 3.67383 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf6.21875 6.01318 mo( )sh8.17188 6.01318 mo(2)sh16.2656 3.67383 mo
16.2656 6.82373 li
16.2656 182.724 mo
16.2656 179.574 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf11.4219 192.052 mo(0 )[3.89209 0 ]xsh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 112 /pi putdef/UniqueID 27004 def/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-17 0 673 685 487 500] def/StdHW [92] def/StdVW [95] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/pi <1C60D8A8C9B79676C0D35243B9754BB15298187C457FBB9430FA8873BE566DFCB53EE8575A5F543B49C45E036167E55B7FE744EA84A5B84A04598C4ACFC379B09254E4D387C94880EC392BFDD21154D5321DC91CBBD709C570583E7D17BB1B286C151BF10715C491AFFFB34DAB1453B2D29B7813431AC0912D58FBAF8C0E7645DA731FE29E3D9C5D2193759CC729355EC0DACAF856ECFDBF9B02B01FB1CE5C7F609019B072768FD8F0141B193EC1> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/DVPWEB+Symbol /Symbol findfont ct_VMDictPut/DVPWEB+Symbol*1 [112{/.notdef}rp /pi 143{/.notdef}rp]DVPWEB+Symbol nfDVPWEB+Symbol*1 [7 0 0 -7 0 0 ]msf17.2578 192.052 mo(p)sh65.4658 3.67383 mo
65.4658 6.82373 li
65.4658 182.724 mo
65.4658 179.574 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf60.625 192.052 mo(1 )[3.89209 0 ]xshDVPWEB+Symbol*1 [7 0 0 -7 0 0 ]msf66.4609 192.052 mo(p)sh114.666 3.67383 mo
114.666 6.82373 li
114.666 182.724 mo
114.666 179.574 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf109.82 192.052 mo(2 )[3.89209 0 ]xshDVPWEB+Symbol*1 [7 0 0 -7 0 0 ]msf115.656 192.052 mo(p)sh163.815 3.67383 mo
163.815 6.82373 li
163.815 182.724 mo
163.815 179.574 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWEA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF32A47D2AAF8B27A6BD3F3BCF7FF319EB739C72B00D2CC4607F53D8DAA36825DF613C6C839053BC26A7859D8AA158786D28D1E4DE04046CE941E5159199A77FA8129F02A3ECB8D9E54C278D22D0348DFB3C3C73F55886BF824DB1B2BE764C084A332EAF6E03DAE2729DE4723D54D14DE5E36772632D9593B8015D82D91A7513CF83AED18BF899FB582C1516AE5C3CE963C7A9224066B2CB5D769E52069DB2172C52452A135E45CF579C1E7FB12BEA387FFB8E1E9EB90D4F6BF80D4DDA346E7141D8646431020D523BDB64> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWEA+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/DVPWEA+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /.notdef /five 202{/.notdef}rp]DVPWEA+Helvetica nfDVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf158.977 192.052 mo(3 )[3.8916 0 ]xshDVPWEB+Symbol*1 [7 0 0 -7 0 0 ]msf164.813 192.052 mo(p)sh213.016 3.67383 mo
213.016 6.82373 li
213.016 182.724 mo
213.016 179.574 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWEA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF327C102745695739194BB3002578E9A13B5CE2A74FD48894F71187E1172491C0FAAFD20337D17EB38BB138C76C05944382F2B2611702A5DA745406DEB5C33C> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWEA+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/DVPWEA+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five 202{/.notdef}rp]DVPWEA+Helvetica nfDVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf208.172 192.052 mo(4 )[3.8916 0 ]xshDVPWEB+Symbol*1 [7 0 0 -7 0 0 ]msf214.008 192.052 mo(p)sh262.216 3.67383 mo
262.216 6.82373 li
262.216 182.724 mo
262.216 179.574 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf257.367 192.052 mo(5 )[3.8916 0 ]xshDVPWEB+Symbol*1 [7 0 0 -7 0 0 ]msf263.211 192.052 mo(p)sh16.2656 3.67383 mo
16.2656 182.724 li
262.216 182.724 li
262.216 3.67383 li
16.2656 3.67383 li
16.2656 3.67383 li
cp
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWEA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C36CCD20CF8942181AC7F4474F2382F7D30DE700E9D560AD8BD19EE22EACC9412684566AC63B0B33E5FC85E602E759FFC49BF47306AE7BD9165A4E1D3> |-/parenright <1C60D8A8C9B81F2C36CCD20CF894218194033859F410DA60583B3351294315C6F5C4ACE205E4813D6F508658462783E35F08D53213E9F0ED7984671681D402251A6FDC72> |-/colon <1C60D8A8C9B854D088E8E1B4A929D159FDB3710FCCC02057052369676FE7E3F7F79CEEE30BD023CC5123F5DD4F72E8838E> |-/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C2021D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495ACA0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCDBE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553A431EECECF30F5581F5F0240E470E520EB9771> |-/i <1C60D8A8C9B88C082599D5E95652E4745C17562AE47DDBD30E7054F041D72A7354004D800853CB28271AB7834CF7A2CB132BAFF26EF4E9D89B> |-/m <1C60D8A8C9B6B41C803D68C39EF50D06E406D806E0103B4C2937F43F706FE45E46BB4B168951587EB26A51BD9E5D6D15548973928DA7BD71E5C6A2EC754258679A8719AC099ECB167292DC3AC16D6A6399789AE1244C2D9A7EDD1242D52DA81BBE025DB4544A719A686DB3A0393D2301EEF9A4AA3D42067FE37BAF> |-/n <1C60D8A8C9B7EF327C10274A017D50E5277BF0D0EBCB370A96BE9DA563254EC441C4BC3817B6ABCAA45C3FADDF2A0C1F1BCD1456474D7370B95E3791CB0774B8A788FAD31DAB8E43BE1DDCC8C2722C438CA874C21003F548D691EAB87ADC2BE2D98ABE47C6EE8D76> |-/r <1C60D8A8C9B81F2C150546EE4CBAAF688B47B2BE559294D5CB0899F2E804995909AC00E005B47DD0AC10879B5BC7D5032F4A9752992A333ADEB05A77287D04AF74FB420D308AD8> |-/s <1C60D8A8C9B7A73DF2FC7D734CFF3CEE44DEE08B4814311F759A12C668E2414B1F185B71CDFB81A4EFE4B67531A5BC3DCC468E7336CC99F93A0F8C9CAAC21479B9DF30E1F20CC55E079066616501132E6501EACD2121153832E7EB63F4284AC03D21E5D5BD534A816A07833E9E45AAF0AF784FB128B27EB090C038A83361862615D53FB49FC431C156AA9A7FD4E2EF50395549EA0CB64112DC> |-/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B5837088353D9095E679DCF29A> |-/x <1C60D8A8C9B7A73DEE9439F61CF83FD6F0AADDB8373458EFEDE4BF6C46155F8370F02E9CE5FFD24DBE7D153354FABD4F844978ABB054761731A2B93E507FE62552012BB1EB5E1E3EE678332D9E> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWEA+Helvetica /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 58 /colon putdup 101 /e putdup 105 /i putdup 109 /m putdup 110 /n putdup 114 /r putdup 115 /s putdup 116 /t putdup 120 /x putpop%ADOEndSubsetFont
/DVPWEA+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five 4{/.notdef}rp /colon 42{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s /t 3{/.notdef}rp /x 135{/.notdef}rp]DVPWEA+Helvetica nfDVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf188.836 150.412 mo(1 term: sin\(x\))[3.8916 1.94629 1.94629 3.8916 2.50586 5.83008 1.59766 1.94629 3.5 1.55371 3.89258 2.33008 3.5 0 ]xsh0.25 lw
246.216 55.0234 mo
246.466 55.3735 li
246.716 55.7734 li
246.966 56.1738 li
247.216 56.5737 li
247.466 56.9736 li
247.666 57.3735 li
247.916 57.8237 li
248.166 58.2236 li
248.416 58.6738 li
248.666 59.1235 li
248.916 59.5737 li
249.166 60.0737 li
249.416 60.5234 li
249.666 61.0234 li
249.916 61.5234 li
250.166 62.0234 li
250.416 62.5234 li
250.666 63.0234 li
250.865 63.5737 li
251.115 64.1235 li
251.365 64.6235 li
251.615 65.1738 li
251.865 65.7236 li
252.115 66.3237 li
252.365 66.8735 li
252.615 67.4238 li
252.865 68.0234 li
253.115 68.6235 li
253.365 69.1738 li
253.615 69.7734 li
253.865 70.3735 li
254.115 71.0234 li
254.315 71.6235 li
254.565 72.2236 li
254.815 72.8735 li
255.065 73.4736 li
255.315 74.1235 li
255.565 74.7734 li
255.815 75.4238 li
256.065 76.0737 li
256.315 76.7236 li
256.565 77.3735 li
256.815 78.0234 li
257.065 78.6738 li
257.315 79.3735 li
257.516 80.0234 li
257.766 80.6738 li
258.016 81.3735 li
258.266 82.0737 li
258.516 82.7236 li
258.766 83.4238 li
259.016 84.1235 li
259.266 84.8237 li
259.516 85.4736 li
259.766 86.1738 li
260.016 86.8735 li
260.266 87.5737 li
260.516 88.2734 li
260.716 88.9736 li
260.966 89.6738 li
261.216 90.3735 li
261.466 91.0737 li
261.716 91.7734 li
261.966 92.4736 li
262.216 93.1738 li
220.615 72.3735 mo
220.865 71.7236 li
221.115 71.1235 li
221.365 70.5234 li
221.615 69.9238 li
221.815 69.3237 li
222.065 68.7236 li
222.315 68.1235 li
222.565 67.5737 li
222.815 66.9736 li
223.065 66.4238 li
223.315 65.8735 li
223.565 65.2734 li
223.815 64.7734 li
224.065 64.2236 li
224.315 63.6738 li
224.565 63.1738 li
224.815 62.6235 li
225.016 62.1235 li
225.266 61.6235 li
225.516 61.1235 li
225.766 60.6235 li
226.016 60.1738 li
226.266 59.6738 li
226.516 59.2236 li
226.766 58.7734 li
227.016 58.3237 li
227.266 57.8735 li
227.516 57.4736 li
227.766 57.0234 li
228.016 56.6235 li
228.216 56.2236 li
228.466 55.8237 li
228.716 55.4736 li
228.966 55.0737 li
229.216 54.7236 li
229.466 54.3735 li
229.716 54.0234 li
229.966 53.6738 li
230.216 53.3735 li
230.466 53.0234 li
230.716 52.7236 li
230.966 52.4238 li
231.216 52.1738 li
231.466 51.8735 li
231.666 51.6235 li
231.916 51.3735 li
232.166 51.1235 li
232.416 50.8735 li
232.666 50.6738 li
232.916 50.4238 li
233.166 50.2236 li
233.416 50.0234 li
233.666 49.8735 li
233.916 49.6738 li
234.166 49.5234 li
234.416 49.3735 li
234.666 49.2236 li
234.865 49.1235 li
235.115 49.0234 li
235.365 48.8735 li
235.615 48.8237 li
235.865 48.7236 li
236.115 48.6235 li
236.365 48.5737 li
236.615 48.5234 li
236.865 48.4736 li
237.115 48.4736 li
237.365 48.4238 li
237.615 48.4238 li
237.865 48.4238 li
238.065 48.4736 li
238.315 48.4736 li
238.565 48.5234 li
238.815 48.5737 li
239.065 48.6235 li
239.315 48.7236 li
239.565 48.7734 li
239.815 48.8735 li
240.065 48.9736 li
240.315 49.0737 li
240.565 49.2236 li
240.815 49.3735 li
241.065 49.5234 li
241.266 49.6738 li
241.516 49.8237 li
241.766 50.0234 li
242.016 50.1738 li
242.266 50.3735 li
242.516 50.6235 li
242.766 50.8237 li
243.016 51.0737 li
243.266 51.3237 li
243.516 51.5737 li
243.766 51.8237 li
244.016 52.0737 li
244.266 52.3735 li
244.466 52.6738 li
244.716 52.9736 li
244.966 53.2734 li
245.216 53.6235 li
245.466 53.9736 li
245.716 54.2734 li
245.966 54.6235 li
246.216 55.0234 li
195.016 134.074 mo
195.266 133.773 li
195.516 133.474 li
195.766 133.173 li
195.966 132.824 li
196.216 132.523 li
196.466 132.173 li
196.716 131.824 li
196.966 131.474 li
197.216 131.074 li
197.466 130.724 li
197.716 130.324 li
197.966 129.923 li
198.216 129.523 li
198.466 129.125 li
198.716 128.673 li
198.966 128.224 li
199.166 127.824 li
199.416 127.375 li
199.666 126.875 li
199.916 126.423 li
200.166 125.974 li
200.416 125.474 li
200.666 124.974 li
200.916 124.474 li
201.166 123.974 li
201.416 123.474 li
201.666 122.923 li
201.916 122.423 li
202.166 121.875 li
202.365 121.324 li
202.615 120.773 li
202.865 120.224 li
203.115 119.625 li
203.365 119.074 li
203.615 118.474 li
203.865 117.923 li
204.115 117.324 li
204.365 116.724 li
204.615 116.125 li
204.865 115.523 li
205.115 114.923 li
205.365 114.273 li
205.565 113.673 li
205.815 113.023 li
206.065 112.423 li
206.315 111.773 li
206.565 111.125 li
206.815 110.474 li
207.065 109.824 li
207.315 109.173 li
207.565 108.523 li
207.815 107.824 li
208.065 107.173 li
208.315 106.523 li
208.565 105.824 li
208.815 105.173 li
209.016 104.474 li
209.266 103.773 li
209.516 103.125 li
209.766 102.423 li
210.016 101.724 li
210.266 101.023 li
210.516 100.324 li
210.766 99.6733 li
211.016 98.9741 li
211.266 98.2729 li
211.516 97.5732 li
211.766 96.8735 li
212.016 96.1738 li
212.216 95.4736 li
212.466 94.7236 li
212.716 94.0234 li
212.966 93.3237 li
213.216 92.6235 li
213.466 91.9238 li
213.716 91.2236 li
213.966 90.5234 li
214.216 89.8237 li
214.466 89.1235 li
214.716 88.4233 li
214.966 87.7236 li
215.216 87.0234 li
215.416 86.3237 li
215.666 85.6235 li
215.916 84.9233 li
216.166 84.2734 li
216.416 83.5737 li
216.666 82.8735 li
216.916 82.1733 li
217.166 81.5234 li
217.416 80.8237 li
217.666 80.1733 li
217.916 79.4736 li
218.166 78.8237 li
218.416 78.1733 li
218.615 77.4736 li
218.865 76.8237 li
219.115 76.1733 li
219.365 75.5234 li
219.615 74.8735 li
219.865 74.2734 li
220.115 73.6235 li
220.365 72.9736 li
220.615 72.3735 li
169.416 108.773 mo
169.666 109.423 li
169.916 110.074 li
170.115 110.724 li
170.365 111.375 li
170.615 112.023 li
170.865 112.673 li
171.115 113.273 li
171.365 113.923 li
171.615 114.523 li
171.865 115.173 li
172.115 115.773 li
172.365 116.375 li
172.615 116.974 li
172.865 117.574 li
173.115 118.125 li
173.315 118.724 li
173.565 119.324 li
173.815 119.875 li
174.065 120.423 li
174.315 120.974 li
174.565 121.523 li
174.815 122.074 li
175.065 122.625 li
175.315 123.125 li
175.565 123.673 li
175.815 124.173 li
176.065 124.673 li
176.315 125.173 li
176.516 125.673 li
176.766 126.125 li
177.016 126.625 li
177.266 127.074 li
177.516 127.523 li
177.766 127.974 li
178.016 128.423 li
178.266 128.875 li
178.516 129.273 li
178.766 129.673 li
179.016 130.074 li
179.266 130.474 li
179.516 130.875 li
179.716 131.224 li
179.966 131.625 li
180.216 131.974 li
180.466 132.324 li
180.716 132.673 li
180.966 132.974 li
181.216 133.273 li
181.466 133.625 li
181.716 133.923 li
181.966 134.173 li
182.216 134.474 li
182.466 134.724 li
182.716 134.974 li
182.916 135.224 li
183.166 135.474 li
183.416 135.724 li
183.666 135.923 li
183.916 136.125 li
184.166 136.324 li
184.416 136.523 li
184.666 136.673 li
184.916 136.824 li
185.166 136.974 li
185.416 137.125 li
185.666 137.273 li
185.916 137.375 li
186.166 137.474 li
186.365 137.574 li
186.615 137.673 li
186.865 137.724 li
187.115 137.824 li
187.365 137.875 li
187.615 137.923 li
187.865 137.923 li
188.115 137.974 li
188.365 137.974 li
188.615 137.974 li
188.865 137.923 li
189.115 137.923 li
189.365 137.875 li
189.565 137.824 li
189.815 137.773 li
190.065 137.724 li
190.315 137.625 li
190.565 137.523 li
190.815 137.423 li
191.065 137.324 li
191.315 137.224 li
191.565 137.074 li
191.815 136.923 li
192.065 136.773 li
192.315 136.625 li
192.565 136.423 li
192.766 136.224 li
193.016 136.023 li
193.266 135.824 li
193.516 135.625 li
193.766 135.375 li
194.016 135.125 li
194.266 134.875 li
194.516 134.625 li
194.766 134.375 li
195.016 134.074 li
143.815 50.3237 mo
144.065 50.5234 li
144.266 50.7236 li
144.516 50.9736 li
144.766 51.2236 li
145.016 51.4736 li
145.266 51.7236 li
145.516 51.9736 li
145.766 52.2734 li
146.016 52.5737 li
146.266 52.8735 li
146.516 53.1738 li
146.766 53.4736 li
147.016 53.8237 li
147.266 54.1738 li
147.466 54.5234 li
147.716 54.8735 li
147.966 55.2236 li
148.216 55.6235 li
148.466 55.9736 li
148.716 56.3735 li
148.966 56.7734 li
149.216 57.2236 li
149.466 57.6235 li
149.716 58.0737 li
149.966 58.5234 li
150.216 58.9736 li
150.466 59.4238 li
150.666 59.8735 li
150.916 60.3735 li
151.166 60.8237 li
151.416 61.3237 li
151.666 61.8237 li
151.916 62.3237 li
152.166 62.8237 li
152.416 63.3735 li
152.666 63.8735 li
152.916 64.4238 li
153.166 64.9736 li
153.416 65.5234 li
153.666 66.0737 li
153.865 66.6235 li
154.115 67.2236 li
154.365 67.7734 li
154.615 68.3735 li
154.865 68.9736 li
155.115 69.5737 li
155.365 70.1738 li
155.615 70.7734 li
155.865 71.3735 li
156.115 71.9736 li
156.365 72.6235 li
156.615 73.2236 li
156.865 73.8735 li
157.065 74.5234 li
157.315 75.1235 li
157.565 75.7734 li
157.815 76.4238 li
158.065 77.0737 li
158.315 77.7734 li
158.565 78.4238 li
158.815 79.0737 li
159.065 79.7734 li
159.315 80.4238 li
159.565 81.1235 li
159.815 81.7734 li
160.065 82.4736 li
160.266 83.1738 li
160.516 83.8237 li
160.766 84.5234 li
161.016 85.2236 li
161.266 85.9238 li
161.516 86.6235 li
161.766 87.3237 li
162.016 88.0234 li
162.266 88.7236 li
162.516 89.4238 li
162.766 90.1235 li
163.016 90.8237 li
163.266 91.5234 li
163.516 92.2236 li
163.716 92.9238 li
163.966 93.6235 li
164.216 94.3237 li
164.466 95.0234 li
164.716 95.7236 li
164.966 96.4238 li
165.216 97.1235 li
165.466 97.8232 li
165.716 98.5229 li
165.966 99.2241 li
166.216 99.9233 li
166.466 100.625 li
166.716 101.324 li
166.915 102.023 li
167.165 102.673 li
167.415 103.375 li
167.665 104.074 li
167.915 104.773 li
168.165 105.423 li
168.415 106.125 li
168.665 106.773 li
168.915 107.423 li
169.165 108.125 li
169.415 108.773 li
118.216 83.1738 mo
118.416 82.4736 li
118.666 81.7734 li
118.916 81.1235 li
119.166 80.4238 li
119.416 79.7734 li
119.666 79.0737 li
119.916 78.4238 li
120.166 77.7734 li
120.416 77.0737 li
120.666 76.4238 li
120.916 75.7734 li
121.166 75.1235 li
121.416 74.5234 li
121.616 73.8735 li
121.866 73.2236 li
122.116 72.6235 li
122.366 71.9736 li
122.616 71.3735 li
122.866 70.7734 li
123.116 70.1738 li
123.366 69.5737 li
123.616 68.9736 li
123.866 68.3735 li
124.116 67.7734 li
124.366 67.2236 li
124.616 66.6235 li
124.815 66.0737 li
125.065 65.5234 li
125.315 64.9736 li
125.565 64.4238 li
125.815 63.8735 li
126.065 63.3735 li
126.315 62.8237 li
126.565 62.3237 li
126.815 61.8237 li
127.065 61.3237 li
127.315 60.8237 li
127.565 60.3735 li
127.815 59.8735 li
128.016 59.4238 li
128.266 58.9736 li
128.516 58.5234 li
128.766 58.0737 li
129.016 57.6235 li
129.266 57.2236 li
129.516 56.7734 li
129.766 56.3735 li
130.016 55.9736 li
130.266 55.6235 li
130.516 55.2236 li
130.766 54.8735 li
131.016 54.5234 li
131.216 54.1738 li
131.466 53.8237 li
131.716 53.4736 li
131.966 53.1738 li
132.216 52.8735 li
132.466 52.5737 li
132.716 52.2734 li
132.966 51.9736 li
133.216 51.7236 li
133.466 51.4736 li
133.716 51.2236 li
133.966 50.9736 li
134.216 50.7236 li
134.415 50.5234 li
134.665 50.3237 li
134.915 50.1235 li
135.165 49.9238 li
135.415 49.7734 li
135.665 49.5737 li
135.915 49.4238 li
136.165 49.2734 li
136.415 49.1738 li
136.665 49.0234 li
136.915 48.9238 li
137.165 48.8237 li
137.415 48.7236 li
137.615 48.6738 li
137.865 48.6235 li
138.115 48.5234 li
138.365 48.5234 li
138.615 48.4736 li
138.865 48.4238 li
139.115 48.4238 li
139.365 48.4238 li
139.615 48.4238 li
139.865 48.4736 li
140.115 48.5234 li
140.365 48.5234 li
140.615 48.6235 li
140.865 48.6738 li
141.065 48.7236 li
141.315 48.8237 li
141.565 48.9238 li
141.815 49.0234 li
142.065 49.1738 li
142.315 49.2734 li
142.565 49.4238 li
142.815 49.5737 li
143.065 49.7734 li
143.315 49.9238 li
143.565 50.1235 li
143.815 50.3237 li
92.5654 137.375 mo
92.8154 137.273 li
93.0654 137.125 li
93.3154 136.974 li
93.5654 136.824 li
93.8154 136.673 li
94.0654 136.523 li
94.3154 136.324 li
94.5654 136.125 li
94.8154 135.923 li
95.0654 135.724 li
95.3154 135.474 li
95.5654 135.224 li
95.7656 134.974 li
96.0156 134.724 li
96.2656 134.474 li
96.5156 134.173 li
96.7656 133.923 li
97.0156 133.625 li
97.2656 133.273 li
97.5156 132.974 li
97.7656 132.673 li
98.0156 132.324 li
98.2656 131.974 li
98.5156 131.625 li
98.7656 131.224 li
98.9658 130.875 li
99.2158 130.474 li
99.4658 130.074 li
99.7158 129.673 li
99.9658 129.273 li
100.216 128.875 li
100.466 128.423 li
100.716 127.974 li
100.966 127.523 li
101.216 127.074 li
101.466 126.625 li
101.716 126.125 li
101.966 125.673 li
102.166 125.173 li
102.416 124.673 li
102.666 124.173 li
102.916 123.673 li
103.166 123.125 li
103.416 122.625 li
103.666 122.074 li
103.916 121.523 li
104.166 120.974 li
104.416 120.423 li
104.666 119.875 li
104.916 119.324 li
105.166 118.724 li
105.366 118.125 li
105.616 117.574 li
105.866 116.974 li
106.116 116.375 li
106.366 115.773 li
106.616 115.173 li
106.866 114.523 li
107.116 113.923 li
107.366 113.273 li
107.616 112.673 li
107.866 112.023 li
108.116 111.375 li
108.366 110.724 li
108.566 110.074 li
108.816 109.423 li
109.066 108.773 li
109.316 108.125 li
109.566 107.423 li
109.816 106.773 li
110.066 106.125 li
110.316 105.423 li
110.566 104.773 li
110.816 104.074 li
111.066 103.375 li
111.316 102.673 li
111.566 102.023 li
111.766 101.324 li
112.016 100.625 li
112.266 99.9233 li
112.516 99.2241 li
112.766 98.5229 li
113.016 97.8232 li
113.266 97.1235 li
113.516 96.4238 li
113.766 95.7236 li
114.016 95.0234 li
114.266 94.3237 li
114.516 93.6235 li
114.766 92.9238 li
114.966 92.2236 li
115.216 91.5234 li
115.466 90.8237 li
115.716 90.1235 li
115.966 89.4238 li
116.216 88.7236 li
116.466 88.0234 li
116.716 87.3237 li
116.966 86.6235 li
117.216 85.9238 li
117.466 85.2236 li
117.716 84.5234 li
117.966 83.8237 li
118.216 83.1738 li
66.9658 97.5732 mo
67.2158 98.2729 li
67.4658 98.9741 li
67.7158 99.6733 li
67.9658 100.324 li
68.2158 101.023 li
68.4658 101.724 li
68.7158 102.423 li
68.9658 103.125 li
69.2158 103.773 li
69.4658 104.474 li
69.6655 105.173 li
69.9155 105.824 li
70.1655 106.523 li
70.4155 107.173 li
70.6655 107.824 li
70.9155 108.523 li
71.1655 109.173 li
71.4155 109.824 li
71.6655 110.474 li
71.9155 111.125 li
72.1655 111.773 li
72.4155 112.423 li
72.6655 113.023 li
72.9155 113.673 li
73.1157 114.273 li
73.3657 114.923 li
73.6157 115.523 li
73.8657 116.125 li
74.1157 116.724 li
74.3657 117.324 li
74.6157 117.923 li
74.8657 118.474 li
75.1157 119.074 li
75.3657 119.625 li
75.6157 120.224 li
75.8657 120.773 li
76.1157 121.324 li
76.3159 121.875 li
76.5659 122.423 li
76.8159 122.923 li
77.0659 123.474 li
77.3159 123.974 li
77.5659 124.474 li
77.8159 124.974 li
78.0659 125.474 li
78.3159 125.974 li
78.5659 126.423 li
78.8159 126.875 li
79.0659 127.375 li
79.3159 127.824 li
79.5156 128.224 li
79.7656 128.673 li
80.0156 129.125 li
80.2656 129.523 li
80.5156 129.923 li
80.7656 130.324 li
81.0156 130.724 li
81.2656 131.074 li
81.5156 131.474 li
81.7656 131.824 li
82.0156 132.173 li
82.2661 132.523 li
82.5161 132.824 li
82.7158 133.173 li
82.9658 133.474 li
83.2158 133.773 li
83.4658 134.074 li
83.7158 134.375 li
83.9658 134.625 li
84.2158 134.875 li
84.4658 135.125 li
84.7158 135.375 li
84.9658 135.625 li
85.2158 135.824 li
85.4658 136.023 li
85.7158 136.224 li
85.916 136.423 li
86.166 136.625 li
86.416 136.773 li
86.666 136.923 li
86.916 137.074 li
87.166 137.224 li
87.416 137.324 li
87.666 137.423 li
87.916 137.523 li
88.166 137.625 li
88.416 137.724 li
88.666 137.773 li
88.916 137.824 li
89.1162 137.875 li
89.3662 137.923 li
89.6162 137.923 li
89.8662 137.974 li
90.1162 137.974 li
90.3662 137.974 li
90.6162 137.923 li
90.8662 137.923 li
91.1162 137.875 li
91.3662 137.824 li
91.6162 137.724 li
91.8662 137.673 li
92.1162 137.574 li
92.3159 137.474 li
92.5659 137.375 li
41.3657 48.4736 mo
41.6157 48.4736 li
41.8657 48.5234 li
42.1157 48.5737 li
42.3657 48.6235 li
42.6157 48.7236 li
42.8657 48.8237 li
43.1157 48.8735 li
43.3657 49.0234 li
43.6157 49.1235 li
43.8154 49.2236 li
44.0654 49.3735 li
44.3154 49.5234 li
44.5654 49.6738 li
44.8154 49.8735 li
45.0659 50.0234 li
45.3159 50.2236 li
45.5659 50.4238 li
45.8159 50.6738 li
46.0659 50.8735 li
46.3159 51.1235 li
46.5659 51.3735 li
46.8159 51.6235 li
47.0156 51.8735 li
47.2656 52.1738 li
47.5156 52.4238 li
47.7656 52.7236 li
48.0156 53.0234 li
48.2656 53.3735 li
48.5156 53.6738 li
48.7656 54.0234 li
49.0156 54.3735 li
49.2656 54.7236 li
49.5156 55.0737 li
49.7656 55.4736 li
50.0156 55.8237 li
50.2656 56.2236 li
50.4658 56.6235 li
50.7158 57.0234 li
50.9658 57.4736 li
51.2158 57.8735 li
51.4658 58.3237 li
51.7158 58.7734 li
51.9658 59.2236 li
52.2158 59.6738 li
52.4658 60.1738 li
52.7158 60.6235 li
52.9658 61.1235 li
53.2158 61.6235 li
53.4658 62.1235 li
53.666 62.6235 li
53.916 63.1738 li
54.166 63.6738 li
54.416 64.2236 li
54.666 64.7734 li
54.916 65.2734 li
55.166 65.8735 li
55.416 66.4238 li
55.666 66.9736 li
55.916 67.5737 li
56.166 68.1235 li
56.416 68.7236 li
56.666 69.3237 li
56.8657 69.9238 li
57.1157 70.5234 li
57.3657 71.1235 li
57.6157 71.7236 li
57.8657 72.3735 li
58.1157 72.9736 li
58.3657 73.6235 li
58.6157 74.2734 li
58.8657 74.8735 li
59.1157 75.5234 li
59.3657 76.1738 li
59.6157 76.8237 li
59.8657 77.4736 li
60.0659 78.1738 li
60.3159 78.8237 li
60.5659 79.4736 li
60.8159 80.1738 li
61.0659 80.8237 li
61.3159 81.5234 li
61.5659 82.1738 li
61.8159 82.8735 li
62.0659 83.5737 li
62.3159 84.2734 li
62.5659 84.9238 li
62.8159 85.6235 li
63.0659 86.3237 li
63.2661 87.0234 li
63.5161 87.7236 li
63.7661 88.4238 li
64.0161 89.1235 li
64.2661 89.8237 li
64.5161 90.5234 li
64.7661 91.2236 li
65.0161 91.9238 li
65.2661 92.6235 li
65.5161 93.3237 li
65.7661 94.0234 li
66.0161 94.7236 li
66.2661 95.4736 li
66.4658 96.1738 li
66.7158 96.8735 li
66.9658 97.5732 li
16.2656 93.1738 mo
16.5156 92.4736 li
16.7656 91.7734 li
17.0156 91.0737 li
17.2656 90.3735 li
17.5156 89.6738 li
17.7656 88.9736 li
17.9658 88.2734 li
18.2158 87.5737 li
18.4658 86.8735 li
18.7158 86.1733 li
18.9658 85.4736 li
19.2158 84.8237 li
19.4658 84.1235 li
19.7158 83.4233 li
19.9658 82.7236 li
20.2158 82.0737 li
20.4658 81.3735 li
20.7158 80.6733 li
20.9658 80.0234 li
21.1655 79.3735 li
21.4155 78.6733 li
21.6655 78.0234 li
21.9155 77.3735 li
22.1655 76.7236 li
22.4155 76.0737 li
22.6655 75.4238 li
22.9155 74.7734 li
23.1655 74.1235 li
23.4155 73.4736 li
23.6655 72.8735 li
23.9155 72.2236 li
24.1655 71.6235 li
24.3657 71.0234 li
24.6157 70.3735 li
24.8657 69.7734 li
25.1157 69.1738 li
25.3657 68.6235 li
25.6157 68.0234 li
25.8657 67.4238 li
26.1157 66.8735 li
26.3657 66.3237 li
26.6157 65.7236 li
26.8657 65.1738 li
27.1157 64.6235 li
27.3657 64.1235 li
27.6157 63.5737 li
27.8159 63.0234 li
28.0659 62.5234 li
28.3159 62.0234 li
28.5659 61.5234 li
28.8159 61.0234 li
29.0659 60.5234 li
29.3159 60.0737 li
29.5659 59.5737 li
29.8159 59.1235 li
30.0659 58.6738 li
30.3159 58.2236 li
30.5659 57.8237 li
30.8159 57.3735 li
31.0156 56.9736 li
31.2656 56.5737 li
31.5161 56.1738 li
31.7661 55.7734 li
32.0161 55.3735 li
32.2661 55.0234 li
32.5161 54.6235 li
32.7661 54.2734 li
33.0161 53.9736 li
33.2661 53.6235 li
33.5161 53.2734 li
33.7661 52.9736 li
34.0161 52.6738 li
34.2158 52.3735 li
34.4658 52.0737 li
34.7158 51.8237 li
34.9658 51.5737 li
35.2158 51.3237 li
35.4658 51.0737 li
35.7158 50.8237 li
35.9658 50.6235 li
36.2158 50.3735 li
36.4658 50.1733 li
36.7158 50.0234 li
36.9658 49.8237 li
37.2158 49.6738 li
37.416 49.5234 li
37.666 49.3735 li
37.916 49.2236 li
38.166 49.0737 li
38.416 48.9736 li
38.666 48.8735 li
38.916 48.7734 li
39.166 48.7236 li
39.416 48.6235 li
39.666 48.5737 li
39.916 48.5234 li
40.166 48.4736 li
40.416 48.4736 li
40.6162 48.4238 li
40.8662 48.4238 li
41.1162 48.4238 li
41.3662 48.4736 li
233.865 148.074 mo
253.815 148.074 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf206.336 157.404 mo(2 term)[3.8916 1.94629 1.94629 3.8916 2.50586 0 ]xsh226.164 157.404 mo(s)sh[4 2 ] 0 dsh
246.216 35.0737 mo
246.466 35.1235 li
246.716 35.2236 li
246.966 35.3735 li
247.216 35.5234 li
247.466 35.6738 li
247.666 35.8735 li
247.916 36.1235 li
248.166 36.4238 li
248.416 36.7236 li
248.666 37.0234 li
248.916 37.3735 li
249.166 37.7734 li
249.416 38.2236 li
249.666 38.6738 li
249.916 39.1235 li
250.166 39.6738 li
250.416 40.1738 li
250.666 40.7734 li
250.865 41.3735 li
251.115 41.9736 li
251.365 42.6738 li
251.615 43.3237 li
251.865 44.0737 li
252.115 44.8237 li
252.365 45.5737 li
252.615 46.3735 li
252.865 47.1738 li
253.115 48.0737 li
253.365 48.9238 li
253.615 49.8237 li
253.865 50.7734 li
254.115 51.7236 li
254.315 52.7236 li
254.565 53.7236 li
254.815 54.7236 li
255.065 55.7734 li
255.315 56.8735 li
255.565 57.9736 li
255.815 59.0737 li
256.065 60.2236 li
256.315 61.3735 li
256.565 62.5234 li
256.815 63.7236 li
257.065 64.9736 li
257.315 66.1738 li
257.516 67.4238 li
257.766 68.6738 li
258.016 69.9736 li
258.266 71.2734 li
258.516 72.5737 li
258.766 73.8735 li
259.016 75.2236 li
259.266 76.5737 li
259.516 77.9238 li
259.766 79.2734 li
260.016 80.6235 li
260.266 82.0234 li
260.516 83.3735 li
260.716 84.7734 li
260.966 86.1738 li
261.216 87.5737 li
261.466 88.9736 li
261.716 90.3735 li
261.966 91.7734 li
262.216 93.1738 li
220.615 90.8237 mo
220.865 90.5737 li
221.115 90.3237 li
221.365 90.0737 li
221.615 89.7734 li
221.815 89.5234 li
222.065 89.2236 li
222.315 88.9238 li
222.565 88.5737 li
222.815 88.2236 li
223.065 87.8735 li
223.315 87.5234 li
223.565 87.1235 li
223.815 86.7236 li
224.065 86.3237 li
224.315 85.8735 li
224.565 85.4238 li
224.815 84.9736 li
225.016 84.4736 li
225.266 84.0234 li
225.516 83.5234 li
225.766 82.9736 li
226.016 82.4736 li
226.266 81.9238 li
226.516 81.3735 li
226.766 80.7734 li
227.016 80.1738 li
227.266 79.5737 li
227.516 78.9736 li
227.766 78.3735 li
228.016 77.7236 li
228.216 77.0737 li
228.466 76.4238 li
228.716 75.7236 li
228.966 75.0737 li
229.216 74.3735 li
229.466 73.6738 li
229.716 72.9736 li
229.966 72.2236 li
230.216 71.5234 li
230.466 70.7734 li
230.716 70.0234 li
230.966 69.2734 li
231.216 68.5234 li
231.466 67.7734 li
231.666 66.9736 li
231.916 66.2236 li
232.166 65.4238 li
232.416 64.6738 li
232.666 63.8735 li
232.916 63.0737 li
233.166 62.3237 li
233.416 61.5234 li
233.666 60.7236 li
233.916 59.9238 li
234.166 59.1235 li
234.416 58.3237 li
234.666 57.5737 li
234.865 56.7734 li
235.115 55.9736 li
235.365 55.2236 li
235.615 54.4238 li
235.865 53.6738 li
236.115 52.9238 li
236.365 52.1738 li
236.615 51.4238 li
236.865 50.6738 li
237.115 49.9238 li
237.365 49.2236 li
237.615 48.5234 li
237.865 47.8237 li
238.065 47.1235 li
238.315 46.4238 li
238.565 45.7734 li
238.815 45.1235 li
239.065 44.5234 li
239.315 43.8735 li
239.565 43.2734 li
239.815 42.6738 li
240.065 42.1235 li
240.315 41.5737 li
240.565 41.0234 li
240.815 40.5234 li
241.065 40.0234 li
241.266 39.5737 li
241.516 39.0737 li
241.766 38.6738 li
242.016 38.2734 li
242.266 37.8735 li
242.516 37.5234 li
242.766 37.1738 li
243.016 36.8237 li
243.266 36.5234 li
243.516 36.2734 li
243.766 36.0234 li
244.016 35.8237 li
244.266 35.6235 li
244.466 35.4736 li
244.716 35.3237 li
244.966 35.2236 li
245.216 35.1235 li
245.466 35.0737 li
245.716 35.0737 li
245.966 35.0737 li
246.216 35.0737 li
195.016 117.423 mo
195.266 116.673 li
195.516 115.923 li
195.766 115.173 li
195.966 114.423 li
196.216 113.724 li
196.466 113.023 li
196.716 112.324 li
196.966 111.625 li
197.216 110.923 li
197.466 110.224 li
197.716 109.574 li
197.966 108.923 li
198.216 108.273 li
198.466 107.673 li
198.716 107.023 li
198.966 106.423 li
199.166 105.875 li
199.416 105.273 li
199.666 104.724 li
199.916 104.173 li
200.166 103.625 li
200.416 103.125 li
200.666 102.574 li
200.916 102.125 li
201.166 101.625 li
201.416 101.173 li
201.666 100.724 li
201.916 100.273 li
202.166 99.8237 li
202.365 99.4233 li
202.615 99.0229 li
202.865 98.6733 li
203.115 98.3237 li
203.365 97.9736 li
203.615 97.624 li
203.865 97.3232 li
204.115 97.0234 li
204.365 96.7236 li
204.615 96.4238 li
204.865 96.1738 li
205.115 95.9238 li
205.365 95.6738 li
205.565 95.4736 li
205.815 95.2734 li
206.065 95.0737 li
206.315 94.8735 li
206.565 94.6738 li
206.815 94.5234 li
207.065 94.3735 li
207.315 94.2734 li
207.565 94.1235 li
207.815 94.0234 li
208.065 93.8735 li
208.315 93.8237 li
208.565 93.7236 li
208.815 93.6235 li
209.016 93.5737 li
209.266 93.5234 li
209.516 93.4238 li
209.766 93.3735 li
210.016 93.3735 li
210.266 93.3237 li
210.516 93.2734 li
210.766 93.2734 li
211.016 93.2236 li
211.266 93.2236 li
211.516 93.2236 li
211.766 93.2236 li
212.016 93.2236 li
212.216 93.2236 li
212.466 93.2236 li
212.716 93.2236 li
212.966 93.2236 li
213.216 93.1738 li
213.466 93.1738 li
213.716 93.1738 li
213.966 93.1738 li
214.216 93.1738 li
214.466 93.1738 li
214.716 93.1738 li
214.966 93.1738 li
215.216 93.1235 li
215.416 93.1235 li
215.666 93.0737 li
215.916 93.0737 li
216.166 93.0234 li
216.416 92.9736 li
216.666 92.9238 li
216.916 92.8735 li
217.166 92.7734 li
217.416 92.7236 li
217.666 92.6235 li
217.916 92.5234 li
218.166 92.4238 li
218.416 92.3237 li
218.615 92.2236 li
218.865 92.0737 li
219.115 91.9238 li
219.365 91.7734 li
219.615 91.5737 li
219.865 91.4238 li
220.115 91.2236 li
220.365 91.0234 li
220.615 90.8237 li
169.416 123.375 mo
169.666 124.574 li
169.916 125.724 li
170.115 126.875 li
170.365 127.974 li
170.615 129.074 li
170.865 130.173 li
171.115 131.224 li
171.365 132.273 li
171.615 133.273 li
171.865 134.273 li
172.115 135.273 li
172.365 136.173 li
172.615 137.125 li
172.865 137.974 li
173.115 138.875 li
173.315 139.724 li
173.565 140.523 li
173.815 141.273 li
174.065 142.023 li
174.315 142.773 li
174.565 143.474 li
174.815 144.125 li
175.065 144.773 li
175.315 145.375 li
175.565 145.974 li
175.815 146.523 li
176.065 147.074 li
176.315 147.574 li
176.516 148.023 li
176.766 148.423 li
177.016 148.824 li
177.266 149.224 li
177.516 149.574 li
177.766 149.875 li
178.016 150.173 li
178.266 150.423 li
178.516 150.625 li
178.766 150.824 li
179.016 150.974 li
179.266 151.125 li
179.516 151.224 li
179.716 151.273 li
179.966 151.324 li
180.216 151.324 li
180.466 151.324 li
180.716 151.273 li
180.966 151.224 li
181.216 151.125 li
181.466 150.974 li
181.716 150.824 li
181.966 150.673 li
182.216 150.474 li
182.466 150.224 li
182.716 149.974 li
182.916 149.673 li
183.166 149.375 li
183.416 149.023 li
183.666 148.673 li
183.916 148.324 li
184.166 147.923 li
184.416 147.474 li
184.666 147.023 li
184.916 146.574 li
185.166 146.074 li
185.416 145.574 li
185.666 145.023 li
185.916 144.523 li
186.166 143.923 li
186.365 143.375 li
186.615 142.773 li
186.865 142.125 li
187.115 141.523 li
187.365 140.875 li
187.615 140.224 li
187.865 139.574 li
188.115 138.875 li
188.365 138.173 li
188.615 137.474 li
188.865 136.773 li
189.115 136.023 li
189.365 135.273 li
189.565 134.523 li
189.815 133.773 li
190.065 133.023 li
190.315 132.273 li
190.565 131.474 li
190.815 130.724 li
191.065 129.923 li
191.315 129.173 li
191.565 128.375 li
191.815 127.574 li
192.065 126.773 li
192.315 125.974 li
192.565 125.224 li
192.766 124.423 li
193.016 123.623 li
193.266 122.824 li
193.516 122.074 li
193.766 121.273 li
194.016 120.474 li
194.266 119.724 li
194.516 118.923 li
194.766 118.173 li
195.016 117.423 li
143.815 38.0234 mo
144.065 37.6235 li
144.266 37.2734 li
144.516 36.9736 li
144.766 36.6738 li
145.016 36.3735 li
145.266 36.1235 li
145.516 35.9238 li
145.766 35.7236 li
146.016 35.5234 li
146.266 35.3735 li
146.516 35.2734 li
146.766 35.1738 li
147.016 35.0737 li
147.266 35.0737 li
147.466 35.0737 li
147.716 35.0737 li
147.966 35.1235 li
148.216 35.2236 li
148.466 35.3237 li
148.716 35.4238 li
148.966 35.6235 li
149.216 35.8237 li
149.466 36.0234 li
149.716 36.2734 li
149.966 36.5737 li
150.216 36.9238 li
150.466 37.2734 li
150.666 37.6235 li
150.916 38.0234 li
151.166 38.4736 li
151.416 38.9238 li
151.666 39.4238 li
151.916 39.9736 li
152.166 40.5234 li
152.416 41.1235 li
152.666 41.7236 li
152.916 42.3735 li
153.166 43.0737 li
153.416 43.7734 li
153.666 44.4736 li
153.865 45.2734 li
154.115 46.0234 li
154.365 46.8735 li
154.615 47.7236 li
154.865 48.5737 li
155.115 49.4736 li
155.365 50.3735 li
155.615 51.3237 li
155.865 52.3237 li
156.115 53.3237 li
156.365 54.3237 li
156.615 55.3735 li
156.865 56.4238 li
157.065 57.5234 li
157.315 58.6235 li
157.565 59.7734 li
157.815 60.9238 li
158.065 62.0737 li
158.315 63.2734 li
158.565 64.4736 li
158.815 65.6738 li
159.065 66.9238 li
159.315 68.1738 li
159.565 69.4736 li
159.815 70.7236 li
160.065 72.0234 li
160.266 73.3735 li
160.516 74.6738 li
160.766 76.0234 li
161.016 77.3735 li
161.266 78.7236 li
161.516 80.0737 li
161.766 81.4736 li
162.016 82.8237 li
162.266 84.2236 li
162.516 85.6235 li
162.766 87.0234 li
163.016 88.4238 li
163.266 89.8237 li
163.516 91.2236 li
163.716 92.6235 li
163.966 94.0234 li
164.216 95.4736 li
164.466 96.8735 li
164.716 98.2729 li
164.966 99.6733 li
165.216 101.074 li
165.466 102.423 li
165.716 103.824 li
165.966 105.224 li
166.216 106.574 li
166.466 107.923 li
166.716 109.324 li
166.915 110.625 li
167.165 111.974 li
167.415 113.324 li
167.665 114.625 li
167.915 115.923 li
168.165 117.173 li
168.415 118.474 li
168.665 119.724 li
168.915 120.974 li
169.165 122.173 li
169.415 123.375 li
118.216 92.9238 mo
118.416 92.8735 li
118.666 92.8237 li
118.916 92.7734 li
119.166 92.6738 li
119.416 92.5737 li
119.666 92.4736 li
119.916 92.3735 li
120.166 92.2734 li
120.416 92.1235 li
120.666 91.9736 li
120.916 91.8237 li
121.166 91.6738 li
121.416 91.4736 li
121.616 91.3237 li
121.866 91.1235 li
122.116 90.8735 li
122.366 90.6738 li
122.616 90.4238 li
122.866 90.1738 li
123.116 89.9238 li
123.366 89.6235 li
123.616 89.3237 li
123.866 89.0234 li
124.116 88.7236 li
124.366 88.3735 li
124.616 88.0234 li
124.815 87.6738 li
125.065 87.2734 li
125.315 86.8735 li
125.565 86.4736 li
125.815 86.0234 li
126.065 85.6235 li
126.315 85.1738 li
126.565 84.6738 li
126.815 84.2236 li
127.065 83.7236 li
127.315 83.1738 li
127.565 82.6738 li
127.815 82.1235 li
128.016 81.5737 li
128.266 81.0234 li
128.516 80.4238 li
128.766 79.8237 li
129.016 79.2236 li
129.266 78.6235 li
129.516 77.9736 li
129.766 77.3237 li
130.016 76.6738 li
130.266 76.0234 li
130.516 75.3237 li
130.766 74.6738 li
131.016 73.9736 li
131.216 73.2734 li
131.466 72.5234 li
131.716 71.8237 li
131.966 71.0737 li
132.216 70.3237 li
132.466 69.5737 li
132.716 68.8237 li
132.966 68.0737 li
133.216 67.3237 li
133.466 66.5234 li
133.716 65.7734 li
133.966 64.9736 li
134.216 64.1738 li
134.415 63.4238 li
134.665 62.6235 li
134.915 61.8237 li
135.165 61.0234 li
135.415 60.2236 li
135.665 59.4736 li
135.915 58.6738 li
136.165 57.8735 li
136.415 57.0737 li
136.665 56.3237 li
136.915 55.5234 li
137.165 54.7236 li
137.415 53.9736 li
137.615 53.2236 li
137.865 52.4736 li
138.115 51.7236 li
138.365 50.9736 li
138.615 50.2236 li
138.865 49.5234 li
139.115 48.7734 li
139.365 48.0737 li
139.615 47.3735 li
139.865 46.7236 li
140.115 46.0234 li
140.365 45.3735 li
140.615 44.7734 li
140.865 44.1235 li
141.065 43.5234 li
141.315 42.9238 li
141.565 42.3237 li
141.815 41.7734 li
142.065 41.2236 li
142.315 40.7236 li
142.565 40.2236 li
142.815 39.7236 li
143.065 39.2734 li
143.315 38.8237 li
143.565 38.4238 li
143.815 38.0234 li
92.5654 130.273 mo
92.8154 129.474 li
93.0654 128.673 li
93.3154 127.875 li
93.5654 127.125 li
93.8154 126.324 li
94.0654 125.523 li
94.3154 124.724 li
94.5654 123.923 li
94.8154 123.173 li
95.0654 122.375 li
95.3154 121.574 li
95.5654 120.773 li
95.7656 120.023 li
96.0156 119.224 li
96.2656 118.474 li
96.5156 117.724 li
96.7656 116.974 li
97.0156 116.224 li
97.2656 115.474 li
97.5156 114.724 li
97.7656 114.023 li
98.0156 113.273 li
98.2656 112.574 li
98.5156 111.875 li
98.7656 111.173 li
98.9658 110.523 li
99.2158 109.824 li
99.4658 109.173 li
99.7158 108.523 li
99.9658 107.923 li
100.216 107.273 li
100.466 106.673 li
100.716 106.074 li
100.966 105.523 li
101.216 104.923 li
101.466 104.375 li
101.716 103.824 li
101.966 103.324 li
102.166 102.773 li
102.416 102.273 li
102.666 101.824 li
102.916 101.324 li
103.166 100.875 li
103.416 100.423 li
103.666 100.023 li
103.916 99.6245 li
104.166 99.2241 li
104.416 98.8237 li
104.666 98.4741 li
104.916 98.0737 li
105.166 97.7734 li
105.366 97.4238 li
105.616 97.1235 li
105.866 96.8237 li
106.116 96.5234 li
106.366 96.2734 li
106.616 96.0234 li
106.866 95.7734 li
107.116 95.5737 li
107.366 95.3237 li
107.616 95.1235 li
107.866 94.9233 li
108.116 94.7734 li
108.366 94.6235 li
108.566 94.4233 li
108.816 94.3237 li
109.066 94.1733 li
109.316 94.0737 li
109.566 93.9233 li
109.816 93.8237 li
110.066 93.7236 li
110.316 93.6733 li
110.566 93.5737 li
110.816 93.5234 li
111.066 93.4736 li
111.316 93.4233 li
111.566 93.3735 li
111.766 93.3237 li
112.016 93.3237 li
112.266 93.2734 li
112.516 93.2734 li
112.766 93.2236 li
113.016 93.2236 li
113.266 93.2236 li
113.516 93.2236 li
113.766 93.2236 li
114.016 93.2236 li
114.266 93.2236 li
114.516 93.2236 li
114.766 93.1738 li
114.966 93.1738 li
115.216 93.1738 li
115.466 93.1738 li
115.716 93.1738 li
115.966 93.1738 li
116.216 93.1738 li
116.466 93.1738 li
116.716 93.1235 li
116.966 93.1235 li
117.216 93.1235 li
117.466 93.0737 li
117.716 93.0234 li
117.966 92.9736 li
118.216 92.9238 li
66.9658 101.875 mo
67.2158 103.273 li
67.4658 104.673 li
67.7158 106.023 li
67.9658 107.423 li
68.2158 108.773 li
68.4658 110.125 li
68.7158 111.474 li
68.9658 112.773 li
69.2158 114.074 li
69.4658 115.375 li
69.6655 116.673 li
69.9155 117.974 li
70.1655 119.224 li
70.4155 120.474 li
70.6655 121.673 li
70.9155 122.875 li
71.1655 124.074 li
71.4155 125.273 li
71.6655 126.423 li
71.9155 127.523 li
72.1655 128.673 li
72.4155 129.773 li
72.6655 130.824 li
72.9155 131.875 li
73.1157 132.875 li
73.3657 133.875 li
73.6157 134.875 li
73.8657 135.824 li
74.1157 136.724 li
74.3657 137.625 li
74.6157 138.523 li
74.8657 139.375 li
75.1157 140.173 li
75.3657 140.974 li
75.6157 141.773 li
75.8657 142.474 li
76.1157 143.173 li
76.3159 143.875 li
76.5659 144.523 li
76.8159 145.173 li
77.0659 145.773 li
77.3159 146.324 li
77.5659 146.875 li
77.8159 147.375 li
78.0659 147.824 li
78.3159 148.273 li
78.5659 148.673 li
78.8159 149.074 li
79.0659 149.423 li
79.3159 149.773 li
79.5156 150.023 li
79.7656 150.324 li
80.0156 150.523 li
80.2656 150.724 li
80.5156 150.923 li
80.7656 151.074 li
81.0156 151.173 li
81.2656 151.273 li
81.5156 151.324 li
81.7656 151.324 li
82.0156 151.324 li
82.2661 151.324 li
82.5161 151.273 li
82.7158 151.173 li
82.9658 151.023 li
83.2158 150.923 li
83.4658 150.724 li
83.7158 150.523 li
83.9658 150.324 li
84.2158 150.074 li
84.4658 149.773 li
84.7158 149.474 li
84.9658 149.173 li
85.2158 148.824 li
85.4658 148.474 li
85.7158 148.074 li
85.916 147.625 li
86.166 147.224 li
86.416 146.773 li
86.666 146.273 li
86.916 145.773 li
87.166 145.273 li
87.416 144.724 li
87.666 144.173 li
87.916 143.574 li
88.166 143.023 li
88.416 142.375 li
88.666 141.773 li
88.916 141.125 li
89.1162 140.474 li
89.3662 139.824 li
89.6162 139.125 li
89.8662 138.474 li
90.1162 137.773 li
90.3662 137.023 li
90.6162 136.324 li
90.8662 135.574 li
91.1162 134.824 li
91.3662 134.074 li
91.6162 133.324 li
91.8662 132.574 li
92.1162 131.824 li
92.3159 131.023 li
92.5659 130.273 li
41.3657 46.9736 mo
41.6157 46.3237 li
41.8657 45.6738 li
42.1157 45.0234 li
42.3657 44.3735 li
42.6157 43.7734 li
42.8657 43.1738 li
43.1157 42.5737 li
43.3657 42.0234 li
43.6157 41.4736 li
43.8154 40.9238 li
44.0654 40.4238 li
44.3154 39.9238 li
44.5654 39.4736 li
44.8154 39.0234 li
45.0659 38.5737 li
45.3159 38.1738 li
45.5659 37.7734 li
45.8159 37.4238 li
46.0659 37.0737 li
46.3159 36.7734 li
46.5659 36.4736 li
46.8159 36.2236 li
47.0156 35.9736 li
47.2656 35.7734 li
47.5156 35.5737 li
47.7656 35.4238 li
48.0156 35.3237 li
48.2656 35.1738 li
48.5156 35.1235 li
48.7656 35.0737 li
49.0156 35.0737 li
49.2656 35.0737 li
49.5156 35.0737 li
49.7656 35.1738 li
50.0156 35.2734 li
50.2656 35.3735 li
50.4658 35.5234 li
50.7158 35.7236 li
50.9658 35.9238 li
51.2158 36.1738 li
51.4658 36.4736 li
51.7158 36.7734 li
51.9658 37.1235 li
52.2158 37.4736 li
52.4658 37.8735 li
52.7158 38.2734 li
52.9658 38.7734 li
53.2158 39.2236 li
53.4658 39.7734 li
53.666 40.3237 li
53.916 40.8735 li
54.166 41.4736 li
54.416 42.1235 li
54.666 42.7734 li
54.916 43.4736 li
55.166 44.2236 li
55.416 44.9736 li
55.666 45.7236 li
55.916 46.5234 li
56.166 47.3735 li
56.416 48.2236 li
56.666 49.1235 li
56.8657 50.0234 li
57.1157 50.9736 li
57.3657 51.9238 li
57.6157 52.9238 li
57.8657 53.9238 li
58.1157 54.9238 li
58.3657 56.0234 li
58.6157 57.0737 li
58.8657 58.1738 li
59.1157 59.3237 li
59.3657 60.4238 li
59.6157 61.6235 li
59.8657 62.7734 li
60.0659 63.9736 li
60.3159 65.2236 li
60.5659 66.4238 li
60.8159 67.6738 li
61.0659 68.9736 li
61.3159 70.2236 li
61.5659 71.5234 li
61.8159 72.8237 li
62.0659 74.1738 li
62.3159 75.4736 li
62.5659 76.8237 li
62.8159 78.1738 li
63.0659 79.5234 li
63.2661 80.9238 li
63.5161 82.2734 li
63.7661 83.6738 li
64.0161 85.0737 li
64.2661 86.4736 li
64.5161 87.8735 li
64.7661 89.2734 li
65.0161 90.6738 li
65.2661 92.0737 li
65.5161 93.4736 li
65.7661 94.8735 li
66.0161 96.2734 li
66.2661 97.6738 li
66.4658 99.1245 li
66.7158 100.474 li
66.9658 101.875 li
16.2656 93.1738 mo
16.5156 93.1738 li
16.7656 93.1738 li
17.0156 93.1738 li
17.2656 93.1738 li
17.5156 93.1738 li
17.7656 93.1738 li
17.9658 93.1738 li
18.2158 93.1738 li
18.4658 93.1235 li
18.7158 93.1235 li
18.9658 93.0737 li
19.2158 93.0737 li
19.4658 93.0234 li
19.7158 92.9736 li
19.9658 92.9238 li
20.2158 92.8237 li
20.4658 92.7734 li
20.7158 92.7236 li
20.9658 92.6235 li
21.1655 92.5234 li
21.4155 92.4238 li
21.6655 92.3237 li
21.9155 92.1738 li
22.1655 92.0234 li
22.4155 91.8735 li
22.6655 91.7236 li
22.9155 91.5737 li
23.1655 91.3735 li
23.4155 91.1738 li
23.6655 90.9736 li
23.9155 90.7734 li
24.1655 90.5234 li
24.3657 90.2734 li
24.6157 90.0234 li
24.8657 89.7236 li
25.1157 89.4736 li
25.3657 89.1738 li
25.6157 88.8237 li
25.8657 88.5234 li
26.1157 88.1738 li
26.3657 87.8237 li
26.6157 87.4238 li
26.8657 87.0234 li
27.1157 86.6235 li
27.3657 86.2236 li
27.6157 85.7734 li
27.8159 85.3237 li
28.0659 84.8735 li
28.3159 84.3735 li
28.5659 83.9238 li
28.8159 83.3735 li
29.0659 82.8735 li
29.3159 82.3237 li
29.5659 81.7734 li
29.8159 81.2236 li
30.0659 80.6738 li
30.3159 80.0737 li
30.5659 79.4736 li
30.8159 78.8735 li
31.0156 78.2236 li
31.2656 77.5737 li
31.5161 76.9238 li
31.7661 76.2734 li
32.0161 75.6235 li
32.2661 74.9238 li
32.5161 74.2236 li
32.7661 73.5234 li
33.0161 72.8237 li
33.2661 72.1235 li
33.5161 71.3735 li
33.7661 70.6235 li
34.0161 69.8735 li
34.2158 69.1235 li
34.4658 68.3735 li
34.7158 67.6235 li
34.9658 66.8237 li
35.2158 66.0737 li
35.4658 65.2734 li
35.7158 64.5234 li
35.9658 63.7236 li
36.2158 62.9238 li
36.4658 62.1235 li
36.7158 61.3735 li
36.9658 60.5737 li
37.2158 59.7734 li
37.416 58.9736 li
37.666 58.1738 li
37.916 57.4238 li
38.166 56.6235 li
38.416 55.8237 li
38.666 55.0737 li
38.916 54.2734 li
39.166 53.5234 li
39.416 52.7734 li
39.666 52.0234 li
39.916 51.2734 li
40.166 50.5234 li
40.416 49.7734 li
40.6162 49.0737 li
40.8662 48.3735 li
41.1162 47.6738 li
41.3662 46.9736 li
233.865 155.074 mo
253.815 155.074 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf206.336 164.412 mo(3 term)[3.8916 1.94629 1.94629 3.8916 2.50586 0 ]xsh226.164 164.412 mo(s)sh[2 3 ] 0 dsh
246.216 33.9736 mo
246.466 33.3237 li
246.716 32.7236 li
246.966 32.1235 li
247.216 31.6235 li
247.466 31.1235 li
247.666 30.6738 li
247.916 30.2236 li
248.166 29.8735 li
248.416 29.5737 li
248.666 29.2734 li
248.916 29.0234 li
249.166 28.8735 li
249.416 28.7236 li
249.666 28.6235 li
249.916 28.6235 li
250.166 28.6235 li
250.416 28.7236 li
250.666 28.8735 li
250.865 29.0234 li
251.115 29.2734 li
251.365 29.5737 li
251.615 29.9736 li
251.865 30.3735 li
252.115 30.8735 li
252.365 31.3735 li
252.615 31.9736 li
252.865 32.6235 li
253.115 33.3735 li
253.365 34.1235 li
253.615 34.9736 li
253.865 35.8735 li
254.115 36.8237 li
254.315 37.8237 li
254.565 38.8735 li
254.815 39.9736 li
255.065 41.1738 li
255.315 42.4238 li
255.565 43.6738 li
255.815 45.0234 li
256.065 46.4238 li
256.315 47.8735 li
256.565 49.3735 li
256.815 50.8735 li
257.065 52.4736 li
257.315 54.1235 li
257.516 55.7734 li
257.766 57.4736 li
258.016 59.2734 li
258.266 61.0234 li
258.516 62.8735 li
258.766 64.7236 li
259.016 66.6235 li
259.266 68.5737 li
259.516 70.5234 li
259.766 72.4736 li
260.016 74.4736 li
260.266 76.5234 li
260.516 78.5737 li
260.716 80.6235 li
260.966 82.6738 li
261.216 84.7734 li
261.466 86.8735 li
261.716 88.9736 li
261.966 91.0737 li
262.216 93.1738 li
220.615 75.9736 mo
220.865 75.6738 li
221.115 75.4238 li
221.365 75.1738 li
221.615 74.9238 li
221.815 74.6738 li
222.065 74.4736 li
222.315 74.3237 li
222.565 74.1738 li
222.815 74.0234 li
223.065 73.8735 li
223.315 73.7734 li
223.565 73.6738 li
223.815 73.5737 li
224.065 73.5234 li
224.315 73.4736 li
224.565 73.4238 li
224.815 73.4238 li
225.016 73.3735 li
225.266 73.3735 li
225.516 73.3735 li
225.766 73.3735 li
226.016 73.4238 li
226.266 73.4238 li
226.516 73.4736 li
226.766 73.5234 li
227.016 73.5234 li
227.266 73.5737 li
227.516 73.6235 li
227.766 73.6738 li
228.016 73.6738 li
228.216 73.7236 li
228.466 73.7734 li
228.716 73.7734 li
228.966 73.8237 li
229.216 73.8237 li
229.466 73.8237 li
229.716 73.8237 li
229.966 73.7734 li
230.216 73.7734 li
230.466 73.7236 li
230.716 73.6738 li
230.966 73.5737 li
231.216 73.5234 li
231.466 73.3735 li
231.666 73.2734 li
231.916 73.1235 li
232.166 72.9736 li
232.416 72.7734 li
232.666 72.5737 li
232.916 72.3735 li
233.166 72.1235 li
233.416 71.8237 li
233.666 71.5234 li
233.916 71.2236 li
234.166 70.8735 li
234.416 70.5234 li
234.666 70.1235 li
234.865 69.6738 li
235.115 69.2236 li
235.365 68.7734 li
235.615 68.2734 li
235.865 67.7734 li
236.115 67.2236 li
236.365 66.6235 li
236.615 66.0737 li
236.865 65.4238 li
237.115 64.7734 li
237.365 64.1235 li
237.615 63.4238 li
237.865 62.7236 li
238.065 61.9736 li
238.315 61.2236 li
238.565 60.4736 li
238.815 59.6738 li
239.065 58.8237 li
239.315 58.0234 li
239.565 57.1738 li
239.815 56.3237 li
240.065 55.4238 li
240.315 54.5737 li
240.565 53.6738 li
240.815 52.7734 li
241.065 51.8735 li
241.266 50.9238 li
241.516 50.0234 li
241.766 49.0737 li
242.016 48.1738 li
242.266 47.2236 li
242.516 46.3237 li
242.766 45.3735 li
243.016 44.4736 li
243.266 43.5737 li
243.516 42.6738 li
243.766 41.7734 li
244.016 40.9238 li
244.266 40.0737 li
244.466 39.2236 li
244.716 38.4238 li
244.966 37.5737 li
245.216 36.8237 li
245.466 36.0737 li
245.716 35.3237 li
245.966 34.6235 li
246.216 33.9736 li
195.016 112.824 mo
195.266 112.773 li
195.516 112.724 li
195.766 112.673 li
195.966 112.625 li
196.216 112.574 li
196.466 112.574 li
196.716 112.574 li
196.966 112.574 li
197.216 112.625 li
197.466 112.625 li
197.716 112.673 li
197.966 112.673 li
198.216 112.724 li
198.466 112.773 li
198.716 112.824 li
198.966 112.824 li
199.166 112.875 li
199.416 112.923 li
199.666 112.974 li
199.916 112.974 li
200.166 112.974 li
200.416 113.023 li
200.666 113.023 li
200.916 113.023 li
201.166 113.023 li
201.416 112.974 li
201.666 112.923 li
201.916 112.923 li
202.166 112.824 li
202.365 112.773 li
202.615 112.673 li
202.865 112.574 li
203.115 112.423 li
203.365 112.324 li
203.615 112.173 li
203.865 111.974 li
204.115 111.773 li
204.365 111.574 li
204.615 111.324 li
204.865 111.074 li
205.115 110.824 li
205.365 110.523 li
205.565 110.224 li
205.815 109.875 li
206.065 109.523 li
206.315 109.173 li
206.565 108.773 li
206.815 108.375 li
207.065 107.974 li
207.315 107.523 li
207.565 107.023 li
207.815 106.574 li
208.065 106.074 li
208.315 105.523 li
208.565 105.023 li
208.815 104.474 li
209.016 103.875 li
209.266 103.324 li
209.516 102.724 li
209.766 102.074 li
210.016 101.474 li
210.266 100.824 li
210.516 100.173 li
210.766 99.5229 li
211.016 98.8745 li
211.266 98.2241 li
211.516 97.5234 li
211.766 96.8237 li
212.016 96.1235 li
212.216 95.4238 li
212.466 94.7236 li
212.716 94.0234 li
212.966 93.3237 li
213.216 92.6235 li
213.466 91.9238 li
213.716 91.2236 li
213.966 90.5234 li
214.216 89.8237 li
214.466 89.1733 li
214.716 88.4736 li
214.966 87.7734 li
215.216 87.1235 li
215.416 86.4736 li
215.666 85.8237 li
215.916 85.1738 li
216.166 84.5234 li
216.416 83.9238 li
216.666 83.3237 li
216.916 82.7236 li
217.166 82.1738 li
217.416 81.6235 li
217.666 81.0737 li
217.916 80.5234 li
218.166 80.0234 li
218.416 79.5234 li
218.615 79.0737 li
218.865 78.6235 li
219.115 78.1738 li
219.365 77.7734 li
219.615 77.3735 li
219.865 76.9736 li
220.115 76.6235 li
220.365 76.3237 li
220.615 75.9736 li
169.416 136.423 mo
169.666 137.923 li
169.916 139.423 li
170.115 140.824 li
170.365 142.173 li
170.615 143.474 li
170.865 144.724 li
171.115 145.923 li
171.365 147.074 li
171.615 148.173 li
171.865 149.173 li
172.115 150.173 li
172.365 151.074 li
172.615 151.923 li
172.865 152.724 li
173.115 153.474 li
173.315 154.173 li
173.565 154.773 li
173.815 155.324 li
174.065 155.824 li
174.315 156.273 li
174.565 156.673 li
174.815 156.974 li
175.065 157.273 li
175.315 157.474 li
175.565 157.625 li
175.815 157.724 li
176.065 157.773 li
176.315 157.773 li
176.516 157.724 li
176.766 157.574 li
177.016 157.423 li
177.266 157.224 li
177.516 156.974 li
177.766 156.673 li
178.016 156.324 li
178.266 155.923 li
178.516 155.474 li
178.766 154.974 li
179.016 154.474 li
179.266 153.923 li
179.516 153.324 li
179.716 152.673 li
179.966 152.023 li
180.216 151.324 li
180.466 150.625 li
180.716 149.875 li
180.966 149.125 li
181.216 148.324 li
181.466 147.523 li
181.716 146.673 li
181.966 145.824 li
182.216 144.974 li
182.466 144.074 li
182.716 143.173 li
182.916 142.273 li
183.166 141.375 li
183.416 140.474 li
183.666 139.523 li
183.916 138.625 li
184.166 137.673 li
184.416 136.773 li
184.666 135.824 li
184.916 134.923 li
185.166 133.974 li
185.416 133.074 li
185.666 132.173 li
185.916 131.324 li
186.166 130.423 li
186.365 129.574 li
186.615 128.724 li
186.865 127.875 li
187.115 127.074 li
187.365 126.273 li
187.615 125.474 li
187.865 124.724 li
188.115 123.974 li
188.365 123.273 li
188.615 122.574 li
188.865 121.875 li
189.115 121.224 li
189.365 120.574 li
189.565 119.974 li
189.815 119.423 li
190.065 118.875 li
190.315 118.324 li
190.565 117.824 li
190.815 117.324 li
191.065 116.875 li
191.315 116.474 li
191.565 116.023 li
191.815 115.673 li
192.065 115.324 li
192.315 114.974 li
192.565 114.673 li
192.766 114.423 li
193.016 114.125 li
193.266 113.923 li
193.516 113.673 li
193.766 113.523 li
194.016 113.324 li
194.266 113.173 li
194.516 113.074 li
194.766 112.923 li
195.016 112.824 li
143.815 47.6235 mo
144.065 46.6738 li
144.266 45.7734 li
144.516 44.8237 li
144.766 43.9238 li
145.016 43.0234 li
145.266 42.1235 li
145.516 41.2734 li
145.766 40.4238 li
146.016 39.5737 li
146.266 38.7236 li
146.516 37.9238 li
146.766 37.1235 li
147.016 36.3735 li
147.266 35.6235 li
147.466 34.9238 li
147.716 34.2236 li
147.966 33.5737 li
148.216 32.9736 li
148.466 32.3735 li
148.716 31.8237 li
148.966 31.3237 li
149.216 30.8237 li
149.466 30.4238 li
149.716 30.0234 li
149.966 29.6738 li
150.216 29.3735 li
150.466 29.1235 li
150.666 28.9238 li
150.916 28.7734 li
151.166 28.6738 li
151.416 28.6235 li
151.666 28.6235 li
151.916 28.6738 li
152.166 28.7734 li
152.416 28.9736 li
152.666 29.1738 li
152.916 29.4736 li
153.166 29.8237 li
153.416 30.1738 li
153.666 30.6738 li
153.865 31.1738 li
154.115 31.7236 li
154.365 32.3735 li
154.615 33.0737 li
154.865 33.8237 li
155.115 34.6235 li
155.365 35.4736 li
155.615 36.4238 li
155.865 37.4238 li
156.115 38.4238 li
156.365 39.5234 li
156.615 40.6738 li
156.865 41.9238 li
157.065 43.1738 li
157.315 44.4736 li
157.565 45.8735 li
157.815 47.2734 li
158.065 48.7734 li
158.315 50.2734 li
158.565 51.8237 li
158.815 53.4736 li
159.065 55.1235 li
159.315 56.8237 li
159.565 58.5234 li
159.815 60.3237 li
160.065 62.1235 li
160.266 63.9736 li
160.516 65.8735 li
160.766 67.7734 li
161.016 69.7236 li
161.266 71.6733 li
161.516 73.6733 li
161.766 75.7236 li
162.016 77.7236 li
162.266 79.7734 li
162.516 81.8735 li
162.766 83.9233 li
163.016 86.0234 li
163.266 88.1235 li
163.516 90.2236 li
163.716 92.3735 li
163.966 94.4736 li
164.216 96.5737 li
164.466 98.6733 li
164.716 100.773 li
164.966 102.875 li
165.216 104.974 li
165.466 107.023 li
165.716 109.074 li
165.966 111.125 li
166.216 113.125 li
166.466 115.125 li
166.716 117.074 li
166.915 119.023 li
167.165 120.923 li
167.415 122.773 li
167.665 124.625 li
167.915 126.423 li
168.165 128.224 li
168.415 129.923 li
168.665 131.625 li
168.915 133.273 li
169.165 134.875 li
169.415 136.423 li
118.216 83.5737 mo
118.416 82.9736 li
118.666 82.3735 li
118.916 81.8237 li
119.166 81.2734 li
119.416 80.7734 li
119.666 80.2236 li
119.916 79.7236 li
120.166 79.2734 li
120.416 78.7734 li
120.666 78.3735 li
120.916 77.9238 li
121.166 77.5234 li
121.416 77.1235 li
121.616 76.7734 li
121.866 76.4238 li
122.116 76.1235 li
122.366 75.8237 li
122.616 75.5234 li
122.866 75.2734 li
123.116 75.0234 li
123.366 74.7734 li
123.616 74.5737 li
123.866 74.3735 li
124.116 74.2236 li
124.366 74.0737 li
124.616 73.9238 li
124.815 73.8237 li
125.065 73.7236 li
125.315 73.6235 li
125.565 73.5234 li
125.815 73.4736 li
126.065 73.4238 li
126.315 73.4238 li
126.565 73.3735 li
126.815 73.3735 li
127.065 73.3735 li
127.315 73.3735 li
127.565 73.4238 li
127.815 73.4238 li
128.016 73.4736 li
128.266 73.4736 li
128.516 73.5234 li
128.766 73.5737 li
129.016 73.6235 li
129.266 73.6235 li
129.516 73.6738 li
129.766 73.7236 li
130.016 73.7236 li
130.266 73.7734 li
130.516 73.7734 li
130.766 73.8237 li
131.016 73.8237 li
131.216 73.8237 li
131.466 73.8237 li
131.716 73.7734 li
131.966 73.7236 li
132.216 73.6738 li
132.466 73.6235 li
132.716 73.5234 li
132.966 73.4233 li
133.216 73.3237 li
133.466 73.1733 li
133.716 73.0234 li
133.966 72.8735 li
134.216 72.6733 li
134.415 72.4233 li
134.665 72.2236 li
134.915 71.9233 li
135.165 71.6733 li
135.415 71.3237 li
135.665 71.0234 li
135.915 70.6738 li
136.165 70.2734 li
136.415 69.8735 li
136.665 69.4233 li
136.915 68.9736 li
137.165 68.4736 li
137.415 67.9736 li
137.615 67.4233 li
137.865 66.8735 li
138.115 66.2734 li
138.365 65.6733 li
138.615 65.0234 li
138.865 64.3735 li
139.115 63.7236 li
139.365 63.0234 li
139.615 62.2734 li
139.865 61.5234 li
140.115 60.7734 li
140.365 59.9736 li
140.615 59.1738 li
140.865 58.3735 li
141.065 57.5234 li
141.315 56.6738 li
141.565 55.7734 li
141.815 54.9238 li
142.065 54.0234 li
142.315 53.1235 li
142.565 52.2236 li
142.815 51.3237 li
143.065 50.3735 li
143.315 49.4736 li
143.565 48.5234 li
143.815 47.6235 li
92.5654 117.074 mo
92.8154 116.625 li
93.0654 116.224 li
93.3154 115.824 li
93.5654 115.474 li
93.8154 115.125 li
94.0654 114.824 li
94.3154 114.523 li
94.5654 114.224 li
94.8154 113.974 li
95.0654 113.773 li
95.3154 113.574 li
95.5654 113.375 li
95.7656 113.224 li
96.0156 113.125 li
96.2656 112.974 li
96.5156 112.875 li
96.7656 112.773 li
97.0156 112.724 li
97.2656 112.673 li
97.5156 112.625 li
97.7656 112.625 li
98.0156 112.574 li
98.2656 112.574 li
98.5156 112.574 li
98.7656 112.625 li
98.9658 112.625 li
99.2158 112.625 li
99.4658 112.673 li
99.7158 112.724 li
99.9658 112.773 li
100.216 112.773 li
100.466 112.824 li
100.716 112.875 li
100.966 112.923 li
101.216 112.923 li
101.466 112.974 li
101.716 112.974 li
101.966 113.023 li
102.166 113.023 li
102.416 113.023 li
102.666 113.023 li
102.916 112.974 li
103.166 112.974 li
103.416 112.923 li
103.666 112.875 li
103.916 112.773 li
104.166 112.724 li
104.416 112.625 li
104.666 112.474 li
104.916 112.375 li
105.166 112.224 li
105.366 112.023 li
105.616 111.875 li
105.866 111.673 li
106.116 111.423 li
106.366 111.173 li
106.616 110.923 li
106.866 110.673 li
107.116 110.375 li
107.366 110.023 li
107.616 109.673 li
107.866 109.324 li
108.116 108.923 li
108.366 108.523 li
108.566 108.125 li
108.816 107.673 li
109.066 107.224 li
109.316 106.773 li
109.566 106.273 li
109.816 105.773 li
110.066 105.224 li
110.316 104.673 li
110.566 104.125 li
110.816 103.523 li
111.066 102.923 li
111.316 102.324 li
111.566 101.724 li
111.766 101.074 li
112.016 100.474 li
112.266 99.8237 li
112.516 99.1245 li
112.766 98.4741 li
113.016 97.7734 li
113.266 97.1235 li
113.516 96.4238 li
113.766 95.7236 li
114.016 95.0234 li
114.266 94.3237 li
114.516 93.6235 li
114.766 92.9238 li
114.966 92.2236 li
115.216 91.5234 li
115.466 90.8237 li
115.716 90.1235 li
115.966 89.4238 li
116.216 88.7236 li
116.466 88.0737 li
116.716 87.3735 li
116.966 86.7236 li
117.216 86.0737 li
117.466 85.4238 li
117.716 84.7734 li
117.966 84.1738 li
118.216 83.5737 li
66.9658 106.173 mo
67.2158 108.273 li
67.4658 110.273 li
67.7158 112.324 li
67.9658 114.324 li
68.2158 116.273 li
68.4658 118.224 li
68.7158 120.173 li
68.9658 122.023 li
69.2158 123.875 li
69.4658 125.724 li
69.6655 127.523 li
69.9155 129.273 li
70.1655 130.974 li
70.4155 132.625 li
70.6655 134.224 li
70.9155 135.824 li
71.1655 137.324 li
71.4155 138.824 li
71.6655 140.273 li
71.9155 141.625 li
72.1655 142.974 li
72.4155 144.224 li
72.6655 145.474 li
72.9155 146.625 li
73.1157 147.724 li
73.3657 148.773 li
73.6157 149.773 li
73.8657 150.724 li
74.1157 151.625 li
74.3657 152.423 li
74.6157 153.173 li
74.8657 153.875 li
75.1157 154.523 li
75.3657 155.125 li
75.6157 155.625 li
75.8657 156.125 li
76.1157 156.523 li
76.3159 156.875 li
76.5659 157.173 li
76.8159 157.423 li
77.0659 157.574 li
77.3159 157.724 li
77.5659 157.773 li
77.8159 157.773 li
78.0659 157.724 li
78.3159 157.673 li
78.5659 157.523 li
78.8159 157.324 li
79.0659 157.074 li
79.3159 156.773 li
79.5156 156.474 li
79.7656 156.074 li
80.0156 155.625 li
80.2656 155.173 li
80.5156 154.673 li
80.7656 154.125 li
81.0156 153.574 li
81.2656 152.974 li
81.5156 152.324 li
81.7656 151.625 li
82.0156 150.923 li
82.2661 150.173 li
82.5161 149.423 li
82.7158 148.625 li
82.9658 147.824 li
83.2158 147.023 li
83.4658 146.173 li
83.7158 145.324 li
83.9658 144.423 li
84.2158 143.523 li
84.4658 142.625 li
84.7158 141.724 li
84.9658 140.824 li
85.2158 139.875 li
85.4658 138.974 li
85.7158 138.023 li
85.916 137.125 li
86.166 136.173 li
86.416 135.273 li
86.666 134.375 li
86.916 133.474 li
87.166 132.574 li
87.416 131.673 li
87.666 130.773 li
87.916 129.923 li
88.166 129.074 li
88.416 128.224 li
88.666 127.375 li
88.916 126.574 li
89.1162 125.773 li
89.3662 125.023 li
89.6162 124.273 li
89.8662 123.523 li
90.1162 122.824 li
90.3662 122.125 li
90.6162 121.474 li
90.8662 120.824 li
91.1162 120.224 li
91.3662 119.625 li
91.6162 119.074 li
91.8662 118.523 li
92.1162 118.023 li
92.3159 117.523 li
92.5659 117.074 li
41.3657 61.8237 mo
41.6157 61.0737 li
41.8657 60.2734 li
42.1157 59.4736 li
42.3657 58.6738 li
42.6157 57.8735 li
42.8657 57.0234 li
43.1157 56.1235 li
43.3657 55.2734 li
43.6157 54.3735 li
43.8154 53.4736 li
44.0654 52.5737 li
44.3154 51.6738 li
44.5654 50.7734 li
44.8154 49.8237 li
45.0659 48.9238 li
45.3159 47.9736 li
45.5659 47.0737 li
45.8159 46.1235 li
46.0659 45.2236 li
46.3159 44.3237 li
46.5659 43.3735 li
46.8159 42.5234 li
47.0156 41.6235 li
47.2656 40.7236 li
47.5156 39.8735 li
47.7656 39.0737 li
48.0156 38.2236 li
48.2656 37.4238 li
48.5156 36.6738 li
48.7656 35.9238 li
49.0156 35.1738 li
49.2656 34.4736 li
49.5156 33.8237 li
49.7656 33.2236 li
50.0156 32.6235 li
50.2656 32.0234 li
50.4658 31.5234 li
50.7158 31.0234 li
50.9658 30.5737 li
51.2158 30.1738 li
51.4658 29.8237 li
51.7158 29.4736 li
51.9658 29.2236 li
52.2158 29.0234 li
52.4658 28.8237 li
52.7158 28.7236 li
52.9658 28.6235 li
53.2158 28.6235 li
53.4658 28.6738 li
53.666 28.7236 li
53.916 28.8735 li
54.166 29.0737 li
54.416 29.3237 li
54.666 29.6738 li
54.916 30.0234 li
55.166 30.4736 li
55.416 30.9736 li
55.666 31.5234 li
55.916 32.1235 li
56.166 32.7734 li
56.416 33.5234 li
56.666 34.2734 li
56.8657 35.1235 li
57.1157 36.0234 li
57.3657 37.0234 li
57.6157 38.0234 li
57.8657 39.0737 li
58.1157 40.2236 li
58.3657 41.4238 li
58.6157 42.6738 li
58.8657 43.9736 li
59.1157 45.3237 li
59.3657 46.7236 li
59.6157 48.1738 li
59.8657 49.6738 li
60.0659 51.2236 li
60.3159 52.8237 li
60.5659 54.4238 li
60.8159 56.1235 li
61.0659 57.8237 li
61.3159 59.6235 li
61.5659 61.4238 li
61.8159 63.2236 li
62.0659 65.1235 li
62.3159 67.0234 li
62.5659 68.9238 li
62.8159 70.9238 li
63.0659 72.8735 li
63.2661 74.8735 li
63.5161 76.9238 li
63.7661 78.9736 li
64.0161 81.0234 li
64.2661 83.1235 li
64.5161 85.1738 li
64.7661 87.2734 li
65.0161 89.4238 li
65.2661 91.5234 li
65.5161 93.6235 li
65.7661 95.7236 li
66.0161 97.8232 li
66.2661 99.9233 li
66.4658 102.023 li
66.7158 104.125 li
66.9658 106.173 li
16.2656 93.1738 mo
16.5156 92.4736 li
16.7656 91.7734 li
17.0156 91.0737 li
17.2656 90.3735 li
17.5156 89.7236 li
17.7656 89.0234 li
17.9658 88.3237 li
18.2158 87.6738 li
18.4658 86.9736 li
18.7158 86.3237 li
18.9658 85.6738 li
19.2158 85.0234 li
19.4658 84.4238 li
19.7158 83.8237 li
19.9658 83.2236 li
20.2158 82.6235 li
20.4658 82.0737 li
20.7158 81.5234 li
20.9658 80.9736 li
21.1655 80.4238 li
21.4155 79.9238 li
21.6655 79.4736 li
21.9155 78.9736 li
22.1655 78.5234 li
22.4155 78.1235 li
22.6655 77.6738 li
22.9155 77.2734 li
23.1655 76.9238 li
23.4155 76.5737 li
23.6655 76.2236 li
23.9155 75.9238 li
24.1655 75.6235 li
24.3657 75.3735 li
24.6157 75.1235 li
24.8657 74.8735 li
25.1157 74.6738 li
25.3657 74.4736 li
25.6157 74.2734 li
25.8657 74.1235 li
26.1157 73.9736 li
26.3657 73.8735 li
26.6157 73.7236 li
26.8657 73.6738 li
27.1157 73.5737 li
27.3657 73.5234 li
27.6157 73.4736 li
27.8159 73.4238 li
28.0659 73.3735 li
28.3159 73.3735 li
28.5659 73.3735 li
28.8159 73.3735 li
29.0659 73.3735 li
29.3159 73.4238 li
29.5659 73.4238 li
29.8159 73.4736 li
30.0659 73.5234 li
30.3159 73.5234 li
30.5659 73.5737 li
30.8159 73.6235 li
31.0156 73.6738 li
31.2656 73.7236 li
31.5161 73.7236 li
31.7661 73.7734 li
32.0161 73.7734 li
32.2661 73.8237 li
32.5161 73.8237 li
32.7661 73.8237 li
33.0161 73.8237 li
33.2661 73.7734 li
33.5161 73.7734 li
33.7661 73.7236 li
34.0161 73.6235 li
34.2158 73.5737 li
34.4658 73.4736 li
34.7158 73.3735 li
34.9658 73.2236 li
35.2158 73.0737 li
35.4658 72.9238 li
35.7158 72.7236 li
35.9658 72.5234 li
36.2158 72.3237 li
36.4658 72.0737 li
36.7158 71.7734 li
36.9658 71.4736 li
37.2158 71.1738 li
37.416 70.8237 li
37.666 70.4238 li
37.916 70.0234 li
38.166 69.6235 li
38.416 69.1738 li
38.666 68.6738 li
38.916 68.1738 li
39.166 67.6738 li
39.416 67.1235 li
39.666 66.5234 li
39.916 65.9238 li
40.166 65.3237 li
40.416 64.6738 li
40.6162 63.9736 li
40.8662 63.2734 li
41.1162 62.5737 li
41.3662 61.8237 li
233.865 162.074 mo
253.815 162.074 li
@
DVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf202.438 171.412 mo(25 term)[3.8916 3.89258 1.94629 1.94531 3.89258 2.50488 0 ]xsh226.164 171.412 mo(s)sh[1 1.5 ] 0 dsh
244.065 48.2734 mo
244.166 47.9736 li
244.266 47.6738 li
244.315 47.3735 li
244.416 47.1235 li
244.466 46.8735 li
244.565 46.6738 li
244.615 46.4736 li
244.716 46.2734 li
244.766 46.1235 li
244.865 46.0234 li
244.966 45.9238 li
245.016 45.8735 li
245.115 45.8237 li
245.166 45.8237 li
245.266 45.8237 li
245.315 45.8237 li
245.416 45.8735 li
245.516 45.9736 li
245.565 46.0737 li
245.666 46.1738 li
245.716 46.2734 li
245.815 46.3735 li
245.865 46.4736 li
245.966 46.5737 li
246.065 46.6738 li
246.115 46.7734 li
246.216 46.8735 li
246.266 46.9238 li
246.365 46.9736 li
246.416 47.0234 li
246.516 47.0234 li
246.565 46.9736 li
246.666 46.9238 li
246.766 46.8237 li
246.815 46.7236 li
246.916 46.5737 li
246.966 46.4238 li
247.065 46.2236 li
247.115 45.9736 li
247.216 45.7236 li
247.315 45.4238 li
247.365 45.1235 li
247.466 44.8237 li
247.516 44.4736 li
247.615 44.1235 li
247.666 43.7734 li
247.766 43.4238 li
247.865 43.0737 li
247.916 42.6738 li
248.016 42.3237 li
248.065 42.0234 li
248.166 41.6738 li
248.216 41.3735 li
248.315 41.0737 li
248.365 40.8237 li
248.466 40.6235 li
248.565 40.4238 li
248.615 40.2236 li
248.716 40.1235 li
248.766 40.0234 li
248.865 39.9238 li
248.916 39.9238 li
249.016 39.9238 li
249.115 39.9736 li
249.166 40.0234 li
249.266 40.1235 li
249.315 40.2236 li
249.416 40.3735 li
249.466 40.5234 li
249.565 40.6738 li
249.666 40.8237 li
249.716 41.0234 li
249.815 41.1738 li
249.865 41.3735 li
249.966 41.5234 li
250.016 41.6738 li
250.115 41.7734 li
250.216 41.8735 li
250.266 41.9736 li
250.365 41.9736 li
250.416 42.0234 li
250.516 41.9736 li
250.565 41.9238 li
250.666 41.8237 li
250.716 41.6738 li
250.815 41.4736 li
250.916 41.2734 li
250.966 41.0234 li
251.065 40.7236 li
235.966 60.8735 mo
236.016 60.6235 li
236.115 60.3237 li
236.166 60.0737 li
236.266 59.8237 li
236.315 59.5737 li
236.416 59.2734 li
236.516 59.0234 li
236.565 58.8237 li
236.666 58.5737 li
236.716 58.3735 li
236.815 58.1738 li
236.865 57.9736 li
236.966 57.8237 li
237.016 57.6738 li
237.115 57.5234 li
237.216 57.4238 li
237.266 57.3237 li
237.365 57.2734 li
237.416 57.2236 li
237.516 57.1738 li
237.565 57.1738 li
237.666 57.1738 li
237.766 57.2236 li
237.815 57.2236 li
237.916 57.2734 li
237.966 57.3237 li
238.065 57.3735 li
238.115 57.3735 li
238.216 57.4238 li
238.315 57.4736 li
238.365 57.5234 li
238.466 57.5737 li
238.516 57.5737 li
238.615 57.5737 li
238.666 57.5737 li
238.766 57.5737 li
238.815 57.5234 li
238.916 57.4736 li
239.016 57.3735 li
239.065 57.2734 li
239.166 57.1235 li
239.216 56.9736 li
239.315 56.8237 li
239.365 56.6235 li
239.466 56.4238 li
239.565 56.2236 li
239.615 55.9736 li
239.716 55.7236 li
239.766 55.4736 li
239.865 55.1738 li
239.916 54.9238 li
240.016 54.6235 li
240.115 54.3237 li
240.166 54.0737 li
240.266 53.7734 li
240.315 53.5234 li
240.416 53.2734 li
240.466 53.0234 li
240.565 52.7734 li
240.615 52.5737 li
240.716 52.3735 li
240.815 52.1733 li
240.865 52.0234 li
240.966 51.8735 li
241.016 51.7734 li
241.115 51.6733 li
241.166 51.6235 li
241.266 51.5737 li
241.365 51.5234 li
241.416 51.5234 li
241.516 51.5737 li
241.565 51.5737 li
241.666 51.6235 li
241.716 51.6733 li
241.815 51.7236 li
241.916 51.8237 li
241.966 51.8735 li
242.065 51.9736 li
242.115 52.0234 li
242.216 52.0737 li
242.266 52.1733 li
242.365 52.1733 li
242.416 52.2236 li
242.516 52.2236 li
242.615 52.2236 li
242.666 52.2236 li
242.766 52.1733 li
242.815 52.0737 li
242.916 51.9736 li
242.966 51.8735 li
243.065 51.7236 li
243.166 51.5737 li
243.216 51.3735 li
243.315 51.1733 li
243.365 50.9233 li
243.466 50.6733 li
243.516 50.3735 li
243.615 50.1235 li
243.716 49.8237 li
243.766 49.5234 li
243.865 49.1733 li
243.916 48.8735 li
244.016 48.5737 li
244.065 48.2734 li
227.815 72.9238 mo
227.865 72.7734 li
227.966 72.5737 li
228.016 72.3735 li
228.115 72.1738 li
228.216 71.9238 li
228.266 71.6738 li
228.365 71.4736 li
228.416 71.2236 li
228.516 70.9736 li
228.565 70.7236 li
228.666 70.5234 li
228.716 70.2734 li
228.815 70.0737 li
228.916 69.8237 li
228.966 69.6235 li
229.065 69.4736 li
229.115 69.2734 li
229.216 69.1235 li
229.266 68.9736 li
229.365 68.8237 li
229.466 68.7236 li
229.516 68.6235 li
229.615 68.5234 li
229.666 68.4736 li
229.766 68.4238 li
229.815 68.3735 li
229.916 68.3735 li
230.016 68.3237 li
230.065 68.3237 li
230.166 68.3237 li
230.216 68.3735 li
230.315 68.3735 li
230.365 68.3735 li
230.466 68.4238 li
230.565 68.4238 li
230.615 68.4238 li
230.716 68.4736 li
230.766 68.4736 li
230.865 68.4238 li
230.916 68.4238 li
231.016 68.3735 li
231.065 68.3237 li
231.166 68.2734 li
231.266 68.1738 li
231.315 68.0737 li
231.416 67.9736 li
231.466 67.8237 li
231.565 67.7236 li
231.615 67.5234 li
231.716 67.3735 li
231.815 67.1738 li
231.865 66.9736 li
231.966 66.7236 li
232.016 66.5234 li
232.115 66.2734 li
232.166 66.0234 li
232.266 65.7734 li
232.365 65.5234 li
232.416 65.2734 li
232.516 65.0234 li
232.565 64.7734 li
232.666 64.5737 li
232.716 64.3237 li
232.815 64.1235 li
232.865 63.9238 li
232.966 63.7236 li
233.065 63.5737 li
233.115 63.4238 li
233.216 63.2734 li
233.266 63.1235 li
233.365 63.0234 li
233.416 62.9736 li
233.516 62.8735 li
233.615 62.8237 li
233.666 62.8237 li
233.766 62.7734 li
233.815 62.7734 li
233.916 62.7734 li
233.966 62.7734 li
234.065 62.8237 li
234.166 62.8237 li
234.216 62.8735 li
234.315 62.9238 li
234.365 62.9238 li
234.466 62.9736 li
234.516 62.9736 li
234.615 62.9736 li
234.666 63.0234 li
234.766 62.9736 li
234.865 62.9736 li
234.916 62.9238 li
235.016 62.8735 li
235.065 62.8237 li
235.166 62.7236 li
235.216 62.6235 li
235.315 62.4736 li
235.416 62.3237 li
235.466 62.1738 li
235.565 61.9736 li
235.615 61.7734 li
235.716 61.5737 li
235.766 61.3237 li
235.865 61.1235 li
235.966 60.8735 li
219.666 84.6235 mo
219.716 84.5234 li
219.815 84.3735 li
219.916 84.2734 li
219.966 84.1235 li
220.065 83.9736 li
220.115 83.8237 li
220.216 83.6235 li
220.266 83.4238 li
220.365 83.2236 li
220.466 83.0234 li
220.516 82.8237 li
220.615 82.5737 li
220.666 82.3735 li
220.766 82.1235 li
220.815 81.9238 li
220.916 81.6738 li
220.966 81.4736 li
221.065 81.2236 li
221.166 81.0234 li
221.216 80.8237 li
221.315 80.6235 li
221.365 80.4736 li
221.466 80.3237 li
221.516 80.1738 li
221.615 80.0234 li
221.716 79.8735 li
221.766 79.7734 li
221.865 79.6738 li
221.916 79.6235 li
222.016 79.5737 li
222.065 79.5234 li
222.166 79.4736 li
222.266 79.4238 li
222.315 79.4238 li
222.416 79.4238 li
222.466 79.4238 li
222.565 79.4238 li
222.615 79.4238 li
222.716 79.4238 li
222.766 79.4238 li
222.865 79.4238 li
222.966 79.4238 li
223.016 79.4238 li
223.115 79.3735 li
223.166 79.3735 li
223.266 79.3237 li
223.315 79.2734 li
223.416 79.2236 li
223.516 79.1235 li
223.565 79.0234 li
223.666 78.9238 li
223.716 78.8237 li
223.815 78.6738 li
223.865 78.5234 li
223.966 78.3735 li
224.065 78.1738 li
224.115 77.9736 li
224.216 77.7734 li
224.266 77.5737 li
224.365 77.3735 li
224.416 77.1235 li
224.516 76.9238 li
224.615 76.6738 li
224.666 76.4238 li
224.766 76.2236 li
224.815 75.9736 li
224.916 75.7734 li
224.966 75.5737 li
225.065 75.3237 li
225.115 75.1738 li
225.216 74.9736 li
225.315 74.7734 li
225.365 74.6235 li
225.466 74.5234 li
225.516 74.3735 li
225.615 74.2734 li
225.666 74.1738 li
225.766 74.0737 li
225.865 74.0234 li
225.916 73.9736 li
226.016 73.9238 li
226.065 73.9238 li
226.166 73.8735 li
226.216 73.8735 li
226.315 73.8735 li
226.416 73.8735 li
226.466 73.8735 li
226.565 73.9238 li
226.615 73.9238 li
226.716 73.9238 li
226.766 73.9238 li
226.865 73.9238 li
226.916 73.9238 li
227.016 73.9238 li
227.115 73.8735 li
227.166 73.8237 li
227.266 73.7734 li
227.315 73.6738 li
227.416 73.6235 li
227.466 73.5234 li
227.565 73.3735 li
227.666 73.2734 li
227.716 73.1235 li
227.815 72.9238 li
211.516 95.9238 mo
211.615 95.8735 li
211.666 95.8237 li
211.766 95.7734 li
211.815 95.7236 li
211.916 95.6235 li
211.966 95.5737 li
212.065 95.4736 li
212.166 95.3237 li
212.216 95.1738 li
212.315 95.0737 li
212.365 94.8735 li
212.466 94.7236 li
212.516 94.5234 li
212.615 94.3237 li
212.716 94.1235 li
212.766 93.9238 li
212.865 93.7236 li
212.916 93.4736 li
213.016 93.2734 li
213.065 93.0234 li
213.166 92.8237 li
213.216 92.5737 li
213.315 92.3735 li
213.416 92.1738 li
213.466 91.9736 li
213.565 91.7734 li
213.615 91.6235 li
213.716 91.4238 li
213.766 91.2734 li
213.865 91.1235 li
213.966 91.0234 li
214.016 90.8735 li
214.115 90.8237 li
214.166 90.7236 li
214.266 90.6235 li
214.315 90.5737 li
214.416 90.5234 li
214.516 90.5234 li
214.565 90.4736 li
214.666 90.4736 li
214.716 90.4736 li
214.815 90.4238 li
214.865 90.4238 li
214.966 90.4238 li
215.016 90.4238 li
215.115 90.4238 li
215.216 90.4238 li
215.266 90.4238 li
215.365 90.4238 li
215.416 90.3735 li
215.516 90.3237 li
215.565 90.2734 li
215.666 90.2236 li
215.766 90.1738 li
215.815 90.0737 li
215.916 89.9736 li
215.966 89.8735 li
216.065 89.7236 li
216.115 89.5737 li
216.216 89.4238 li
216.315 89.2734 li
216.365 89.0737 li
216.466 88.8735 li
216.516 88.6738 li
216.615 88.4736 li
216.666 88.2734 li
216.766 88.0234 li
216.815 87.8237 li
216.916 87.5737 li
217.016 87.3735 li
217.065 87.1235 li
217.166 86.9238 li
217.216 86.7236 li
217.315 86.5239 li
217.365 86.3237 li
217.466 86.1235 li
217.565 85.9736 li
217.615 85.7739 li
217.716 85.6738 li
217.766 85.5239 li
217.865 85.4238 li
217.916 85.3237 li
218.016 85.2236 li
218.115 85.1235 li
218.166 85.0737 li
218.266 85.0239 li
218.315 84.9736 li
218.416 84.9736 li
218.466 84.9238 li
218.565 84.9238 li
218.666 84.9238 li
218.716 84.9238 li
218.815 84.9238 li
218.865 84.9238 li
218.966 84.9238 li
219.016 84.9238 li
219.115 84.9238 li
219.166 84.9238 li
219.266 84.8735 li
219.365 84.8735 li
219.416 84.8237 li
219.516 84.7739 li
219.565 84.6738 li
219.666 84.6235 li
203.365 106.974 mo
203.466 106.974 li
203.516 106.974 li
203.615 106.974 li
203.666 106.974 li
203.766 106.974 li
203.865 106.923 li
203.916 106.923 li
204.016 106.875 li
204.065 106.824 li
204.166 106.724 li
204.216 106.673 li
204.315 106.574 li
204.416 106.423 li
204.466 106.324 li
204.565 106.173 li
204.615 106.023 li
204.716 105.875 li
204.766 105.673 li
204.865 105.474 li
204.916 105.273 li
205.016 105.074 li
205.115 104.824 li
205.166 104.625 li
205.266 104.375 li
205.315 104.173 li
205.416 103.923 li
205.466 103.724 li
205.565 103.474 li
205.666 103.273 li
205.716 103.074 li
205.815 102.875 li
205.865 102.673 li
205.966 102.523 li
206.016 102.375 li
206.115 102.224 li
206.216 102.074 li
206.266 101.974 li
206.365 101.875 li
206.416 101.773 li
206.516 101.673 li
206.565 101.625 li
206.666 101.574 li
206.766 101.523 li
206.815 101.523 li
206.916 101.474 li
206.966 101.474 li
207.065 101.474 li
207.115 101.474 li
207.216 101.474 li
207.266 101.474 li
207.365 101.474 li
207.466 101.474 li
207.516 101.474 li
207.615 101.423 li
207.666 101.423 li
207.766 101.373 li
207.815 101.373 li
207.916 101.273 li
208.016 101.224 li
208.065 101.123 li
208.166 101.074 li
208.216 100.923 li
208.315 100.824 li
208.365 100.673 li
208.466 100.523 li
208.565 100.373 li
208.615 100.173 li
208.716 100.023 li
208.766 99.8237 li
208.865 99.5737 li
208.916 99.3726 li
209.016 99.1733 li
209.065 98.9233 li
209.166 98.7241 li
209.266 98.4741 li
209.315 98.2729 li
209.416 98.0229 li
209.466 97.8232 li
209.565 97.623 li
209.615 97.4238 li
209.716 97.2236 li
209.815 97.0732 li
209.865 96.9233 li
209.966 96.7734 li
210.016 96.6235 li
210.115 96.4736 li
210.166 96.3735 li
210.266 96.2734 li
210.365 96.2236 li
210.416 96.1235 li
210.516 96.0732 li
210.565 96.0234 li
210.666 96.0234 li
210.716 95.9736 li
210.815 95.9736 li
210.865 95.9736 li
210.966 95.9736 li
211.065 95.9736 li
211.115 95.9736 li
211.216 95.9736 li
211.266 95.9736 li
211.365 95.9233 li
211.416 95.9233 li
211.516 95.9233 li
195.216 117.974 mo
195.315 117.923 li
195.365 117.923 li
195.466 117.974 li
195.565 117.974 li
195.615 117.974 li
195.716 118.023 li
195.766 118.023 li
195.865 118.023 li
195.916 118.074 li
196.016 118.074 li
196.115 118.074 li
196.166 118.023 li
196.266 118.023 li
196.315 117.974 li
196.416 117.923 li
196.466 117.824 li
196.565 117.724 li
196.666 117.625 li
196.716 117.523 li
196.815 117.375 li
196.865 117.224 li
196.966 117.023 li
197.016 116.875 li
197.115 116.673 li
197.166 116.474 li
197.266 116.224 li
197.365 116.023 li
197.416 115.773 li
197.516 115.523 li
197.565 115.324 li
197.666 115.074 li
197.716 114.824 li
197.815 114.574 li
197.916 114.375 li
197.966 114.173 li
198.065 113.923 li
198.115 113.724 li
198.216 113.574 li
198.266 113.375 li
198.365 113.224 li
198.466 113.074 li
198.516 112.974 li
198.615 112.824 li
198.666 112.724 li
198.766 112.673 li
198.815 112.625 li
198.916 112.574 li
198.966 112.523 li
199.065 112.474 li
199.166 112.474 li
199.216 112.474 li
199.315 112.474 li
199.365 112.474 li
199.466 112.474 li
199.516 112.474 li
199.615 112.523 li
199.716 112.523 li
199.766 112.523 li
199.865 112.523 li
199.916 112.523 li
200.016 112.474 li
200.065 112.474 li
200.166 112.423 li
200.266 112.324 li
200.315 112.273 li
200.416 112.173 li
200.466 112.074 li
200.565 111.974 li
200.615 111.824 li
200.716 111.673 li
200.815 111.523 li
200.865 111.375 li
200.966 111.173 li
201.016 110.974 li
201.115 110.773 li
201.166 110.523 li
201.266 110.324 li
201.315 110.074 li
201.416 109.875 li
201.516 109.625 li
201.565 109.375 li
201.666 109.173 li
201.716 108.923 li
201.815 108.724 li
201.865 108.523 li
201.966 108.324 li
202.065 108.125 li
202.115 107.974 li
202.216 107.824 li
202.266 107.673 li
202.365 107.523 li
202.416 107.423 li
202.516 107.324 li
202.615 107.224 li
202.666 107.173 li
202.766 107.074 li
202.815 107.023 li
202.916 107.023 li
202.966 106.974 li
203.065 106.974 li
203.115 106.974 li
203.216 106.974 li
203.315 106.974 li
203.365 106.974 li
187.115 128.974 mo
187.166 128.923 li
187.266 128.875 li
187.315 128.824 li
187.416 128.824 li
187.466 128.824 li
187.565 128.824 li
187.615 128.875 li
187.716 128.875 li
187.815 128.923 li
187.865 128.974 li
187.966 129.023 li
188.016 129.074 li
188.115 129.125 li
188.166 129.173 li
188.266 129.173 li
188.365 129.224 li
188.416 129.224 li
188.516 129.224 li
188.565 129.173 li
188.666 129.125 li
188.716 129.074 li
188.815 129.023 li
188.916 128.923 li
188.966 128.824 li
189.065 128.673 li
189.115 128.523 li
189.216 128.324 li
189.266 128.125 li
189.365 127.923 li
189.416 127.724 li
189.516 127.474 li
189.615 127.224 li
189.666 126.974 li
189.766 126.724 li
189.815 126.474 li
189.916 126.224 li
189.966 125.923 li
190.065 125.673 li
190.166 125.423 li
190.216 125.173 li
190.315 124.974 li
190.365 124.724 li
190.466 124.523 li
190.516 124.324 li
190.615 124.173 li
190.716 124.023 li
190.766 123.875 li
190.865 123.724 li
190.916 123.625 li
191.016 123.574 li
191.065 123.474 li
191.166 123.474 li
191.216 123.423 li
191.315 123.423 li
191.416 123.375 li
191.466 123.423 li
191.565 123.423 li
191.615 123.423 li
191.716 123.474 li
191.766 123.523 li
191.865 123.523 li
191.966 123.574 li
192.016 123.574 li
192.115 123.625 li
192.166 123.625 li
192.266 123.625 li
192.315 123.625 li
192.416 123.574 li
192.516 123.523 li
192.565 123.474 li
192.666 123.423 li
192.716 123.324 li
192.815 123.173 li
192.865 123.074 li
192.966 122.923 li
193.065 122.773 li
193.115 122.574 li
193.216 122.375 li
193.266 122.173 li
193.365 121.974 li
193.416 121.724 li
193.516 121.474 li
193.565 121.273 li
193.666 121.023 li
193.766 120.773 li
193.815 120.523 li
193.916 120.273 li
193.966 120.023 li
194.065 119.773 li
194.115 119.574 li
194.216 119.324 li
194.315 119.125 li
194.365 118.974 li
194.466 118.773 li
194.516 118.625 li
194.615 118.474 li
194.666 118.375 li
194.766 118.273 li
194.865 118.173 li
194.916 118.074 li
195.016 118.023 li
195.065 117.974 li
195.166 117.974 li
195.216 117.974 li
178.966 140.324 mo
179.016 140.074 li
179.115 139.923 li
179.166 139.724 li
179.266 139.625 li
179.315 139.523 li
179.416 139.423 li
179.516 139.423 li
179.565 139.375 li
179.666 139.423 li
179.716 139.423 li
179.815 139.474 li
179.865 139.574 li
179.966 139.673 li
180.065 139.773 li
180.115 139.875 li
180.216 139.974 li
180.266 140.074 li
180.365 140.173 li
180.416 140.273 li
180.516 140.375 li
180.615 140.474 li
180.666 140.523 li
180.766 140.574 li
180.815 140.574 li
180.916 140.574 li
180.966 140.574 li
181.065 140.523 li
181.166 140.423 li
181.216 140.324 li
181.315 140.173 li
181.365 140.023 li
181.466 139.824 li
181.516 139.625 li
181.615 139.423 li
181.666 139.173 li
181.766 138.875 li
181.865 138.625 li
181.916 138.324 li
182.016 138.023 li
182.065 137.673 li
182.166 137.375 li
182.216 137.074 li
182.315 136.773 li
182.416 136.423 li
182.466 136.173 li
182.565 135.875 li
182.615 135.625 li
182.716 135.375 li
182.766 135.125 li
182.865 134.923 li
182.966 134.773 li
183.016 134.574 li
183.115 134.474 li
183.166 134.375 li
183.266 134.273 li
183.315 134.224 li
183.416 134.173 li
183.466 134.173 li
183.565 134.173 li
183.666 134.173 li
183.716 134.224 li
183.815 134.273 li
183.865 134.324 li
183.966 134.423 li
184.016 134.474 li
184.115 134.523 li
184.216 134.625 li
184.266 134.673 li
184.365 134.724 li
184.416 134.773 li
184.516 134.824 li
184.565 134.875 li
184.666 134.875 li
184.766 134.824 li
184.815 134.824 li
184.916 134.773 li
184.966 134.673 li
185.065 134.574 li
185.115 134.474 li
185.216 134.324 li
185.266 134.125 li
185.365 133.974 li
185.466 133.724 li
185.516 133.523 li
185.615 133.273 li
185.666 133.023 li
185.766 132.773 li
185.815 132.474 li
185.916 132.224 li
186.016 131.923 li
186.065 131.625 li
186.166 131.375 li
186.216 131.074 li
186.315 130.824 li
186.365 130.574 li
186.466 130.324 li
186.565 130.074 li
186.615 129.875 li
186.716 129.673 li
186.766 129.474 li
186.865 129.324 li
186.916 129.173 li
187.016 129.074 li
187.115 128.974 li
170.815 152.474 mo
170.865 151.923 li
170.966 151.375 li
171.065 150.875 li
171.115 150.423 li
171.216 150.023 li
171.266 149.673 li
171.365 149.375 li
171.416 149.173 li
171.516 148.974 li
171.565 148.875 li
171.666 148.824 li
171.766 148.824 li
171.815 148.875 li
171.916 148.974 li
171.966 149.125 li
172.065 149.324 li
172.115 149.523 li
172.216 149.773 li
172.315 150.074 li
172.365 150.324 li
172.466 150.625 li
172.516 150.923 li
172.615 151.224 li
172.666 151.523 li
172.766 151.773 li
172.865 152.023 li
172.916 152.224 li
173.016 152.423 li
173.065 152.574 li
173.166 152.673 li
173.216 152.724 li
173.315 152.724 li
173.365 152.673 li
173.466 152.625 li
173.565 152.474 li
173.615 152.324 li
173.716 152.074 li
173.766 151.824 li
173.865 151.523 li
173.916 151.224 li
174.016 150.824 li
174.115 150.423 li
174.166 150.023 li
174.266 149.574 li
174.315 149.173 li
174.416 148.724 li
174.466 148.273 li
174.565 147.824 li
174.666 147.375 li
174.716 146.974 li
174.815 146.574 li
174.865 146.173 li
174.966 145.875 li
175.016 145.523 li
175.115 145.273 li
175.216 145.023 li
175.266 144.824 li
175.365 144.673 li
175.416 144.523 li
175.516 144.423 li
175.565 144.375 li
175.666 144.375 li
175.716 144.423 li
175.815 144.474 li
175.916 144.574 li
175.966 144.673 li
176.065 144.824 li
176.115 144.974 li
176.216 145.125 li
176.266 145.273 li
176.365 145.474 li
176.466 145.625 li
176.516 145.824 li
176.615 145.974 li
176.666 146.125 li
176.766 146.224 li
176.815 146.324 li
176.916 146.423 li
177.016 146.474 li
177.065 146.474 li
177.166 146.474 li
177.216 146.423 li
177.315 146.324 li
177.365 146.224 li
177.466 146.074 li
177.516 145.923 li
177.615 145.673 li
177.716 145.474 li
177.766 145.173 li
177.865 144.875 li
177.916 144.574 li
178.016 144.224 li
178.065 143.875 li
178.166 143.523 li
178.266 143.173 li
178.315 142.824 li
178.416 142.474 li
178.466 142.125 li
178.565 141.773 li
178.615 141.423 li
178.716 141.125 li
178.815 140.824 li
178.865 140.574 li
178.966 140.324 li
162.666 24.9736 mo
162.766 27.8735 li
162.815 31.0234 li
162.916 34.5234 li
162.966 38.2734 li
163.065 42.3237 li
163.115 46.6235 li
163.216 51.2236 li
163.315 55.9736 li
163.365 60.9238 li
163.466 66.0737 li
163.516 71.3735 li
163.615 76.7734 li
163.666 82.2734 li
163.766 87.8735 li
163.815 93.4238 li
163.916 99.0229 li
164.016 104.574 li
164.065 110.074 li
164.166 115.474 li
164.216 120.773 li
164.315 125.923 li
164.365 130.875 li
164.466 135.625 li
164.565 140.125 li
164.615 144.423 li
164.716 148.474 li
164.766 152.224 li
164.865 155.673 li
164.916 158.824 li
165.016 161.673 li
165.115 164.173 li
165.166 166.375 li
165.266 168.273 li
165.315 169.875 li
165.416 171.125 li
165.466 172.125 li
165.565 172.824 li
165.615 173.224 li
165.716 173.375 li
165.815 173.273 li
165.865 172.974 li
165.966 172.474 li
166.016 171.773 li
166.115 170.875 li
166.166 169.875 li
166.266 168.773 li
166.365 167.574 li
166.416 166.324 li
166.516 164.974 li
166.565 163.625 li
166.666 162.273 li
166.716 160.923 li
166.815 159.625 li
166.916 158.375 li
166.966 157.224 li
167.065 156.125 li
167.115 155.074 li
167.216 154.173 li
167.266 153.373 li
167.365 152.673 li
167.416 152.125 li
167.516 151.673 li
167.615 151.375 li
167.666 151.173 li
167.766 151.074 li
167.815 151.125 li
167.916 151.273 li
167.966 151.474 li
168.065 151.824 li
168.166 152.224 li
168.216 152.673 li
168.315 153.224 li
168.365 153.773 li
168.466 154.375 li
168.516 154.974 li
168.615 155.625 li
168.716 156.224 li
168.766 156.824 li
168.865 157.423 li
168.916 157.923 li
169.016 158.423 li
169.065 158.875 li
169.166 159.224 li
169.266 159.523 li
169.315 159.773 li
169.416 159.923 li
169.466 159.974 li
169.565 159.974 li
169.615 159.923 li
169.716 159.724 li
169.766 159.523 li
169.865 159.224 li
169.966 158.824 li
170.016 158.423 li
170.115 157.923 li
170.166 157.375 li
170.266 156.824 li
170.315 156.224 li
170.416 155.625 li
170.516 154.974 li
170.565 154.324 li
170.666 153.724 li
170.716 153.074 li
170.815 152.474 li
154.516 33.7236 mo
154.615 33.8735 li
154.666 34.0234 li
154.766 34.1738 li
154.815 34.4238 li
154.916 34.6235 li
155.016 34.9238 li
155.065 35.1738 li
155.166 35.4736 li
155.216 35.7734 li
155.315 36.0737 li
155.365 36.3735 li
155.466 36.6235 li
155.516 36.8735 li
155.615 37.1235 li
155.716 37.2734 li
155.766 37.4238 li
155.865 37.5234 li
155.916 37.5737 li
156.016 37.5737 li
156.065 37.5234 li
156.166 37.3735 li
156.266 37.2236 li
156.315 36.9736 li
156.416 36.6738 li
156.466 36.3237 li
156.565 35.9238 li
156.615 35.4736 li
156.716 34.9736 li
156.815 34.4238 li
156.865 33.8735 li
156.966 33.2734 li
157.016 32.6235 li
157.115 32.0234 li
157.166 31.3735 li
157.266 30.7236 li
157.365 30.1235 li
157.416 29.5234 li
157.516 28.9736 li
157.565 28.4238 li
157.666 27.9736 li
157.716 27.5234 li
157.815 27.1738 li
157.865 26.8735 li
157.966 26.6235 li
158.065 26.4736 li
158.115 26.4238 li
158.216 26.4238 li
158.266 26.4736 li
158.365 26.6738 li
158.416 26.8735 li
158.516 27.2236 li
158.615 27.5737 li
158.666 28.0234 li
158.766 28.5234 li
158.815 29.0234 li
158.916 29.6235 li
158.966 30.2236 li
159.065 30.8237 li
159.166 31.4736 li
159.216 32.0737 li
159.315 32.6738 li
159.365 33.2236 li
159.466 33.7734 li
159.516 34.2236 li
159.615 34.6235 li
159.666 34.9238 li
159.766 35.1738 li
159.865 35.2734 li
159.916 35.3237 li
160.016 35.2236 li
160.065 35.0234 li
160.166 34.6738 li
160.216 34.2236 li
160.315 33.6235 li
160.416 32.9736 li
160.466 32.1235 li
160.565 31.2236 li
160.615 30.2236 li
160.716 29.0737 li
160.766 27.8735 li
160.865 26.6235 li
160.966 25.3237 li
161.016 24.0234 li
161.115 22.6235 li
161.166 21.3237 li
161.266 19.9736 li
161.315 18.7236 li
161.416 17.5234 li
161.466 16.4238 li
161.565 15.4238 li
161.666 14.5737 li
161.716 13.8735 li
161.815 13.3735 li
161.865 13.0737 li
161.966 13.0234 li
162.016 13.2236 li
162.115 13.6235 li
162.216 14.3735 li
162.266 15.3735 li
162.365 16.6738 li
162.416 18.2734 li
162.516 20.1738 li
162.565 22.4238 li
162.666 24.9736 li
146.365 46.1738 mo
146.466 46.0737 li
146.516 45.9736 li
146.615 45.8735 li
146.716 45.8237 li
146.766 45.8237 li
146.865 45.8237 li
146.916 45.8237 li
147.016 45.8735 li
147.065 45.9238 li
147.166 46.0234 li
147.266 46.1235 li
147.315 46.2236 li
147.416 46.3237 li
147.466 46.4238 li
147.565 46.5234 li
147.615 46.6738 li
147.716 46.7734 li
147.766 46.8237 li
147.865 46.9238 li
147.966 46.9736 li
148.016 47.0234 li
148.115 47.0234 li
148.166 46.9736 li
148.266 46.9736 li
148.315 46.8735 li
148.416 46.7734 li
148.516 46.6235 li
148.565 46.4736 li
148.666 46.2734 li
148.716 46.0737 li
148.815 45.8237 li
148.865 45.5737 li
148.966 45.2734 li
149.065 44.9238 li
149.115 44.6235 li
149.216 44.2734 li
149.266 43.9238 li
149.365 43.5234 li
149.416 43.1738 li
149.516 42.8237 li
149.615 42.4736 li
149.666 42.1235 li
149.766 41.7734 li
149.815 41.4736 li
149.916 41.1738 li
149.966 40.9238 li
150.065 40.6738 li
150.115 40.4736 li
150.216 40.2734 li
150.315 40.1738 li
150.365 40.0234 li
150.466 39.9736 li
150.516 39.9238 li
150.615 39.9238 li
150.666 39.9238 li
150.766 39.9736 li
150.865 40.0737 li
150.916 40.1738 li
151.016 40.3237 li
151.065 40.4238 li
151.166 40.6235 li
151.216 40.7734 li
151.315 40.9238 li
151.416 41.1235 li
151.466 41.2734 li
151.565 41.4736 li
151.615 41.6235 li
151.716 41.7236 li
151.766 41.8237 li
151.865 41.9238 li
151.916 41.9736 li
152.016 42.0234 li
152.115 41.9736 li
152.166 41.9238 li
152.266 41.8735 li
152.315 41.7236 li
152.416 41.5737 li
152.466 41.3735 li
152.565 41.1235 li
152.666 40.8237 li
152.716 40.5234 li
152.815 40.1738 li
152.865 39.7734 li
152.966 39.4238 li
153.016 38.9736 li
153.115 38.5234 li
153.216 38.1235 li
153.266 37.6738 li
153.365 37.2236 li
153.416 36.7734 li
153.516 36.3237 li
153.565 35.9238 li
153.666 35.5234 li
153.716 35.1738 li
153.815 34.8237 li
153.916 34.5234 li
153.966 34.2734 li
154.065 34.0737 li
154.115 33.8735 li
154.216 33.7734 li
154.266 33.6738 li
154.365 33.6738 li
154.466 33.6738 li
154.516 33.7236 li
138.216 58.6738 mo
138.315 58.4238 li
138.416 58.2236 li
138.466 58.0234 li
138.565 57.8735 li
138.615 57.7236 li
138.716 57.5737 li
138.766 57.4736 li
138.865 57.3735 li
138.966 57.3237 li
139.016 57.2236 li
139.115 57.2236 li
139.166 57.1738 li
139.266 57.1738 li
139.315 57.1738 li
139.416 57.2236 li
139.516 57.2236 li
139.565 57.2734 li
139.666 57.3237 li
139.716 57.3735 li
139.815 57.4238 li
139.865 57.4736 li
139.966 57.5234 li
140.016 57.5737 li
140.115 57.5737 li
140.216 57.5737 li
140.266 57.5737 li
140.365 57.5737 li
140.416 57.5234 li
140.516 57.4736 li
140.565 57.4238 li
140.666 57.3237 li
140.766 57.1738 li
140.815 57.0737 li
140.916 56.8735 li
140.966 56.7236 li
141.065 56.5234 li
141.115 56.3237 li
141.216 56.0737 li
141.315 55.8237 li
141.365 55.5737 li
141.466 55.2734 li
141.516 55.0234 li
141.615 54.7236 li
141.666 54.4736 li
141.766 54.1738 li
141.815 53.8735 li
141.916 53.6235 li
142.016 53.3735 li
142.065 53.0737 li
142.166 52.8735 li
142.216 52.6235 li
142.315 52.4233 li
142.365 52.2236 li
142.466 52.0737 li
142.565 51.9238 li
142.615 51.8237 li
142.716 51.7236 li
142.766 51.6235 li
142.865 51.5737 li
142.916 51.5737 li
143.016 51.5234 li
143.115 51.5234 li
143.166 51.5737 li
143.266 51.6235 li
143.315 51.6733 li
143.416 51.7236 li
143.466 51.7734 li
143.565 51.8735 li
143.666 51.9233 li
143.716 52.0234 li
143.815 52.0737 li
143.865 52.1235 li
143.966 52.1733 li
144.016 52.2236 li
144.115 52.2236 li
144.166 52.2236 li
144.266 52.2236 li
144.365 52.1733 li
144.416 52.1235 li
144.516 52.0234 li
144.565 51.9233 li
144.666 51.7734 li
144.716 51.6235 li
144.815 51.4233 li
144.916 51.2236 li
144.966 51.0234 li
145.065 50.7734 li
145.115 50.4736 li
145.216 50.2236 li
145.266 49.9233 li
145.365 49.6235 li
145.466 49.3237 li
145.516 48.9736 li
145.615 48.6733 li
145.666 48.3735 li
145.766 48.0737 li
145.815 47.7734 li
145.916 47.4736 li
145.966 47.2236 li
146.065 46.9736 li
146.166 46.7236 li
146.216 46.5234 li
146.315 46.3735 li
146.365 46.1733 li
130.115 71.0737 mo
130.166 70.8237 li
130.266 70.5737 li
130.315 70.3735 li
130.416 70.1235 li
130.466 69.9238 li
130.565 69.7236 li
130.666 69.5234 li
130.716 69.3237 li
130.815 69.1738 li
130.865 69.0234 li
130.966 68.8735 li
131.016 68.7734 li
131.115 68.6738 li
131.216 68.5737 li
131.266 68.4736 li
131.365 68.4238 li
131.416 68.3735 li
131.516 68.3735 li
131.565 68.3237 li
131.666 68.3237 li
131.766 68.3237 li
131.815 68.3735 li
131.916 68.3735 li
131.966 68.3735 li
132.065 68.4238 li
132.115 68.4238 li
132.216 68.4238 li
132.266 68.4736 li
132.365 68.4736 li
132.466 68.4238 li
132.516 68.4238 li
132.615 68.4238 li
132.666 68.3735 li
132.766 68.2734 li
132.815 68.2236 li
132.916 68.1235 li
133.016 68.0234 li
133.065 67.8735 li
133.166 67.7734 li
133.216 67.5737 li
133.315 67.4238 li
133.365 67.2236 li
133.466 67.0234 li
133.565 66.8237 li
133.615 66.5737 li
133.716 66.3735 li
133.766 66.1235 li
133.865 65.8735 li
133.916 65.6235 li
134.016 65.3735 li
134.065 65.1235 li
134.166 64.8735 li
134.266 64.6235 li
134.315 64.4238 li
134.416 64.1738 li
134.466 63.9736 li
134.565 63.8237 li
134.615 63.6235 li
134.716 63.4736 li
134.815 63.3237 li
134.865 63.1738 li
134.966 63.0737 li
135.016 62.9736 li
135.115 62.9238 li
135.166 62.8735 li
135.266 62.8237 li
135.365 62.7734 li
135.416 62.7734 li
135.516 62.7734 li
135.565 62.7734 li
135.666 62.8237 li
135.716 62.8237 li
135.815 62.8735 li
135.865 62.8735 li
135.966 62.9238 li
136.065 62.9736 li
136.115 62.9736 li
136.216 62.9736 li
136.266 63.0234 li
136.365 62.9736 li
136.416 62.9736 li
136.516 62.9238 li
136.615 62.8735 li
136.666 62.8237 li
136.766 62.7236 li
136.815 62.6235 li
136.916 62.5234 li
136.966 62.3735 li
137.065 62.2236 li
137.166 62.0234 li
137.216 61.8735 li
137.315 61.6235 li
137.365 61.4238 li
137.466 61.1738 li
137.516 60.9238 li
137.615 60.6738 li
137.716 60.4238 li
137.766 60.1738 li
137.865 59.9233 li
137.916 59.6235 li
138.016 59.3735 li
138.065 59.1235 li
138.166 58.8735 li
138.216 58.6733 li
121.966 83.3237 mo
122.016 83.0737 li
122.116 82.8735 li
122.166 82.6738 li
122.266 82.4238 li
122.366 82.2236 li
122.416 81.9736 li
122.516 81.7734 li
122.565 81.5234 li
122.666 81.3237 li
122.716 81.1235 li
122.815 80.9238 li
122.916 80.7236 li
122.966 80.5234 li
123.065 80.3735 li
123.116 80.2236 li
123.216 80.0737 li
123.266 79.9238 li
123.366 79.8237 li
123.466 79.7236 li
123.516 79.6235 li
123.616 79.5737 li
123.666 79.5234 li
123.766 79.4736 li
123.815 79.4238 li
123.916 79.4238 li
123.966 79.4238 li
124.065 79.4238 li
124.166 79.4238 li
124.216 79.4238 li
124.315 79.4238 li
124.366 79.4238 li
124.466 79.4238 li
124.516 79.4238 li
124.616 79.4238 li
124.716 79.4238 li
124.766 79.3735 li
124.866 79.3237 li
124.916 79.3237 li
125.016 79.2236 li
125.065 79.1738 li
125.166 79.0737 li
125.266 78.9736 li
125.315 78.8735 li
125.416 78.7236 li
125.466 78.5737 li
125.565 78.4238 li
125.616 78.2734 li
125.716 78.0737 li
125.815 77.8735 li
125.866 77.6738 li
125.966 77.4238 li
126.016 77.2236 li
126.116 76.9736 li
126.166 76.7734 li
126.266 76.5234 li
126.315 76.2734 li
126.416 76.0737 li
126.516 75.8237 li
126.565 75.6235 li
126.666 75.4238 li
126.716 75.2236 li
126.815 75.0234 li
126.866 74.8735 li
126.966 74.6738 li
127.065 74.5737 li
127.116 74.4238 li
127.216 74.3237 li
127.266 74.2236 li
127.366 74.1235 li
127.416 74.0234 li
127.516 73.9736 li
127.616 73.9238 li
127.666 73.9238 li
127.766 73.8735 li
127.815 73.8735 li
127.916 73.8735 li
127.966 73.8735 li
128.065 73.8735 li
128.116 73.9238 li
128.216 73.9238 li
128.315 73.9238 li
128.366 73.9238 li
128.466 73.9238 li
128.516 73.9238 li
128.616 73.9238 li
128.666 73.8735 li
128.766 73.8237 li
128.866 73.7734 li
128.916 73.7236 li
129.016 73.6235 li
129.065 73.5234 li
129.166 73.4238 li
129.216 73.3237 li
129.315 73.1738 li
129.416 73.0234 li
129.466 72.8237 li
129.565 72.6235 li
129.616 72.4238 li
129.716 72.2236 li
129.766 72.0234 li
129.865 71.7734 li
129.916 71.5234 li
130.016 71.3237 li
130.115 71.0737 li
113.815 95.2236 mo
113.916 95.1235 li
113.966 94.9238 li
114.065 94.7734 li
114.116 94.5737 li
114.216 94.4238 li
114.266 94.2236 li
114.366 93.9736 li
114.416 93.7734 li
114.516 93.5737 li
114.616 93.3237 li
114.666 93.1235 li
114.766 92.8735 li
114.815 92.6738 li
114.916 92.4736 li
114.966 92.2236 li
115.065 92.0234 li
115.166 91.8735 li
115.216 91.6738 li
115.315 91.4736 li
115.366 91.3237 li
115.466 91.1738 li
115.516 91.0737 li
115.616 90.9238 li
115.716 90.8237 li
115.766 90.7236 li
115.866 90.6738 li
115.916 90.6235 li
116.016 90.5737 li
116.065 90.5234 li
116.166 90.4736 li
116.216 90.4736 li
116.315 90.4736 li
116.416 90.4238 li
116.466 90.4238 li
116.565 90.4238 li
116.616 90.4238 li
116.716 90.4238 li
116.766 90.4238 li
116.866 90.4238 li
116.966 90.4238 li
117.016 90.3735 li
117.116 90.3735 li
117.166 90.3237 li
117.266 90.2734 li
117.315 90.1738 li
117.416 90.1235 li
117.516 90.0234 li
117.565 89.8735 li
117.666 89.7734 li
117.716 89.6235 li
117.815 89.4736 li
117.866 89.3237 li
117.966 89.1235 li
118.016 88.9736 li
118.116 88.7734 li
118.216 88.5234 li
118.266 88.3237 li
118.366 88.1235 li
118.416 87.8735 li
118.516 87.6738 li
118.565 87.4238 li
118.666 87.2236 li
118.766 86.9736 li
118.815 86.7734 li
118.916 86.5737 li
118.966 86.3735 li
119.065 86.1738 li
119.116 86.0234 li
119.216 85.8735 li
119.315 85.7236 li
119.366 85.5737 li
119.466 85.4238 li
119.516 85.3237 li
119.616 85.2236 li
119.666 85.1738 li
119.766 85.0737 li
119.866 85.0234 li
119.916 85.0234 li
120.016 84.9736 li
120.065 84.9736 li
120.166 84.9238 li
120.216 84.9238 li
120.315 84.9238 li
120.366 84.9238 li
120.466 84.9238 li
120.565 84.9238 li
120.616 84.9238 li
120.716 84.9238 li
120.766 84.9238 li
120.866 84.8735 li
120.916 84.8735 li
121.016 84.8237 li
121.116 84.7739 li
121.166 84.7236 li
121.266 84.6235 li
121.315 84.5234 li
121.416 84.4238 li
121.466 84.3237 li
121.565 84.1738 li
121.666 84.0234 li
121.716 83.8735 li
121.815 83.6738 li
121.866 83.5234 li
121.966 83.3237 li
105.666 106.824 mo
105.766 106.773 li
105.815 106.673 li
105.916 106.625 li
105.966 106.474 li
106.065 106.375 li
106.116 106.224 li
106.216 106.074 li
106.315 105.923 li
106.366 105.724 li
106.466 105.523 li
106.516 105.324 li
106.616 105.125 li
106.666 104.923 li
106.766 104.724 li
106.866 104.474 li
106.916 104.273 li
107.016 104.023 li
107.065 103.773 li
107.166 103.574 li
107.216 103.375 li
107.315 103.173 li
107.416 102.974 li
107.466 102.773 li
107.565 102.574 li
107.616 102.423 li
107.716 102.273 li
107.766 102.123 li
107.866 101.974 li
107.966 101.873 li
108.016 101.773 li
108.116 101.724 li
108.166 101.625 li
108.266 101.574 li
108.315 101.523 li
108.416 101.523 li
108.466 101.474 li
108.565 101.474 li
108.666 101.474 li
108.716 101.474 li
108.815 101.474 li
108.866 101.474 li
108.966 101.474 li
109.016 101.474 li
109.116 101.474 li
109.216 101.474 li
109.266 101.423 li
109.366 101.423 li
109.416 101.373 li
109.516 101.324 li
109.565 101.273 li
109.666 101.173 li
109.766 101.074 li
109.815 100.974 li
109.916 100.873 li
109.966 100.724 li
110.065 100.574 li
110.116 100.423 li
110.216 100.273 li
110.266 100.074 li
110.366 99.8726 li
110.466 99.6733 li
110.516 99.4741 li
110.616 99.2241 li
110.666 99.0229 li
110.766 98.7729 li
110.815 98.5737 li
110.916 98.3237 li
111.016 98.1226 li
111.065 97.9238 li
111.166 97.7236 li
111.216 97.5234 li
111.315 97.3232 li
111.366 97.1235 li
111.466 96.9736 li
111.565 96.8232 li
111.616 96.6733 li
111.716 96.5234 li
111.766 96.4233 li
111.866 96.3232 li
111.916 96.2236 li
112.016 96.1733 li
112.065 96.1235 li
112.166 96.0732 li
112.266 96.0234 li
112.315 95.9736 li
112.416 95.9736 li
112.466 95.9736 li
112.565 95.9736 li
112.616 95.9736 li
112.716 95.9736 li
112.816 95.9736 li
112.866 95.9736 li
112.966 95.9233 li
113.016 95.9233 li
113.116 95.9233 li
113.166 95.8735 li
113.266 95.8735 li
113.366 95.8232 li
113.416 95.7734 li
113.516 95.6733 li
113.566 95.5732 li
113.666 95.4736 li
113.716 95.3735 li
113.816 95.2236 li
97.5156 118.074 mo
97.6157 118.074 li
97.6655 118.074 li
97.7656 118.023 li
97.8657 118.023 li
97.9155 117.974 li
98.0156 117.923 li
98.0654 117.875 li
98.1655 117.773 li
98.2158 117.673 li
98.3154 117.574 li
98.3657 117.423 li
98.4658 117.273 li
98.5654 117.125 li
98.6157 116.923 li
98.7158 116.724 li
98.7656 116.523 li
98.8657 116.324 li
98.9155 116.074 li
99.0156 115.875 li
99.1157 115.625 li
99.1655 115.375 li
99.2656 115.173 li
99.3154 114.923 li
99.4155 114.673 li
99.4658 114.474 li
99.5654 114.224 li
99.6655 114.023 li
99.7158 113.824 li
99.8154 113.625 li
99.8657 113.423 li
99.9658 113.273 li
100.016 113.125 li
100.116 112.974 li
100.216 112.875 li
100.266 112.773 li
100.366 112.673 li
100.416 112.625 li
100.516 112.574 li
100.565 112.523 li
100.666 112.474 li
100.716 112.474 li
100.815 112.474 li
100.916 112.474 li
100.966 112.474 li
101.065 112.474 li
101.116 112.474 li
101.216 112.523 li
101.266 112.523 li
101.366 112.523 li
101.466 112.523 li
101.516 112.523 li
101.616 112.474 li
101.666 112.474 li
101.766 112.423 li
101.815 112.373 li
101.916 112.324 li
102.016 112.224 li
102.065 112.123 li
102.166 112.023 li
102.216 111.875 li
102.315 111.724 li
102.366 111.574 li
102.466 111.423 li
102.516 111.224 li
102.616 111.023 li
102.716 110.824 li
102.766 110.623 li
102.866 110.373 li
102.916 110.173 li
103.016 109.923 li
103.065 109.724 li
103.166 109.474 li
103.266 109.224 li
103.315 109.023 li
103.416 108.824 li
103.466 108.574 li
103.565 108.373 li
103.616 108.173 li
103.716 108.023 li
103.815 107.873 li
103.866 107.724 li
103.966 107.574 li
104.016 107.423 li
104.116 107.324 li
104.166 107.273 li
104.266 107.173 li
104.315 107.123 li
104.416 107.074 li
104.516 107.023 li
104.565 106.974 li
104.666 106.974 li
104.716 106.974 li
104.815 106.974 li
104.866 106.974 li
104.966 106.974 li
105.065 106.974 li
105.116 106.974 li
105.216 106.974 li
105.266 106.974 li
105.366 106.974 li
105.416 106.974 li
105.516 106.923 li
105.616 106.873 li
105.666 106.824 li
89.3657 128.923 mo
89.4658 128.974 li
89.5654 129.023 li
89.6157 129.074 li
89.7158 129.074 li
89.7656 129.125 li
89.8657 129.173 li
89.9155 129.224 li
90.0156 129.224 li
90.1157 129.224 li
90.1655 129.173 li
90.2656 129.173 li
90.3154 129.125 li
90.4155 129.023 li
90.4658 128.974 li
90.5654 128.824 li
90.6157 128.724 li
90.7158 128.574 li
90.8154 128.423 li
90.8657 128.224 li
90.9658 128.023 li
91.0156 127.773 li
91.1157 127.574 li
91.1655 127.324 li
91.2656 127.074 li
91.3657 126.824 li
91.4155 126.574 li
91.5156 126.273 li
91.5654 126.023 li
91.6655 125.773 li
91.7158 125.523 li
91.8154 125.273 li
91.9155 125.023 li
91.9658 124.824 li
92.0654 124.574 li
92.1157 124.423 li
92.2158 124.224 li
92.2656 124.074 li
92.3657 123.923 li
92.4155 123.773 li
92.5156 123.673 li
92.6157 123.574 li
92.6655 123.523 li
92.7656 123.474 li
92.8154 123.423 li
92.9155 123.423 li
92.9658 123.375 li
93.0654 123.423 li
93.1655 123.423 li
93.2158 123.423 li
93.3154 123.474 li
93.3657 123.474 li
93.4658 123.523 li
93.5156 123.574 li
93.6157 123.574 li
93.7158 123.625 li
93.7656 123.625 li
93.8657 123.625 li
93.9155 123.625 li
94.0156 123.574 li
94.0654 123.574 li
94.1655 123.523 li
94.2656 123.423 li
94.3154 123.324 li
94.4155 123.224 li
94.4658 123.125 li
94.5654 122.974 li
94.6157 122.824 li
94.7158 122.625 li
94.7656 122.474 li
94.8657 122.273 li
94.9658 122.023 li
95.0156 121.824 li
95.1157 121.574 li
95.1655 121.324 li
95.2656 121.074 li
95.3154 120.824 li
95.4155 120.574 li
95.5156 120.375 li
95.5654 120.125 li
95.6655 119.875 li
95.7158 119.625 li
95.8154 119.423 li
95.8657 119.224 li
95.9658 119.023 li
96.0654 118.824 li
96.1157 118.673 li
96.2158 118.523 li
96.2656 118.423 li
96.3657 118.273 li
96.4155 118.173 li
96.5156 118.125 li
96.5654 118.074 li
96.6655 118.023 li
96.7656 117.974 li
96.8154 117.974 li
96.9155 117.923 li
96.9658 117.923 li
97.0654 117.974 li
97.1157 117.974 li
97.2158 117.974 li
97.3159 118.023 li
97.3657 118.023 li
97.4658 118.023 li
97.5156 118.074 li
81.2656 139.375 mo
81.3154 139.423 li
81.4155 139.474 li
81.4658 139.523 li
81.5654 139.625 li
81.6157 139.724 li
81.7158 139.824 li
81.8154 139.923 li
81.8657 140.023 li
81.9658 140.173 li
82.0156 140.273 li
82.1157 140.375 li
82.1655 140.423 li
82.2656 140.523 li
82.3657 140.574 li
82.4155 140.574 li
82.5156 140.574 li
82.5654 140.574 li
82.6655 140.523 li
82.7158 140.474 li
82.8154 140.375 li
82.8657 140.224 li
82.9658 140.074 li
83.0654 139.923 li
83.1157 139.724 li
83.2158 139.474 li
83.2656 139.273 li
83.3657 138.974 li
83.4155 138.724 li
83.5156 138.423 li
83.6157 138.125 li
83.6655 137.824 li
83.7656 137.474 li
83.8154 137.173 li
83.9155 136.875 li
83.9658 136.574 li
84.0654 136.273 li
84.1655 135.974 li
84.2158 135.724 li
84.3154 135.474 li
84.3657 135.224 li
84.4658 135.023 li
84.5156 134.824 li
84.6157 134.673 li
84.6655 134.523 li
84.7656 134.375 li
84.8657 134.273 li
84.9155 134.224 li
85.0156 134.173 li
85.0654 134.173 li
85.1655 134.173 li
85.2158 134.173 li
85.3154 134.224 li
85.4155 134.273 li
85.4658 134.324 li
85.5654 134.375 li
85.6157 134.423 li
85.7158 134.523 li
85.7656 134.574 li
85.8657 134.673 li
85.9658 134.724 li
86.0156 134.773 li
86.1157 134.824 li
86.1655 134.824 li
86.2656 134.875 li
86.3154 134.875 li
86.4155 134.824 li
86.4658 134.773 li
86.5654 134.724 li
86.6655 134.625 li
86.7158 134.523 li
86.8154 134.375 li
86.8657 134.224 li
86.9658 134.023 li
87.0156 133.824 li
87.1157 133.625 li
87.2158 133.375 li
87.2656 133.125 li
87.3657 132.875 li
87.4155 132.574 li
87.5156 132.324 li
87.5654 132.023 li
87.6655 131.724 li
87.7656 131.474 li
87.8154 131.173 li
87.9155 130.923 li
87.9658 130.625 li
88.0654 130.375 li
88.1157 130.173 li
88.2158 129.923 li
88.3154 129.724 li
88.3657 129.574 li
88.4658 129.375 li
88.5156 129.224 li
88.6157 129.125 li
88.6655 129.023 li
88.7656 128.923 li
88.8154 128.875 li
88.9155 128.824 li
89.0156 128.824 li
89.0654 128.824 li
89.1655 128.824 li
89.2158 128.824 li
89.3154 128.875 li
89.3657 128.923 li
73.1157 149.023 mo
73.1655 148.923 li
73.2656 148.824 li
73.3154 148.824 li
73.4155 148.875 li
73.5156 148.923 li
73.5654 149.074 li
73.6655 149.224 li
73.7158 149.474 li
73.8154 149.673 li
73.8657 149.974 li
73.9658 150.224 li
74.0654 150.523 li
74.1157 150.824 li
74.2158 151.125 li
74.2656 151.423 li
74.3657 151.673 li
74.4155 151.923 li
74.5156 152.173 li
74.5654 152.375 li
74.6655 152.523 li
74.7656 152.625 li
74.8154 152.724 li
74.9155 152.724 li
74.9658 152.724 li
75.0654 152.673 li
75.1157 152.523 li
75.2158 152.375 li
75.3154 152.173 li
75.3657 151.923 li
75.4658 151.625 li
75.5156 151.324 li
75.6157 150.974 li
75.6655 150.574 li
75.7656 150.173 li
75.8657 149.773 li
75.9155 149.324 li
76.0156 148.875 li
76.0654 148.423 li
76.1655 147.974 li
76.2158 147.523 li
76.3154 147.125 li
76.4155 146.724 li
76.4658 146.324 li
76.5654 145.974 li
76.6157 145.625 li
76.7158 145.375 li
76.7656 145.125 li
76.8657 144.875 li
76.9155 144.724 li
77.0156 144.574 li
77.1157 144.474 li
77.1655 144.423 li
77.2656 144.375 li
77.3154 144.423 li
77.4155 144.423 li
77.4658 144.523 li
77.5654 144.625 li
77.6655 144.773 li
77.7158 144.923 li
77.8154 145.074 li
77.8657 145.224 li
77.9658 145.423 li
78.0156 145.574 li
78.1157 145.724 li
78.2158 145.923 li
78.2656 146.074 li
78.3657 146.173 li
78.4155 146.324 li
78.5156 146.375 li
78.5654 146.474 li
78.6655 146.474 li
78.7158 146.474 li
78.8154 146.423 li
78.9155 146.375 li
78.9658 146.273 li
79.0654 146.125 li
79.1157 145.974 li
79.2158 145.773 li
79.2656 145.523 li
79.3657 145.273 li
79.4658 144.974 li
79.5156 144.673 li
79.6157 144.375 li
79.6655 144.023 li
79.7656 143.673 li
79.8154 143.324 li
79.9155 142.974 li
80.0156 142.574 li
80.0654 142.224 li
80.1655 141.875 li
80.2158 141.523 li
80.3154 141.224 li
80.3657 140.923 li
80.4658 140.625 li
80.5156 140.375 li
80.6157 140.173 li
80.7158 139.974 li
80.7656 139.773 li
80.8657 139.673 li
80.9155 139.523 li
81.0156 139.474 li
81.0654 139.423 li
81.1655 139.375 li
81.2656 139.375 li
64.9658 59.1235 mo
65.0156 64.2236 li
65.1157 69.4238 li
65.2158 74.8237 li
65.2656 80.2734 li
65.3657 85.8237 li
65.4155 91.4238 li
65.5156 97.0234 li
65.5654 102.574 li
65.6655 108.125 li
65.7656 113.523 li
65.8154 118.875 li
65.9155 124.074 li
65.9658 129.074 li
66.0654 133.923 li
66.1157 138.523 li
66.2158 142.923 li
66.3154 147.023 li
66.3657 150.875 li
66.4658 154.423 li
66.5156 157.724 li
66.6157 160.673 li
66.6655 163.273 li
66.7656 165.625 li
66.8154 167.625 li
66.9155 169.324 li
67.0156 170.724 li
67.0654 171.773 li
67.1655 172.574 li
67.2158 173.125 li
67.3154 173.324 li
67.3657 173.324 li
67.4658 173.125 li
67.5654 172.673 li
67.6157 172.023 li
67.7158 171.224 li
67.7656 170.273 li
67.8657 169.173 li
67.9155 168.023 li
68.0156 166.773 li
68.1157 165.474 li
68.1655 164.125 li
68.2656 162.773 li
68.3154 161.423 li
68.4155 160.125 li
68.4658 158.824 li
68.5654 157.625 li
68.6157 156.474 li
68.7158 155.423 li
68.8154 154.474 li
68.8657 153.673 li
68.9658 152.923 li
69.0156 152.324 li
69.1157 151.824 li
69.1655 151.474 li
69.2656 151.224 li
69.3657 151.125 li
69.4155 151.125 li
69.5156 151.224 li
69.5654 151.375 li
69.6655 151.673 li
69.7158 152.074 li
69.8154 152.523 li
69.9155 153.023 li
69.9658 153.574 li
70.0654 154.125 li
70.1157 154.773 li
70.2158 155.375 li
70.2656 156.023 li
70.3657 156.625 li
70.4658 157.173 li
70.5156 157.724 li
70.6157 158.273 li
70.6655 158.724 li
70.7656 159.125 li
70.8154 159.423 li
70.9155 159.673 li
70.9658 159.875 li
71.0654 159.974 li
71.1655 160.023 li
71.2158 159.923 li
71.3154 159.824 li
71.3657 159.625 li
71.4658 159.324 li
71.5156 158.974 li
71.6157 158.574 li
71.7158 158.125 li
71.7656 157.574 li
71.8657 157.023 li
71.9155 156.423 li
72.0156 155.824 li
72.0654 155.224 li
72.1655 154.574 li
72.2656 153.923 li
72.3154 153.324 li
72.4155 152.724 li
72.4658 152.125 li
72.5659 151.574 li
72.6157 151.074 li
72.7158 150.574 li
72.7656 150.173 li
72.8657 149.824 li
72.9658 149.474 li
73.0156 149.224 li
73.1157 149.023 li
56.8154 35.6738 mo
56.9155 35.9736 li
56.9658 36.2734 li
57.0654 36.5234 li
57.1157 36.7734 li
57.2158 37.0234 li
57.2656 37.2236 li
57.3657 37.3735 li
57.4658 37.4736 li
57.5156 37.5737 li
57.6157 37.5737 li
57.6655 37.5234 li
57.7656 37.4238 li
57.8154 37.2734 li
57.9155 37.0737 li
58.0156 36.8237 li
58.0654 36.4736 li
58.1655 36.0737 li
58.2158 35.6235 li
58.3154 35.1738 li
58.3657 34.6235 li
58.4658 34.0737 li
58.5654 33.4736 li
58.6157 32.8735 li
58.7158 32.2236 li
58.7656 31.6235 li
58.8657 30.9736 li
58.9155 30.3237 li
59.0156 29.7236 li
59.0654 29.1738 li
59.1655 28.6235 li
59.2656 28.1235 li
59.3154 27.6738 li
59.4155 27.2734 li
59.4658 26.9736 li
59.5654 26.7236 li
59.6157 26.5234 li
59.7158 26.4238 li
59.8154 26.3735 li
59.8657 26.4736 li
59.9658 26.5737 li
60.0156 26.7734 li
60.1157 27.0737 li
60.1655 27.4238 li
60.2656 27.8735 li
60.3657 28.3237 li
60.4155 28.8237 li
60.5156 29.4238 li
60.5654 30.0234 li
60.6655 30.6235 li
60.7158 31.2236 li
60.8154 31.8735 li
60.8657 32.4736 li
60.9658 33.0234 li
61.0654 33.5737 li
61.1157 34.0737 li
61.2158 34.4736 li
61.2656 34.8237 li
61.3657 35.0737 li
61.4155 35.2236 li
61.5156 35.3237 li
61.6157 35.2734 li
61.6655 35.0737 li
61.7656 34.8237 li
61.8154 34.3735 li
61.9155 33.8735 li
61.9658 33.2236 li
62.0654 32.4238 li
62.1655 31.5737 li
62.2158 30.5737 li
62.3154 29.5234 li
62.3657 28.3237 li
62.4658 27.1235 li
62.5156 25.8237 li
62.6157 24.4736 li
62.6655 23.1235 li
62.7656 21.7734 li
62.8657 20.4736 li
62.9155 19.1738 li
63.0156 17.9238 li
63.0654 16.7734 li
63.1655 15.7734 li
63.2158 14.8735 li
63.3154 14.1235 li
63.4155 13.5737 li
63.4658 13.1738 li
63.5654 13.0234 li
63.6157 13.1235 li
63.7158 13.4736 li
63.7656 14.0737 li
63.8657 14.9736 li
63.9658 16.1738 li
64.0156 17.6235 li
64.1157 19.4736 li
64.1655 21.5737 li
64.2656 24.0234 li
64.3159 26.7734 li
64.4155 29.8237 li
64.5156 33.2236 li
64.5659 36.8735 li
64.6655 40.8237 li
64.7158 45.0737 li
64.8159 49.5234 li
64.8657 54.2236 li
64.9658 59.1235 li
48.6655 45.9238 mo
48.7656 45.9736 li
48.8154 46.0737 li
48.9155 46.1738 li
48.9658 46.2734 li
49.0654 46.3735 li
49.1655 46.5234 li
49.2158 46.6235 li
49.3154 46.7236 li
49.3657 46.8237 li
49.4658 46.8735 li
49.5156 46.9238 li
49.6157 46.9736 li
49.7158 47.0234 li
49.7656 47.0234 li
49.8657 46.9736 li
49.9155 46.9238 li
50.0156 46.8237 li
50.0654 46.6738 li
50.1655 46.5234 li
50.2656 46.3735 li
50.3154 46.1738 li
50.4155 45.9238 li
50.4658 45.6738 li
50.5654 45.3735 li
50.6157 45.0737 li
50.7158 44.7236 li
50.8154 44.3735 li
50.8657 44.0234 li
50.9658 43.6738 li
51.0156 43.3237 li
51.1157 42.9736 li
51.1655 42.5737 li
51.2656 42.2236 li
51.3154 41.9238 li
51.4155 41.5737 li
51.5156 41.2734 li
51.5654 41.0234 li
51.6655 40.7734 li
51.7158 40.5234 li
51.8154 40.3735 li
51.8657 40.2236 li
51.9658 40.0737 li
52.0654 39.9736 li
52.1157 39.9238 li
52.2158 39.9238 li
52.2656 39.9238 li
52.3657 39.9736 li
52.4155 40.0234 li
52.5156 40.1235 li
52.6157 40.2734 li
52.6655 40.3735 li
52.7656 40.5234 li
52.8154 40.7236 li
52.9155 40.8735 li
52.9658 41.0737 li
53.0654 41.2236 li
53.1157 41.3735 li
53.2158 41.5737 li
53.3154 41.6738 li
53.3657 41.8237 li
53.4658 41.9238 li
53.5156 41.9736 li
53.6157 42.0234 li
53.6655 42.0234 li
53.7656 41.9736 li
53.8657 41.8735 li
53.9155 41.7734 li
54.0156 41.6235 li
54.0654 41.4238 li
54.1655 41.2236 li
54.2158 40.9238 li
54.3154 40.6235 li
54.4155 40.3237 li
54.4658 39.9238 li
54.5654 39.5234 li
54.6157 39.1235 li
54.7158 38.7236 li
54.7656 38.2734 li
54.8657 37.8237 li
54.9155 37.3735 li
55.0156 36.9238 li
55.1157 36.4736 li
55.1655 36.0737 li
55.2656 35.6738 li
55.3154 35.2734 li
55.4155 34.9736 li
55.4658 34.6235 li
55.5659 34.3735 li
55.6655 34.1235 li
55.7158 33.9736 li
55.8159 33.8237 li
55.8657 33.7236 li
55.9658 33.6738 li
56.0156 33.6738 li
56.1157 33.7236 li
56.2158 33.8237 li
56.2656 33.9238 li
56.3657 34.1235 li
56.4155 34.3237 li
56.5156 34.5737 li
56.5659 34.8237 li
56.6655 35.0737 li
56.7656 35.3735 li
56.8159 35.6738 li
40.5156 57.3237 mo
40.6157 57.2734 li
40.7158 57.2236 li
40.7656 57.1738 li
40.8657 57.1738 li
40.9155 57.1738 li
41.0156 57.2236 li
41.0654 57.2236 li
41.1655 57.2734 li
41.2158 57.3237 li
41.3154 57.3735 li
41.4155 57.4238 li
41.4658 57.4736 li
41.5654 57.5234 li
41.6157 57.5234 li
41.7158 57.5737 li
41.7656 57.5737 li
41.8657 57.5737 li
41.9658 57.5737 li
42.0156 57.5234 li
42.1157 57.4736 li
42.1655 57.4238 li
42.2656 57.3237 li
42.3154 57.2236 li
42.4155 57.1235 li
42.5156 56.9736 li
42.5654 56.7734 li
42.6655 56.5737 li
42.7158 56.3735 li
42.8154 56.1738 li
42.8657 55.9238 li
42.9658 55.6738 li
43.0156 55.3735 li
43.1157 55.1235 li
43.2158 54.8237 li
43.2656 54.5737 li
43.3657 54.2734 li
43.4155 53.9736 li
43.5156 53.7236 li
43.5654 53.4238 li
43.6655 53.1738 li
43.7656 52.9238 li
43.8154 52.7236 li
43.9155 52.5234 li
43.9658 52.3237 li
44.0654 52.1235 li
44.1157 51.9736 li
44.2158 51.8735 li
44.3154 51.7236 li
44.3657 51.6738 li
44.4658 51.5737 li
44.5156 51.5737 li
44.6157 51.5234 li
44.6655 51.5234 li
44.7656 51.5737 li
44.8657 51.5737 li
44.9155 51.6235 li
45.0156 51.6738 li
45.0654 51.7734 li
45.1655 51.8237 li
45.2158 51.9238 li
45.3154 51.9736 li
45.3657 52.0234 li
45.4658 52.1235 li
45.5654 52.1738 li
45.6157 52.2236 li
45.7158 52.2236 li
45.7656 52.2236 li
45.8657 52.2236 li
45.9155 52.2236 li
46.0156 52.1235 li
46.1157 52.0737 li
46.1655 51.9736 li
46.2656 51.8237 li
46.3154 51.6733 li
46.4155 51.5234 li
46.4658 51.3237 li
46.5654 51.0737 li
46.6655 50.8735 li
46.7158 50.5737 li
46.8154 50.3237 li
46.8657 50.0234 li
46.9658 49.7236 li
47.0156 49.4233 li
47.1157 49.1235 li
47.1655 48.7734 li
47.2656 48.4736 li
47.3657 48.1738 li
47.4155 47.8735 li
47.5156 47.5737 li
47.5654 47.3237 li
47.6655 47.0737 li
47.7158 46.8237 li
47.8154 46.6235 li
47.9155 46.4233 li
47.9658 46.2236 li
48.0659 46.1235 li
48.1157 45.9736 li
48.2158 45.9238 li
48.2656 45.8237 li
48.3657 45.8237 li
48.4658 45.8237 li
48.5156 45.8237 li
48.6157 45.8735 li
48.6655 45.9233 li
32.4155 69.2236 mo
32.4658 69.0737 li
32.5654 68.9238 li
32.6157 68.8237 li
32.7158 68.6738 li
32.7656 68.5737 li
32.8657 68.5234 li
32.9658 68.4736 li
33.0156 68.4238 li
33.1157 68.3735 li
33.1655 68.3735 li
33.2656 68.3237 li
33.3154 68.3237 li
33.4155 68.3735 li
33.4658 68.3735 li
33.5654 68.3735 li
33.6655 68.4238 li
33.7158 68.4238 li
33.8154 68.4238 li
33.8657 68.4238 li
33.9658 68.4736 li
34.0156 68.4736 li
34.1157 68.4238 li
34.2158 68.4238 li
34.2656 68.3735 li
34.3657 68.3237 li
34.4155 68.2734 li
34.5156 68.1738 li
34.5654 68.0737 li
34.6655 67.9238 li
34.7656 67.8237 li
34.8154 67.6738 li
34.9155 67.4736 li
34.9658 67.3237 li
35.0654 67.1235 li
35.1157 66.8735 li
35.2158 66.6738 li
35.2656 66.4238 li
35.3657 66.2236 li
35.4658 65.9736 li
35.5156 65.7236 li
35.6157 65.4736 li
35.6655 65.2236 li
35.7656 64.9736 li
35.8154 64.7236 li
35.9155 64.4736 li
36.0156 64.2734 li
36.0654 64.0737 li
36.1655 63.8735 li
36.2158 63.6738 li
36.3154 63.5234 li
36.3657 63.3735 li
36.4658 63.2236 li
36.5654 63.1235 li
36.6157 63.0234 li
36.7158 62.9238 li
36.7656 62.8735 li
36.8657 62.8237 li
36.9155 62.7734 li
37.0156 62.7734 li
37.0654 62.7734 li
37.1655 62.7734 li
37.2656 62.8237 li
37.3154 62.8237 li
37.4155 62.8735 li
37.4658 62.8735 li
37.5654 62.9238 li
37.6157 62.9238 li
37.7158 62.9736 li
37.8154 62.9736 li
37.8657 63.0234 li
37.9658 63.0234 li
38.0156 62.9736 li
38.1157 62.9736 li
38.1655 62.9238 li
38.2656 62.8735 li
38.3657 62.7734 li
38.4155 62.6738 li
38.5156 62.5737 li
38.5654 62.4238 li
38.6655 62.2734 li
38.7158 62.1235 li
38.8154 61.9238 li
38.9155 61.7236 li
38.9658 61.5234 li
39.0654 61.2734 li
39.1157 61.0234 li
39.2158 60.7734 li
39.2656 60.5234 li
39.3657 60.2734 li
39.4155 60.0234 li
39.5156 59.7236 li
39.6157 59.4736 li
39.6655 59.2236 li
39.7656 58.9736 li
39.8154 58.7236 li
39.9155 58.5234 li
39.9658 58.3237 li
40.0654 58.1235 li
40.1655 57.9238 li
40.2158 57.7734 li
40.3154 57.6235 li
40.3657 57.5234 li
40.4658 57.4233 li
40.5156 57.3237 li
24.2656 81.3735 mo
24.3154 81.1738 li
24.4155 80.9736 li
24.4658 80.7734 li
24.5654 80.5737 li
24.6655 80.4238 li
24.7158 80.2734 li
24.8154 80.1235 li
24.8657 79.9736 li
24.9658 79.8735 li
25.0156 79.7734 li
25.1157 79.6738 li
25.1655 79.6235 li
25.2656 79.5234 li
25.3657 79.4736 li
25.4155 79.4736 li
25.5156 79.4238 li
25.5654 79.4238 li
25.6655 79.4238 li
25.7158 79.4238 li
25.8154 79.4238 li
25.9155 79.4238 li
25.9658 79.4238 li
26.0654 79.4238 li
26.1157 79.4238 li
26.2158 79.4238 li
26.2656 79.4238 li
26.3657 79.3735 li
26.4658 79.3735 li
26.5156 79.3237 li
26.6157 79.2734 li
26.6655 79.1738 li
26.7656 79.1235 li
26.8154 79.0234 li
26.9155 78.9238 li
27.0156 78.7734 li
27.0654 78.6235 li
27.1655 78.4736 li
27.2158 78.3237 li
27.3154 78.1235 li
27.3657 77.9238 li
27.4658 77.7236 li
27.5156 77.5234 li
27.6157 77.2734 li
27.7158 77.0737 li
27.7656 76.8237 li
27.8657 76.6235 li
27.9155 76.3735 li
28.0156 76.1738 li
28.0654 75.9238 li
28.1655 75.7236 li
28.2656 75.4736 li
28.3154 75.2734 li
28.4155 75.1235 li
28.4658 74.9238 li
28.5654 74.7734 li
28.6157 74.6235 li
28.7158 74.4736 li
28.8154 74.3237 li
28.8657 74.2236 li
28.9658 74.1235 li
29.0156 74.0737 li
29.1157 74.0234 li
29.1655 73.9736 li
29.2656 73.9238 li
29.3154 73.9238 li
29.4155 73.8735 li
29.5156 73.8735 li
29.5654 73.8735 li
29.6655 73.8735 li
29.7158 73.9238 li
29.8154 73.9238 li
29.8657 73.9238 li
29.9658 73.9238 li
30.0654 73.9238 li
30.1157 73.9238 li
30.2158 73.9238 li
30.2656 73.8735 li
30.3657 73.8735 li
30.4155 73.8237 li
30.5156 73.7734 li
30.6157 73.6738 li
30.6655 73.5737 li
30.7656 73.4736 li
30.8154 73.3735 li
30.9155 73.2236 li
30.9658 73.0737 li
31.0654 72.8735 li
31.1157 72.7236 li
31.2158 72.5234 li
31.3154 72.3237 li
31.3657 72.0737 li
31.4658 71.8735 li
31.5156 71.6235 li
31.6157 71.3735 li
31.6655 71.1738 li
31.7656 70.9238 li
31.8657 70.6738 li
31.9155 70.4238 li
32.0156 70.2236 li
32.0654 70.0234 li
32.1655 69.7734 li
32.2158 69.5737 li
32.3159 69.4238 li
32.4155 69.2236 li
16.2656 93.1738 mo
16.3657 92.9736 li
16.4155 92.7734 li
16.5156 92.5234 li
16.5654 92.3237 li
16.6655 92.1235 li
16.7158 91.9238 li
16.8154 91.7236 li
16.9155 91.5737 li
16.9658 91.3735 li
17.0654 91.2236 li
17.1157 91.1235 li
17.2158 90.9736 li
17.2656 90.8735 li
17.3657 90.7734 li
17.4155 90.6738 li
17.5156 90.6235 li
17.6157 90.5737 li
17.6655 90.5234 li
17.7656 90.4736 li
17.8154 90.4736 li
17.9155 90.4736 li
17.9658 90.4238 li
18.0654 90.4238 li
18.1655 90.4238 li
18.2158 90.4238 li
18.3154 90.4238 li
18.3657 90.4238 li
18.4658 90.4238 li
18.5156 90.4238 li
18.6157 90.3735 li
18.7158 90.3735 li
18.7656 90.3237 li
18.8657 90.2734 li
18.9155 90.2236 li
19.0156 90.1235 li
19.0654 90.0234 li
19.1655 89.9238 li
19.2158 89.8237 li
19.3154 89.6738 li
19.4155 89.5234 li
19.4658 89.3735 li
19.5654 89.2236 li
19.6157 89.0234 li
19.7158 88.8237 li
19.7656 88.6235 li
19.8657 88.4238 li
19.9658 88.1738 li
20.0156 87.9736 li
20.1157 87.7236 li
20.1655 87.5234 li
20.2656 87.2734 li
20.3154 87.0737 li
20.4155 86.8735 li
20.5156 86.6738 li
20.5654 86.4736 li
20.6655 86.2734 li
20.7158 86.0737 li
20.8154 85.9238 li
20.8657 85.7734 li
20.9658 85.6235 li
21.0654 85.4736 li
21.1157 85.3735 li
21.2158 85.2734 li
21.2656 85.1738 li
21.3657 85.1235 li
21.4155 85.0737 li
21.5156 85.0234 li
21.5654 84.9736 li
21.6655 84.9736 li
21.7656 84.9238 li
21.8154 84.9238 li
21.9155 84.9238 li
21.9658 84.9238 li
22.0654 84.9238 li
22.1157 84.9238 li
22.2158 84.9238 li
22.3154 84.9238 li
22.3657 84.9238 li
22.4658 84.9238 li
22.5156 84.8735 li
22.6157 84.8237 li
22.6655 84.7739 li
22.7656 84.7236 li
22.8657 84.6738 li
22.9155 84.5737 li
23.0156 84.4736 li
23.0654 84.3735 li
23.1655 84.2236 li
23.2158 84.0737 li
23.3159 83.9238 li
23.3657 83.7734 li
23.4658 83.5737 li
23.5659 83.3735 li
23.6157 83.1738 li
23.7158 82.9736 li
23.7656 82.7236 li
23.8657 82.5239 li
23.9155 82.2739 li
24.0156 82.0737 li
24.1157 81.8237 li
24.1655 81.6235 li
24.2656 81.3735 li
233.865 169.074 mo
253.815 169.074 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDVPWEA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/S <1C60D8A8C9B64EDF7B9A268599F9CD8C4143A0D599CA838C6F6EFB82E6187B34759773BB4D8C1A41E190DEFABB354DFB531C99308891FC3B7E87957393F9CD35CA8C07371CAABAAF32C24CDAE22C826F234EC2B15BA06DFB54FFCB46EDDF1D277ED530855C8BB0880980568C5F76DE693CEE6004D84A502F3C6B0F55A55095F8FAF71FCF3869AA0D55975A515D287103786F2BEFCA3E30833F771676F4E4B0C078830B99B254F2B4> |-/a <1C60D8A8C9B7EF32A0B922DB529D708010F72F0E62F6CA36E98277AFD8C536E6814BFC8F2509E1B2B1B62A6BDA8D1A6ED67728D80620B28FE439D2F57DCEC5483105FEA93379701773DF23A415938C688874994BCC9880105CE27AC2270A13FA38E952045C5E8C52BEF83397E5FBEEFAB993BE33E385A5E36620F7427AB5E4423C6A4ED6DE24A89F54E52C8FAD8A45FAD4B8F6CFD50EB7D35BF120B079B932E0EE2F7685462C7EC6E9B818F0F9E1F7814D04F2B9AAFA6704B8B745452B73181F38CB34F1645F> |-/h <1C60D8A8C9B7EF327C10274A017D50D0B79D52072757441F46A9E30449754F52968402CD3736F71D6E09A15E2046342DF42A864D37373E0A213DE941C6F011296A017FBEA0AE0137A10664047E> |-/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-/w <1C60D8A8C9B6079F1E21163FAB6AE6913AD177FF61D1DF5A13833424AA1FD61EC74DDA2BECFBF8B60BC9DF7FD3935FFD35FC8515ADAC1E367194875F1B70589701BB841A4601541FD2E8173953> |-systemdict /gcheck known {setglobal} if end {end} ifendDVPWEA+Helvetica /Encoding getdup 83 /S putdup 97 /a putdup 104 /h putdup 111 /o putdup 119 /w putpop%ADOEndSubsetFont
/DVPWEA+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five 4{/.notdef}rp /colon 24{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s /t 2{/.notdef}rp /w /x 135{/.notdef}rp]DVPWEA+Helvetica nfDVPWEA+Helvetica*1 [7 0 0 -7 0 0 ]msf200.484 178.412 mo(Sawtooth)[4.66895 3.75391 5.05371 1.94629 3.8916 3.8916 1.94629 0 ]xsh0.75 lw
[] 0 dsh
244.266 48.5737 mo
244.315 48.4736 li
244.416 48.3735 li
244.466 48.2236 li
244.565 48.1235 li
244.615 48.0234 li
244.716 47.9238 li
244.766 47.7734 li
244.865 47.6738 li
244.966 47.5737 li
245.016 47.4736 li
245.115 47.3237 li
245.166 47.2236 li
245.266 47.1235 li
245.315 47.0234 li
245.416 46.9233 li
245.516 46.7734 li
245.565 46.6733 li
245.666 46.5737 li
245.716 46.4736 li
245.815 46.3237 li
245.865 46.2236 li
245.966 46.1235 li
246.065 46.0234 li
246.115 45.8735 li
246.216 45.7734 li
246.266 45.6733 li
246.365 45.5732 li
246.416 45.4233 li
246.516 45.3232 li
246.565 45.2236 li
246.666 45.1235 li
246.766 44.9736 li
246.815 44.8735 li
246.916 44.7734 li
246.966 44.6733 li
247.065 44.5732 li
247.115 44.4233 li
247.216 44.3232 li
247.315 44.2236 li
247.365 44.1235 li
247.466 43.9736 li
247.516 43.8735 li
247.615 43.7734 li
247.666 43.6733 li
247.766 43.5234 li
247.865 43.4233 li
247.916 43.3232 li
248.016 43.2236 li
248.065 43.0732 li
248.166 42.9736 li
248.216 42.8735 li
248.315 42.7734 li
248.365 42.6235 li
248.466 42.5234 li
248.565 42.4233 li
248.615 42.3232 li
248.716 42.2236 li
248.766 42.0732 li
248.865 41.9736 li
248.916 41.8735 li
249.016 41.7734 li
249.115 41.6235 li
249.166 41.5234 li
249.266 41.4233 li
249.315 41.3232 li
249.416 41.1733 li
249.466 41.0732 li
249.565 40.9731 li
249.666 40.8735 li
249.716 40.7231 li
249.815 40.6235 li
249.865 40.5234 li
249.966 40.4233 li
250.016 40.2734 li
250.115 40.1733 li
250.216 40.0732 li
250.266 39.9731 li
250.365 39.8735 li
250.416 39.7231 li
250.516 39.623 li
250.565 39.5234 li
250.666 39.4233 li
250.716 39.2734 li
250.815 39.1733 li
250.916 39.0732 li
250.966 38.9731 li
251.065 38.8232 li
236.115 60.2236 mo
236.166 60.1235 li
236.266 59.9736 li
236.315 59.8735 li
236.416 59.7734 li
236.516 59.6738 li
236.565 59.5234 li
236.666 59.4238 li
236.716 59.3237 li
236.815 59.2236 li
236.865 59.0737 li
236.966 58.9736 li
237.016 58.8735 li
237.115 58.7734 li
237.216 58.6733 li
237.266 58.5234 li
237.365 58.4233 li
237.416 58.3237 li
237.516 58.2236 li
237.565 58.0737 li
237.666 57.9736 li
237.766 57.8735 li
237.815 57.7734 li
237.916 57.6235 li
237.966 57.5234 li
238.065 57.4233 li
238.115 57.3232 li
238.216 57.1733 li
238.315 57.0732 li
238.365 56.9736 li
238.466 56.8735 li
238.516 56.7236 li
238.615 56.6235 li
238.666 56.5234 li
238.766 56.4233 li
238.815 56.3232 li
238.916 56.1733 li
239.016 56.0732 li
239.065 55.9736 li
239.166 55.8735 li
239.216 55.7236 li
239.315 55.6235 li
239.365 55.5234 li
239.466 55.4233 li
239.565 55.2734 li
239.615 55.1733 li
239.716 55.0732 li
239.766 54.9736 li
239.865 54.8232 li
239.916 54.7236 li
240.016 54.6235 li
240.115 54.5234 li
240.166 54.3735 li
240.266 54.2734 li
240.315 54.1733 li
240.416 54.0732 li
240.466 53.9736 li
240.565 53.8232 li
240.615 53.7236 li
240.716 53.6235 li
240.815 53.5234 li
240.865 53.3735 li
240.966 53.2734 li
241.016 53.1733 li
241.115 53.0732 li
241.166 52.9233 li
241.266 52.8232 li
241.365 52.7231 li
241.416 52.6235 li
241.516 52.4731 li
241.565 52.3735 li
241.666 52.2734 li
241.716 52.1733 li
241.815 52.0234 li
241.916 51.9233 li
241.966 51.8232 li
242.065 51.7231 li
242.115 51.623 li
242.216 51.4731 li
242.266 51.373 li
242.365 51.2734 li
242.416 51.1733 li
242.516 51.0234 li
242.615 50.9233 li
242.666 50.8232 li
242.766 50.7231 li
242.815 50.5732 li
242.916 50.4731 li
242.966 50.373 li
243.065 50.2734 li
243.166 50.123 li
243.216 50.0234 li
243.315 49.9233 li
243.365 49.8232 li
243.466 49.6733 li
243.516 49.5732 li
243.615 49.4731 li
243.716 49.373 li
243.766 49.2734 li
243.865 49.123 li
243.916 49.0234 li
244.016 48.9233 li
244.065 48.8232 li
244.166 48.6733 li
244.266 48.5732 li
227.966 71.8735 mo
228.016 71.7236 li
228.115 71.6235 li
228.216 71.5234 li
228.266 71.4238 li
228.365 71.2734 li
228.416 71.1738 li
228.516 71.0737 li
228.565 70.9736 li
228.666 70.8237 li
228.716 70.7236 li
228.815 70.6235 li
228.916 70.5234 li
228.966 70.4233 li
229.065 70.2734 li
229.115 70.1733 li
229.216 70.0737 li
229.266 69.9736 li
229.365 69.8237 li
229.466 69.7236 li
229.516 69.6235 li
229.615 69.5234 li
229.666 69.3735 li
229.766 69.2734 li
229.815 69.1733 li
229.916 69.0737 li
230.016 68.9233 li
230.065 68.8232 li
230.166 68.7236 li
230.216 68.6235 li
230.315 68.4736 li
230.365 68.3735 li
230.466 68.2734 li
230.565 68.1733 li
230.615 68.0732 li
230.716 67.9233 li
230.766 67.8232 li
230.865 67.7236 li
230.916 67.6235 li
231.016 67.4736 li
231.065 67.3735 li
231.166 67.2734 li
231.266 67.1733 li
231.315 67.0234 li
231.416 66.9233 li
231.466 66.8232 li
231.565 66.7236 li
231.615 66.5732 li
231.716 66.4736 li
231.815 66.3735 li
231.865 66.2734 li
231.966 66.1235 li
232.016 66.0234 li
232.115 65.9233 li
232.166 65.8232 li
232.266 65.7236 li
232.365 65.5732 li
232.416 65.4736 li
232.516 65.3735 li
232.565 65.2734 li
232.666 65.1235 li
232.716 65.0234 li
232.815 64.9233 li
232.865 64.8232 li
232.966 64.6733 li
233.065 64.5732 li
233.115 64.4731 li
233.216 64.3735 li
233.266 64.2231 li
233.365 64.1235 li
233.416 64.0234 li
233.516 63.9233 li
233.615 63.7734 li
233.666 63.6733 li
233.766 63.5732 li
233.815 63.4731 li
233.916 63.3735 li
233.966 63.2231 li
234.065 63.1235 li
234.166 63.0234 li
234.216 62.9233 li
234.315 62.7734 li
234.365 62.6733 li
234.466 62.5732 li
234.516 62.4731 li
234.615 62.3232 li
234.666 62.2231 li
234.766 62.123 li
234.865 62.0234 li
234.916 61.873 li
235.016 61.7734 li
235.065 61.6733 li
235.166 61.5732 li
235.216 61.4233 li
235.315 61.3232 li
235.416 61.2231 li
235.466 61.123 li
235.565 61.0234 li
235.615 60.873 li
235.716 60.7734 li
235.766 60.6733 li
235.865 60.5732 li
235.966 60.4233 li
236.016 60.3232 li
236.115 60.2231 li
219.815 83.4736 mo
219.916 83.3735 li
219.966 83.2734 li
220.065 83.1738 li
220.115 83.0234 li
220.216 82.9238 li
220.266 82.8237 li
220.365 82.7236 li
220.466 82.5737 li
220.516 82.4736 li
220.615 82.3735 li
220.666 82.2734 li
220.766 82.1733 li
220.815 82.0234 li
220.916 81.9233 li
220.966 81.8237 li
221.065 81.7236 li
221.166 81.5737 li
221.216 81.4736 li
221.315 81.3735 li
221.365 81.2734 li
221.466 81.1235 li
221.516 81.0234 li
221.615 80.9233 li
221.716 80.8232 li
221.766 80.6733 li
221.865 80.5732 li
221.916 80.4736 li
222.016 80.3735 li
222.065 80.2236 li
222.166 80.1235 li
222.266 80.0234 li
222.315 79.9233 li
222.416 79.8232 li
222.466 79.6733 li
222.565 79.5732 li
222.615 79.4736 li
222.716 79.3735 li
222.766 79.2236 li
222.865 79.1235 li
222.966 79.0234 li
223.016 78.9233 li
223.115 78.7734 li
223.166 78.6733 li
223.266 78.5732 li
223.315 78.4736 li
223.416 78.3232 li
223.516 78.2236 li
223.565 78.1235 li
223.666 78.0234 li
223.716 77.8735 li
223.815 77.7734 li
223.865 77.6733 li
223.966 77.5732 li
224.065 77.4736 li
224.115 77.3232 li
224.216 77.2236 li
224.266 77.1235 li
224.365 77.0234 li
224.416 76.8735 li
224.516 76.7734 li
224.615 76.6733 li
224.666 76.5732 li
224.766 76.4233 li
224.815 76.3232 li
224.916 76.2231 li
224.966 76.1235 li
225.065 75.9731 li
225.115 75.8735 li
225.216 75.7734 li
225.315 75.6733 li
225.365 75.5234 li
225.466 75.4233 li
225.516 75.3232 li
225.615 75.2231 li
225.666 75.1235 li
225.766 74.9731 li
225.865 74.873 li
225.916 74.7734 li
226.016 74.6733 li
226.065 74.5234 li
226.166 74.4233 li
226.216 74.3232 li
226.315 74.2231 li
226.416 74.0732 li
226.466 73.9731 li
226.565 73.873 li
226.615 73.7734 li
226.716 73.623 li
226.766 73.5234 li
226.865 73.4233 li
226.916 73.3232 li
227.016 73.1733 li
227.115 73.0732 li
227.166 72.9731 li
227.266 72.873 li
227.315 72.7734 li
227.416 72.623 li
227.466 72.5234 li
227.565 72.4233 li
227.666 72.3232 li
227.716 72.1733 li
227.815 72.0732 li
227.865 71.9731 li
227.966 71.873 li
211.666 95.1235 mo
211.766 95.0234 li
211.815 94.9238 li
211.916 94.7734 li
211.966 94.6738 li
212.065 94.5737 li
212.166 94.4736 li
212.216 94.3237 li
212.315 94.2236 li
212.365 94.1235 li
212.466 94.0234 li
212.516 93.9238 li
212.615 93.7734 li
212.716 93.6733 li
212.766 93.5737 li
212.865 93.4736 li
212.916 93.3237 li
213.016 93.2236 li
213.065 93.1235 li
213.166 93.0234 li
213.216 92.8735 li
213.315 92.7734 li
213.416 92.6733 li
213.466 92.5737 li
213.565 92.4233 li
213.615 92.3237 li
213.716 92.2236 li
213.766 92.1235 li
213.865 91.9736 li
213.966 91.8735 li
214.016 91.7734 li
214.115 91.6733 li
214.166 91.5732 li
214.266 91.4233 li
214.315 91.3232 li
214.416 91.2236 li
214.516 91.1235 li
214.565 90.9736 li
214.666 90.8735 li
214.716 90.7734 li
214.815 90.6733 li
214.865 90.5234 li
214.966 90.4233 li
215.016 90.3232 li
215.115 90.2236 li
215.216 90.0732 li
215.266 89.9736 li
215.365 89.8735 li
215.416 89.7734 li
215.516 89.6235 li
215.565 89.5234 li
215.666 89.4233 li
215.766 89.3232 li
215.815 89.2236 li
215.916 89.0732 li
215.966 88.9736 li
216.065 88.8735 li
216.115 88.7734 li
216.216 88.6235 li
216.315 88.5234 li
216.365 88.4233 li
216.466 88.3232 li
216.516 88.1733 li
216.615 88.0732 li
216.666 87.9736 li
216.766 87.8735 li
216.815 87.7231 li
216.916 87.6235 li
217.016 87.5234 li
217.065 87.4233 li
217.166 87.2734 li
217.216 87.1733 li
217.315 87.0732 li
217.365 86.9731 li
217.466 86.8735 li
217.565 86.7231 li
217.615 86.6235 li
217.716 86.5234 li
217.766 86.4233 li
217.865 86.2734 li
217.916 86.1733 li
218.016 86.0732 li
218.115 85.9731 li
218.166 85.8232 li
218.266 85.7231 li
218.315 85.623 li
218.416 85.5234 li
218.466 85.373 li
218.565 85.2734 li
218.666 85.1733 li
218.716 85.0732 li
218.815 84.9233 li
218.865 84.8232 li
218.966 84.7231 li
219.016 84.623 li
219.115 84.5234 li
219.166 84.373 li
219.266 84.2734 li
219.365 84.1733 li
219.416 84.0732 li
219.516 83.9233 li
219.565 83.8232 li
219.666 83.7231 li
219.716 83.623 li
219.815 83.4731 li
203.516 106.773 mo
203.615 106.673 li
203.666 106.523 li
203.766 106.423 li
203.865 106.324 li
203.916 106.224 li
204.016 106.074 li
204.065 105.974 li
204.166 105.875 li
204.216 105.773 li
204.315 105.673 li
204.416 105.523 li
204.466 105.423 li
204.565 105.324 li
204.615 105.224 li
204.716 105.074 li
204.766 104.974 li
204.865 104.875 li
204.916 104.773 li
205.016 104.625 li
205.115 104.523 li
205.166 104.423 li
205.266 104.324 li
205.315 104.173 li
205.416 104.074 li
205.466 103.974 li
205.565 103.875 li
205.666 103.724 li
205.716 103.625 li
205.815 103.523 li
205.865 103.423 li
205.966 103.324 li
206.016 103.173 li
206.115 103.074 li
206.216 102.974 li
206.266 102.875 li
206.365 102.724 li
206.416 102.625 li
206.516 102.523 li
206.565 102.423 li
206.666 102.275 li
206.766 102.173 li
206.815 102.074 li
206.916 101.974 li
206.966 101.824 li
207.065 101.724 li
207.115 101.625 li
207.216 101.525 li
207.266 101.375 li
207.365 101.275 li
207.466 101.173 li
207.516 101.074 li
207.615 100.974 li
207.666 100.824 li
207.766 100.724 li
207.815 100.625 li
207.916 100.525 li
208.016 100.375 li
208.065 100.275 li
208.166 100.173 li
208.216 100.074 li
208.315 99.9233 li
208.365 99.8237 li
208.466 99.7241 li
208.565 99.6245 li
208.615 99.4741 li
208.716 99.3745 li
208.766 99.2749 li
208.865 99.1733 li
208.916 99.0249 li
209.016 98.9233 li
209.065 98.8237 li
209.166 98.7241 li
209.266 98.6245 li
209.315 98.4741 li
209.416 98.3745 li
209.466 98.2749 li
209.565 98.1733 li
209.615 98.0249 li
209.716 97.9238 li
209.815 97.8242 li
209.865 97.7246 li
209.966 97.5742 li
210.016 97.4746 li
210.115 97.374 li
210.166 97.2744 li
210.266 97.124 li
210.365 97.0244 li
210.416 96.9243 li
210.516 96.8242 li
210.565 96.6743 li
210.666 96.5742 li
210.716 96.4741 li
210.815 96.374 li
210.865 96.2744 li
210.966 96.124 li
211.065 96.0244 li
211.115 95.9243 li
211.216 95.8242 li
211.266 95.6743 li
211.365 95.5742 li
211.416 95.4741 li
211.516 95.374 li
211.615 95.2241 li
211.666 95.124 li
195.365 118.423 mo
195.466 118.273 li
195.565 118.173 li
195.615 118.074 li
195.716 117.974 li
195.766 117.875 li
195.865 117.724 li
195.916 117.625 li
196.016 117.523 li
196.115 117.423 li
196.166 117.273 li
196.266 117.173 li
196.315 117.074 li
196.416 116.974 li
196.466 116.824 li
196.565 116.724 li
196.666 116.625 li
196.716 116.523 li
196.815 116.375 li
196.865 116.273 li
196.966 116.173 li
197.016 116.074 li
197.115 115.923 li
197.166 115.824 li
197.266 115.724 li
197.365 115.625 li
197.416 115.523 li
197.516 115.375 li
197.565 115.273 li
197.666 115.173 li
197.716 115.074 li
197.815 114.923 li
197.916 114.824 li
197.966 114.724 li
198.065 114.625 li
198.115 114.474 li
198.216 114.375 li
198.266 114.273 li
198.365 114.173 li
198.466 114.023 li
198.516 113.923 li
198.615 113.824 li
198.666 113.724 li
198.766 113.574 li
198.815 113.474 li
198.916 113.375 li
198.966 113.275 li
199.065 113.125 li
199.166 113.025 li
199.216 112.923 li
199.315 112.824 li
199.365 112.724 li
199.466 112.574 li
199.516 112.474 li
199.615 112.375 li
199.716 112.275 li
199.766 112.125 li
199.865 112.025 li
199.916 111.923 li
200.016 111.824 li
200.065 111.673 li
200.166 111.574 li
200.266 111.474 li
200.315 111.375 li
200.416 111.224 li
200.466 111.125 li
200.565 111.025 li
200.615 110.923 li
200.716 110.775 li
200.815 110.673 li
200.865 110.574 li
200.966 110.474 li
201.016 110.375 li
201.115 110.224 li
201.166 110.125 li
201.266 110.025 li
201.315 109.923 li
201.416 109.775 li
201.516 109.673 li
201.565 109.574 li
201.666 109.474 li
201.716 109.324 li
201.815 109.224 li
201.865 109.125 li
201.966 109.025 li
202.065 108.875 li
202.115 108.775 li
202.216 108.673 li
202.266 108.574 li
202.365 108.423 li
202.416 108.324 li
202.516 108.224 li
202.615 108.125 li
202.666 108.025 li
202.766 107.875 li
202.815 107.775 li
202.916 107.675 li
202.966 107.574 li
203.065 107.425 li
203.115 107.324 li
203.216 107.224 li
203.315 107.125 li
203.365 106.974 li
203.466 106.875 li
203.516 106.775 li
187.266 130.023 mo
187.315 129.923 li
187.416 129.824 li
187.466 129.724 li
187.565 129.625 li
187.615 129.474 li
187.716 129.375 li
187.815 129.273 li
187.865 129.173 li
187.966 129.023 li
188.016 128.923 li
188.115 128.824 li
188.166 128.724 li
188.266 128.574 li
188.365 128.474 li
188.416 128.375 li
188.516 128.273 li
188.565 128.125 li
188.666 128.023 li
188.716 127.923 li
188.815 127.824 li
188.916 127.673 li
188.966 127.574 li
189.065 127.474 li
189.115 127.375 li
189.216 127.273 li
189.266 127.125 li
189.365 127.023 li
189.416 126.923 li
189.516 126.824 li
189.615 126.673 li
189.666 126.574 li
189.766 126.474 li
189.815 126.375 li
189.916 126.224 li
189.966 126.125 li
190.065 126.023 li
190.166 125.923 li
190.216 125.773 li
190.315 125.673 li
190.365 125.574 li
190.466 125.474 li
190.516 125.324 li
190.615 125.224 li
190.716 125.125 li
190.766 125.025 li
190.865 124.923 li
190.916 124.775 li
191.016 124.673 li
191.065 124.574 li
191.166 124.474 li
191.216 124.324 li
191.315 124.224 li
191.416 124.125 li
191.466 124.025 li
191.565 123.875 li
191.615 123.775 li
191.716 123.673 li
191.766 123.574 li
191.865 123.423 li
191.966 123.324 li
192.016 123.224 li
192.115 123.125 li
192.166 122.974 li
192.266 122.875 li
192.315 122.775 li
192.416 122.673 li
192.516 122.574 li
192.565 122.423 li
192.666 122.324 li
192.716 122.224 li
192.815 122.125 li
192.865 121.974 li
192.966 121.875 li
193.065 121.775 li
193.115 121.673 li
193.216 121.525 li
193.266 121.423 li
193.365 121.324 li
193.416 121.224 li
193.516 121.074 li
193.565 120.974 li
193.666 120.875 li
193.766 120.775 li
193.815 120.625 li
193.916 120.525 li
193.966 120.423 li
194.065 120.324 li
194.115 120.224 li
194.216 120.074 li
194.315 119.974 li
194.365 119.875 li
194.466 119.775 li
194.516 119.625 li
194.615 119.525 li
194.666 119.425 li
194.766 119.324 li
194.865 119.175 li
194.916 119.074 li
195.016 118.974 li
195.065 118.875 li
195.166 118.724 li
195.216 118.625 li
195.315 118.525 li
195.365 118.425 li
179.115 141.673 mo
179.166 141.574 li
179.266 141.474 li
179.315 141.375 li
179.416 141.224 li
179.516 141.125 li
179.565 141.023 li
179.666 140.923 li
179.716 140.773 li
179.815 140.673 li
179.865 140.574 li
179.966 140.474 li
180.065 140.324 li
180.115 140.224 li
180.216 140.125 li
180.266 140.023 li
180.365 139.875 li
180.416 139.773 li
180.516 139.673 li
180.615 139.574 li
180.666 139.423 li
180.766 139.324 li
180.815 139.224 li
180.916 139.125 li
180.966 139.023 li
181.065 138.875 li
181.166 138.773 li
181.216 138.673 li
181.315 138.574 li
181.365 138.423 li
181.466 138.324 li
181.516 138.224 li
181.615 138.125 li
181.666 137.974 li
181.766 137.875 li
181.865 137.773 li
181.916 137.673 li
182.016 137.523 li
182.065 137.423 li
182.166 137.324 li
182.216 137.224 li
182.315 137.074 li
182.416 136.974 li
182.466 136.875 li
182.565 136.775 li
182.615 136.673 li
182.716 136.525 li
182.766 136.423 li
182.865 136.324 li
182.966 136.224 li
183.016 136.074 li
183.115 135.974 li
183.166 135.875 li
183.266 135.775 li
183.315 135.625 li
183.416 135.525 li
183.466 135.423 li
183.565 135.324 li
183.666 135.173 li
183.716 135.074 li
183.815 134.974 li
183.865 134.875 li
183.966 134.724 li
184.016 134.625 li
184.115 134.525 li
184.216 134.423 li
184.266 134.324 li
184.365 134.173 li
184.416 134.074 li
184.516 133.974 li
184.565 133.875 li
184.666 133.724 li
184.766 133.625 li
184.815 133.525 li
184.916 133.423 li
184.966 133.275 li
185.065 133.173 li
185.115 133.074 li
185.216 132.974 li
185.266 132.824 li
185.365 132.724 li
185.466 132.625 li
185.516 132.525 li
185.615 132.375 li
185.666 132.275 li
185.766 132.173 li
185.815 132.074 li
185.916 131.974 li
186.016 131.824 li
186.065 131.724 li
186.166 131.625 li
186.216 131.525 li
186.315 131.375 li
186.365 131.275 li
186.466 131.175 li
186.565 131.074 li
186.615 130.925 li
186.716 130.824 li
186.766 130.724 li
186.865 130.625 li
186.916 130.474 li
187.016 130.375 li
187.115 130.275 li
187.166 130.175 li
187.266 130.025 li
170.966 153.324 mo
171.065 153.224 li
171.115 153.125 li
171.216 152.974 li
171.266 152.875 li
171.365 152.773 li
171.416 152.673 li
171.516 152.523 li
171.565 152.423 li
171.666 152.324 li
171.766 152.224 li
171.815 152.074 li
171.916 151.974 li
171.966 151.875 li
172.065 151.773 li
172.115 151.625 li
172.216 151.523 li
172.315 151.423 li
172.365 151.324 li
172.466 151.173 li
172.516 151.074 li
172.615 150.974 li
172.666 150.875 li
172.766 150.773 li
172.865 150.625 li
172.916 150.523 li
173.016 150.423 li
173.065 150.324 li
173.166 150.173 li
173.216 150.074 li
173.315 149.974 li
173.365 149.875 li
173.466 149.724 li
173.565 149.625 li
173.615 149.523 li
173.716 149.423 li
173.766 149.273 li
173.865 149.173 li
173.916 149.074 li
174.016 148.974 li
174.115 148.824 li
174.166 148.724 li
174.266 148.625 li
174.315 148.525 li
174.416 148.423 li
174.466 148.275 li
174.565 148.173 li
174.666 148.074 li
174.716 147.974 li
174.815 147.824 li
174.865 147.724 li
174.966 147.625 li
175.016 147.525 li
175.115 147.375 li
175.216 147.275 li
175.266 147.173 li
175.365 147.074 li
175.416 146.923 li
175.516 146.824 li
175.565 146.724 li
175.666 146.625 li
175.716 146.474 li
175.815 146.375 li
175.916 146.275 li
175.966 146.173 li
176.065 146.074 li
176.115 145.923 li
176.216 145.824 li
176.266 145.724 li
176.365 145.625 li
176.466 145.474 li
176.516 145.375 li
176.615 145.275 li
176.666 145.173 li
176.766 145.025 li
176.815 144.923 li
176.916 144.824 li
177.016 144.724 li
177.065 144.574 li
177.166 144.474 li
177.216 144.375 li
177.315 144.275 li
177.365 144.125 li
177.466 144.025 li
177.516 143.923 li
177.615 143.824 li
177.716 143.724 li
177.766 143.574 li
177.865 143.474 li
177.916 143.375 li
178.016 143.275 li
178.065 143.125 li
178.166 143.025 li
178.266 142.923 li
178.315 142.824 li
178.416 142.673 li
178.466 142.574 li
178.565 142.474 li
178.615 142.375 li
178.716 142.224 li
178.815 142.125 li
178.865 142.025 li
178.966 141.925 li
179.016 141.775 li
179.115 141.675 li
163.916 163.375 mo
164.016 163.273 li
164.065 163.173 li
164.166 163.074 li
164.216 162.923 li
164.315 162.824 li
164.365 162.724 li
164.466 162.625 li
164.565 162.523 li
164.615 162.375 li
164.716 162.273 li
164.766 162.173 li
164.865 162.074 li
164.916 161.923 li
165.016 161.824 li
165.115 161.724 li
165.166 161.625 li
165.266 161.474 li
165.315 161.375 li
165.416 161.273 li
165.466 161.173 li
165.565 161.023 li
165.615 160.923 li
165.716 160.824 li
165.815 160.724 li
165.865 160.574 li
165.966 160.474 li
166.016 160.375 li
166.115 160.273 li
166.166 160.173 li
166.266 160.023 li
166.365 159.923 li
166.416 159.824 li
166.516 159.724 li
166.565 159.574 li
166.666 159.474 li
166.716 159.375 li
166.815 159.273 li
166.916 159.125 li
166.966 159.023 li
167.065 158.923 li
167.115 158.824 li
167.216 158.673 li
167.266 158.574 li
167.365 158.474 li
167.416 158.375 li
167.516 158.224 li
167.615 158.125 li
167.666 158.025 li
167.766 157.923 li
167.815 157.824 li
167.916 157.673 li
167.966 157.574 li
168.065 157.474 li
168.166 157.375 li
168.216 157.224 li
168.315 157.125 li
168.365 157.025 li
168.466 156.923 li
168.516 156.775 li
168.615 156.673 li
168.716 156.574 li
168.766 156.474 li
168.865 156.324 li
168.916 156.224 li
169.016 156.125 li
169.065 156.025 li
169.166 155.875 li
169.266 155.775 li
169.315 155.673 li
169.416 155.574 li
169.466 155.474 li
169.565 155.324 li
169.615 155.224 li
169.716 155.125 li
169.766 155.025 li
169.865 154.875 li
169.966 154.775 li
170.016 154.673 li
170.115 154.574 li
170.166 154.423 li
170.266 154.324 li
170.315 154.224 li
170.416 154.125 li
170.516 153.974 li
170.565 153.875 li
170.666 153.775 li
170.716 153.673 li
170.815 153.525 li
170.865 153.423 li
170.966 153.324 li
162.766 24.4238 mo
162.815 24.3237 li
162.916 24.2236 li
162.966 24.1235 li
163.065 24.0234 li
163.115 23.8735 li
163.216 23.7734 li
163.315 23.6738 li
163.365 23.5737 li
163.466 23.4238 li
163.516 23.3237 li
163.615 23.2236 li
163.666 23.1235 li
163.766 22.9736 li
154.615 36.0737 mo
154.666 35.9736 li
154.766 35.8735 li
154.815 35.7734 li
154.916 35.6235 li
155.016 35.5234 li
155.065 35.4238 li
155.166 35.3237 li
155.216 35.1738 li
155.315 35.0737 li
155.365 34.9736 li
155.466 34.8735 li
155.516 34.7236 li
155.615 34.6235 li
155.716 34.5234 li
155.766 34.4233 li
155.865 34.2734 li
155.916 34.1733 li
156.016 34.0737 li
156.065 33.9736 li
156.166 33.8237 li
156.266 33.7236 li
156.315 33.6235 li
156.416 33.5234 li
156.466 33.4233 li
156.565 33.2734 li
156.615 33.1733 li
156.716 33.0732 li
156.815 32.9736 li
156.865 32.8232 li
156.966 32.7236 li
157.016 32.6235 li
157.115 32.5234 li
157.166 32.3735 li
157.266 32.2734 li
157.365 32.1733 li
157.416 32.0732 li
157.516 31.9233 li
157.565 31.8232 li
157.666 31.7236 li
157.716 31.6235 li
157.815 31.4736 li
157.865 31.3735 li
157.966 31.2734 li
158.065 31.1733 li
158.115 31.0732 li
158.216 30.9233 li
158.266 30.8232 li
158.365 30.7236 li
158.416 30.6235 li
158.516 30.4736 li
158.615 30.3735 li
158.666 30.2734 li
158.766 30.1733 li
158.815 30.0234 li
158.916 29.9233 li
158.966 29.8232 li
159.065 29.7236 li
159.166 29.5732 li
159.216 29.4736 li
159.315 29.3735 li
159.365 29.2734 li
159.466 29.1235 li
159.516 29.0234 li
159.615 28.9233 li
159.666 28.8232 li
159.766 28.7231 li
159.865 28.5732 li
159.916 28.4731 li
160.016 28.3735 li
160.065 28.2734 li
160.166 28.1235 li
160.216 28.0234 li
160.315 27.9233 li
160.416 27.8232 li
160.466 27.6733 li
160.565 27.5732 li
160.615 27.4731 li
160.716 27.373 li
160.766 27.2231 li
160.865 27.123 li
160.966 27.0234 li
161.016 26.9233 li
161.115 26.7734 li
161.166 26.6733 li
161.266 26.5732 li
161.315 26.4731 li
161.416 26.373 li
161.466 26.2231 li
161.565 26.123 li
161.666 26.0234 li
161.716 25.9233 li
161.815 25.7734 li
161.865 25.6733 li
161.966 25.5732 li
162.016 25.4731 li
162.115 25.3232 li
162.216 25.2231 li
162.266 25.123 li
162.365 25.0234 li
162.416 24.873 li
162.516 24.7734 li
162.565 24.6733 li
162.666 24.5732 li
162.766 24.4233 li
146.466 47.7236 mo
146.516 47.6235 li
146.615 47.5234 li
146.716 47.3735 li
146.766 47.2734 li
146.865 47.1738 li
146.916 47.0737 li
147.016 46.9238 li
147.065 46.8237 li
147.166 46.7236 li
147.266 46.6235 li
147.315 46.4736 li
147.416 46.3735 li
147.466 46.2734 li
147.565 46.1733 li
147.615 46.0234 li
147.716 45.9233 li
147.766 45.8237 li
147.865 45.7236 li
147.966 45.5737 li
148.016 45.4736 li
148.115 45.3735 li
148.166 45.2734 li
148.266 45.1733 li
148.315 45.0234 li
148.416 44.9233 li
148.516 44.8232 li
148.565 44.7236 li
148.666 44.5732 li
148.716 44.4736 li
148.815 44.3735 li
148.865 44.2734 li
148.966 44.1235 li
149.065 44.0234 li
149.115 43.9233 li
149.216 43.8232 li
149.266 43.6733 li
149.365 43.5732 li
149.416 43.4736 li
149.516 43.3735 li
149.615 43.2236 li
149.666 43.1235 li
149.766 43.0234 li
149.815 42.9233 li
149.916 42.8232 li
149.966 42.6733 li
150.065 42.5732 li
150.115 42.4736 li
150.216 42.3735 li
150.315 42.2236 li
150.365 42.1235 li
150.466 42.0234 li
150.516 41.9233 li
150.615 41.7734 li
150.666 41.6733 li
150.766 41.5732 li
150.865 41.4736 li
150.916 41.3232 li
151.016 41.2236 li
151.065 41.1235 li
151.166 41.0234 li
151.216 40.8735 li
151.315 40.7734 li
151.416 40.6733 li
151.466 40.5732 li
151.565 40.4731 li
151.615 40.3232 li
151.716 40.2231 li
151.766 40.1235 li
151.865 40.0234 li
151.916 39.8735 li
152.016 39.7734 li
152.115 39.6733 li
152.166 39.5732 li
152.266 39.4233 li
152.315 39.3232 li
152.416 39.2231 li
152.466 39.1235 li
152.565 38.9731 li
152.666 38.873 li
152.716 38.7734 li
152.815 38.6733 li
152.865 38.5234 li
152.966 38.4233 li
153.016 38.3232 li
153.115 38.2231 li
153.216 38.123 li
153.266 37.9731 li
153.365 37.873 li
153.416 37.7734 li
153.516 37.6733 li
153.565 37.5234 li
153.666 37.4233 li
153.716 37.3232 li
153.815 37.2231 li
153.916 37.0732 li
153.966 36.9731 li
154.065 36.873 li
154.115 36.7734 li
154.216 36.623 li
154.266 36.5234 li
154.365 36.4233 li
154.466 36.3232 li
154.516 36.1733 li
154.615 36.0732 li
138.315 59.3735 mo
138.416 59.2734 li
138.466 59.1235 li
138.565 59.0234 li
138.615 58.9238 li
138.716 58.8237 li
138.766 58.6738 li
138.865 58.5737 li
138.966 58.4736 li
139.016 58.3735 li
139.115 58.2236 li
139.166 58.1235 li
139.266 58.0234 li
139.315 57.9238 li
139.416 57.7734 li
139.516 57.6733 li
139.565 57.5737 li
139.666 57.4736 li
139.716 57.3237 li
139.815 57.2236 li
139.865 57.1235 li
139.966 57.0234 li
140.016 56.9233 li
140.115 56.7734 li
140.216 56.6733 li
140.266 56.5737 li
140.365 56.4736 li
140.416 56.3237 li
140.516 56.2236 li
140.565 56.1235 li
140.666 56.0234 li
140.766 55.8735 li
140.815 55.7734 li
140.916 55.6733 li
140.966 55.5732 li
141.065 55.4233 li
141.115 55.3232 li
141.216 55.2236 li
141.315 55.1235 li
141.365 54.9736 li
141.466 54.8735 li
141.516 54.7734 li
141.615 54.6733 li
141.666 54.5732 li
141.766 54.4233 li
141.815 54.3232 li
141.916 54.2236 li
142.016 54.1235 li
142.065 53.9736 li
142.166 53.8735 li
142.216 53.7734 li
142.315 53.6733 li
142.365 53.5234 li
142.466 53.4233 li
142.565 53.3232 li
142.615 53.2236 li
142.716 53.0732 li
142.766 52.9736 li
142.865 52.8735 li
142.916 52.7734 li
143.016 52.6235 li
143.115 52.5234 li
143.166 52.4233 li
143.266 52.3232 li
143.315 52.2236 li
143.416 52.0732 li
143.466 51.9736 li
143.565 51.8735 li
143.666 51.7734 li
143.716 51.6235 li
143.815 51.5234 li
143.865 51.4233 li
143.966 51.3232 li
144.016 51.1733 li
144.115 51.0732 li
144.166 50.9731 li
144.266 50.8735 li
144.365 50.7231 li
144.416 50.6235 li
144.516 50.5234 li
144.565 50.4233 li
144.666 50.2734 li
144.716 50.1733 li
144.815 50.0732 li
144.916 49.9731 li
144.966 49.873 li
145.065 49.7231 li
145.115 49.623 li
145.216 49.5234 li
145.266 49.4233 li
145.365 49.2734 li
145.466 49.1733 li
145.516 49.0732 li
145.615 48.9731 li
145.666 48.8232 li
145.766 48.7231 li
145.815 48.623 li
145.916 48.5234 li
145.966 48.373 li
146.065 48.2734 li
146.166 48.1733 li
146.216 48.0732 li
146.315 47.9233 li
146.365 47.8232 li
146.466 47.7231 li
130.166 71.0234 mo
130.266 70.8735 li
130.315 70.7734 li
130.416 70.6738 li
130.466 70.5737 li
130.565 70.4238 li
130.666 70.3237 li
130.716 70.2236 li
130.815 70.1235 li
130.865 69.9736 li
130.966 69.8735 li
131.016 69.7734 li
131.115 69.6733 li
131.216 69.5234 li
131.266 69.4233 li
131.365 69.3237 li
131.416 69.2236 li
131.516 69.0737 li
131.565 68.9736 li
131.666 68.8735 li
131.766 68.7734 li
131.815 68.6733 li
131.916 68.5234 li
131.966 68.4233 li
132.065 68.3237 li
132.115 68.2236 li
132.216 68.0732 li
132.266 67.9736 li
132.365 67.8735 li
132.466 67.7734 li
132.516 67.6235 li
132.615 67.5234 li
132.666 67.4233 li
132.766 67.3232 li
132.815 67.1733 li
132.916 67.0732 li
133.016 66.9736 li
133.065 66.8735 li
133.166 66.7236 li
133.216 66.6235 li
133.315 66.5234 li
133.365 66.4233 li
133.466 66.3232 li
133.565 66.1733 li
133.615 66.0732 li
133.716 65.9736 li
133.766 65.8735 li
133.865 65.7236 li
133.916 65.6235 li
134.016 65.5234 li
134.065 65.4233 li
134.166 65.2734 li
134.266 65.1733 li
134.315 65.0732 li
134.416 64.9736 li
134.466 64.8232 li
134.565 64.7236 li
134.615 64.6235 li
134.716 64.5234 li
134.815 64.3735 li
134.865 64.2734 li
134.966 64.1733 li
135.016 64.0732 li
135.115 63.9736 li
135.166 63.8232 li
135.266 63.7231 li
135.365 63.6235 li
135.416 63.5234 li
135.516 63.3735 li
135.565 63.2734 li
135.666 63.1733 li
135.716 63.0732 li
135.815 62.9233 li
135.865 62.8232 li
135.966 62.7231 li
136.065 62.6235 li
136.115 62.4731 li
136.216 62.3735 li
136.266 62.2734 li
136.365 62.1733 li
136.416 62.0234 li
136.516 61.9233 li
136.615 61.8232 li
136.666 61.7231 li
136.766 61.623 li
136.815 61.4731 li
136.916 61.373 li
136.966 61.2734 li
137.065 61.1733 li
137.166 61.0234 li
137.216 60.9233 li
137.315 60.8232 li
137.365 60.7231 li
137.466 60.5732 li
137.516 60.4731 li
137.615 60.373 li
137.716 60.2734 li
137.766 60.123 li
137.865 60.0234 li
137.916 59.9233 li
138.016 59.8232 li
138.065 59.6733 li
138.166 59.5732 li
138.216 59.4731 li
138.315 59.373 li
122.016 82.6235 mo
122.116 82.5234 li
122.166 82.4238 li
122.266 82.3237 li
122.366 82.1738 li
122.416 82.0737 li
122.516 81.9736 li
122.565 81.8735 li
122.666 81.7236 li
122.716 81.6235 li
122.815 81.5234 li
122.916 81.4238 li
122.966 81.2734 li
123.065 81.1738 li
123.116 81.0737 li
123.216 80.9736 li
123.266 80.8237 li
123.366 80.7236 li
123.466 80.6235 li
123.516 80.5234 li
123.616 80.4233 li
123.666 80.2734 li
123.766 80.1733 li
123.815 80.0737 li
123.916 79.9736 li
123.966 79.8237 li
124.065 79.7236 li
124.166 79.6235 li
124.216 79.5234 li
124.315 79.3735 li
124.366 79.2734 li
124.466 79.1733 li
124.516 79.0732 li
124.616 78.9233 li
124.716 78.8232 li
124.766 78.7236 li
124.866 78.6235 li
124.916 78.4736 li
125.016 78.3735 li
125.065 78.2734 li
125.166 78.1733 li
125.266 78.0732 li
125.315 77.9233 li
125.416 77.8232 li
125.466 77.7236 li
125.565 77.6235 li
125.616 77.4736 li
125.716 77.3735 li
125.815 77.2734 li
125.866 77.1733 li
125.966 77.0234 li
126.016 76.9233 li
126.116 76.8232 li
126.166 76.7236 li
126.266 76.5732 li
126.315 76.4736 li
126.416 76.3735 li
126.516 76.2734 li
126.565 76.1235 li
126.666 76.0234 li
126.716 75.9233 li
126.815 75.8232 li
126.866 75.7236 li
126.966 75.5732 li
127.065 75.4736 li
127.116 75.3735 li
127.216 75.2734 li
127.266 75.1235 li
127.366 75.0234 li
127.416 74.9233 li
127.516 74.8232 li
127.616 74.6733 li
127.666 74.5732 li
127.766 74.4731 li
127.815 74.3735 li
127.916 74.2231 li
127.966 74.1235 li
128.065 74.0234 li
128.116 73.9233 li
128.216 73.7734 li
128.315 73.6733 li
128.366 73.5732 li
128.466 73.4731 li
128.516 73.373 li
128.616 73.2231 li
128.666 73.123 li
128.766 73.0234 li
128.866 72.9233 li
128.916 72.7734 li
129.016 72.6733 li
129.065 72.5732 li
129.166 72.4731 li
129.216 72.3232 li
129.315 72.2231 li
129.416 72.123 li
129.466 72.0234 li
129.565 71.873 li
129.616 71.7734 li
129.716 71.6733 li
129.766 71.5732 li
129.865 71.4233 li
129.916 71.3232 li
130.016 71.2231 li
130.115 71.123 li
130.166 71.0234 li
113.916 94.2734 mo
113.966 94.1738 li
114.065 94.0737 li
114.116 93.9238 li
114.216 93.8237 li
114.266 93.7236 li
114.366 93.6235 li
114.416 93.4736 li
114.516 93.3735 li
114.616 93.2734 li
114.666 93.1738 li
114.766 93.0234 li
114.815 92.9233 li
114.916 92.8237 li
114.966 92.7236 li
115.065 92.5737 li
115.166 92.4736 li
115.216 92.3735 li
115.315 92.2734 li
115.366 92.1733 li
115.466 92.0234 li
115.516 91.9233 li
115.616 91.8237 li
115.716 91.7236 li
115.766 91.5737 li
115.866 91.4736 li
115.916 91.3735 li
116.016 91.2734 li
116.065 91.1235 li
116.166 91.0234 li
116.216 90.9233 li
116.315 90.8232 li
116.416 90.6733 li
116.466 90.5732 li
116.565 90.4736 li
116.616 90.3735 li
116.716 90.2236 li
116.766 90.1235 li
116.866 90.0234 li
116.966 89.9233 li
117.016 89.8232 li
117.116 89.6733 li
117.166 89.5732 li
117.266 89.4736 li
117.315 89.3735 li
117.416 89.2236 li
117.516 89.1235 li
117.565 89.0234 li
117.666 88.9233 li
117.716 88.7734 li
117.815 88.6733 li
117.866 88.5732 li
117.966 88.4736 li
118.016 88.3232 li
118.116 88.2236 li
118.216 88.1235 li
118.266 88.0234 li
118.366 87.8735 li
118.416 87.7734 li
118.516 87.6733 li
118.565 87.5732 li
118.666 87.4736 li
118.766 87.3232 li
118.815 87.2236 li
118.916 87.1235 li
118.966 87.0234 li
119.065 86.8735 li
119.116 86.7734 li
119.216 86.6733 li
119.315 86.5732 li
119.366 86.4233 li
119.466 86.3232 li
119.516 86.2231 li
119.616 86.1235 li
119.666 85.9731 li
119.766 85.8735 li
119.866 85.7734 li
119.916 85.6733 li
120.016 85.5234 li
120.065 85.4233 li
120.166 85.3232 li
120.216 85.2231 li
120.315 85.123 li
120.366 84.9731 li
120.466 84.873 li
120.565 84.7734 li
120.616 84.6733 li
120.716 84.5234 li
120.766 84.4233 li
120.866 84.3232 li
120.916 84.2231 li
121.016 84.0732 li
121.116 83.9731 li
121.166 83.873 li
121.266 83.7734 li
121.315 83.623 li
121.416 83.5234 li
121.466 83.4233 li
121.565 83.3232 li
121.666 83.1733 li
121.716 83.0732 li
121.815 82.9731 li
121.866 82.873 li
121.966 82.7734 li
122.016 82.623 li
105.766 105.923 mo
105.815 105.824 li
105.916 105.673 li
105.966 105.574 li
106.065 105.474 li
106.116 105.375 li
106.216 105.224 li
106.315 105.125 li
106.366 105.023 li
106.466 104.923 li
106.516 104.773 li
106.616 104.673 li
106.666 104.574 li
106.766 104.474 li
106.866 104.375 li
106.916 104.224 li
107.016 104.125 li
107.065 104.023 li
107.166 103.923 li
107.216 103.773 li
107.315 103.673 li
107.416 103.574 li
107.466 103.474 li
107.565 103.324 li
107.616 103.224 li
107.716 103.125 li
107.766 103.023 li
107.866 102.875 li
107.966 102.773 li
108.016 102.673 li
108.116 102.574 li
108.166 102.423 li
108.266 102.324 li
108.315 102.224 li
108.416 102.125 li
108.466 101.974 li
108.565 101.875 li
108.666 101.773 li
108.716 101.673 li
108.815 101.574 li
108.866 101.423 li
108.966 101.324 li
109.016 101.224 li
109.116 101.125 li
109.216 100.974 li
109.266 100.875 li
109.366 100.775 li
109.416 100.673 li
109.516 100.525 li
109.565 100.423 li
109.666 100.324 li
109.766 100.224 li
109.815 100.074 li
109.916 99.9741 li
109.966 99.8745 li
110.065 99.7749 li
110.116 99.6245 li
110.216 99.5249 li
110.266 99.4233 li
110.366 99.3237 li
110.466 99.2241 li
110.516 99.0737 li
110.616 98.9741 li
110.666 98.8745 li
110.766 98.7749 li
110.815 98.6245 li
110.916 98.5249 li
111.016 98.4233 li
111.065 98.3237 li
111.166 98.1733 li
111.216 98.0737 li
111.315 97.9736 li
111.366 97.874 li
111.466 97.7236 li
111.565 97.624 li
111.616 97.5244 li
111.716 97.4238 li
111.766 97.2744 li
111.866 97.1743 li
111.916 97.0742 li
112.016 96.9741 li
112.065 96.874 li
112.166 96.7241 li
112.266 96.624 li
112.315 96.5244 li
112.416 96.4243 li
112.466 96.2744 li
112.565 96.1743 li
112.616 96.0742 li
112.716 95.9741 li
112.815 95.8242 li
112.866 95.7241 li
112.966 95.624 li
113.016 95.5244 li
113.116 95.374 li
113.166 95.2744 li
113.266 95.1743 li
113.366 95.0742 li
113.416 94.9243 li
113.516 94.8242 li
113.565 94.7241 li
113.666 94.624 li
113.716 94.5244 li
113.815 94.374 li
113.916 94.2739 li
97.6157 117.574 mo
97.6655 117.423 li
97.7656 117.324 li
97.8657 117.224 li
97.9155 117.125 li
98.0156 116.974 li
98.0654 116.875 li
98.1655 116.773 li
98.2158 116.673 li
98.3154 116.523 li
98.3657 116.423 li
98.4658 116.324 li
98.5654 116.224 li
98.6157 116.125 li
98.7158 115.974 li
98.7656 115.875 li
98.8657 115.773 li
98.9155 115.673 li
99.0156 115.523 li
99.1157 115.423 li
99.1655 115.324 li
99.2656 115.224 li
99.3154 115.074 li
99.4155 114.974 li
99.4658 114.875 li
99.5654 114.773 li
99.6655 114.625 li
99.7158 114.523 li
99.8154 114.423 li
99.8657 114.324 li
99.9658 114.173 li
100.016 114.074 li
100.116 113.974 li
100.216 113.875 li
100.266 113.773 li
100.366 113.625 li
100.416 113.523 li
100.516 113.423 li
100.565 113.324 li
100.666 113.173 li
100.716 113.074 li
100.815 112.974 li
100.916 112.875 li
100.966 112.724 li
101.065 112.625 li
101.116 112.525 li
101.216 112.423 li
101.266 112.275 li
101.366 112.173 li
101.466 112.074 li
101.516 111.974 li
101.616 111.824 li
101.666 111.724 li
101.766 111.625 li
101.815 111.525 li
101.916 111.423 li
102.016 111.275 li
102.065 111.173 li
102.166 111.074 li
102.216 110.974 li
102.315 110.824 li
102.366 110.724 li
102.466 110.625 li
102.516 110.525 li
102.616 110.375 li
102.716 110.275 li
102.766 110.173 li
102.866 110.074 li
102.916 109.923 li
103.016 109.824 li
103.065 109.724 li
103.166 109.625 li
103.266 109.474 li
103.315 109.375 li
103.416 109.275 li
103.466 109.173 li
103.565 109.074 li
103.616 108.923 li
103.716 108.824 li
103.815 108.724 li
103.866 108.625 li
103.966 108.474 li
104.016 108.375 li
104.116 108.275 li
104.166 108.173 li
104.266 108.025 li
104.315 107.923 li
104.416 107.824 li
104.516 107.724 li
104.565 107.574 li
104.666 107.474 li
104.716 107.375 li
104.815 107.275 li
104.866 107.125 li
104.966 107.025 li
105.065 106.925 li
105.116 106.824 li
105.216 106.724 li
105.266 106.574 li
105.366 106.474 li
105.416 106.375 li
105.516 106.275 li
105.616 106.125 li
105.666 106.025 li
105.766 105.925 li
89.4658 129.173 mo
89.5654 129.074 li
89.6157 128.974 li
89.7158 128.875 li
89.7656 128.724 li
89.8657 128.625 li
89.9155 128.523 li
90.0156 128.423 li
90.1157 128.273 li
90.1655 128.173 li
90.2656 128.074 li
90.3154 127.974 li
90.4155 127.875 li
90.4658 127.724 li
90.5654 127.625 li
90.6157 127.523 li
90.7158 127.423 li
90.8154 127.273 li
90.8657 127.173 li
90.9658 127.074 li
91.0156 126.974 li
91.1157 126.824 li
91.1655 126.724 li
91.2656 126.625 li
91.3657 126.523 li
91.4155 126.375 li
91.5156 126.273 li
91.5654 126.173 li
91.6655 126.074 li
91.7158 125.923 li
91.8154 125.824 li
91.9155 125.724 li
91.9658 125.625 li
92.0654 125.523 li
92.1157 125.375 li
92.2158 125.273 li
92.2656 125.173 li
92.3657 125.074 li
92.4155 124.923 li
92.5156 124.824 li
92.6157 124.724 li
92.6655 124.625 li
92.7656 124.474 li
92.8154 124.375 li
92.9155 124.275 li
92.9658 124.173 li
93.0654 124.025 li
93.1655 123.923 li
93.2158 123.824 li
93.3154 123.724 li
93.3657 123.574 li
93.4658 123.474 li
93.5156 123.375 li
93.6157 123.275 li
93.7158 123.173 li
93.7656 123.025 li
93.8657 122.923 li
93.9155 122.824 li
94.0156 122.724 li
94.0654 122.574 li
94.1655 122.474 li
94.2656 122.375 li
94.3154 122.275 li
94.4155 122.125 li
94.4658 122.025 li
94.5654 121.923 li
94.6157 121.824 li
94.7158 121.673 li
94.7656 121.574 li
94.8657 121.474 li
94.9658 121.375 li
95.0156 121.224 li
95.1157 121.125 li
95.1655 121.025 li
95.2656 120.923 li
95.3154 120.824 li
95.4155 120.673 li
95.5156 120.574 li
95.5654 120.474 li
95.6655 120.375 li
95.7158 120.224 li
95.8154 120.125 li
95.8657 120.025 li
95.9658 119.923 li
96.0654 119.775 li
96.1157 119.673 li
96.2158 119.574 li
96.2656 119.474 li
96.3657 119.324 li
96.4155 119.224 li
96.5156 119.125 li
96.5654 119.025 li
96.6655 118.875 li
96.7656 118.775 li
96.8154 118.673 li
96.9155 118.574 li
96.9658 118.474 li
97.0654 118.324 li
97.1157 118.224 li
97.2158 118.125 li
97.3159 118.025 li
97.3657 117.875 li
97.4658 117.775 li
97.5156 117.675 li
97.6157 117.574 li
81.3154 140.824 mo
81.4155 140.724 li
81.4658 140.625 li
81.5654 140.474 li
81.6157 140.375 li
81.7158 140.273 li
81.8154 140.173 li
81.8657 140.023 li
81.9658 139.923 li
82.0156 139.824 li
82.1157 139.724 li
82.1655 139.625 li
82.2656 139.474 li
82.3657 139.375 li
82.4155 139.273 li
82.5156 139.173 li
82.5654 139.023 li
82.6655 138.923 li
82.7158 138.824 li
82.8154 138.724 li
82.8657 138.574 li
82.9658 138.474 li
83.0654 138.375 li
83.1157 138.273 li
83.2158 138.125 li
83.2656 138.023 li
83.3657 137.923 li
83.4155 137.824 li
83.5156 137.673 li
83.6157 137.574 li
83.6655 137.474 li
83.7656 137.375 li
83.8154 137.273 li
83.9155 137.125 li
83.9658 137.023 li
84.0654 136.923 li
84.1655 136.824 li
84.2158 136.673 li
84.3154 136.574 li
84.3657 136.474 li
84.4658 136.375 li
84.5156 136.224 li
84.6157 136.125 li
84.6655 136.025 li
84.7656 135.923 li
84.8657 135.775 li
84.9155 135.673 li
85.0156 135.574 li
85.0654 135.474 li
85.1655 135.324 li
85.2158 135.224 li
85.3154 135.125 li
85.4155 135.025 li
85.4658 134.923 li
85.5654 134.775 li
85.6157 134.673 li
85.7158 134.574 li
85.7656 134.474 li
85.8657 134.324 li
85.9658 134.224 li
86.0156 134.125 li
86.1157 134.025 li
86.1655 133.875 li
86.2656 133.775 li
86.3154 133.673 li
86.4155 133.574 li
86.4658 133.423 li
86.5654 133.324 li
86.6655 133.224 li
86.7158 133.125 li
86.8154 132.974 li
86.8657 132.875 li
86.9658 132.775 li
87.0156 132.673 li
87.1157 132.574 li
87.2158 132.423 li
87.2656 132.324 li
87.3657 132.224 li
87.4155 132.125 li
87.5156 131.974 li
87.5654 131.875 li
87.6655 131.775 li
87.7656 131.673 li
87.8154 131.525 li
87.9155 131.423 li
87.9658 131.324 li
88.0654 131.224 li
88.1157 131.074 li
88.2158 130.974 li
88.3154 130.875 li
88.3657 130.775 li
88.4658 130.625 li
88.5156 130.525 li
88.6157 130.425 li
88.6655 130.324 li
88.7656 130.224 li
88.8154 130.074 li
88.9155 129.974 li
89.0156 129.875 li
89.0654 129.775 li
89.1655 129.625 li
89.2158 129.525 li
89.3154 129.425 li
89.3657 129.324 li
89.4658 129.175 li
73.1655 152.474 mo
73.2656 152.375 li
73.3154 152.224 li
73.4155 152.125 li
73.5156 152.023 li
73.5654 151.923 li
73.6655 151.773 li
73.7158 151.673 li
73.8154 151.574 li
73.8657 151.474 li
73.9658 151.375 li
74.0654 151.224 li
74.1157 151.125 li
74.2158 151.023 li
74.2656 150.923 li
74.3657 150.773 li
74.4155 150.673 li
74.5156 150.574 li
74.5654 150.474 li
74.6655 150.324 li
74.7656 150.224 li
74.8154 150.125 li
74.9155 150.023 li
74.9658 149.875 li
75.0654 149.773 li
75.1157 149.673 li
75.2158 149.574 li
75.3154 149.423 li
75.3657 149.324 li
75.4658 149.224 li
75.5156 149.125 li
75.6157 149.023 li
75.6655 148.875 li
75.7656 148.773 li
75.8657 148.673 li
75.9155 148.574 li
76.0156 148.423 li
76.0654 148.324 li
76.1655 148.224 li
76.2158 148.125 li
76.3154 147.974 li
76.4155 147.875 li
76.4658 147.775 li
76.5654 147.673 li
76.6157 147.525 li
76.7158 147.423 li
76.7656 147.324 li
76.8657 147.224 li
76.9155 147.074 li
77.0156 146.974 li
77.1157 146.875 li
77.1655 146.775 li
77.2656 146.673 li
77.3154 146.525 li
77.4155 146.423 li
77.4658 146.324 li
77.5654 146.224 li
77.6655 146.074 li
77.7158 145.974 li
77.8154 145.875 li
77.8657 145.775 li
77.9658 145.625 li
78.0156 145.525 li
78.1157 145.423 li
78.2158 145.324 li
78.2656 145.173 li
78.3657 145.074 li
78.4155 144.974 li
78.5156 144.875 li
78.5654 144.724 li
78.6655 144.625 li
78.7158 144.525 li
78.8154 144.423 li
78.9155 144.324 li
78.9658 144.173 li
79.0654 144.074 li
79.1157 143.974 li
79.2158 143.875 li
79.2656 143.724 li
79.3657 143.625 li
79.4658 143.525 li
79.5156 143.423 li
79.6157 143.275 li
79.6655 143.173 li
79.7656 143.074 li
79.8154 142.974 li
79.9155 142.824 li
80.0156 142.724 li
80.0654 142.625 li
80.1655 142.525 li
80.2158 142.375 li
80.3154 142.275 li
80.3657 142.173 li
80.4658 142.074 li
80.5156 141.974 li
80.6157 141.824 li
80.7158 141.724 li
80.7656 141.625 li
80.8657 141.525 li
80.9155 141.375 li
81.0156 141.275 li
81.0654 141.175 li
81.1655 141.074 li
81.2656 140.925 li
81.3154 140.824 li
65.5654 163.324 mo
65.6655 163.224 li
65.7656 163.125 li
65.8154 162.974 li
65.9155 162.875 li
65.9658 162.773 li
66.0654 162.673 li
66.1157 162.523 li
66.2158 162.423 li
66.3154 162.324 li
66.3657 162.224 li
66.4658 162.074 li
66.5156 161.974 li
66.6157 161.875 li
66.6655 161.773 li
66.7656 161.625 li
66.8154 161.523 li
66.9155 161.423 li
67.0156 161.324 li
67.0654 161.173 li
67.1655 161.074 li
67.2158 160.974 li
67.3154 160.875 li
67.3657 160.773 li
67.4658 160.625 li
67.5654 160.523 li
67.6157 160.423 li
67.7158 160.324 li
67.7656 160.173 li
67.8657 160.074 li
67.9155 159.974 li
68.0156 159.875 li
68.1157 159.724 li
68.1655 159.625 li
68.2656 159.523 li
68.3154 159.423 li
68.4155 159.273 li
68.4658 159.173 li
68.5654 159.074 li
68.6157 158.974 li
68.7158 158.824 li
68.8154 158.724 li
68.8657 158.625 li
68.9658 158.523 li
69.0156 158.423 li
69.1157 158.275 li
69.1655 158.173 li
69.2656 158.074 li
69.3657 157.974 li
69.4155 157.824 li
69.5156 157.724 li
69.5654 157.625 li
69.6655 157.525 li
69.7158 157.375 li
69.8154 157.275 li
69.9155 157.173 li
69.9658 157.074 li
70.0654 156.923 li
70.1157 156.824 li
70.2158 156.724 li
70.2656 156.625 li
70.3657 156.474 li
70.4658 156.375 li
70.5156 156.275 li
70.6157 156.173 li
70.6655 156.074 li
70.7656 155.923 li
70.8154 155.824 li
70.9155 155.724 li
70.9658 155.625 li
71.0654 155.474 li
71.1655 155.375 li
71.2158 155.275 li
71.3154 155.173 li
71.3657 155.025 li
71.4658 154.923 li
71.5156 154.824 li
71.6157 154.724 li
71.7158 154.574 li
71.7656 154.474 li
71.8657 154.375 li
71.9155 154.275 li
72.0156 154.125 li
72.0654 154.025 li
72.1655 153.923 li
72.2656 153.824 li
72.3154 153.724 li
72.4155 153.574 li
72.4658 153.474 li
72.5659 153.375 li
72.6157 153.275 li
72.7158 153.125 li
72.7656 153.025 li
72.8657 152.923 li
72.9658 152.824 li
73.0156 152.673 li
73.1157 152.574 li
73.1655 152.474 li
64.9658 23.5737 mo
65.0156 23.4736 li
65.1157 23.3735 li
65.2158 23.2734 li
65.2656 23.1235 li
65.3657 23.0234 li
65.4155 22.9238 li
56.8154 35.2236 mo
56.9155 35.1235 li
56.9658 35.0234 li
57.0654 34.8735 li
57.1157 34.7734 li
57.2158 34.6738 li
57.2656 34.5737 li
57.3657 34.4238 li
57.4658 34.3237 li
57.5156 34.2236 li
57.6157 34.1235 li
57.6655 34.0234 li
57.7656 33.8735 li
57.8154 33.7734 li
57.9155 33.6733 li
58.0156 33.5737 li
58.0654 33.4233 li
58.1655 33.3237 li
58.2158 33.2236 li
58.3154 33.1235 li
58.3657 32.9736 li
58.4658 32.8735 li
58.5654 32.7734 li
58.6157 32.6733 li
58.7158 32.5234 li
58.7656 32.4233 li
58.8657 32.3237 li
58.9155 32.2236 li
59.0156 32.0732 li
59.0654 31.9736 li
59.1655 31.8735 li
59.2656 31.7734 li
59.3154 31.6733 li
59.4155 31.5234 li
59.4658 31.4233 li
59.5654 31.3232 li
59.6157 31.2236 li
59.7158 31.0732 li
59.8154 30.9736 li
59.8657 30.8735 li
59.9658 30.7734 li
60.0156 30.6235 li
60.1157 30.5234 li
60.1655 30.4233 li
60.2656 30.3232 li
60.3657 30.1733 li
60.4155 30.0732 li
60.5156 29.9736 li
60.5654 29.8735 li
60.6655 29.7236 li
60.7158 29.6235 li
60.8154 29.5234 li
60.8657 29.4233 li
60.9658 29.3232 li
61.0654 29.1733 li
61.1157 29.0732 li
61.2158 28.9736 li
61.2656 28.8735 li
61.3657 28.7236 li
61.4155 28.6235 li
61.5156 28.5234 li
61.6157 28.4233 li
61.6655 28.2734 li
61.7656 28.1733 li
61.8154 28.0732 li
61.9155 27.9731 li
61.9658 27.8232 li
62.0654 27.7231 li
62.1655 27.6235 li
62.2158 27.5234 li
62.3154 27.3735 li
62.3657 27.2734 li
62.4658 27.1733 li
62.5156 27.0732 li
62.6157 26.9731 li
62.6655 26.8232 li
62.7656 26.7231 li
62.8657 26.6235 li
62.9155 26.5234 li
63.0156 26.3735 li
63.0654 26.2734 li
63.1655 26.1733 li
63.2158 26.0732 li
63.3154 25.9233 li
63.4155 25.8232 li
63.4658 25.7231 li
63.5654 25.623 li
63.6157 25.4731 li
63.7158 25.373 li
63.7656 25.2734 li
63.8657 25.1733 li
63.9658 25.0234 li
64.0156 24.9233 li
64.1157 24.8232 li
64.1655 24.7231 li
64.2656 24.623 li
64.3159 24.4731 li
64.4155 24.373 li
64.5156 24.2734 li
64.5659 24.1733 li
64.6655 24.0234 li
64.7158 23.9233 li
64.8159 23.8232 li
64.8657 23.7231 li
64.9658 23.5732 li
48.6655 46.8735 mo
48.7656 46.7734 li
48.8154 46.6235 li
48.9155 46.5234 li
48.9658 46.4238 li
49.0654 46.3237 li
49.1655 46.1738 li
49.2158 46.0737 li
49.3154 45.9736 li
49.3657 45.8735 li
49.4658 45.7734 li
49.5156 45.6235 li
49.6157 45.5234 li
49.7158 45.4233 li
49.7656 45.3237 li
49.8657 45.1733 li
49.9155 45.0737 li
50.0156 44.9736 li
50.0654 44.8735 li
50.1655 44.7236 li
50.2656 44.6235 li
50.3154 44.5234 li
50.4155 44.4233 li
50.4658 44.2734 li
50.5654 44.1733 li
50.6157 44.0732 li
50.7158 43.9736 li
50.8154 43.8232 li
50.8657 43.7236 li
50.9658 43.6235 li
51.0156 43.5234 li
51.1157 43.4233 li
51.1655 43.2734 li
51.2656 43.1733 li
51.3154 43.0732 li
51.4155 42.9736 li
51.5156 42.8232 li
51.5654 42.7236 li
51.6655 42.6235 li
51.7158 42.5234 li
51.8154 42.3735 li
51.8657 42.2734 li
51.9658 42.1733 li
52.0654 42.0732 li
52.1157 41.9233 li
52.2158 41.8232 li
52.2656 41.7236 li
52.3657 41.6235 li
52.4155 41.4736 li
52.5156 41.3735 li
52.6157 41.2734 li
52.6655 41.1733 li
52.7656 41.0732 li
52.8154 40.9233 li
52.9155 40.8232 li
52.9658 40.7236 li
53.0654 40.6235 li
53.1157 40.4736 li
53.2158 40.3735 li
53.3154 40.2734 li
53.3657 40.1733 li
53.4658 40.0234 li
53.5156 39.9233 li
53.6157 39.8232 li
53.6655 39.7231 li
53.7656 39.5732 li
53.8657 39.4731 li
53.9155 39.3735 li
54.0156 39.2734 li
54.0654 39.1235 li
54.1655 39.0234 li
54.2158 38.9233 li
54.3154 38.8232 li
54.4155 38.7231 li
54.4658 38.5732 li
54.5654 38.4731 li
54.6157 38.3735 li
54.7158 38.2734 li
54.7656 38.123 li
54.8657 38.0234 li
54.9155 37.9233 li
55.0156 37.8232 li
55.1157 37.6733 li
55.1655 37.5732 li
55.2656 37.4731 li
55.3154 37.373 li
55.4155 37.2231 li
55.4658 37.123 li
55.5659 37.0234 li
55.6655 36.9233 li
55.7158 36.7734 li
55.8159 36.6733 li
55.8657 36.5732 li
55.9658 36.4731 li
56.0156 36.373 li
56.1157 36.2231 li
56.2158 36.123 li
56.2656 36.0234 li
56.3657 35.9233 li
56.4155 35.7734 li
56.5156 35.6733 li
56.5659 35.5732 li
56.6655 35.4731 li
56.7656 35.3232 li
56.8159 35.2231 li
40.5156 58.5234 mo
40.6157 58.3735 li
40.7158 58.2734 li
40.7656 58.1738 li
40.8657 58.0737 li
40.9155 57.9238 li
41.0156 57.8237 li
41.0654 57.7236 li
41.1655 57.6235 li
41.2158 57.5234 li
41.3154 57.3735 li
41.4155 57.2734 li
41.4658 57.1738 li
41.5654 57.0737 li
41.6157 56.9233 li
41.7158 56.8237 li
41.7656 56.7236 li
41.8657 56.6235 li
41.9658 56.4736 li
42.0156 56.3735 li
42.1157 56.2734 li
42.1655 56.1733 li
42.2656 56.0234 li
42.3154 55.9233 li
42.4155 55.8237 li
42.5156 55.7236 li
42.5654 55.5737 li
42.6655 55.4736 li
42.7158 55.3735 li
42.8154 55.2734 li
42.8657 55.1733 li
42.9658 55.0234 li
43.0156 54.9233 li
43.1157 54.8232 li
43.2158 54.7236 li
43.2656 54.5732 li
43.3657 54.4736 li
43.4155 54.3735 li
43.5156 54.2734 li
43.5654 54.1235 li
43.6655 54.0234 li
43.7656 53.9233 li
43.8154 53.8232 li
43.9155 53.6733 li
43.9658 53.5732 li
44.0654 53.4736 li
44.1157 53.3735 li
44.2158 53.2236 li
44.3154 53.1235 li
44.3657 53.0234 li
44.4658 52.9233 li
44.5156 52.8232 li
44.6157 52.6733 li
44.6655 52.5732 li
44.7656 52.4736 li
44.8657 52.3735 li
44.9155 52.2236 li
45.0156 52.1235 li
45.0654 52.0234 li
45.1655 51.9233 li
45.2158 51.7734 li
45.3154 51.6733 li
45.3657 51.5732 li
45.4658 51.4736 li
45.5654 51.3232 li
45.6157 51.2236 li
45.7158 51.1235 li
45.7656 51.0234 li
45.8657 50.8735 li
45.9155 50.7734 li
46.0156 50.6733 li
46.1157 50.5732 li
46.1655 50.4731 li
46.2656 50.3232 li
46.3154 50.2231 li
46.4155 50.1235 li
46.4658 50.0234 li
46.5654 49.8735 li
46.6655 49.7734 li
46.7158 49.6733 li
46.8154 49.5732 li
46.8657 49.4233 li
46.9658 49.3232 li
47.0156 49.2231 li
47.1157 49.123 li
47.1655 48.9731 li
47.2656 48.873 li
47.3657 48.7734 li
47.4155 48.6733 li
47.5156 48.5234 li
47.5654 48.4233 li
47.6655 48.3232 li
47.7158 48.2231 li
47.8154 48.123 li
47.9155 47.9731 li
47.9658 47.873 li
48.0659 47.7734 li
48.1157 47.6733 li
48.2158 47.5234 li
48.2656 47.4233 li
48.3657 47.3232 li
48.4658 47.2231 li
48.5156 47.0732 li
48.6157 46.9731 li
48.6655 46.873 li
32.4155 70.1235 mo
32.4658 70.0234 li
32.5654 69.9238 li
32.6157 69.8237 li
32.7158 69.6738 li
32.7656 69.5737 li
32.8657 69.4736 li
32.9658 69.3735 li
33.0156 69.2734 li
33.1157 69.1235 li
33.1655 69.0234 li
33.2656 68.9233 li
33.3154 68.8237 li
33.4155 68.6733 li
33.4658 68.5737 li
33.5654 68.4736 li
33.6655 68.3735 li
33.7158 68.2236 li
33.8154 68.1235 li
33.8657 68.0234 li
33.9658 67.9233 li
34.0156 67.7734 li
34.1157 67.6733 li
34.2158 67.5737 li
34.2656 67.4736 li
34.3657 67.3232 li
34.4155 67.2236 li
34.5156 67.1235 li
34.5654 67.0234 li
34.6655 66.9233 li
34.7656 66.7734 li
34.8154 66.6733 li
34.9155 66.5732 li
34.9658 66.4736 li
35.0654 66.3232 li
35.1157 66.2236 li
35.2158 66.1235 li
35.2656 66.0234 li
35.3657 65.8735 li
35.4658 65.7734 li
35.5156 65.6733 li
35.6157 65.5732 li
35.6655 65.4233 li
35.7656 65.3232 li
35.8154 65.2236 li
35.9155 65.1235 li
36.0156 64.9736 li
36.0654 64.8735 li
36.1655 64.7734 li
36.2158 64.6733 li
36.3154 64.5732 li
36.3657 64.4233 li
36.4658 64.3232 li
36.5654 64.2236 li
36.6157 64.1235 li
36.7158 63.9736 li
36.7656 63.8735 li
36.8657 63.7734 li
36.9155 63.6733 li
37.0156 63.5234 li
37.0654 63.4233 li
37.1655 63.3232 li
37.2656 63.2236 li
37.3154 63.0732 li
37.4155 62.9731 li
37.4658 62.8735 li
37.5654 62.7734 li
37.6157 62.6235 li
37.7158 62.5234 li
37.8154 62.4233 li
37.8657 62.3232 li
37.9658 62.2231 li
38.0156 62.0732 li
38.1157 61.9731 li
38.1655 61.8735 li
38.2656 61.7734 li
38.3657 61.6235 li
38.4155 61.5234 li
38.5156 61.4233 li
38.5654 61.3232 li
38.6655 61.1733 li
38.7158 61.0732 li
38.8154 60.9731 li
38.9155 60.873 li
38.9658 60.7231 li
39.0654 60.623 li
39.1157 60.5234 li
39.2158 60.4233 li
39.2656 60.2734 li
39.3657 60.1733 li
39.4155 60.0732 li
39.5156 59.9731 li
39.6157 59.873 li
39.6655 59.7231 li
39.7656 59.623 li
39.8154 59.5234 li
39.9155 59.4233 li
39.9658 59.2734 li
40.0654 59.1733 li
40.1655 59.0732 li
40.2158 58.9731 li
40.3154 58.8232 li
40.3657 58.7231 li
40.4658 58.623 li
40.5156 58.5234 li
24.2656 81.7734 mo
24.3154 81.6738 li
24.4155 81.5737 li
24.4658 81.4238 li
24.5654 81.3237 li
24.6655 81.2236 li
24.7158 81.1235 li
24.8154 81.0234 li
24.8657 80.8735 li
24.9658 80.7734 li
25.0156 80.6738 li
25.1157 80.5737 li
25.1655 80.4238 li
25.2656 80.3237 li
25.3657 80.2236 li
25.4155 80.1235 li
25.5156 79.9736 li
25.5654 79.8735 li
25.6655 79.7734 li
25.7158 79.6733 li
25.8154 79.5234 li
25.9155 79.4233 li
25.9658 79.3237 li
26.0654 79.2236 li
26.1157 79.0737 li
26.2158 78.9736 li
26.2656 78.8735 li
26.3657 78.7734 li
26.4658 78.6733 li
26.5156 78.5234 li
26.6157 78.4233 li
26.6655 78.3232 li
26.7656 78.2236 li
26.8154 78.0732 li
26.9155 77.9736 li
27.0156 77.8735 li
27.0654 77.7734 li
27.1655 77.6235 li
27.2158 77.5234 li
27.3154 77.4233 li
27.3657 77.3232 li
27.4658 77.1733 li
27.5156 77.0732 li
27.6157 76.9736 li
27.7158 76.8735 li
27.7656 76.7236 li
27.8657 76.6235 li
27.9155 76.5234 li
28.0156 76.4233 li
28.0654 76.3232 li
28.1655 76.1733 li
28.2656 76.0732 li
28.3154 75.9736 li
28.4155 75.8735 li
28.4658 75.7236 li
28.5654 75.6235 li
28.6157 75.5234 li
28.7158 75.4233 li
28.8154 75.2734 li
28.8657 75.1733 li
28.9658 75.0732 li
29.0156 74.9736 li
29.1157 74.8232 li
29.1655 74.7236 li
29.2656 74.6235 li
29.3154 74.5234 li
29.4155 74.3735 li
29.5156 74.2734 li
29.5654 74.1733 li
29.6655 74.0732 li
29.7158 73.9731 li
29.8154 73.8232 li
29.8657 73.7231 li
29.9658 73.6235 li
30.0654 73.5234 li
30.1157 73.3735 li
30.2158 73.2734 li
30.2656 73.1733 li
30.3657 73.0732 li
30.4155 72.9233 li
30.5156 72.8232 li
30.6157 72.7231 li
30.6655 72.623 li
30.7656 72.4731 li
30.8154 72.373 li
30.9155 72.2734 li
30.9658 72.1733 li
31.0654 72.0234 li
31.1157 71.9233 li
31.2158 71.8232 li
31.3154 71.7231 li
31.3657 71.623 li
31.4658 71.4731 li
31.5156 71.373 li
31.6157 71.2734 li
31.6655 71.1733 li
31.7656 71.0234 li
31.8657 70.9233 li
31.9155 70.8232 li
32.0156 70.7231 li
32.0654 70.5732 li
32.1655 70.4731 li
32.2158 70.373 li
32.3159 70.2734 li
32.4155 70.123 li
16.2656 93.1738 mo
16.3657 93.0737 li
16.4155 92.9736 li
16.5156 92.8735 li
16.5654 92.7734 li
16.6655 92.6235 li
16.7158 92.5234 li
16.8154 92.4238 li
16.9155 92.3237 li
16.9658 92.1738 li
17.0654 92.0737 li
17.1157 91.9736 li
17.2158 91.8735 li
17.2656 91.7236 li
17.3657 91.6235 li
17.4155 91.5234 li
17.5156 91.4233 li
17.6157 91.2734 li
17.6655 91.1733 li
17.7656 91.0737 li
17.8154 90.9736 li
17.9155 90.8237 li
17.9658 90.7236 li
18.0654 90.6235 li
18.1655 90.5234 li
18.2158 90.4233 li
18.3154 90.2734 li
18.3657 90.1733 li
18.4658 90.0732 li
18.5156 89.9736 li
18.6157 89.8232 li
18.7158 89.7236 li
18.7656 89.6235 li
18.8657 89.5234 li
18.9155 89.3735 li
19.0156 89.2734 li
19.0654 89.1733 li
19.1655 89.0732 li
19.2158 88.9233 li
19.3154 88.8232 li
19.4155 88.7236 li
19.4658 88.6235 li
19.5654 88.4736 li
19.6157 88.3735 li
19.7158 88.2734 li
19.7656 88.1733 li
19.8657 88.0732 li
19.9658 87.9233 li
20.0156 87.8232 li
20.1157 87.7236 li
20.1655 87.6235 li
20.2656 87.4736 li
20.3154 87.3735 li
20.4155 87.2734 li
20.5156 87.1733 li
20.5654 87.0234 li
20.6655 86.9233 li
20.7158 86.8232 li
20.8154 86.7236 li
20.8657 86.5732 li
20.9658 86.4736 li
21.0654 86.3735 li
21.1157 86.2734 li
21.2158 86.1235 li
21.2656 86.0234 li
21.3657 85.9233 li
21.4155 85.8232 li
21.5156 85.7231 li
21.5654 85.5732 li
21.6655 85.4731 li
21.7656 85.3735 li
21.8154 85.2734 li
21.9155 85.1235 li
21.9658 85.0234 li
22.0654 84.9233 li
22.1157 84.8232 li
22.2158 84.6733 li
22.3154 84.5732 li
22.3657 84.4731 li
22.4658 84.373 li
22.5156 84.2231 li
22.6157 84.123 li
22.6655 84.0234 li
22.7656 83.9233 li
22.8657 83.7734 li
22.9155 83.6733 li
23.0156 83.5732 li
23.0654 83.4731 li
23.1655 83.373 li
23.2158 83.2231 li
23.3159 83.123 li
23.3657 83.0234 li
23.4658 82.9233 li
23.5659 82.7734 li
23.6157 82.6733 li
23.7158 82.5732 li
23.7656 82.4731 li
23.8657 82.3232 li
23.9155 82.2231 li
24.0156 82.123 li
24.1157 82.0234 li
24.1655 81.873 li
24.2656 81.7734 li
233.865 176.074 mo
253.815 176.074 li
@
0.5 lw
16.2656 3.67383 mo
16.2656 182.724 li
262.216 182.724 li
262.216 3.67383 li
16.2656 3.67383 li
16.2656 3.67383 li
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/DVPWEA+Helvetica*1 uf/DVPWEA+Helvetica uf/Helvetica uf/DVPWEB+Symbol*1 uf/DVPWEB+Symbol uf/Symbol ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Manoj Bhatt) ()%%Title: (fourier.eps)%%CreationDate: 10/4/10 2:21 PM%AI9_DataStream%Gb"-6LN`70dK$d1^cR'`9JdlSEPQ+(c8cJI)k1BTgmS'3gXST)#t[Z1s52Tpqop"[d-=G5\Z<<ThVrK4k]@%O`So]7[u_B]@Q*7A%,\$102X^-^leMq_U/r\)aek6h6p)EF,njul>)[!ufd-Ei4D`@?dU7AZ*k%oeUbqEIa-3%*fP@q1\_#Bj@#?#WV;>S-[+fJm=!@>"%5Q00;a-F6+NCLUae1iO\BI$rch4@RdNr.)#)g)IY$0#`?f'RTTB)S#PcFFUn'KhDjiZ;B$RNGGQNN^Ia`h;.WFeghC:T;h,UXp0(%Oab:$QdTu55_/\RTXIM6pP8\AEpd$TS]Jf=oJ`&\,iSm>La=hpFHMOhfp(Fg5@-l&h8scoS9B[?k5]5i9'VI`c)HAI)ipg>8U!:d%KO<i0Q:+(c;h/I.k"]M%mW:KUhC1^Vrp!,UagmJ%mI"@CS:$LYSorcj:5/61ZMRucnrt9.doheq]pSJgnb&O_0ZK0ZjKmlT8*\Jl%ptKPe#r%1orri.!+9ep:it#j]0P8t,_&.7]9IrY>Tij?irZdC/!24tmOYjQdhVd7.M$Q<0F;e.+#k8>7N4[%CY!*_EVj"J2JStt2%LTajgBf%JUBVnPFh2gtHLV=n[<uZ?Fb3U;<c&a%&qacJ=5Kj$R*COD.:8J!Y0LD\cYu4@K(-0)S%:"<*$l_%8#Z-,?EG&5<%-gFs%c1RabS2PHPM3pQ,qmX34cP2HjLAo0Pn=*%dD`/!<V%S+nO2Kk"*8\]qn2;=8DlZn5RXCAm6)dfjmSYJ^PtF?A<2s,5F_7sV-C]]E%Lci$5FZ'W(Z<8RZ=7?To8gPlc.`%IJ'"fZYTM2a#Dl_Df$GNZDiI/++^*,Wdr?_Cc/X!U4-$p_(g]W)"'T<?ITbNHBNKh).&]$,b%JJ#^ON13+bHjaG9?at_#_(X;+i'_=7&]$,Z)ud]Q(_a8JTLmjm;D9`uKeh1.4Cdsb4XVp1:aAkh?h,K\3U&]k46[\u*I?#nLm9+_%TG3=qI\A)DK4NKm*LSYW$`.6YCk`6qaL<iepk:dH*LVEP,s@#2n-c(#I.0d@O^JKH.qp)/A2jQPBDBC,N:`/r*D-pR0t<=-PMS[Q%8\[g.Uh2MlU]gQ"ARKTg1LYCp2&S8s$fckH-q3VE`^aE'^4foB"/Bp_).k\Y+cmp#&F=!gb]&8E)t]Y.$Gcm8(MlhQge$r?e4I7T%DU<G_,A_1lmnenL:2206PP=,[krGG2K$@iO$#E-A<W%p9Y<qX;)jcmgX$Tqt:($D&lt1LGi#d?Ki"2Z*AX43uQ$Im$0hB15$8bjl%=asSdUgEVg+N3b6pe/,k5lZZbH)(9`s,^]As!`H>5F4<s,YsZ>jBjrBmZkQJ?RA/.1E"beLAi\;a;a4oq,],1HfZpVkOOq^jGEGo%r2Wf<^%.NfMoku)5DQe%?S\hGT&#ODBRF9`PXniuYsc!g/f-:nEk5/N-H1);=tO9JEHm["B@-\JTDGb7X#qhAoL]u#/S*dT4'ri6%D?''PgLQi<2oS5sI73S'cMnCl3WBd9T_I7:CTCgHs"atV[`uNggiMTWUduU.f*iaS,ebo>C&0]udelhEZEXgC+WO+;^G/-=kmGG1%"FP&a9%B5`iDQVK/(tO+[JX<^Q)YaNT<,8?aZ&^sk,TsL+^?>46AD[p>`h38r@Y9UThi4;3#j@TEE6,A&1B$1&?%ldqFu\D!e6DF%&>uqZUP?51W!.a;U+P?8n5Y$u/2d`/oQ=0M2Ade_=dn-0\rp2Wqt)nN.fhe7cPNViraD1V54E&1a3q%"gjG==bRc09W8OjXb&cbe%W>WHB&u^rl!_2aea_E*_JVN\R1)(,3f<Y1>)S^D;'ItY]@$gq2Z[VBg-<u/:8LQ8<@q+%\H09K'`&&%"rtB4c2&5?=EUNni4Pc+u%d?tW4hA!8s%h']HHo!=7o0'!*/2J-I\_ud$dK&R/*!":qRkOU`b=4ka,CdZhJJrs#eX^OpSqL]0k#RakN44Uprn%&r@uNlgI_t\6%g5?+6*ND&q_Kh99%n<6"n)LV5<WKHVlku[33b,[K;5moORo!Ue;!#lrbKpWB`\8a?E'17!,*l'jn\f^%/n6$#.Fr[RXSRg_bOD-5%C6F@2M@Pp&"TG"_2<??+N&$'b4OM_[S`f0dK,@+PcW(/KKJF&=^(-/i"b(!lF?qF(@O`k)D(#*UoBdt@`FbKUR=$TNq,Z&-<&hcb%.).'5;2np&IDiMF.75)Aa"o&lU#KT_2Lc.Q)9s_aa0:956/dW@E%%aVPgmY;/T]qs1WPh8WofDgR.?MgmUT"fgk1s?8Sm^M8ujF8%P/i]NlTuRb-p`>bh3=fQ1mhHG6%cS(a$TDF6HA<Ub.L1lJ&TF,T(sjg!MM5J>B0ST.`7t&1dO#D=]6FW>32Ro_f4h;\n7[:o.VF(%MG"\KGuMtK_G`I^(T>W4TiU.:)VY@*outQ9<-c&b4dWF__EhMrNBDP6DF@W]\+'6H?=15u%/Woh$<P/afEb)Q?HMJ4dud=t>T$^d%QE($ZG4cfA2^ZRSebT2BmRf@I!nL0Nebi@+9R3,UStc1_qb!el&BT![Q[HVX@$U%f7ck'm;X-G$I>uVkr[&sZ<<YBD!q&)2MK-YL%#R1nmT)0^+96"lXgj#&tV2q9dOfsQna%LjKCWmf<fsH?,UaN6$"Wm.Qj"TVA,)//:3GMFg*L4+U/>4Qe(ABS\E#rTG'TNK2jQK1$%QEIGi$pnL#PWQst"+-f@Ije>5_Z`Jpi,:);>tb>tT$-sYZe5IM)Go(!q3`FQ24Is<NKmCd.`RON,&[aId2$;M6Mm-IqEfMRH:+AV%&DkK:5,j0u.RKG(F)s5]_s%Mt2`50hmtb7IOYM,VQ3k2=UlnHf[q*4-hoYYZe`n-%Y?9Nd5?DO1+S.fecUts[rLu1^K2"p3lU$a"%G?Mb.Kr=JsL2$#hLA[EsUu%mqJ'F%DPi4SFcd`d,KK"e<6sjTi>N%.t7?1da"=-C$p8q#nKuuBZ_c.D`,5DP@dg@W@T#s?sb+Pb*%"1]3OXVT3,W\SJF.`ogO%'<5cSiKJEYeA1=)WM,$#ZtH%[R\B'<0'[$X2,I,XiRf8Zeq^IU5T1iS/TVr;SH2nH`=#6QH-'S>Uequ%-r>b986^+ON+4=u05FdgmGV)'S7oXF.f#NJ8d^ds5FY::="JPrDVe$?iK7-ucb+t-2AlT0$u-+`$<1rloK'%[06>16nhmUDnpbr^%T9W=@)l@V[3G#L_p+iepOs61UR&`!>;TLQ;^e'6[!\`P5jMn@p]W.2>Z_rb:Q]A`GY4*2E$d*4u-H>^5PdDcQ>l6QAaJj/M'Xb9*%kW>o^L=^hZ2Gt&i=s*K<p:#Ve%,),rjo,f`a$/YndBG@'X>%ph][<8+V#?qWdrV+s1d>`oHc_8%_@#@5;A@U%3;@gXMVo43JQC`4%1<]EYq`i9d(UlOtKkb@#qp#lqkNSID$!TPhh_S@KR-^'F(ohl&)E0Ue6k`GoO(G,''i>=Wo2X2j.k:P"W`/%7ZIa\;.bk-]d/ThB%_(_*rC].DbGQtLu(8NMsZk/2<^1jMdAdi/SSjBpe'Y[s$;nB*8Yttp;-KE+WV6"AHG`@l,+[p;q1/O'X3q7a\)WH^f.TA#f)!b6s%;DXqh+f"O++iX25EYr%+*[cPP'n$7IXAU[H?F/R$L;$tE1@?!GI6COO@JH,3)UCS:h\W4L$8Y.t`cOI$-E84g[=(TAq/:g?&c*-h%n/nMZ&["g^B0Ia%9NWMdZVFn]I04J>.`4+g%\^m"gp=)`gWR;@dSlaH-IZedKH%^C&GVCE;iF'^RR5bV9?@UKW!Gg?j/1FJKpqf:%Q.dpOV%enbJI6>/0FS%Ib1B&BR*7EuIrR65/o*!\DY8nC;n[n\[]rmA+Ae_7/Z^.)>!o.N?b"G)**JDBS4?3GYKHI^F%*6">2d&i%25R^P6*l`#mrd>:1$aQdEKTenRC\WJ,A%$6afgq:r)!>TS!,=.Es4$j^*e0NaqJKGiD6'G5K6f]^CU]YX"#Fbf6GSO/&+EP)3"T9%08P%8BT/6hlXNr[9jr(2E>"[$deCO)#bG,@EOt:q;#?-nBmf%5H7OUX6u8!dd]a5oFV>P6FZ(<7L*,KII#[#g9%2J7p#q9GUHc*D%<17n6+$I`:9gq:dc+bN[$B#Z\?"o8S9VR4qH6"TFV,"MOCITi!p1u3I:SurS7uEnD@]nq&r'ce`C#[j@c$"<dT(UufdbiHL;MKSV%`0If7jV%R@'pZk<')/@NJ(c4!G=e2T=/IL7);sdcd30r#,\;a9fqDYo8@gQ$7;&F[9I]7acK):%k/W66Ncn5(,q7P;n;^8@d^TOW%Qq2'",)isB]q.'?NgaI._!!S3^?@K\SQ67eBoGD/;/Mk;HT:k7h#7#<7]59Y8*W%Rhbhf,\[fdh3:09*d6].*3pALLT.]reW&L4<%]7ZMLM#I9B)FXHYm:4aQ3VIYVm^u2kWpW-(l[Ep'T(V#r'kj?)[.U&Z1k@r9LAr,ZV8(cuAfkA(m-;$K4nO='eU)4j-?m0C+#>b(%;L^[n8afU>N^,qrosu@bq..uk9@3g/MulF+qPOrH!fd[MW(U!eO8iTU7Nf^9Z5Z[h^/LVeLRmj?>sJr=BJRg#jfA,qPK[]O2BLkL%@S2d[NULh/Y3:3K%@EjpC,n=Am0l(,+F(%(3bpT#P2&?NK8NDgLU.:R&Qc?TTkK.l/eH7*aIT@Ccnri8#*5nr\PRnm3[KJT\basg%:J$CY;W=.Kk*isJ^e@HLh'i"TR>?<u4U-9U9;G[rN<t2u1neSaoQ)qcBT?a(??8"nF>t72hpHT\IHS2Ai5""+_<]W^esCFF'D.H@%#@fYl)75/1`gq1cb&Pp97.k%hGoTfkON?1W#>u/nIB4?2TegLV=9"4)bKZ3#D&0VZ3(HU@s+U:N'<R2`"iN;(h7ocUUtKfX#<8Z1%det#uCZ'`!6c0:br.$W,BX9pTZ9SMU=o3::fgH>_&![>aDtK2*>8&u0GOjR.:(^8':?Y%"[,4C;L0:7/Orp]]Yc[ptiuo$>BV)!J%s.HFW-XtthBSWoKOR?K>HI>515=(YF4XA8P7tcbH#[,QUI[=@B3M8]'1Dg*)"ARAbKf-^`K9,O2O/gPGIA1$_,p]=^V9c:p>*aJR%>sV^*=*=cYCJEU[$G:']iHP-T4qV&I_rbWcDNC7b<X8RdT"1RCkl4T2R5+[\I=:dFX2"Et,J3;k5YY<S<9TdY0nG)]HmO36QZqY_%ZO-JR^u)O2S,8MK"O*h#Z1L4"9Cd-2Es0l&@_#bi)k(9(gCB[T2D0f](GL?s),2mC(9Y.V6gKj(8usZjGkaSEMbA3_GgU$N_/D*_%*Z]*I#+1#iNfA53V3"!&_It<-Zr7h/N3t?m;$us!/,D4$Ad"n-Y<6!FN3rfk_=r&1PA\-n8,"[1VuNFuMJE9e5g\J?8goZQ6&I"9%n;\3Bks$f#*Zu`mbutBG]$:3cB`D"GNi/8.J95[ha2@qaL-XkqP0=lZ6lIVe?p"Im5o4N<mEDE*83jk*>Wnoag9:LW2slWOW&LLA%E&8P%+#-\\I6cSedsX_2,O1dleelbil0%8+pFh3o"(6E\F2u25fc-s2cu(!Z35sAJ2kOd=s+NN["ioFGdMJ!+4rs^k80]t<#(kG#%'H#;QI.\Qf8T`%l!QG4^(o^2LhoS%?Jl7(TrFZ2fm=OId<Dq%u1&[bRU8KgBJO51B&_SZ.BP`l8$X^36/QG)WLZkXsg"QLB<oggu%7KbsnPl/?s;0=7B]\ZqO\kDL'V3g&6#!90b<+[L1:al[*=0tWr)@Hmu4WLfm7iIYE/6!QfmUVPjWhFH+&>qJbY;H$9kZGpHngKrZ%#sS]CX,I):,(63C,QO/Wf6"se^pM9DXf73P6:(#TMK62-Yf%?s2uRWL]9CFSpG-mNn^&E]@\?<X.9B=d]8"YaF\=$(jal>OGpN0F%)i@md^ZPfr.PIbnP<3><E`%*%<$R<!`JgU8RHo0[6;!mj_(DJC1ARZ6Pg#.ICJ&2CC0i&o">Hi8cCiB>6X:t/AD"GH9U<b([nFdh%),e)#CmnuOkWV@5!k0R'.$%e]kS=gd-k'WT8,fMIoH[:=?]cOZL3P1YI(<!An0[aQesi@7[IJ2oC(/sS/jG)Lq[Cl;]80QjB+f14%BB7W<^-GJTOBt>H7@N%0^pLhV1$%eO\5-=9Luk:jkl^&4En6dRM^uAT6PA/+>o_0;TC/c=YUB0@rCZK)I>jdbq0tmRBD@+ql$u$F%^*QrJgJVHBrR\H/8fP6i?N-F00/\k?`bq/]>H\'upMrpfSW1Xh89pGan*r",CB6"AAToMM"WP!"B>AeSSA4t,8Yc:Eg<-)-pGoJ:%Vj5)*;@a(Wjgk9l8Q>G$F$)4Y)Q!g\9VhNs0g.$p*;2maFmZp@ClTdrh<APeQb9\U`^lUYa):f[XqK@t_I(7-e1?G=P:K?/hre/"%es8<l[/E:V]R`c;ks%^$+JWb'e-16[cCls$L8]%<P@e0BLVX&X,EC%*`n[KUrsoph5*!2Br]rIJki)t5qN!_s5'B.Sa4q^-o^2dI%]0cX]%"-gk7ag69rRGW2SP8sLAs7_Ag!lX.2Z79Wc2<]9;o5/@p<N_!Q2MrPVIP+Qffq:%C%9M+)uh_=rY_;tr\HYsrF^@qqTlC(%oUk*aks*(^14P$OAc<+)b5<,0Q2*4@.e@;_<9F4N90K#Ibunu]]V&^(h`&,5<A32Il-OH8"bV85])iioMH-q.1c]@F,\50[hO_-V%FAof('D-J-RbQHYXR/&!b3cNIm+=]rW&c!PF2Pm!Q8-+,(jSPD@Ar>gToW&>RYM*4e%W+>Vb"bMCR!X"*.YXRp67MVs,d,ij.hfH%8()grmIpS9mg[Y0Xla^dm^?_+BbE\0Ko-Ycj6$A9'b8a>Q"kelH_%Du+D!rb["0>E^P/<E5@E-]>Q<hno(lF/4P<2'FZG0KIWa&Q%R_9Rh$dU1)jT^Mb8MSq_M<aMY'KV'!8JV<T)n*MXNYTX>P2SVeY#ZA-W[Cmc)a]QXBmP@9Z$:YDBnrR877[]]OK^S@DR7lWX<@MZ%=oD\Oo\<f>8KE]f@>os"[:b]fYlA>rg$dm.DUJZ!#@nl"0rsO5lZ@^Snh9:NrthVUo)>82Yr)HtA2*7jg]-TP=A5R5f!Wm5WS''K%l[QL:l)0daV?QuN$Pp%)L_,It)Up-paKmWO<q6b3.kN@ldbg@hn4sQ_hDoktB`>7lRXb>/BFl77%YlCKBFUk1)*!f9Vdrk8/#/R5%k$K8+0upmGcGj]-mtUe],sRPgJ%?#9C"hnr7;15#A68-<HA?efXC)iG(k;I./9SP1^0B9t)I-LuK5MWVa_E=_"Ml\e2fQ?hS*gb<%NSS5WBd-:-MS0a7A:_L*%D'0ML#u?T[ibk\a7A.k8B)K&-oA6t@qkMu^*!I0s2>HoY%sobIh.WD4.K%$+(X%HMT0/+b"l[!&Lq0p%I4CYD-g?l28'US22/J:7DMZjb]*6]6#'uC^2B=^]'-+j>rWdS>gMp$#s-5-9$.3:jq4sAh1WEupY5*c?m8Q/Z*eB$9PtMIaM83dY%r_%9=8UjOlPtlPWCit*\ks+a?d44=!l)6W;Qo.)RpXsN(VG>=Uj!cmMULpF!_1[8Ynu_0*A2Kfk8i:s$athF^juT8TKE?rn6),FC%e5Bti$a](o`gD#ScalWk&L)fu[m019'eBt++\:M23.Ss&mkQb[EDp(k8aRsYFpfKmgH'GqItEb'nuLPE"F+].-e%VTS&l2WTQ%Np%*MG*<^%\uT_H)GE"^d3*$4Qrt`ZoGkasoWE]Cp4!OZN)tl].PFVlJ>M&)Y3"WQs<?i#W=T3*=7TK5mtcFJEP,@9<A?E7kj4]L3!R%_%/Z1&-aRU&0lKgAuj#!QAVr0dPVrdN+8UgVpd>l`M4%#Q*X,iiM^uBC%hnq*(&PU>tgjDG1EAs/JnRu^?d:;X%OM9GZ^);Q@VJ^%08>d=W8t"u@pOV4W\kiW+H.e](Zb,Y83"6hQ10n2Eg(2jdNLJW*0quXn=*JiT@*4e!4VODW7+8?HNVH^)KdT4:7PPZ(IEk-T.`/B%N?_^g1F*#&jOQpuLQq2DW?.o_a,3$G:5\1FM(1*``;--E./TXqqtidM/h6Ro.5hF[Y@.gT'QVWj.V2&X+J.:&<M^KI*56WDP(dr$%8ZOr?2b3"!8X]+]=uBBmh&Al<_ZAhfJ35^R.[61NF:6C*0e#3P7##1om0/#lK("L+I1F<t<D.%C.4c)+\o]82>"(U@2+Nd)Mrjpn%mb?s#ruFD:2:?*=d1?5,&<JZ:<k^ju2XO9$q2^>'?*&gULnoS6F06@tY)a-FF9h9P"i\L:ddD^]=M&9)`tK-EidqGH;?p&4`uciH%Q<AlpZ5f(4:mu#1.Dt.)/P"W4$\d\K>:@\fg-TK_F.8Y_pVA]7l&E^O_gr]aN[>@bW5ap^D*#Y"#i^<+lO?Zf:B&P(r-K+qCRGQr%ms69EXKWjINcH:3`RU/e8i`X()V6t:N$iB*(%`W/M_Y0R1,3[Wh2a8O\)%))N;"b)LQEHj=sXGpasX>:QP&toe3YW&ZCsAJ-i`;q%l.K"NrKk#Z9n<L/q'##^"c>cn?m=Dl";:-6ggqm$[0hf2Jt[k[GZ6_>=Gh=;qN5*=Qs7VeqSuk_6Rqj4k)$eon4j97q6/eD7abXA%Z'9MF66Y[tYf,0[%'06%.o;N,2jRG'O2]NUQ2-=o47u6@+Q]'B[BQ0XA0cju^%OZ;aGnBM#88nTU,(28:\GJ?$D%Pl">)$SRJe<1%2J10:YKMTkWhr1n$m`7/;8r5(BM\ItlBu\H<YqhNdinnY!t")(bf1*^*U/Rdo.iH0pj\KM=b#F^qgULcYRQBp],VDpWNaOPT"]rh%[*#LZ`6"/$B.=OKUUH$QJdY7GL5lX`Ap4*FRa94bR)k<@TP]N/i6oldJ2s_GRt%RTc\8i>k8SY9$EU$B9\anpOP3mQRZjR?&WQg&%c:+ICnLlStonS3;(W]cu%R*Pt!fB^d]-Cii$r"Si'SGd_`Y/Xs*h/K!'>?JloK[[UCdCOY!?bArd"N\n1%,=q!_%t$<6#Y==%Ji)%<6sF3U@=\&!e;n.Q5Y`VZ7H#s6*6iojBF[0^M-,HdElkePlI8niCZf1SEJo&Mf\\$^Y"S0YGT;0Ha`WR?bb61QJZ3HHh(Aq[!Rr3%oE;b=OsbYK;K[7JiQn]c8Gjn%$17,?]ST4-iuC"CaIg36`Th@HH0@dG[$M-&Q_e\A<XBcgh3JQjSkJdcr#LVhP4d%b-b`H(5.J-V%e5PgK`OFm^dXGY<kKN$&Jq`h>kpZe]B`n(@*3\gW[\CJDeBdS(O&lr(U$J%a>K-OGLoiXgA?T#/.6gdqog1g0o9T!Acc>&"M0PFP%gs:c'D0lZ:b<[4uGZM\`^o0_EEd$mbUs$a9jFgdcOWI6:j$^EsMr&l[[7+JNj/;$L!Y$A1$glJ,Rk?N+EH99LQDo_IqmR?PXn?.o%c208'mIoUYr#@+,a.eD`5<nX=WJ%to4XAUs>S)<1i#+LS)Kg>Gce#/%d]B=njE^ZMCt.\'q"\QKD9usqQ+CXHM7?EL=4?M\P.;<d%)QbBmhSQaNUH<7\'ApfKUt7"5bNpgdiGWR<4R%h_<fQ3b$lVjBDe-<6ZhfY.m[mt=X5Z-W'[=@(XD??`c?n8.^<g`([QZf/Ct*ZJ%PW760'TE7spj2kf(([(k^c[/!DWBU7e;$4]%(5#Ac>Dpq7aHHGc($,`d^:-6'N8SDU7TounafK@_P#<3C\#(.&_1ajAaAVLY>LW&%2k,iA?i"`JF,fU4!olj)1sp76/H(aAq`G5O2*19ph%N0XWmm%dq&/Z:V4)k.M>R0P2&eX)D02oVOl!V3Ml3"5;(Dd7StE%f!)BYC%^B_e*UIL`X>57JS^X65di04*'H^@eM^shsqSi1o0jjt&<rZncG6lN0iI90F.54$4JdTZc0)H7VDXcR/\dZDjkHDJO;UW8.e6)1FP%oQR50@ao'OFrYmaUO(J8dRG0?\c&`%ab=W-QeT6a@AAV+ANZi('Nu[)5&S=l?NY*?N?6ZIPK/H/?anE%hr)DVdEBl-[he-(H=MB)%`GQ/U48OpX`P'mRrLI6m7Rm]!RRV9I[+Ur#g=k&TdF6`briiK]kj`!@p#Z,I=gufAe*dL88u&Y?h'Y9aK1;IgZ0+\s9>Al<Y>P<V%Ru&YT+t9BGqqB[@(cFGK?A:QHNS\$_.c()TDPNV`XYlollp#Dg:p[\S/^_dKe$$.+<]m#uR_Zg<1PctbI=(t)HDF'9[pZ?=NJ;GJ%BIn21W7nGI:#Y%'$8oCVSeH%[c!B&e1`t/)e:RmPJ2CHB(E.$XLpXndjEf,Sbspj+;IbWEZo$;i)VV?tV+@A,iG_H-#fEFUaW#+S%^6'odJe[77h&)3BXT:6sdkj*,(Si4lhZJq*s!GL$7G;GC4JDk[bI]ZshQDZbPFA[(Ff4NVRkM[LiS46NTmpSEp(OE4hAMSfHLDI3%/T2PTNTOV)<:\JH?W()!2O+k\=g'41R5q9@%6iD32"*H%Gh0r!)8=@O_2C7i[k;U]Zh`T:Hs[FD+52HfO$\K3B`,;]qS"OKD#XCt%>.[cnpc;@2XRBCiaP1pr:KI)SFf;qN7GeGf\N,IO[gk"qReIeg.u0LXWUoi7gPU:chn$J0:Z^B7iVPS&97"MFmFUuH<&]4%I3TNR%)8pXRpV3bU01K<Dd@Y>)%Gr4_M7ku\Lj@a-f&`%Af:/AV``(7RD5D4,Opp6Z:tte'_<?<`,AmX)#&f^u=CjG4`glX=CYjfKc6mlT%@\q/+k5Eh7/QeZQcb98cDWI3HXS4XQY^ag19nY0UAO0&5dT3RdlhDMobj=rpGgibjRPZbD`9@ICOsSH*61uAdat*7D@,hl9jRP_G%IW!!KglSX>_I7,)c&3e+S)ZBR[sPPPV1IRd-,eYdgkRIP@dG5d/Bc@goJeYr+[bg<L<UaghYW>ghKlQ@gBo([[T3E=B1p4Fq*m_5%ilAT9UKAI2Xfl)mHB/D`q*l%l%u-&f&bI@d2B&X1T3SDW5!RWJ3XEs<;55/GdDY,Nf4a<BGf_hsg"]iQNDaV@ZMl:YaCC3F!5/'4%d?d@,l_td3g`&//^q2+sjM'D#*@nE9$lVRc,dJFs$lZg/enYuS@MlnEK\fh122Q,S_a_Icpsa5(`tQ:Kb&Uhui3hj4c`g9JNu0b^%qT+q::8KMlPOZ%9&V8@tVlqPK>OH(R+"SrJSH%cKEd,+!AFbrD*T@khN$923;ZVA&8%<L:5/?;InZBW0Wj=Ek/t84))N'T!f5kB^%B5cl">Z"FlH(jq$JXqp.UE<RAQ`Y1RiBHU>CQEG!6c[f[5hg8nCH=rUB<U<k5N1WGD#c*5)E/Jt%3!sgL_N]HfJ(c)]"HEdWN?#&%nG5%cA=^l^bKrk@+"m/LTe9]EU"`;G+D3tE)kuqr]=_kh*u_uKVAatIjC8EdY8@3=6Ja?[dW`,cjbnSc?=uHT]#S7,Q]F!<2\?c<%$ro".`TLCoclD+!$@1?N@[!G1O3d!o0L#E02h1C#a:)CX):"m;FmJVnJqi:f`V3Q(5Hsmac(NA[%5$NdJ_8u)KOF>N\dGa\=9u.>%\"(=:g=))emS&MkLHJIo*ir6Lp@ajR9.W8;&!d?a_KrGAj>\j>HsS;fWJrRSH7D^MZ-1=C;!tUrJ=D5bkelhb,(nL?2rP*M)*rc)%`!^nW$Koc5O!39/Vb6=!e"t40e,A"C6]:,GY)YA,,P.W2FmX,]qL)cPj`8GbW2-c@-CoQI(,`[):b+KBPm7Ghi15bCaCNA%qHI>@%FmlJL0MUMgd+n-@(L\EgMedcmLB8f7/>YRdTj<7,*%#0NOFC2]_T.tA9J,gfo2O>C@]C[0dFIH`\TTnfSOoV+$/oYC$pTdrDREo5%$R3m[Y8hT#eXoV36.;emZ":Jl@0[^EL(!R;SY"#1iqeAK19Kg7CTl<Xi'DB%X>8#uQo)L:c=p]6;\GOkP"n_[KT,Ng0HWrhk;tIS%'MD%WOZmBQ1FgA+2Y/mc<=%1#B:"fk21S9S6nhcpSiS_dT,&0&U&qFVTd"`@:p(!TdK>+SSR0\"YV$N61$Oq-8gdEjiqW]Pnr9_u%;oQUYk?#pc^oKDDW"k4Ha9/Jdf!g>AQmWhRFu`Y.Z]qHi@N'g'HtB7VHX.k.8VkXUFfRdoFmL6h-r4'MZB6WT+[+BnY)'7S-5n>A%XEIi-2[*Jn[7[L#\VS5::QJMn`eZ+Bq)*r+Z?Z,MYlMi,$tZ`5Wrnp*E-Pnjh']F(7hO\YgokRt!ZaDZZ<0$Gabij0<5Z87?GmPb%*RV.d;-0igGfCc_\H($@Q[jor[p78l3\U)1=[;[!b:mHLTK_Z!\pgIS0l()1ZD=J0\1a'b`TKfC_R[##<<Fqh@d5,a2IPIm5an>\%VhU+B*sMkr=JU*klk6Xf:oDkb@K=_QY?!4?gA;X&5f4'6-umWTH9h5Xj4Hh,_X_8hY+WVbJ-"5M2./`><c<B,hRA>@jf)(%T%'k=%1QY>6Dt,";s,9#A/54tS>qKn"?ic*gQBcO,;Nl?Q,PrK]PPB\qieBpkbE?3C@I9M3?\0aGMY)ZaAbGq1fr4*VW:b@%&'8:I//ju'%f$JM!rrGMF*&"[Sc.j7`iF&O=A\qjk3&pPl*T=hqBQZRjanep.?r"1;_XGr<J;)s/Pn[F40T1=,e-!J4@ft(L=b%"&$<3UOO]iiR%gRi2FBnQ^lS;HC.1ng7'XYRQmluM:/mO=LSQ6;.LYLC5)(nh[s](C$A'nf3h/YEMHXXRE58ef8`iFdo.gfW'n5!%1c^82%p_'3g&%YKrF6jKH6g$Q/)2$lHB)Wt1R$\h'0E#W`l$V[FM\\h#C5q=s._K$!4j?tHp%Tp8Gm,.\h6Xi4qqqsH)'P]h)CMRp).r2k$?+jsSW%-Nhc[/Q1g%A2@K0Z_k0"Qb[i,qeAK=M0_]E.]&?0`T=L/O.DOCrO!nUNs3X<610l8jRkf;mD@:D"f)fbrG$beKL9"pQMC@rK13OV%$&>Ze&2u3LFr++)7Vo6tWCF(_QS0ed?>MJ!-)Z3\EjWr4!-9u>/!Fm%$[<FH)?S+]c[pGI^sT<%EAV_I4K?U;NeZX'<48ef!FBJ-%Nb4(?dB"qAdH5&u!KIAlW&^</YA\DDX094rH8OqRWhl&V?XCd0l;EXg_FX$lOU]Pg*U7Dh1sh/74sGntc8UcTBk+<3?%@VtE+:6U%nlf!q98LkhbrMORPLZi)6Y/1tqc^[!^M)tdmb4^A2KNBYQ?IPua;N7!3im$EVLW</A^qjr7NDQ(WC?OS=JuIme4]L)p5n3YCkNjt%OWd]#,!l\-@qO.#NA%*Tn);rcL2p8KdZu_+Y$F_%[eT9.*V3n!h*NVel1_ZAZ;Bq@?%?Ta58NngKi/?AD.WYef:nC]91^jCO-+m0%6]0iKQIG:[[;_S_Wm^D$a'9C#Yrrl!iTpD60g%7WKe==m0^#n^LS]Z4d*_0\,bglu9F25%K@09IFGFSbe4-lAh08"gX`/_>e9tt$%e",[/q@Ku$ierdh1m8O,Fc0+3#'p`1k=sG-7Tf6Ri_EXp#[QF6&J6M/</PM:$)UV=\B>Z+'"=$+&rUrS_Z2hMO_a62EN9(\hGJ@b%RR`Xo`49PcW(^js`p29;Re*;siZ$X-7h-Y].?_.#:GuAq3*"5aWtfg\>8&q<p3Y9H>89VpFc#lFEMnasL+LBF.e7C/Gs!db/Ee)3%I(@@SB5;Jc$Cf+94BmO7$Y7O_%!1XV1[')NJmL$o6PhN&THedRl8`tK)0E*,LD)[iHAsBlF?8*,9BFNgB@)dS4''\$dq_q)TOWGo%<HIBJ1[*KJ*NS>L))OrAkk)1bmH;j$k4LOoPhBCqLX&#7Np_"rEXnXc#+^ZVWa$j*c9+J9V%#sRaTOZr<>Sfb]N3)7!GQ$$+3TRo%?*&3@'gJO)M1]PV.6XnM3TQFI8g@,\=f_QTKTi[=pT^fcp.N:pj'nI<;mHh0m@XepFlLVg>CK9rR,/`'Uu?_n2bW/Z>ZI!V>LVe%%lf2322s8U0Tl-bbSgum.dUYOZ8*pCa^IsJI=(\"$o,>e$F6Y_29*eb,*t"`Pn_Jtuk";W':_:T[]YN!3_/3G^@*uP$kD!iU>L9iR%rTY,g8BBnUh+[dd(-T?mlt4:<AWZXiGq*%':X&oM(^`S\$d481X/omrIatRCjjaKBWC!hBq)+Y-pp17PXmtIaeUlIialmT\f9DZZ%AWf_IibP\;$g)W&9;cDl[QO\Xa]c-@j%P2p`c:dE)/7kOkj.PGdp]U6<])\@CG$.A4:=iVYgr@?Aer8.Xlf/]bk#2m<DKU*0$3\G%4):>h@mQA\Fm3u'3!Oh=01F>L2ekVe]T"=k:/1,l>^$*c*a`N\abj4%)9-t\L.:T8YA@'nN2eAO@E^3*A8'VHfV4lR)hZWJ$Wn<V%MmbrS!&74A9_%P"9-*:sf7qj0<Z;Kg'=9r1'4SG6/Z5*:[()!3o:8;#`Ad<UJ=j<4H0/Vm).O2T5e4OnNBO$d(:&_UTt(^-UTTS#%0V3!b7(EI],E$3u2.j\aEHr@r\63r0(]n2"SpqVs/4to@^i8OncD_&UONpkGQ&ZWZjM'_&F.rO2o$i\fBq4F?1g!uMS`S;[=>#Xq%-d!PVC9!Q^bN`RHa!gqfU!UEF5%Y7!7d_9+P.DF-g5n=,bL9kc\MD9ddh`lK>nZhA6nLT,G\PVOA"$hmE/%=-kIm>#8aVXsb^3ms%#MQjQFDNug*gm,2*Z;:425COs39-,%=db1a0(rRQnAlS/&OD)Mn1X$Ni%0cg-Tj.tc?26)FCiBk)Oc)8bZt-2A=t5LouJ+dKW&lY%pYo.n8CFi1S7<\(20l.rX(b80/0?Le6WHu?b_q$23hF(rXfmNhUI/nBe^@25,\.[dNk-c'FjSKUr[!>s@.NN#ae1ds8%cFi-!n;f%bH"iZh_<<d(hAYpL!<fHX&B6)/JC8QJ?bG%WqBSrTk!El>tDXYIiJ&ac\LeZB+)T-/I=J$&%D+YI?sH_^j`O&;n#XgS-I#I7bgTq%VNVP">b6Z*HoRl`$YT(i<m+%ARLa$[>B&\O36'"g)0,@#1XCiO0isg&32cB,QJI>7?9XlP2^=?T(FSe4GcF^uiqQOik/1>(ok!r.%.qdFcGVd9,,mrA#b7Z;2*>>F+dp?=JV3o=m)..B!.otfC8ok"G94amYHGZ__bpC#HqR/;GA@YPtP0%8Ra^?0Q3G2KVj>pe+f]$uS%D7m4D-\uj$e.L$@T*5m:/bn>n7Nk)E(2fPa.][?lMZ%!TL8_Bm6Bfr8(9"OhaUgaBf35PZNL(X=%2d^W!;W9k3:^3qmuER5kQ^(\%DG'%q!o&V1##F\d=YQXc$X:iRU)O0mGomgI(UIULS)iK5CW6@]_8d=0/SlXV[CQ!G@1-pF)6(lgf)"YLWOL/`Ud"`:OcfM4j%Mol%jGQ$\OUCb@Oc^"D=PF%+EW4Ok`kL$,MHYg<dZEFR%N4,;Leq_cF/rhb,8G+d\sO/1E/IGJ-Gu5jmRsFo)=@UqBI]MuLom0Sa!@s\%%/29OE3p?agXOtRKu<LkWZ!LT$E$`0NH;/hc0R6542Rbtb\\c@>$bK^OZmB"bm#Z(Z;[+L5*jNteZWeSSaA6FdqgePm,A(A@FJT!%dI*lC[Q?-Ok%5g`6oaDuVKG,4f=0#;\e4B3_QCVQEFD!QcoJlHAF?";ep9:"fCF6#<iK[ip0Xh$HY8WBkgW\6?KKZ1jbN."<V`=D%hCmAW<sPR2Ug5GbUPEdo_<"4E<Uf_3?)DBhl=;i;PM:7CO+peM0(1',Sibu[9:bFXh*+!a_`bP"PFk/0Nb<$IEnd-VL>?CBg5-_+%MN?:GBJd+,LMAc-1[Nsl1@/a[=ftV=/ljS]OW2gl(C*H)D_&+kP6/2T2bS<-,)2)3G..:f)0W"Poq0b#aXGj0d4FafDjFfj]Xm+R%?F>&kRn(n>a/DkW/=5l(:9RN\@95I7X;M(a@h@OH2/;c2DGCeSdcU'7Sc'R)c9b)N[r&*Lios!4NlL_:QOKCHP#QNEV0$0`(u\M.%4fp\$hb23\aK8Wu%1VH#Ls@o6)EW(Z:DKpU1mU%>B3pc*k?.\M)p_Qs"KQGKJl=7ue>]i_]pL;t:Qj2u0'Spk\*,(tX)LrN?Y_At%-Kh*T3cRP$fB9pmEe[T9G,9m[j=H@1m][;jqMRBghs=T04/e!a8qrnB'MN579;(t2$)TQDP%8qKOisfn'^,-o17M%BLK#HZQqaKF%94r;9f94g/HJ5gD=e%!Qe*.<9]isek2P$H!YIe,O;Dt*-bf?!Sl1B#\QM"E#B@H)_*t4@(bGI(VJp&W5DLNq%<>qFr?oHh-YI,V.%FF(K>7Vf3NB@@a;p,JO9Va_bk94o)Y]6#s%T)?sY8R*j::62g.T9lp"2P"/,*VGG5Gd;'BSXs:dG&24TRndo$'Mko2flVPNFF'ka%Xd2\jg^:7@Cc_1c8uJuZoQ'1sK:'b-]CmC[/"99eQ]@-oE@./M56g!/Cc]6:8;s:,flVPI9t[5rB%-#+dM_C>@9CM.Cc]6:'Fs/&%2Vk)`+.^NNdrS('&9BCl:(J1&]?mXH9rGH%VWKS5A^dWj`#F6X1K)a-T[&G\=2RiGnGA5L8u+7)VU@0=BO8;qT):,`FrpS$Vn&q!%BGW1k=/Qiu@HH9tL$-u<bZU_,@]33KT+c/n:\BnCc$%Sk3Qc3d3OG5-)<h!!NiKG@-&Cu.##=;!_#,ft-Cn=^qQ++l<#c*dC4ZC`%O(G>8(Wd$iPI].liZ$RuK(pQ@DD9OLmOUjqX`VdX-9"6jTK?BJM"8o?)@j)QhO0pEmYp?uFjSs-c5>Z1]9VB>/K]&S\>?nfV[)%[%jA?&a/G>0-gW\7HQoc@QXbAtkF3L3*IGmYN%d\6OcX.(B)+mq8,):K47=)M=(6n77Tre<&rELC#[,&O?8WSbc]mQn=:8G4`<$^q(%Xe/.nEX(m(NiZIq0IB)@qIcTB"H`_,<ll_Pj-/^d51K;;:MhMHn><1c#Wa9gnuTU37i[U_2]@(CBIHiJV-n16d86bs.hUV"@Ek22%3Kj3J0T"UsZ(>NIC:2_jQVO(<MJLTMU9]2Bi_g"U)P!#T>[f;@[q@n0p2]*@3X/OeqVC0/b/G8?<+aG"FAJ>ZN82%N#YNs4";QNH%lI<aK#Nm[baM_:4O[1r'acXNEW[;V2q2A$Ifo`gF@cISYo]"*33F.PVs*F?jWdtHo-8O47@gM@&.Zm#<"pCr=j]qpY/Li('0KOW%%4iU!-c,H[q*&AkXCK(+WM&"l48;@UlSB3.1oD$PT\9$ec3uUIqR1,EDiD0.&C@7%m'gsEn_VJspO&kk/(8$iS`!LWup/`QX746mD%3@SnB'CI[sB'tU>>F!HE:TtN#k0?S?,dI&Dj5"%)O$3Ho;KGP+*JMWUEFe%Pa/:!a&o31Yj4k#HR?,D3k,%Z^5=%FBn4cl?eqVU;%-ZO,hp<4ldDE/M<@m.S4B>V)N@he=n\**\J\Kn&B5I*8OcOq,PR3s`ZkOD\G@mZr:=lOBSUD"&WIcI2rCaLmur/!iRZPnc+Q!'kS%.u/*>FpAe!G>!,@S]-$@9TtiMa,6D;PPb&o>jj3h1!(g*=NYX6fe*l78hEpLe`ZH?k.$^$9>oL$9'"RA\`4b"Pnb5_IE["tlb/"S%WE^2ZaACPfa$&]Tbc0VD99H0YJ7GsEk2IB4\M+FZN8Sko2=&aAa$%QdGj5B_M)\,n\&VH4aEXcS?Br9Z;DEK:>@*X+0$F(;jjieg%/X/S'[54!#GP>)(Lq^R11:<7$CR=W5e#RUkmSs1;DcDu42d*o+5N?$LWm%HU>j:dM?V+4h_ff[[%l^)njTNIjA(=[XS,&tPr0:IC%87)LkNH5&jb`94Q`Jkh=XZp'kp5%(c_q&Ki5)dcq$^d`eSL(]>E&b.]!SEaq<6c)7CU+o^rqp9Pka4H\'BberQ01c/L3L.KB$b4+%h4$AQ^DZ.N]kSH3X)E$Ej$q2$dG"EmK0c9#\gk*cgF/d4ZeW=5)rjC<Q0YGr:,h*J=MCLYR'Y^g<'0s]-0(hhKlXH-@'6/(%PV$c%16`_Q.uK]^UV9N;PtlV07RqQdoZS\.rC%KEVLap<2'JV>"7"F0Z=2C]rDUp`[Ack.4=$"kUT=!QD2)(/GH!E"n(b3jC=C*f/@hU@%=lp^8MrCITkAh>Ffk+o_0q9l(!GG,=V<N\7/X_m$+/<P1:O6#LHf%koQ<De0;3[A4oUs>$e=*kS0'QqeD@RIPC0U'<ob+H'011pO%/_V/7P9r-QWq*M5<3rW_I35f0onr$P=BI7^OB8<ph/FH\MlV*s>73c+pq<=:A0\5A?H/N8V6]YMd,l:e=n[nV<`u_/U2F9e%X=9_%#>iH+:reT"!fU]kAW\'HI]k_(Po59L#AIG88e5W:*SCY.lCa-lXBKQI]<&Mp8]%%'RsLbQ5SJ'mJ7Z#(^6P7Ee39/9%h9[X>N4P.%Ym$-*=sDXjfe-q2Nb)Fn[uoA*@MDO7!EVE#N'"r&eij>Y?./<agX*t9q9,o[G"F>!OR1P31kX[)cD5I^N\*<b`ZfhSC5-F`S7Q-(%1@oRHkGpAn)%8!!FGc+?Ia,&tXo^<c\NDc"1LI]"#I+F_QSp"1P^"s^CbB#G:cgM[!E<MCQEc7IjoCi<W*77D[$h)1VN!7S!jnBu%B[r`VT*8mcB+8AAdTM)m+3\d+eYeefblY756TA.hkq#*#3Ii_Ti37S7QN8eEHs&K<:bs63"]b^EfjY_i7Pc4$R30sM*S:$iL[rh+%fm``n4sM_NZ\S,9HJoi.PYW##\Km[\+3LKf8c5\Xq%UI32\5"SYa:eGL[pkO^cQch+3=CL8q^2(V$ss]B+-@a%:4"VT=L6!?uII:%kPCTXEZK$W[5X?GWIFR7L,(sEcUP;/$Kq9U0QpoD./e5cbQfunK3dnM^U\&VSa*\3I\iT?#kQ,Glf\,4a%B3H\am:[k,8&9OND&W%>*82<A8^<Y51e+CSr)Y.X.8LR$r,'=CX[39GcmZ!IVMYk=S>uao2GURMGVh`f?]t+%J))eT'L$<Wh1#"[[;MSEiPc-q3BOWolDB/%D8kN9\?cB?3nM^U<50`ST]aVn>6`.7TBg,l$VnK[i]Oro,1"\_I'tHM+D8WTF8_=Ul"/i=E6G*'oco]2FK-Ft#LP$aqO'"&j&=/A%37lIrPV=acSEjg:WZO7EB(^6Dp.S9TZ^I)eA9t0!qYjCUqAK!"CPf6:Y2@+HC.HSBZZ7,ElKA#3TB^(X4MGC50N?^F/"Gq'1L](<%IQDgt06OFiq5Ji>p5AljrQMCL79O?MA6ECkk.nNV9#("]O)/RkL?JEde&I_;f2&<1X[TR7s'.e[=r*XKBDGdso2GTEIMdE%nS'I/%c=F5qUQ5>aIc^jBH=b#Wfu!)\5?h9)9:tOJ"eb]k5MaQ[--l0>2aYc5D6eVnT6ZkNd9p$?f?`6AA`l1ij^Y.:kOG[cVj6,<Ic*4e%/ABZ[oeTBufA/N:M0&X>rE@R*'Bf4[YKbHP53HsXFAMR.mrPo7\UN[Q4/)W'ch4UI0rK&`$r6IOZ7G=6laKR[T`&s1bS<LNb-UrT%IRXuD:A%P"(NuS>eELHiVtpEiG2cako+`4>H*M_!TD>I8QEk;.,fH.ClGp"QX`U_<Gs^k&:?%H"qAFC3L?7`mp1s]Tf;O^KGaOOj%;K_fhasO!4[ElB((%F)N2,#;cObV`YLK8-;(01,tVFg;dmHoqDYZEiBJ9Jo8!^^Fr!%&IEPu9A":K3YDd:>?T-_DG*<Xq6ca-2Kb%o^4e8MEj(bBB+6?iUTHIrdcHNIN0Znj3NAC?LKn$INA'!o`Mqf:GGoM3%:s/b_djq;mR--=)[umA7iHfH$oI0Oo5$hInV47M0A$k%H5AT#N'5:X>2lZ/nU6ts>TTe\5HglH,gs_Nr6kJ^D'=uhJ$!!^*.I's4*O%@miVJ?VLQ8=rB]_eF*j)ED8cC\PkY-]d0Rr[f,k[D%-RjhK(2%gY?!gmoGTriJI?40nEtd8aqt=OMiaFQBI;^4#H)[Vu0?3%]XFE@SgbpMF0<*MJfm5cE;ZX'g]@!b88GjmJ`mW_XU>sAE%&.Y2QY3W:fWj59'hX-)nf5../4p&HD3MM5c4NZ9Gi!gIqNt1f4Ku&=p45Cm;iu9&gOaamSrh`IP>JGHng=mI'UX`'nnM+8:FZ^\c%,s>YXTq5D3PW45=[Gq;58b<^s='+82L=AN8cA$(fIAA#.XMLKn\>2.(hoZB;Yr+[8m%q@k=o"a@h;RBM9@(#(]@9EOZaLsHmMtR`%-_9X>G5WBEad(WZp^7/X@'A.n\U,gU;k=c)kN7P"9?tEG$_d#G,W";llu*tk`ctI:rpXT!34uqQ%97<6l>VH3He+*?b&3R`om=gX%1%gUHU/O9E,J6bX-]TMu5'A7IZ0rOG,`UMNVLpko(GVH"#i4p'nL]o5O(399MQkF,d:u*4cCdeq@(hlDhHAB9D`!-On+2feoJ"(q%aA/5qM\,pJ.+FPiD"0/bdZXMPWbuBIqN,%jgl#A+#<$N_$1cEFr@M(F,g=$u89Eo/&U_<db:D($p1#3Z2MCp-2%Hem`/BB-69Tf!%\*&.pXcF#Yp,l$+Zo?Dnb.S?2"S=/NmB'XpMF8V'W@tXMN==Ajc=s]Ro4qS_,dm'A"2%!_?&Ss9L)AQ8JG+K3!CdLYpU?i]D-65?%./"i,_89@PrMY+rn6GOH?#hu<8Su!&/XR9l5eXa=Tit0eg?=RmC<qraj_B^ql.LejH[a%`'J=#;h9&+J/-b,J'MK:7B.s.YDDNc\%UA$<\N+a&;<s]?Bja:6$S(fM'9!NbM!blluAL)5Ql>Ac&.;cNq<IC">==t$@.Sd-W#tQl<eO"1Q`;jHF[(u`_c_j-[jgKD]:^m!9%M"VE:8C`W`=QF4g!QZ78StG<n\/6c-n6W-r2N4scV8^(8&4)T@h9.&ZrEbCM]5)&KGe`eJ1`#[Q-C+<!:DT-WNbQLn6Zee'i40OO%:]#+#$R+=*g&mcRbHp_l^:8_3W^j:>!\kr4CetMIQcK9#Q[7/s3Dtp[Gd>HM#,56bKQ6tsiRm'_VW/emLN(?sU)i+Fa8?2*na0Z\%TEj#'bkn!Nk=P!OfNT:oJKMhQ#<Tg?.WR#[7:+'r&?VV6)e@tj$/sS!%C/d8\#l5/6Br=BEn[Wm'oGQjDM<PgP<+_Q^*e)Wg<j)/%#_0j0n]dWI)7=m+??Uq%^6NerAkhoIguX6u2jfIDB;YQ8?pBq(2:B#(!c^#Q,fK*\r[bc$cQ>Zhao.Bms2(4I]$\$sh$4npTN)Gp%B!Vq'oQ2foGl;B3+>4f=7L0bkAKl`UhRr'oH6eFDDnc>;liHW.?9Hb^6`^,=r<GaMrB0m008;nPoL=O'Vm"[M-DjiN*(5cei]B$9%FXK^1&-H'7@jmDgFMO5Y$CKZH9?MD,cLnmD\e!bAZ\0_s$DMfkX'?ZTHXFf8TX]gg@Y_h\NmN+J!-A'"))(@Op>_XY=:La&LiAsn%Gg)iKTC]c)\n:In%Nm8GYp\%"8'%8]H`;VtHdf;oe4<i&G&*']N&2ip2M-'=nBS.<fpYncn0S]52N%oeAY%]sJ<pBlP*PE6^P#/P%Y%RjO97duMA/0V`TdH!2cJYl-?ECs]"#u$Mb`rc(j\tmC<roMm\I$7UNZHW2BsKaJ33`Wnd)YM30B,CUg-lb#nWXUaM,b+2WZTSQ%&d*%8>+$J0ie?=ATb%u#EG4etg:b8(0c)d>=O>*Yi.pmA4pp7RUEBb(oeYN\=g>UsW;qq^j7--HG/;*he!GL$a!s0[-V0H"M=JjF%+r^<=VrBPpW+$H"K6\"`OZftTh;>P"[2(*44u\%bg-?Qr6/Q\Kd/O_7S6?:696P3X3jh`hPtJTSe@Me2;eofN>q8W$_Pb\.m,7cG%JTMnUCH/S0QY)#?+p)MUNg,iO?:2''GK5S>CGrHV$j(1M!';0h;6Ak>b]E.Ljf9"U33/?]9s',+e].=P;d6m55TksZC+IaaA3a7g%g3en3M3#CEA+)@mUYjU1cpU:6HPZk>kk2u&m/8ng65Nd(fVE;r/r<BW\@:L4`&B4>1^q#<r>at"^oZ73s"OcK8RW;Uh!<tcj$jXU%Ql$$!Zr(mJVpOL_oq165h33/tLaM4b)V*$67:Ron2Cd^%-[Q2[V@hq&PZMSK.(`O1W-Y741l=8OrE2R4:771NE%26AU<=U.'m/"u%RA5.>mliklf@aIV6ndTjDY-SA5KBS-A5j^>r!`:L4-+NsK/+o=%e5/SO77BAJ&t^;GR?sj'mq2F]7(4+)T0N.*;8!aD>Au$IiU\q%b_Xl"o0GLsW00-FG>=D1cK?^FXlFigj=9GaFaacCECokjUHY%6M$TRSD5""V#d,BBZ`*dQL9<.Y^tUms%ZHbsHUniHP3g@%H?VJi%b[J1811,1pe)/lhGS6H\M&LWa,:WidpZ[4Lp3g'Sf`>u']70kI0@a,7]XfIsHi.WjGC@?3kaZM`l+@]4LEX*)@/W*kp2u?a&?;Ho%,?rg41r"_ep*eo@P;'r7l-jR^L*4bEAbdIUh**uV7@5s`)fA0b+:!M=EP08-kU;)!jUIFq3\LmIW'<BUn7EsL#VS:O`/esW":mU#%:iCRi9_Wui#QU%tJ^E14;1K4-lj4PI>Cbm./&F6fmAMuL!bc-T#S@7;ml\L$K`GOd]RR;C#ParJN7]os"p)Rq4=,j+j/*6<3tj_!%8K.ei:E!1fX?aJ:+WTQP]*_OA2ab7ccrdANEBc4S#]k<"nRFQPB=20\NX[MsW7&&1emum2Y]tUf@pa3mT3A&=TG54QdjfYbo-tMU%E-=TD10T7?cgHQ(._qS3Y_o@+MLB^q-q,9PZHR-T[Dl8E5\Y_^(XcjQC]l],53,@$6WF;^*(gg!fcJ0-bSF6RZ-63&o]SZZ)Ju,S%`bVZ-q``=XA+emZ2IH%S8]I<JY.(\$F'TLrEW8(_+Y.Mn,m'3g8r[>L:>JR/k?!.Vmlr0>N\*]ipYV9>L5]Wr.L*3oLG@pn#*39F%RE#2AbuPnda#(JC[8s*ueu*[P)8rUXnNC#T,.@d*eL80)UJ%aj,Vgp1emVE/++i.:Uf$@#Z"J.Pj:*Tki/MC:^2VjdM/lZ-dYY<L%:Sa>@`R!gbJ?4eif+%k,m@4nO$-6n07;rAtOQ#mM+qQ9aJ-J"H.7n#Zfg;<5]FS$7(]*p7hB0C690t7qBFtku-,.qliE3J_Z\?"-%cX3m7i!d]VM]gjAr\T4BN#+;?9^6p_="7HnD@cHM@lG@:>-&_kH`bS*q4W+a(!7l3f>O$7pEjg8a4T@?-#VD$F,hqa:C28VbLgs0%8gQ^cPAh"WeR"f3`dg;u@u0RX)5#%WEh/!`4^Fh"rnN[J@tBV59PF40+n49*^0D"O37WU0R0_G+:g9^i2M>r<icV*nmGc+00t(sV%0=(9J)8tJM,,hKKN6<.nI#\h!,S`F0<B6A=8GkXW7<X>9D`l9\l.r'Nf_C>TBC9*GBbDOSf#\dD!u0+\YKYuNj1j7#_)=-,Iln#b%1,3LsX<UX-D@,:W(E?_0(d]QqQE9G0^3gLh+N&I&*a4#g$S).)$!(%5fRjDZM&p"u#aZTjGQgEI*M&LM)PVHB4cOWK\S^KPI%ACf%5pbkJ@U=aM6lXaK(p'4"fbf%aW.>NT?p4BRlf2PPp;&'Z^Ducrm,@V)J*c*0[tH[dLU<7q)!D\",Z%>QlSmhm:?R=')qVBQ6mLdG%]R+G[nI,6L_R0N]d,u2%fq9LtTUoIor5(Y,E-X&)MjUl;QmmHf__&`G7"eip_/TjQA[@b.W9K$,Mh(fL1j'#cK^au!,db8!!u;r,%Pgs7D^_om$i=[-JUjJ+F#.,ILdkl:Ol6-U[6Ss/rYkoP2+pCQl_)R6R$8@\inJhWu!AE6[i!ou!0hAr#U.O0REB'NK`Ls`9l>?C@%=5VJ<8()KD,F8)5%PY?lg7ROEY]!C/Qp;o%@-YMY#nTC!9^_%OJL<%`"h0BZ6ML2(3H73-+oJVBN*-AToP-]F;MZdaFs(I8)mP8t%.42GpgTViC64A1Gk]ZeNi%UU%a+&)iaR/L/Ju=%P=E'LubZ]ik?GIl^(HMpD=O$A.6I<&>.]dVE]s8D/^V_4B_t+T^O]E$)#SG&u%V^0c2msZ+iU(PlRbmt7+eJ5_DnRIH7FQ.T>Q":$=;"^nNK>b1g(6SK7R&:SI.JPVf6aIpN);YN,1?[=aX]d\;4lS^j<:+RO4Pnh0%iBq"qH%5!C>T]Or<G]k5@qQ-!Mbn-nZD$spe=0haV)T0@V8ihVK*UtL2X=KPG@c(GX9Wa0F*>n"9bk3>#\1_Xc2!/#7F3=l^%afE%M?lQ[ZUuLH%Ke\_-et1"9`3K>MmA.KjqNqQ@c>0tT'):OJ/F2(Q?!k]$X?Y=inuMML=;^D5tB$P'*l<'*p'bVXD5\8[Lo8K[c&]i%\J!poQQqsq%.5;sO219j/=J)3"RBOcM*(q(-4ueulm's7C*5f%9g]It=Y//p,Z#hZ^H"<E$\$9I("$Y7S-'WFh^WnNpK9P<B*5Dj%IOump2o7E2c75ksP#8//$cXXt*q(3l2<5SI\V7]fU^_dH__&afgk(USZ-"`dEsn=Y+hth_ofU!nc7PFW6u=Y_r'HnBZ'\a7oYUA,%/8JtpKje(,R29-5!1\TP/t*Tq375-;JqjM#<=Pn2HT+X'4-eRK[h@oA5;<^_Ng3YcH1&Eg-jOsi.t;u]\&g3(G'"BdKF?Spodd#h%@2+1<RR$$\=<CP2,`fPo)BgJ=dHtWKknJn5YU>M9Z<jXuKR?)l$eII,pn_>!=G@e'Vl4_:lWpb.`5,-:.ARW,ljC/KobM"-nL?#t%S#>!cfW[g*'j_j1LlO'mDpBcn3/l=D"eJIL1PN,lJCBAZ-5nmra<AO^n5YNHaK:i9$Ci6IP[^>*94>37@Y%^f&.2+;3.FH'Gk[hr%Z!-,W3j2Xnn1qrapD$Q%R::`sM&(%V*KL@tXi=Ke[*u`EfEUm@AgLGDYU^c'g;^B)O[=G:gtn'0"tPL0gqV?mG,k29G#g#ac@C8:%!.6(]K07aQ]<R"11_G(aRI%sQ:TdH+a?*lB6m$L*=eT77i.2[lB+AYhHL-4$.G<,pQ=(4UYLAqn*d_jO<=GW$ZEtre`Z?8Veqte?%/FfRh_fo]L+)CiOn?idIYrn@'YWR8/I'=q+@V,7``j1stR'MJUU>mnTp@)CGOA0pA058%=!(:'lU-<)U2kH`TILXlHkG^[7*#$<T%q^I)jFB0uMj\?R]X?Yt37qamkefU!mGHShll@(%o$-bpr/<:p)4Xm\aPVqV4o=bU-%,"H8iW"bC+.H+I*2R=a(029:%.<=+:5<9e%icm^;n5KaX'JMSilN,h[-g%*4X8I.QfX8hqTK0<e^qt'ASa?A%]+F-'__>Lh3&WANO$n!N@&(F9alA<K%_q6(A1)K44jJHaI+Qo>%8n(>M1uIMCdhD`Y\q2?4W@!FYNu6F6lQYd_`=7h;/K+(5-jq8U"RY/-/WQ[Oqj<d;#,/RW.QDQr;s2TK*X./LOa#6tn"Nk2j125s%UbRehMld-!b+3#f:1*:,Wk@bG#>jO1.j!BrqfON+@D,$b*jiT>&Q2Xl/?O-GY'c<g&3RUUc"s.;)nPp\!@[[#ZjY9sKA"=U3Z$!4%O,=K4lH"l)(H[Ef9Mtjd#lEH87BKrZ!M]&,^Eu)&mIi$)Hu7ER5cm#D6l=Vpg7@kba2VMQKd03CTaHAF[WP3!i)GNcpNoQt"!3A!%8q`lFJTh8sJ<66OX$l%IjftM=JKqbV)0*E!A&+*cN[YQp.Kmk?[@fo=CL[YCI385:hQO\/R(?9U7d:PN2g7r4N-MuHN0X'Q%,mrm%P?LIFGu+<E>nGPf=V(dWr[Tl2j8;Pq.kS(4g!B[+hF`Jbi&l!B#1;#)DQL\rjOd>QhTFZRIJ,q-=!*t10JTsi<alRlY:V-?P3bKB%_Y\+,#!)F;liO&&A,&9MEYItCFDQm=d033\N&_BCZ8"0UAi1OFb\q3)@t_k1C^cY3YqgdS`kZV%Xbd"/NBo]QfZLF:@sBoSR15Yh%_WS\,QAI6;A_F$R^s3\#-[p7TNK@,4N+>25D5_Fj>Lt4XE$35m8#T]b&caqd3Es,9/:*mc`@s2dJ7t\K4$ui`<sY-f&X'jkD_!r%%ljr-dUJeuSjE7_-PR+p4AB#ib[NMJ9TIJVK+jtbj;qj-Qf_QaATLLFMbWadu.=;<O5U_1"5p;GmFB!e0NXW3;Y)B5h>fA@T^W)r[%VfdgO'%GfRf0>B3F*Ijf]Df?<:7mV]gXW(!b[[Y$kI2.*V383o@PCqQ`2Z[7jtTkL/D3F"6O<)IH'XAg;QEIe0i_I:\pdTn;F+3&%Rj,I,!l">Ao9%;+LKMsX^odO3b7ZT<ON:(q':,a0e;DE*&EAJRHine<IQ;=`"H1ZF\5\,5bao6END3O&GX8h;o,Yg(!,W_B%B6b-%&aE\0Q#<VjXL5nA/WJNt(Fr]/=MClFjCuHacrf;B'H7(?CtTj!Yj@7%Hqr\l9:eC%!CN2"G$%']`\,Gb:?86DMj@O,UcY3]T46=J%ht((KD>GjQDds>;If'i1M5>NO4i2`;4\b'51G+IDLkn*.4.+G/36N!_N't`b-,Pj1_V6-M2nL#SVF38@&;Pt^h5>>8@#6b^`k+e3%mB_f/&cmFaaa-bu6Xj2Ji3mE$DmOuC\9D<+6Wrqp/Yo^)VJ2P5YtJgp8o;37I_lFA:BaF96,kL<APA!2EWN-#)"/E%#WF!D(U-O4%B(]],2F\;>/2=#XkNlkA+l8,CnuXPie?T);1u=6Fb.7fa00i(.r>=W:%U3;Z?=k49`-#Id9i(PlF+o(s&"_%f,b\AlTK>o<05N>E%+?`nK=bDWbooXZ!QceI+)[H3s>9F50iM(u;(Lha@gSn9`UTtV&L#gEt@8n"oW!EmtXM#O,;73.gc(1&gNjV_.gS_&P1cSkDW#Dn<%b5Fa82@rU%%Rj/^BKm7O&3ZG7r?iMgK@Wn+'lU).k@uiq,IJcN+I^Da4BR8c("fr?)orG5ksYPJ]]GSamFRl:2ULfoPf$qSg>Mdo%;%CY/b1;<jX(Q>nCL_9G^45SF4(E,HZu8*_"&X!fQF29$-"_)R6_$!YbI?6D7_E]GF#:B'OUZ(.[pm<2JJuUZ0l,h9ga<<=)^f^H%^bEG84(s(P&!meb)9]iQ^!h4TZU>99[_=_`irp$*/Jj))X"pEWC_l_ehME8=\$CZ:mt_37]>R!;_+kH"B[+N01W3!;_:pKu+_anY%@h68TkCA>X,7`-^MAOEZ0:^--6_!EP"9Bt9!da^WLNplMjEq94(Su4C#lg]8n]eQ;>IqS]NlgftHJ-1tJ=rN<0Qo-5Xe:+`*LT>a%fN8/;a,UH6Mun&;kEA7jN.P^ZN[KTs(^3=_Xe$Mi(kjn/obfLlSMQ"j8.O`!Ks6l,pJ86bQp>#6e;Q_<F$n/"PcQ_)F#XlC"O=:K%V&Tua/YQj+>/s#@On5,0//>7,W9b!GYRgj%mYQK!K%;9C;p[.308GYC7Hdui]t>'K+g!:f+ojptVr`0^p3%Bj,b.'hmQ\sI6;Sk"%8?Iq$FpD=g26f96Yra)bo#7*)+%BgWJV/1]m=\=_<(Bbe>MrmQ=NqH`-=,(S.U*9#0!Dq+Z0p<3m2_TJE>U<IaS(5R!XHSQ$VMJD%?-^mgQKVP<DCP$DC:"eVQ+Tr,XAEc8!hU9dA7-JIU5na(5"oN14`t']m4g^<6*KfQOBCfp]b@'jI-bA3K[BSc*HTA_bUARad"p,?%&\9*B\cf+-6.<3&fcX<XLR54fMU[LKMnDk^q[T%I&3GbfNh<Z5!f%!6Z9CT!<T9bQj0=-YY^U\#,LKX*V.s'3oY`=amA_%E#+*rm%JuGn6Y"\h;nWq[Js7aN;;F]'Z**QnfWkG(g>qjI'KgNqEL/BA"#o6VHCoO7C'^nP!Gsnfr<@Yrr(^6*"G$)_H$09h58hPhQ=op]U%J6QE*n10?O1qtO8oS0ot9A',7@s;U:L$61$[$aZlfaq9lhe])BQ%O7B9^fb`kIk\W4Gp=j&#^W@ds6qK=9g0p/AAQnBrsR.[+'Y:%H^mmh(m!^.XKp?lSL`u9qM&U]"(SY.ko6(f%QR8jPO<?W?9XlB2`:J<r)2V;ghFOo@RnpqZ,:[_,H=o3^jE!B:E[NQ.[D.p)9jeo%c>6,5o(%\Z+9V.bL<*JQatbZG0C:K+W<Ktt)jAPT;;*R3K2UJ'+;E_7'Ml[1a`iCf2gEqb?kdn6X%jTEU`n'9h]3`-P1TAOERU88%]jLO*igV;q2c_<_O#P5V:]S.\KZ^uZ1VW:=*]:Wh&q@4Il@e:'+5<Qk:)#K3e!9;1,u<;nF[DisE#PgAl@_Wp5Z5h33cQ3Y/89=d%?"[5>-U)2*FpEpKd8q]'G>.C)q%l%7/2TuK8T2lAE-Zq%S^8buloYZ2eHq3jJPVZ];^Zl4NB3a:(9^Jdj5:L'O)K36R2])$9[NaX%2<Q.Pl9maW"PI'<Tj9n-=]Hh+aol$FE*f*^T]%!JKuUAc%]2qt_CdYUB=HT*EBCeZ/0?mGlp;?s<_t.HNB.*=H%;hKPfN+aYfGQQ%W"U(\Jt7thYWAIT-5NbA/u)0<<ZkH&&%hD4-rVLHE9S9gO2DnBBMF$onef5?cM1C:'ti)bNJp\\\LYT+j4eX75%;#Ob.K^<.]R`5%*8?0ZoCQJRF@q=(jWH'(gJt4qrng?4E-]]1`RXNnj/VblfY(^M+KP!`+=dnr5dHPc(#es2.t^3.CbZ:NMUh)JQeW"5d#7#Q0J*H2%ICDYt"GR;hU2/aZpci'c0RLGO;ZeR7qB7#rm:=C,HYZU36pE)CLCjIKn):nhlr?=+7&?#V?mE;sbpq7Y,g57k=Gs^FYWE>%SeLSk%OA:n&7VH;(P4Lt?RLguaM5qEp<X>uTKH&<l==I;!$:.^"I;P'G80)1$1(CNeYNRO$476aZQ7it`'a005a&gI0XO9289(jVo).Wm`%n>m5<V?3'6&-\&(TRjJjQkf>bK&5o"1e+O?e@+7$"+DeP6BG3a1`3"O5H%XPT*Qr\NB4JXfE\-VI(lLE-1L88UEA^"W#"5!?6B!r%J9^PG;]YT:VbDVgq#tnMDC*]:H.V]dqf\Z9@e\&1YRA^nfu]F6lGSjtd"Fd0gE#77=s(ZI`(h'c`O4-S(jH&0gBkK%DIpa(Fi);$%kj%GdX@ul/AO='[WW<m=:*bsZn[L7%pTmB0l9t$<?\CDF'&Fa0;'te4BJ^=q[O3BR^"4EM@\m(%bNaaMR@l[qBlub;9X'=jLXc]j%1')`GfN0Gh+5=64U=!Ll3M9-gIS`e-TK9gkFTNc]!\/=:$G#1M77^"=453`:9PEd@Vpl$41?&'MF[DisJ.u3WSTlK_!#!*0e;53u%b@eLf;aMpAbsJI+B]74:'8WLOU9>r"A19q6hU"j^+?gdN90eU1i]*4YdCKTp;ho:FHKsl#aia;MeHA%6^D>^%ekc"BY:_2oi5bWJ%_)Nuk-]42?6c=ek`j+k?])GMdm%%/To`gQe0=dWO[i#pRY6-g=GMbsH,bFq$lO`OK(=Q0Q->GI"PHP&+UP_Sp7%O;O2Wk=VX)HD?%UBFkUH,%X!)'1Vr-!odGO!Yu3T$[hA=k]jgF?k,&'G+]B^"<d60:EiV?1t#"V7]'&r]8A35Qm5?$44q;!df&>a=gjJlU@#44QBYK%Q,;;aY2rghEj3GIcn=aX6?p)\kK2<a]t+cZB]4`$<(g%=_WW@15du_)2Mna_`JCjq#VJHsdFgqsNpIG+:M0`8\?e7/=,V=@J-q1L%7O16"U8%CA0[V,Uc7bG3SFMu%jJi<&&Q:YRg7=R$R?,5HCnk3[ka]V"ohCOuKf?Zje]U/Bj%GoEF'L"*>X_mAh;7$Qnr1tS>CoX[%q7Hi'hmZI;T=:ceeh]:^D?Yc`\(H'F@LdGua4GC4Y8kfrMGR7Fl!;.qL)%Lsg.$hPs2ZhIbC&IQEVnQ!h7(FMQi"GT9D2A)k#`Ln%iGQs3b(qr4q)&@SV2TZ[^7^[p#XWAf7@eqN!O+]G>PTe/KAPXXgQ,J_I;Z?a]Q!(mDr_O[l629QoP3%<1LkG/E`dR[Z;j=klq7>O%+%EkTO(Hj*CaS%+IcXeJ-F>rXpRl%06#9M5-W0g!n(*9s#HQPNn$C/Rn`RoXN2(jF?O\/0:&2%R(.*8m='.<A+>,=0GKl-H'6[u<%ZW%'jM_WLs5GigLlAqmfnVE63-#i:+%q4&g&;T$#>>!JgICbU*6i:*(X;>=%cH[A3M0XU(s'XXJO;Galf\fJQ&`d;`]IiqJ=EsqJ%Dq@<GIMLhVq:L+^?c9Gj>8rPtp>Ua]C5ABsb0NCZiS$r#mIJE'[eNq!*,t?[=T^X?@D2e4.NJG7cB"Xk&HYe#LIlj[NHC3G,N7Z+%?*b*r>J%,pGTJ1([.=abr9".[k577M\*.IQB-#/O:jm%%CLAXng;OfY6Toe;j]uC/h)2Oi/L'^5b@jFff"f!q\gfX"],ljTpNM3?%b!`t)^"7D,r7j4E19NN\rLe:*r'OFJBO++_IKHuph8P&u;'UUo*X.FkXVYt1gCOs'[[M2`V;9\bH($h!)L=_pnpKrKRC)VcJE.\G%<Tj`snnYHR#!29(%`9%aW=E`SftLT8kZnjJ67e%[%R[N5H@fk'm%.lNpd>DbGMtrcUL!ibQto**Gu7f_/)1"c1pl:"hXNkm(p:f$%lLOa)8SjiQQ(<)i3b\5ib?uBKLh1tq;$3(^V"buPaeC=,pNCon=iGo^^X>P[M&/u1I0H=9cCa',B1,m0AMMQQ)Hq1TP%BU(OpinP%rF#V3(B[H]+\p(ncNu;Fq0uIriEO[KIoV#-nYO<n?P6cA"c6%S70/.^(N/=n"W/"^0(1G$0J'qChHq%+=F;8c[Oo;=ZaTL8-g,!t%i@O3S"W3aSXbiUer\:+\?TH(+J\NDEYkW6aIp%<@+9c"6<S!lEWsNI&k;S8X^`8(>RtOm5)+pRpjX9q7`H-J;64!:RW7KstQ$O@o%okP\6l`L;O:Rr'?_KZ,H@Qe$cYN?#Ei<ahc.)ZU:6<XtCG^k/flMeSUT9g*=r8n<n,:B)Pc#\$h/L+eeU*I^-k5CRL?62(U6LHUs%i4J_:N#`uNA>\jr3-pZH4qh$t-Xd5:CW(:Jc\U\8[%"7JH8YL.;Omm$&;@MGE@m8V30"$q7V##"'Y!8r@P^*;^DRcSRkNa`]SmlG%5K@*kJt+WZo82o&LH0"A07U@L?;r0E"_m(dG@0_X`AfLqf6f.d+PI"NEc"%Z3>8rhCK8?5q1<+'Y/fbj;3\1SS]61[KF$5)BD]gW%?Em[cSlN$(&$g?=noqIQgWBL'A.\U-UAE/1UVsuN]_gBt*lVpSW+=FB`hUS@h]T_;6C\%Ng&4E5+5`AH1ZbVOZFX5!q@M+Ks%D`b%-Vb$5kDl1G+!3*u/h`D`O.t&m7@OkkZd-&H9FUN!`qh=Gdqsb!(`sXt&_6":Bp)fqY!oq^JQSL,^(?RC&no!of%0?mhT?cMJ<fc3%]=6jU"Rp7bVV7+s@l1u8W>d_I-,@MTED%>ckOL[I^C`29FnSchgu%=epc:]Z%I(A;T6/kG8QEi<&^FIf.)6n(3;46rSCm_d85;):%+aN68$:Dq(NqZ@eEZo.pniR\MTR4Gjj^A,2,+3j,]n^pJ6R?W?pE!AT%sP@Am033FdIK?gO#aS_DRd?^,E^5/7AJ6sar3kEop'NO%ZQW6e/k6I++n3+7^a[6)_^2C9g\c`ggL+\,eJIqR_RIdt`ea!PL$^M*RoV@KMD4q/)O2&&R*'=bp3k)S3XkNO;KaOZ5_luY'KulG%X!NP6!>KuS9Ce">\s6,a1%>D'BI`u]]/nnfUY<+_[dHn8l`TrDOI_R_&\RfC0)QQE\Z0RJ6(j`E"0(tQPt,d7+uWD9,QRj)hi_Vp%K.S188#Vi@.UdBML(Bl+N#@!ndQJb-p&hTOkX&B/,YPBrNPS<Mj?>2Y<:5;c[9<=XC*"5W_f\XciU*c>R6DT*XpTec@[.ZMK.g1h%[I:\aNI2IBPUKk9BH;dej,8`TejY8E?(fo7X6/+FZ,L5q7i6;I]PN4%hf]q'X>Pdm4:k^I*R`EBln=2=/`]!f?4mA>l=n>:_Psgd%7fCHD]Hi4J`(3Y_b"H1OG0$=;^Np.2/NllQXETLN&I#>Pn50;#'5=k);VPBo)J#_hM'rgt<?g][hgd\PZ6H"o#UmdU=]%TO05jQo%EHQ@nCMi:.`6siN/pe4(-38J`jlAN3-RG(M]V6oW%SA98H%kJ$@>Ug.Y>hV`,-ge$'mQmOPurA'$;mY;&kc#,_0HgA8h<,N"`^cl%8h<,NL!Sn[c;p96C`>Xq&.U6ubTtcpfbNJQcoQKS`nkXB1;Iji2%n+&*N(JZ0/'TjFMqe`o%@4Y+sM39Ye2@[o_*&$1G#J-jjL;O%Prfp"n[4QDAMV<@$\%bclrHN><XqBMJL.<g0\+MiAV&LSUjue4O0JZubPC914k_uHG_j:K".<DF;e-EQ,&-PT;`Qa@hSSG#s3be(%b46>+fPg-]V^uc..osEh)k=4H"gN#)(:]Z8hNGRIeeYc]>i*>H9Busj9.k.nW%Zc^!`s'GjXk*7=^9kl/[r@rdHNP)\<^CV_E*YK%"g0/<[tps6ncIF+b?OOO=\EWBErRu'Ye6gg'p("dTs+,)\@CY&MC2HS*55snEN)^/^"oe`/SnZAT3f+Y.Ii<+B\RBXBI'Cr8_AOD%La_r]'JH1'L*F>l*a_bEl3SjCA%[!j.\m\SWjSs_,0GLf1<?c+,,4cXe,AM&n?eY?83E+YWo"?+9(_%7cf"Y`k9f\&3BMJ'Jhna?%Tts070kX046\A$KMlgZ5)&caR^,TSB)&ca*m_U-2bL#0NG3;G&PKRM"8I%sB6\>bN8PY[YW2]r\T#$+8fs8^7^q&S#UZT[I(Eo@)%o!Au)50@@q"Zn7T=tmJq%5*$kd4alOTbq$FbsKb;MV9qu`j+14pN9(->Z&kgih0Lo'9hbLf!>T#A+#$@!Ui]&+g6W0nO+$6O/3\D%pIO=0,l@2&IJoJ8afCKtA>-%%2(gCW9^>"j8]cke'oO2K\t:]682Lp&pITKgVM2B*5=rRE%:UGA*U/;53#KTL@MO"%(`WrnJ3E</%_AF$l1"<?pX'&>FLCd+(;QF>"Z!D%=Qb[t41K?T7(5fuVEF,2nUFSPYBA,e=j"'Ek<;S+IYL05K!8=n4/aUXf\t]`_/\i$nNpa-a%0,u1BQO/K[lE6[paq6rR3P#;!*5$naNHd`]0P8"Uq+j*lR*]AY6=8Nd#d#9$]8sH#_kmQ=eIR?*J9M[/:\hOD)Ac%ngQ[1?Ls'1E%](_s/L;eI.\E"[X%O5/q?5b<C&H2,ZM1E"k`W):5GON94-I2Nr6,/2`M&G47f)<IV?m#ae1A!4+)3Q-gFtt>M8K>Auq.F%2DelDF%kG`mTZ.!PtZ1,'b]2)!JBhPj6d\hQmk/Z@dITH7%cbBCJE.9t>rb1l53Io"SqigUNIIg#PUHT]@oV^#bqWY1JqW'#rr9Bo(p$pN*%T7$%JoC)TkN.:ZnLVNZa-Qdd/s*aNhJ,@'#rpeI(++=(AVdFlKr&ZRGqknp)l3AF0j)7-Zkiqs`<o)TBQ!Ls1g&,"0p&;Q&i1K-B%rq0($o[@aVnq2E!J+LohEnEJL:VQA==.]GQj.k[ppV-I,?[q+<O5^\:#PDR)kBUt5%HlO(`IZ;FaEPDk_+1-qnYb8kn&IZhlgqL2%9pDUUqB*HGn&O$P?&-;rUjdHW5l*]0s5UlooCSdWnCuiHs7joir5uPQ";3r3>P$MZP4Q'<Dnl4i4(&$ZZC:;bX4A@4D)pCdkAS$5%cF:R%Ujr*XHiN]^5Mr@>O$A$XNN[^WJ,%%\5Q9?.]^bF)J*E/D-=M5h'tuWnHIf?Arpr)+HbBN(s74RJ(;7kM>t[Wckg&Vbn]("Y%-+MgbrB9#ih$`/Y41h,-A+uP33I9`7f/d9J5=lrgYku,)YPV[^`BJPGbHHD`+!CT(F!B'Tr74(b4(Lhj5Q7fB516p,VH;@D"o$g=%A+=b,<;u]?DJM?!]'FP-TrbY&ldMp%F[(?Bf=V"S4cfQpqT$)=]DqlFs4^<j^\41!m'V?)*W0tR4rf8tHXRAe@+u'=rOlPVp[OTb%G\5gqnaWotchFX"kO\:en@?fZh1Vu%]>!H7_pR.%3Pfj9Hi&F;^2r:WcHQUK.(]n=F$@A>H0<BEO7Nm;^Uf`pB/d!Yg![c:r:&l>%n#n4E]nilYD2>l=??[O+g&L>5^AI[)qOJ/KR?1eE2=fm%aFhsfVf-nL)a/K4MEL_o)q3%-FO'g`YUSO#2nN2#.J2*TM=5AdmHJ++%)\B@Tk5,XgHce7nWr2Lulg__N*ri.A?WFa[W\=VFs6=qi$Jt[J++<I%mqn$U\ZDX:kMKh;e"*d'hu)WGILn\jlf/L>q;`L0H.O^:%C\R5@msfi)DpF-U7rQuA2[Y$-ZbQ:\<j:!cIH+CI?]M<2T1aNaXrdGrhgXrClf:W"-B\nr?d@-k#(QRKPV"9Kfp;TmJ,CL_T1Bf4%lU8Jt\":3:]7jTfs85+!o5FQndn`.Vn,2!Fr86:Zpt@t3jN$RLG]WiBD_AK)fkFIcs1J6r^OGpDa8>AgpHJEFn%Y"1GNetBPIKCo%qcc9L<h21m%urlnB,=A']oUPoT>%QnNjB8=J,K5fCZ0\O(&G90LG)eIIf5U_mQ0O#J+NZ[[+HJ8o>B%@30!`XceeSd^HClThY3't%T7,g+]?g>TgAG-??i0`hR0c(PNu'Xhhg,r`qX^>L-<R,2qD]_4kD\p%:\$`c#[`QH_E6ZR?Q]8cR,Fp&2aRK)`WR.#h?`TLOYak`%^AIB6n_E?;5PScM4"GEB^q/U59Q7/"Aq]hd5Mq1Wrf_gh,G\,q.uo8F)V@9$j#><![nZA6+90U3T=cHp]_r@jo[CSRN,e@4gWk[p%IJo/?Il*BR;o(JWc^`Hk=N+2-mcQ+Qn,DLNGjcC(LsLDihKf.C>JFr0^@DU<T"Oa,.\?UAc$8Ygb:hM,n<npo7_otRH)Mq$Wf#,!%n@fi>:Ytq7Dtj.t^=MpqbV8c@Ib,J"rV(4ES8aVBlAbPQo(mL5@h)K.lkOj,bZ&@-Ieg+<>STAN1pBc6]lGpG(OWc88H8Y`)4#Nt%GN8W)"mns/\c1X6+8kW?2\pc>Y+GQdO7V!&_Og])bB//-"2rbRZg>4FhR2XUfM/36It@U4.X6,Hg".<UcQDlLk:='M=SQ0knSlW1%]o,s_1nLTu=9jhjoXhj-l*J"NYK3?:ijM3]Imm,)m2*Fh)k[,!fCa2cA-;%Eq:chrEW#<E^Or_L0<Jb9J,OP82'CXT<dLK5[bY!j%/KZ:ZO'h3LP^2;=\6K"$+OqS'f)PTa=0BSps-mLqJ"FC4AJ>L_rdH'9n(kpMe$!,kotC+_49'Y5"PJI:qp/)EQ./#NQR8=hdeHAj%I>X36d.kc80HXT;>h?92^Xk.]?,GC/E8%_VkJ^d+]ZK]4]k:sfbM,(!aM!c:EGkNS&G3_bFRGa7ZZfU.B'Nu"Y8?T\Du?0>:#A+K%OoOG>1I1O/=$QTL1V9F^r`@u=B8c?_a%b4,dX%FO61u_d5L,(^ID=V)]Uo"1hu(K@W:CJdN8O.D5'ueu4b*#<iXJ*ZU&Mq?f;?UU%$',=mln?&YV_nMJIe3TRq;c<ehHD(W?[V>&%t/]]a]i[(Or#5=p="Lq&(FtanONWWX,hc&bQ%G&P:,nbra.Ya\,P(De!S/(<9s&r%F\.)T%o;%GT7%X8H2=:Gir-jfmsO]\%t=24^\u]$55sXks7Q#b9D#P4s6)-9oRj&KICc'L`UW<HT"]X&-N)kJqY8N$/#MipUP?O.%&tXR8q#A\>o?!n+hYm*A\"=`As1sn,[5e0V?cRZog$p`qnh`J0:]L$#$r;BNo]L]?Spn1upX:L0N+]-?p,'hZ/G32<^3gQ+Hrf6(%D9@>+jMd=GbHhoKn5#>iT7qIdlfH5Jb)Q&T+as)<GLU5mo4Vf^qL$8"<Xe/)cM:h^I/20^If/.ps*+M;Mr4NrPQ/LLJ*k?dhZ%t,%T)SN,frP^V[&7iWoCQ[FI;(TDkc,3jZWZ:jJf:--Zdt2Gpr5XDD60=.A,VT@8Pd'4A)m$[YrOqi-'"J7f(pqnS">?#g/pM;`qh&_%P+I'G`hqWtA*[RlH.TC95:buqB-FlF<_oa#r^iBN-XX3bq=iImIb9#(p$A3p7]QF8=NIY)eWXaLIo7TWak(?FH0*&[]$>W*o/-t9%O1q*W?O^(7H5:GUJ''BuF&15'QR>q!Hh'$'f7%)%Ur9%s9"5`bV3GW#?UkE6f>d)I2:b!kP4[gN2R`Vd7`kF27nG/o=XnWjUpXk,%AhKeDC,e@*_tbZ[P+I%q_p.)n-tu3/c+?h.k-KFkQV_jBXI`C$rKA^&:VQ7[q!&@)CFFV8d(ZCA`mK-WZ\`ms,g1W_H!k1)R\*=D%qiJRclP*]SKmaE,%p#u;1Yp:$@Q9[M&EJVCHq_]Ml:O+*ZQ,geE_baJVr)uDbP`SbYkUYRY]S)\3Ri.\\tdNPH/JOrQ[.%Gl:iXo%2][DJ`D-*lCY3DNIBZbbRd#h=XG/L6VTZM6)tEc-iag>VPWI8RR5:C_s2@_,@.jBP:%r&'GU:i#&tU+2+lAZ)*:@IP:3B=o9a@XV%SRgT!r;@Ei?2?pi''Y=W')?52W9%WoHi2Pj=aojOE`ld!CCe),hnaDaLfGXId8cq%q(1%DYGR4R5PY/Qe*T3OS,(YH%/T8pqB!iZ%A!o+m'f`Q@eU17]4Qa_[aM[PEs7R@sH1e"&k"2ih92C?/AtOX0.8)XtT=3;V<U1Jt2C1Y4FY)<,iutJdH[/`,VE2s;rNsO@A4eGF%Z>&dr+Z#*N[VZe?cg]FXAEpHo4/&gY%>/B#H*6%[XBQ8m=B?LpZ8Z77p,X:UZ+l2V6p6uPUm=\dl8i-h/-)Pbi3bSYg1IY<Ru'hp%;>"hlU8clLBran(mZ>6bLMX#L&I(3_>?s@WDU^:)h=3/S)LM6Ik:1klrqL1cQTGu]1tuJfaP9SSI]i7>"koCp>bJ7!_?K3c^?Cm,%e.)-FXO&=V<N)BBEA_kfY]m*]4%()HBr3K$BA'Z"B=T&E0+lr]\01=+EB"u5Yoh/h>CRE`a_^ETa\5uK#p%`ijZ:mk21Il^7bE7"%L/#B.1Nct=*`1HgP6lAa2478g@np^,)X;CWZh'DaL"#Qi*ZlDX/0F>3A3$+&4]hB!d6G,5jf%>doHcX:TeBiE/=Gb_ij<6n03^6\%n_TbHK"$0M9O5I7=>EfVnL?/ZWP^,Za.0EtR+sAm/D6V)%N0&FO%JK4r/qL'Ru^/'P]_qL[-!ik1)+^Z#C)1s.8YdP>9_NS0Kl7/%Tl$fQ($[,q>+og0T5Je,B>pK$;g6;r]7s%I^^<#i@S0Jc1n.uIPW>5X0o(^2l;/9ONgHj*\Z+ac?]r,5I>KNp:mY:r!Gr-anWH`g%9g#(#X+Ue%=U$ilLY,?6LZ^dd]d6"=a899U@=TA>EjUVKW'dplER@p`XfC$C^*M/K_Orodnn8O[BTH,(VMLA'@-g5`<N,aKh*Y12%'bXM,;2^4ogb.?ENHQg69R$6d@6-T]ot<'DRU%%aH-5i>j%IZUJ,),AS%j@"MY+^b7I"Q`,'E,1@u6p@fXsOTk4i%/=YuPk/J6lD%^7-)8l8TUj;9!*^6X/#6\W!UW7WkY#\(Sq6e3gZWY=$<-]?O[*o7Gr5c!K`/5S6B[:rImqaEA#+Mep:]Z:Ol0h-.",K#mY+")#:Q%GO(?qC2gWhSX4FL`\t/<D)l,bZVFK\&61iI<ipLl5;r/_#^(baNR0R_C4s1DfCG#k3dPQ*=RQ?`_n\9CSG1DC$1?@f1HQnm>K851%g;2T+A1SqZA@#;ZX)Wm&_V+I@R6"%JLWn7^+=;J9A<!f\B)3/;kE))qcD&K&foL,D*8ZKcA,dVp;\n.ekFAj[I$C.":7<Z:m3sEn%%W$L73P5l'^MQtbW0PVLFfnog^M[>J-L7P/EO6a\X\)7[+kis[`i#T)XfAT__c1@L3(-tN<dtPRIfUkD_ibOoVVF`W5SkrNKF)d+%?Opq@2D*1s_WPEkX84!ng7fR=eMYT^AtYn$\$fdq5i#J=m`4Cj*&:I5:\l@nFW.\+%b@(QnQRtT;:B?9K69lPm^IODM&MGqE&E&I%l.6L'ccLAnA>V$ThjV9pjq^l3kf,7.<Yq:&MQ&[Jkf,uueK(4cN*N':IeT"B%kHiIcZ$.Tqdj'&iF2tmNYsHMi2UgR9V!/c6Y>U?%T[p3NT8S)4NnMP(7CAjW+5b3uZ)u't=#O:1\%4[ZM&m=ALaHU^``BQ8QL%-5Z1<"sa*as76XQ4=Q.LdpCADrTf(R5a?e55P6r<[V%rn\P?$7Z>U0:<Q>nP-T*VN5@4;@1]oIV^j)RD+LEQmFP:!FOSS[e6cIZX-FiICh.0ZK`2%G0asI_Q()rcu[fbFS_WQZ&L(t(U"R!%5M&pP2j<WBq5F.,K"gN"C\ip;S"VM$[i,$!Zq?(eUcN/PMem9^\u=a,W,n91chH4mXDFNt984K;k&ocLfXo,XXsFIHcaE^V=4?H+%L5s[*l8>MUlGs0P<J-r1>u_IGlA@.>Thk*&l-OV_1b6"%h<BjVVku)g;?Q4VR8_?">-aNqM9\[@G@sbD]U"L6SpM6qD5tV)e@!D"%j,e,+D><;&^-dY<C4O%DkA#O]m[l:`NV0=QqAPf",LijaAr'-M7Vt$?/%7k*<V*ni$q$k[n!.*HG?8k!Q3a8FOB"CI6QIp\Vg4qI%W(S*[2++!"3GXA`.&1>:dq<MLcklJO<VqMX1=jdciKqdeG0`$gqVU_OVQ+]Q`R-&-2V%`/>_hTLTl8<K($YumD/IWXfOYN73c3ZF%X&E)PY"i7C\ho[P`&QB?BRPZEVU"%)fFi0\D(f^^:r)eAQ@pjI?J#korGJ[9ZGeY#<<Z.HV$WhjdoBD'8R:Pl(9#EVeH/`Z&@Fc'%W+cW="ll\HZbDPtff!W(q\/cfY%Er4EIW#da9J9CO`:e=WcPKDi442_am"F/hcDI(*F"Z&NpY.jLNg3BWIt)ubl'S>Np<&0F`u#4%ljF(,KeH6LNZ,!*KorE2qq9Ub7!V#JA:Y))EbHDD&8SqPapmXC&@X!7(ce]i+,Xo3f4E;=F^:<u:oF,tFf=UGYH?Q$;`.X[BfhcB%qKR`mo6dmCac^(IB`n4/l8PDTEbnOMRkjQQC`$-:M:jT0H9Gq"KVa"Am#']oT\7kQm6Qpd/C<@#X`;(1@u'*pjKN_c?;2BWh4c63%4^dY$e7H(i-g3'3,!fMnXO%X1l)!YOl82N5%!A"rHA4UYCHY$*7o.IXelC\7-_;[JZ'RWF*1c>c3bP$Br);e&e)YQBC:`WHp:=8s%^hW6ipa'A1pF#lZ;qT+g$,8SBR\H4M,`=P/Q"ei^Wq?,B];[8"c(0;a@7@f`2G>@/b6qi4L>5$uZhf3\c=sg"3L)GRJ@_Ft:8lY=%dO4\OjllC]^DpZcgHO\b%#a&J0DX]t>P3`!a=m9,"rM<cL.:cbRru7/0^sUb2%#g2i+NQ<Da^P)rhlVgbN_Vpa!!GUZuu=(6/D#p%20JIY7Y\Lr`nGY7qQtjFL4.)q)=<[Y/Lksi'RYfc%+YG4CWbZVn?QZg,Vf_Vl18RfW*>26q(90gVQ\uhHrR&nIaY/ka#Mg7Rq1du%Zl'><L0E!sj_Z+"KAZ3Mhs:H=P/%W?)@2T2D1W1L8qJro#!sUdHt>_h;R4/;-j$**T^Ak4=@joU"_&cD:=DJ0,]K)k+B/ub=tu_R%Wtc<5L0DDaqd_2kBm7V4f1Cbp^Uu[?(A[&(JL.Wf162\lR0Aba#ra*gaP&]<ajQRLdg1*m,+K81[%fDjoMtiJ6(c_]R@pbZhjQ_t%#Si'^X>6R?ZJe4@,Yi0b9Z0]WG.X/l(@<DOccr2D8Sg'*U7Fm1Kq&F>UnkS%m;laoB-MM^'UP@jJSl6#Ts(\V#'J45N5AXRJl-b&%^PUT7C9hg!Oa$27:@l-L^+sJ5T%B.1-T^nAS-/$nN0qMiAUW"O@G8",TK,\Men=$5VClYERhPX]J'R[@Uq+D4jkSSIQ!4KV/3^m/%I*!p'6)uZ,`B+o4>I':Pb]Z!#HrA5-94[>?'2)@<%_!K`ZAu.[ZeDtR$#@EA8S8?$_&/K"'\boXZU-`i"+qs',B:gV5f%/GaXl/^%,9fc=nJm$_']qli7:GTc1Eh"K2@\(5U+eMF>8?9qSMGr1X.EhR]^%S4\Z)b]c:r`1"08>U<]Nt"mV"QgY["Ca)J8[(J^lRA(bg!A%WQOMVDQ9u\hbB@TEeCr:N^6r-m\$`9q:*tq</G>#ML'30Y+eshY1F.:kJU`!a3>;,?H;FW*eSUpl$D1-W",@2K@HTg0hS(%jTj,>%#L>s`b"*'.QQFX0\`R)EP&%1&+D+o0JYcgF(g7-').@434_BDAd64`_Wf:>D7:C%TFt<u9ZaiO$0Q^ch5)c^JV2obud)Y+FTY%hm%GV=JjaI99Vd!cE9C:uTB!KJME$Pj[*e9V^.0HL75p03;9^"=hPO6;+dA&OkV)UPAg,n<AjD;L+:&T?AE`uj+o`d#.cmMM%0dpdu3%k,-H1Y=u9=KN%"[irmt,F*>Fb7lRh'*.QHFODt'D/JKW`i6;mRqGHQRM@+T<GtL'pka&K,duSCW;`J+DE?3kNbqGY=)SZ?e>[_]r%3uG&AG_s^ZYa4T$g7"acC9%\fWgKr^Vi!p/-OVI@=IuTnYn6S)c)ZPsLDj8h;jSLS_qd/9S\LH-PZ+mp-TU3GRrIG</_Q_7kb]qo%Blf$s:oBXBFf;'Z\7DHhWJD%4O[T\WdjpXee-.a>Qo96"H,ns/F+eUdX!N7@anBO<[sEo)A0^PianE@k07@,52KeZScR[8fAGC!O%cr^-`9jcIiEB?m%)bXf>P("@D%j*GtAEon<R\5\u6;(q2TJ_L8G[(%0=u&/E/PBZb>Pa4]1=O:I]d5I_*+V&s*PWV9/l9T,bU#nA%IZ7KP"lsYsRhdF!a5nH(dY>Jdo,3Y!KA^Q7eKJtA!oB6W]U-hda-3Vj\4#6E94ib8Y#ZZQU4%S=Ru!$0'aU4HRj%B(R!'^?X<[^]%],"%OlF=Hgo7/miJn,&GZ!!5)O4ON#\(B`M??4n/QeS3:U?-N3+(n02"6XiSQKV;E9qc]"k>\:kUF"WoYetQhjD!056S6\d<V<t;%WX=4l9bY"Mp/-G?LSd;K4@SF&UpeQhfgd4A%bnS%E6^I]-Z7&O3Cb$39@WZF10QCKbjGGl'n8H?dlu`RD0=Q.>dCJ-qi4=XokAnr%?'?sj?'Ztef3#]fFkd^;1/l6Le%F`0a_e=9d>gh406YH\<'jft9=CT8gt9jT0b\F(/t&\3WX3,]g.Yg.;]!q"#b#^FHAT'kDI5'E%etu10-/7.\(S6P5\[sHb>R&]#s.%%R\pr"W&fS'3QuG!6M(HN;-)!#%;Unf;9Gg1=Pn=Z6)jW#u$uRDp6/c[>Vojf%6QEX+KsspE%)PN07PH<tp@M+Qd0EAFi(6h(SAe?U-*b-E30p1Kp))9NC;&M(pqJB8PRk7"GKMe]p@]UP&:X'5aUDI]CFIS7AMNq[b/+u/+'oSM/%#'U87>P"Q"1R;`N,sBfF.FtUV\nqPI2?pX)UW2LU`^js*DUW?[Wj'Ln:0jrKB1NpEG"/9AfZo;[bnpl"=#J?0/JkfX:DC`nM=-s9%a)eW+[#%6!ij0<g*6-]s3a->l*Fp`m*?*X`e2^ZYnD(^kkk%Gi>J1deH:BDg<9tJYE(c'O_ZDD5\r5#=kBi!)d*F:8*T$[ZV%,kg%AZ<S?Cg$W(P..Mp2Hs2rb@[#t@bI\d;(0'AV\Ue#.Md5:Fg,At/6L\=WJ]>LB+YmDE11<3T)ha@J8J#3m)Z(Aa3K'i@<(MrMMh!`%iP"mF.:[=d-Kuq27rGVAml[&FA=U?c<k)KtlEb#k%JebPajp?UP:OhIRU+US;rMSR1)tYjdAA4"GT0#Cj4L,e8hF2^F(Y6.;i`ta%Pne]0!Nkst>&4*Wf=@3fk"^8oVqbHs8&CR&LSH`BH=CP,05OF]8TS`E$uNVSV?Od2<+]f*85q,?m[caaS(>[sOUeCXL"pr)Db80t%P3^ofBCV5Dkt3gsd9cIOE+j3I9V&luH\K&*l;kH4XD`_P9b>"[$cM8m9l;)"\B1`25j2$'<()L&T$1Fpo@r>?Fa.(Nl$99hT,Z(I%n?d:XFNLsT*\^loX\S%U:H*P`Q8RACeF?f0P*n@Z.eO*r)Q=rH+4&E-0)L)m9CN56fDTV^T,biO?VBR1cW6Y/L<]rUfq)PqI!CMA%oV,:(X6!QV:*ZAQ,L'c'o"[geSShahdjJ49i2!,C9.u^tj/M>8]4aFLF4kisUa(q=kCJ8G3otd=A`9*pRgfJFQ;3Dm=iWHX^6_@;%V`(#q5R@t%09J\cH)?#33b%(CRNI?Lk`#H8<OnaN!#iAMa<UFPe.E($B.sHqeI%&hX'/pJ:37XeM9[,$?5m"0F#,K52&g_r7!B3.%BWL,mKdAc[nNt.hboN9ZHSAIsUnbOBYsbK>?(s;ChcmG!(B!.B`@DgA3,W"/&kop7G[Bml5F`"CkT\*2fuBMoe;5kND#,a#,eAMH%mRcd.\GnZ'-.-k$2;TSOqol?%Bibj-KbH`bhP&Um#O_T\ne?*8&`#RUFrtRSbcJKO<]WU;!YuHc'AX3\hnC*jf'_*Wn:]DQQH6qi%Ek5m\=IZE[lpOpFQH[j$g(0kj?'dT2S.PY=G2YiR7$k*C/0k"NOOD(,7:##tN4SVtf9upq$5(oE`(5,sm$oZ%M=d$d1_QEIJ4/#>%c8h_(TK>eI&c?5SL4\,q.O-3-SMM#2L?3Aa0tY8])iM;G<to_rL?B0q6p@\!9?%6o]bfiY,Q]Dq`0)k5@W'"R[m41F6!mUhArlA$%(;s^a>uXeX%(0]eK]k@DRM7%1:QqO,//:)ZFcE^]kcX6CKgBq>$=0BS'04K7(+%r<dP^PaHY.@jp,1o!4Vf9iIF`HMfcFV!/4cMi%YpZWjSmi?`YA?RQjcs[tDnNA]n@Q]phl(gq-C0De$*O]>V82*&=`rqcn"LG#iE_J/Y4sVr@jkRjRgp5d`pajD`tjWGkjoYmM"e40%BQip^Fsjn]Nj#i^r'f'NK>Pr0`pbeL(D.g1m>-enB[)N6l<okoV9[rn1KMAkpGR%cdM>ZCUu4%8^6fVY7b>YU@($LE`S*1C,2shb%1e#>Q";k7HNc6h077;[%E7S5KL94<h;:HLB.FQ3KWe/f<=B3_ZkrAsMMk4DiSGJ\+f$r:cZpsF&'7pF%RT=+rVHKpobIV:7[&e&/%i_R054nmE^\Ih%HMHQF*?TaFa4Ct%]d>XcERNlPqPg02qReLMZ`n?jHCd&\e,"o3D`r&Fh8N!Vq3lr$%i%pF=S1]bSZ#,Lm7Z%`g%AN;H#@o%r="hQKm;e-kp8i/-Rc)237fMeMRd;J[m!nlujF0VSl7MfjEqK0!pGDR@VkqshdVjRrHIO`]6-iCpL+QdMoIO\/a[a+,e%+dgL]=/b/$P:EqNeYL@f_r+@eSM-uemEW@dYdc#,qH#u=c;T^RD8;i70ohRDK#KJlc8:EGF;b`7D`/\m)F\$pm>mVn/W<Vf"?N):%(G3;EFtqG5"tCkbS2(a?/CC>\CelrdbBnu!7<m>qmC>]FX!KQEnlIRV24i#C;hm`"6u+AO6GOQ/?cJd/Oh-k&eENgU37URh=&GKY%5($4tSK+m\is-soL7E?VRg+Cu7=<eaG2mY2#0?W\7W7Ik,NN[[/SFt4)p%dFnh`KmC&:<._$PNaJD:6cVubt8oDbQ7^'F#Ms.2gV%oMO*&B@,nmB$ol(N8K`r*YI\->tM!,a:LAEb0kq*me+h[qRD/E\lZE-@j:25RGki(bMA)TNAS'lD,*Q;`0Ni9PX9IRNkbXZ=jm9Z%M0J^t=^OrIW$U\LGWY0m[g\&P"'6U"l2n_"`2F%P:Pr!cJdbYTO%f_P0&VXWN4KR#4##qd'JBoS\fgcSPr=p87U8P?*[#SKaXD\h%Bno?G](OIJkP"`Hi*_#Le85ua/d%KP_#5?`lG<^1BDRKH%@k"+<#9N=6IB]PWXDhA"fO%Y(j?).Z-L.`n3iC(Fb(Xe,1VB";h7oW%^8O<g!i[d`L-e^B+=2i6\hJDlKq,`iU]89^#rP%A?.?uG;X3$`'N44j^`CACC%W.:/ir:R",[F?FccYS*g)MDE//@p=RRtebH49E%JZ2lQqCSQsP(Z.q>neuHR(=]-%lndU*sOD.S@YMC'BIXhie5CPdk)8ClB7NQ5c>r;ZZnSrM$&PE&m[F>UFoQECJQZVGD(gOF&u"j%W,jL6,3k>/jUb:5GW3-C77LS6I4mqP`)7eS0!"O?njr%3IX1.W&eK1H#YRQk(8N>AbCa%PI!P3f%1mXlHNcg.,A)L(k>6h>e7J;6%)0MJ3"fW._P*!7'?&;cHNa%9eR&$Vg;We=4%T3Op)&[Qs=>Veupo.klc,?Tf^K`a@\dU2d?'eT4l?"CMS2sD)im^]1Kq(2DZcK,H%6.e8([]7W'\85/j9O4I*`R7"aA)k$ZAfSNXCA,tjf=u(C+f_\+5TX$MeRA9hWiI%^ACX]9nfk-;]"nYQSRX\l<`bc>$X2@I]R]hZ%='()fj8&JmPNi5#<F**ZYc`/W"!8nUT2#I=<@op.el@1'MHEr*JWIUXHD/V]SWflTcd`9Hot+[soF[FUU^p9a3+#[Pj@HAQ]&61i%?.JmK''lR%:INdEhB9,Lobrs8Q$7(:XK)hgLJ(]K:d!ODW^RB7SZD%KGR,Tr#K9%]Z"F$k3<rP-@R.&rUa-"FkM@XQl`0Gu[M<%)%_1>`jVLE1%]&I+A(.0XaPR(r.EEus<`7!.6(.9\Ve,ifT[."0$-ZCB"FUfonAt<hULfmf4'-jle">AO+Z@!uslgjPNXY2Uf`dk27%HHh;KF3></F]n26EpL$.0QQJI.O;GTX(-sf91%_Q>F0G=RFjP*'I:+>BaGrkc<YE9[P!Ed8Sh\DT^5@Eg`^_(ifFJ^Xc!\&#&^!P%oG'B>r%5^,;%QWWl_7D`K'QkW)iro<+WCTfdki=jS_edWlhCMh>aJFn_0,<u4h-M@3-$$tE9''BjoV^QZNu0K>d*[f4OI%f-SN,g%n8pW'FN:N<J+2+%1%2Ai6d-$Ll\6NR`7?qH"0ltYnj%$Ii[u()%,^YDZmnr=Jk+<n?9+,dLootg4crq""i_^nY)@fsC0_WnJ^h:!%LiT0>odG6]f(D9.)PD5teIKs;ejYGu[*F6D#d&/%(/jH<:5m]6Q9E@8o]b?mWHCp_2F-S3E2(VG=Qa!>g,'B"[7IB?PUn$El2tRf%5Z8rZ<QFe8Z*%\^(k?a/QtlchW]2RUelBc\"%f<nFVmY!7:\.dl\aC'@U0R'KuCR^Lkd,('iA((XE/hIM04M/3<JN(BQE%]'h=Gi%YHA-I8R>\B1c^(cgh-\>F[^6a''kF0$.$iaFVD'o039-&%L9Q<(J?Pe_K3Z@-0`$/es-W#cLaP6ic'upIjd1<<BTG`GLT,cOZk/I%e)OH:B3S^I:3-0Ai$;A9>*I#gh_lVC]FBCmo<uL^/8ruaIC'B"@JN+(/Zb+hcbh?9+r2NAFUeRME*X%^P2JC_.3Z4(n1DU&qVkn(%#-KKNi4@?I:'9+YpB'9aUA5;W\g$8Q^i`)i-\1N?:q$GV("#!4Xp]KF#d2X@5]@_ET]4O:<Yr8@4Ag[qZMUVPiFH!8X^e&b>K>H\%>Na(CjOWQ':#*=RWXrF5eO8=VTl17?CV`C'[Q[3-,e1!kQkN`V&pha0%X=onJ+<<FVSPiOSQhl1YA9m%i?hUsPWR?;U!f>enPVr^%CCV5;Romq/i,B@1C!LYb-5M=DDIRbME?Ms?5u2cX^2(/&^!?E]Ut7X+.d;*3nHBM%EPO6Ulaj<``7K-%f0_s&3tia2dKf).I%@0^%iA0!2n0#G_coE5_DJ3M?$2U@;NVkgBi?c7a_0X5,F&667l\:4TjOXha&IGZ\Eo./,)qr=X^i!hm&7@Fbi?c9WO=NqRh%6rM"M:@o%$chM0Hr(C@Al+2@?oRbeJRIXX?m+)r_#WjPeo]P)]8AI'l@?+."S[LUk9sa]fM/IQ+P9Bt9H`]!<WaK2VY7?PYaa@m,/[/t0d>t]%52M+"S,1>V_p3\UOC:*@/PUuUe92TFG#OSN)0Sq_=(KrXDGq-U2`25(YaY^cP@6D<SV@E^FZ*/_h4BtrTu$>h>/lB&RgpbML>C@$%7>BXJ#UI<*C;ZSR]."L>+a-e",p@G1He*l&\aN6im&&L&V9a<o"L6G!+GeiBQLGkT<tr9)N;?(DX4$0Al+qH6_/oAIg&lcjJ\LhC%?^!\?3fJ4uTI._I7TLQmf,m,!YAZPM2]h0%[h3P!m(@!mD%nGUNNk78N24,Nin]451#<q<TDFGMZbLaD?!pKk'YE97@mQ5mLSnYC%)S6s,fEEj3`7P5`b)=[Q`)r0`$p[_W!d?a5YmZR4QP9^<NO&]FXBejPS2ETG,rd:k67Y@G5"&EQ2eYdfEuRZGfEI'(6Y%KJOEHM7%@ipXH]6,%48k!,6BEs\7]:_Cp0m8SYW%bo_h(bqtI_+Ph6$lSLfS-?.^kj]c4VG`ZD8)-A(UQXCA#H+<`7P6I%u@JpkDCQAFkXDR%`\(rA-,r]e&Rk%#)kVean?,#q-bdY>j,ku9TG,AknPRB4Mn87BNa:/b!.sP])-Z+R`@AkGJgsW!m0L"%JMPTl&6+K\e\dfYf_o__%hp?9ZVk5FT;3f55?RWP)F"Tf4-!_oFatDrL-rG00;;`!dEO['qm#hIR+g-tJ)A$nRjQqK.8nt@JmV!p*FNCb/#U9N=*P0R!G%mt#%NFf#g-:$6Er"<+Tfo6\Ug#]"1?nApkCJS?kAOhk=QCTX_!+i'!"]9GG\%dI!bIZO5Pau]3&7q26a5_8i(<oCJlNQklbK_i_aKfjq%1U?AsFKt0L#.Uo(#\.p,41&!=4%,PXb-%]n7+pgQ&B_0IV^0s[/s9%S32#M,G#K+[af^NU6]t^iJ:]&Y.QS26G1D0"E#G];-ld,7%e`<?4e=4eC2HFr74P[rVNjOT-=Ohs&)3s@l?l.A]ro.p@Q"Vuq]WY=hK4\2-AW/IXWbIAJ]1PU5@<O$(![:+'C$Mj71X.TfD.Y_d%gM!oqFp^j"AZ+I/p9AoR^NgV((X)4rA+\Ks(qg.@$iX5@nEm07ppM;f"L/-0';^`SLj=o9L#YlMc*$V9:,KT:"A_[JXi'XceZ6<%%hHkg91cl-rip<[qPJGjOJKKHLX,`HX(U_fu1k'*s[AkiG!bYS[R1D9hWYl.+]*]XD34hMdRQ*ALKd"aE%+QARm#+=F:YE?_LHN2c%43YXr(#A.$cV?EZ`3Ust,KR2AiWShdQD4M):"bci^/gh3[ajKuA[Va2Pp+I+laeI)g#mYl[*/)V#di(60ELPrA%i#uAJ(:8ZqKsV%#dd7i$Nf].%mC;5QS`jlZqH?L$YYl;A.n9mk$etj&l1NEBG\cej?\.U?kI)8S2166GaC]Y]BB6:fj.L+<H):q$3<bl>ndu@5W`8O%(!qu)L3RmQ:G/<2UBV?E-dPgY4"XtaBSReQZdZm?!UXuC?U-]e/)o4g'd0*=0E^=falsMd:3ZjBm=k]QG&9M$!UYW=6O)h`nL:3g%cs:Dum=r,p#.,>$<<6dboeM,4f8'7ZWMtg>"JB$:4T[l1L[>)hY%LV]N+hBGBL]Ap]#G8V>m"a.L1k4?#II^*):6A'=:paS5W`CV%aKosc0`pa2E$PS?28K>"Zu^=C!ppo8EWrhN(\!uXR)B[^d&qOF1D5mr!@6BUCIOneK09f[=,BTqd&ss_?ksmQa9uZ_UM@Xs5S!D+%/3r"6(=B:@1IInml,Ed)\()567mn>n&;`fL>nId+7(XX.$&NiEn`IVi.?<tS0M3d/"i;ZVYR;ZB*#k>?]->fOR<FVP9Vu)=%Zj4C%jkLX"Xp>V1VHr0H8u/$GYR5)Go_oD9=%JEMFT-lqA$h[1[&@ZGA(@E#0.RR)]@WCFO6(!<)s#U*q!HFP%">Oj=i#$.er#(:G>,Um%g5ppXq2T/j*$`hi-j@X]LpYpge!l2;J@YI4D,oRCJ8&()`m"Q6`<#'OOA`+.>9KbUOpBI=Lg1@c?0V?fB&Rap69JQ[9a9Z!/.bdm%6BJ1>G']ne[0u=^1@9as'[ohT6o+.7O-"(R2b$J&:/sX7$*rQQG,0a&C$1"a7+sXN)j,<4>fF(6RDcIR1c-uT"El!<c;!qag3Iu^%TQZo+#,n)fOqDH\6uaF#XqbF%^pImGe&\n3&"%MM-DpRM>RNmc)T,I)g+A1qmj>=GZK&TKC$.1HK\CRn#,Ku;oUE(.c6jadXqt4E%@(Yhr!>p!NB*)q6i9i7iDPqQ&U>%\07^;dgm#Gu8ST3SGor4Ct(N\Lfdd;cQH:YLa7#)Cm2j10rFdTGk_X3))CNqg:#4(\r,["\E%Y+d/oFi;AC.V!;O1$OX7\%#cJf57%^hBUD7L011cgC7R^J[ZR$R"B3'#T2KC;[EF(\!rn8^p]`>,1(KhWjL!C2sY!f]9uXi_PfD5%C@Ja1i5fH`9s"V1gJ,]nKZc6\*Y<3J[?F@qh)s"V!J39">Vk@siHA.l6\O2gm4]/jkFgP)gGq52l#p!p=/=SFIBSfOkIu^B\!u)]%+PgpMB8L^l*^1@pDX'<JFLs!+3pCf$GC]n+Rt=rYDE#*T9"(:gWI\nFah9(U:'#C/m1^ZZg.ok5P3o,VOhp-WHsC3oWL\@/mJ(BJ%ZCMe/RtK?j)kgq:g*k-B8,QSW4t!BAT'LUHPm@0@?$Rf-,hU68KBMCQF7h.Z9si`9lo+3)[,"1%*p@AMoX+r#m_eVk&saoQDU1+F%ZDSRWfbrN3+u8%KZ#QK)6tlbWcGB7k[L8hc);7iJDPHN?1Rr,?#7[3Q6sNrh.Upj.<KRN@TS^i*5dHq5,)C'uW.ZGN$,[mkSZ[YS%D7@BBphc0XQCFZ\L*XW2q$p^nOF"3<81GM0Q(V5%d<7hQ>X[<Mm2QaU(DJnSg+GAU)PSZH>K^R3"`:N-D&8(Y>8?H>a"AS^c=.AZ%$-]&-ZsD$>6+!1m1D4O@7*<CNa.OH%"l^8q,hakaqibj.TUD0d]:aG4FM$`jKgQf7<AMS*BflMm83mjD/h2hfl#tJ%ndmU6ntV#M%Mb;kn]NrJG"OZT\GKPWK;s"bPm?Ab_Ge;W,Dg.9f5/>oAO0UQa%U4^UM&;;jgGrLKnTMKJ-,,o_cA6D**"WVS)\_7VinGc7:LbZa%8mc2M*ELJf-cp?./T?k@hZ;ai%CPje&J,h(C!(=Y-mml4^pnI$-8=k.;C>EfU&sUf2]K_u!om%?6pg=IYVq0i.AN(TG=i&cb+8)o%$$2GgCk8gIk7nVN(K=a^mMp=f-k'&Igd&6$qPKuJe47fT"8Fn%*NdFS]LZ>fggM7EQohtk_V@//(bp6*5:,EO5,,sMEBK%tkE'D6%RT,&H6e$c*<(4?u%e9hH>nrrgPWK'EKXn,n<JRf82E-<"X,a!2YXoQFMO6J2it^^:[s`t@X&W.cfOX@T6X<\OgTg2acfT/H_W*2U%.Ql"R2+=/Yqi28%d,g]?`hXM27?!^bb(qcTJmBO0FAT`1B8^hTQ-Hr(L=?f<F>*<[4'1oJ+fsQt+emLa)_L>anEaD$aD,?PRR>)i%"iT1r]dU\O<<jQQN,OmoB!dCE'Ucca6kgd+Xu_B1_'[q["QlioU1^Qa.L6h=G?$ap7btJNOE+FE.O4#WnoUZUGOA0Ok-"2P8=7$+%6dW^*'uA%K\^M%f3-V4(.Rg\1j4EhV%u[AIpOa?HS3$tY<!_>`T\Z/3''RW7A4aAUe&s9n/^Q(HG7M>Xe6Nj?%gO1tQ'H@Y0l%CG%l:r_CKY#@l1mbtD:dZ4M9WlBk_<WM=:j5Kq33qs7F:dk@dSM4T0(H#s@!@G]'Z'2M2iRsPA'R0@m\4$$_X=-HQ._dW'ISqH.35[R%hPJJF$GhW+l''6j=@\UB:kW<63Lh-nGE/4afU_'`&U*?*GS<b5(@bP/]C[r;!o_!4@bp]A*:%Ki1"P0/e(/2]bdq;R*U>=kiV6['%SNAr/cCM:)3HpK\8C!d;NL2fR,Qm2S*N4uZ=AOu7lM*J;8eZ9T7MRpup_;+7+@14LDi3H3;^;q*6dXZb_:SLQl/SA("5Rt/8"dIB%=<0RoKWZ$P:@*FLm\7V80aiATk+HnA;BI/oQMRW=1.se'!H]+u^($aI#U[5MGL9P2TY&9DBEI"H,::j0AfHm#U;OHkF;MQ<$dp&@%@fkITGU)5'0o)Y\G>'8)b+4OrM/jDfbQQ(Z&e9_<8$]-;G<3#]a;sGN1%$6P$o.2BD(EV3S?gS-3d/f551UR4]?&5u611IDFb&7Q%7.pPYEVi_Jf+k-?77J_I10%&=3iXDI/P2Ru;'.N*8c$5;F(aZmbf`$^7c#%$G8D-jFJPdrEHdNk4@^GtOZk/YGL':R]7\o719.CI%A?$a:gn[`U3aNPoV4';=BR+uf\;nK4M,NMoF;K)I8YeF<X6\K#8bt%5A(Zq=p.,[L32DUHi8Z%B80U5]P&:MeFdL1p,jR&hg]>u3%d]FUqm^1q?em6G-X?.Ssah!\.7b1jc6o4`<E&\uEmLnu7!d1C[&k(P%+glj39=gJse=ALSKXu6o,,4LI?rO/=m#Z3ph<EY3$cff1%e8t&`8/1.?jePdn)_4!8*3Nd_B/s5;if+:bmZ^a>S@dQi4']eJ@[RgLQUT??*jDrEMfMmh$2@AlgM!D<l%;Hi4+6m[Ei0En;=7%V%GCX^8*5)iH]:tSlE`[pa,35ojSh)%/Kl=14GC&:kDP$>J*Ll4MTL7KHR46"DYUC^N3LEpq(6'QtEDHc3oS>S<_AqQq]Jq,'\.UmA%SRtV?mPJ8_ES',YM/_&L7-(WK-KGpSG:i[Sp6=$Zf-K@Yl+.uLG>5u,LqBO.J;Ci"!-G`0eT>/[N4YsVkChVJh'"')Xq`i2GHibE%C1Co/:9[f342Hp#=<R%#)Z[;[giVKeN4YCPh&(@\_;pPp\+@j>',>lZQ>u*b`>Een:d%2$2$_[<?t,DI!6/:ZJWu6Xa'FA)V2[Yn%m^0kW`guNoLiMTa&2N[R"2'2)=1K,!`go#9`4.<-5R5;7dI^5SSZZ(OEE=c?4O^4"+loe^1ebtrENhHJ>hY5TjA+/X)0\\R+i[gM%3_I=rFqu4[:9Q;_GDR>._Hg&PODpOCj-"AJ0'#&la32p5g^PXB,9E%e(EL,KhNfJona1Q[>^/>)C#[n3_QNZW=Z.G\cCk4Yh[\co%hG,Iina2\shXTuXbg,bGG`#XS]7JGQ_Uo;=]=nI(i@c"aSOcu<+6&IMp.UhZG?nu'$$TZW,SKN+;i_9*f,`iZLUao68AndIV@7he%*KM#rcL^%G\5SQ-+mteoVu^niOIod2]/i%\Dl`K^2^%OQi`Cpt>o4:8Y0*J,gssJT6+Es][0,Bj\>k'u<s6JciN>#;"6$D=]0jMB%E<JT^mMpM1O?5u,,35o*`aIR:?4@M-/j%c,+EpuE#fp:pZoOd[19q1DEL/`p"_f8A4pB;*DGg\U>o%l!KY(K]3=t$oKk/5<"Q<*1%;A&?&Zf[K98&D#b;S[nVOnf`fcggA#O8Q@-IH7:pl#YWA2YW5OQ^\h*374"F%O0q.7OI+I$iEN5>o*:"LqCkKLkNCA03JnT1pf]]%e"#D(GGkfKG7Hf,^n%>5!U^s&O([[7;eJVk*H.$e42K(X[qdIFHonIpinK<M,JMu55N4e,jYT?;?&]a<36kOs&PTiC`N9Qrm:qbH%E@7e&[6c>%a-COD?*fK-<un*^k]Y1m9t6bBC(kLJ:htU925*;:[qh^p!H+f&jFl8JNtlUqAZR67Np3ML[qjcd']#pK_ah:Dj%TX'%m2@W5$#eGFF2Zht"M+#F*G9^f\*KcsP&An%S#"dfZaAq>bUb?U?$@%bgo_#07^u`*Y7kg*X+,$5/\NVh+Kul^*c0H=P`T\Dd;6=T%e[6M4D!,eT#YB,5l3,ja#Pc2jXKM5H@(WS\O'oTFr88'$2q?q6gGsk[978AlSfODp*b%WY*,:E<b0^&TY2(3dQ<64=kp=nu"HTUY%3cY;"eA:KMl2WmRdcLOQT*)L5a<%9)<Z!#9mC]CeWB6oHRO+c#"2lLbF#*#*.kO=7J8e*F*5.BtmYQ,P*$O]%Z?^NEJOmDRkaZk"%U3?Rd^*_e1gJt>UW8OWoVO_L8V(,ZI;&,)FW(Pu0BY$Xd%2'^JZl;;Q4LeN]N])`;%Y=sNCM5INd;Bs?n!%BG2tWW>e"TR2h+5s!%U>8AA0S">a62pql)qk8@e7hF*6p'3T&^en/(Q#L<"`HAWG.ME4U>6@fQ:/>.5DqqATs#LMm=nXb'('d.>!tHm'.;1&T61:j%4t6T%g1bX8BIB]M5WecZ,2-`u=@>5Z@7@QP#+:9j`52jp-bQ1(G(M.MBZJA>na&[*(XGk6al:u&"cIVK%R\n:5._'7iYD5b:3[g@:!*dG%YB]!lg`^Oolq[&;'nMa/gCsY4cGRObZTF5"_X<5J"K$VJc-@>\-I2$)J;IQ5&H6:HoBq]pj4PjbJ\ph[+^[?nHBt*s4:>a;"e#P:%/im/U=E[P%JB5%FM.a*[U:/t#ZAUhD+IJ_FZNt.ZPqdqK]-p3S;QuX(36's',Z-8-a>$;Q>u]AgZKu[8=tmS0NAeZ?U>.$2m%P-#%&7u^n(Eq!TC<.'#Vei$#fgS417'kp!Cr,IC8hYnX"mAo:?7A-aLu(QcVorGiraGe(^3ug1\[X>-FtU'lR[o@"'5)NS;'/t"U^j+J%D%bt-Vs7QUe(%/T3X2P))%-dJ4'BOD,_iiC>m.N'([rc\Np?%/Fps9jPasFT$"\=C.=;V9>EV/tds3aCkGZ_K(f5B2`i#AdnS+;O%'qf1;MY+/j`Ea<7',7F@6&X7OSg-gM;-2+8ZA[Lp'$2ck6Bar`]W3<>*Bd_[m"@Y*aA*Nf8?uG#1-B+n]+h*b89RQa!g)csKm1"K%-(2hFG)7qXU?n7'O!M?5H_;M7.A[JFG"Er.OR,m<:Urm:V@;YNR?(Jn]-J.-6$=VOB`F;>]>Q-m+M5S8PN:B\PbpE`b""%D>n/>"%=0cpt66NnA9/Zq+AJ)1<ZHG?i+Hg"_X<%ku4(o:!G1hH"5dJkD=-;j69M$MAXK+i:fk"LC,KR$$]Fe];a;+p3M/GbBSV(=4A#H@>%U=BuDaDN_Up'4Bu/$?k8+7EAAN1J6T$Y*9#1C'\]I.XRoag!'l<#iNK4t"BG$rM$2FC@c]42ITnZE("JE7Y`(fVr']0^?<a7,TJ:%Y'3IB'1#5)4"UfXfJQqc,K?mC[2'JF-Ct^f+Ie"M7E)n-0Qp06,0!AD?X`:8)]$GrAQC*+Hk'Cd@XQn7mLZ!;]$)RG$>bo8f>Kep%<$_i-nRmQEW4Yrj,MaNm4nQX+!HA@>6eIn5Wsj.BLPW`]<ot"j(A/N)co23T"3&RY-7F&fU%<4F98=i^Z)`N.^i_26=:rNT3lE#@%A*KM=.!CVZ8W$g(X\_p^WbX2h@oZfNj:Q]L\J3'/oD[Ze(#IUh`i]T$8;s,"QkEn1P(1d,l!5FO:.L(mZ-.eiP%'cIIZ"#)=Yh6N%G$4QU8[2cc=$c1pN_:(u`5WF!V`TZcfHmdn8[3>3K.(olbKPAJ^f(rZl=IUkb&VJD.n3R#'K`RC7'Ugg4]:VR%7#`?.'"Cu#<\W2%fK!?1SaUce38T-$Ud>bW`Y'91%f9slfSq%L*!.II)Bt!.BPE(N&b_G02anp&=d-oNg;8)c@+WBS!5blHRR2[u\4&[8[6'&4P,&[u%Vt^N0G)jiMKO#gC"9^g4F>JLhZ^_V8='=Ah_%(s6#eMR('G,Ff*[hVDMJS,X<uj=4$p.6n"2dl*PJj[UNp6k(SS+pQ@93Tk+i@&H%Ur9KYTJJ@iPe]p#]-7cX&A&QS57gi#CBn;q=`>6Vm'=ONnJ[2@[A;G(J$UPH\Z%4o1s*T=O^aZFDFYPU>kM;(9sQHQjOiS:&Hnba%in;3$.IJdHh,S&QjNDHnM!T))#b*4p08s2>)Y-f]DDl>]`_G;-![eKH9o`N1&0f.I1P@'9?.OZqOBioR%TJ_[87darlbc[I4+1Cl%A1'q,kEG8Nfd"R5e37p>YXRk3G)l>eNZA4UNaq727uj.[SiCo=.-0$#2p$(+oG%jr>nqo!*4tgbjb72G*@K0B-egr'n$]5_F'.e)%MAZSVSKk6;A*4]T^t@22hQuE;SSFp^<1L]-N*Xm`L;:Fm`t<T8%[mZ^?.1/.3Hk:QB//'>lVi<p6[3@G,KHs$3ZuMH\a^)iSW\d8%ACo=1P3eX'$Bjbe5Z]5aFTda.ZKhQ@&nKT_0d4W@MfM@M?.\@-OBiZ8%ii3a!DSS[kNNIrm(/?"OCQna;^KGdo<=0-G2;-PZJsQU%Z@QN;2.)PWfCaS@gckXSRC_aFA(O9m'us'jM`>m##fX&YTZD->1^AkIVq4fd4,n)tlkI;NX\SE@(D!=5@AhbT(j67(MIECgZP[kE%GR@k<gu'-/r]423nD(['DViCE*Q$*[W/[(3Y&Y`8.F\fI>ECl_5Qj.l$%3qfZH1D[/\t216%U,0c6Cn$;7[32'4L(FIpgo77J$5P%HlFgg`QkO1WY_\(<A3=qfYh!OS[TG`/oPV%>cp:_YoDDl-,n0g$q[]CR^#GhF*)+olpar[5d;9&5`oM71u4@)2rm&`@Q3?MP@CH&%JtgmXNZooqK<%*XG!kR=+a-IB.#OSd:5`R?8E_>;D@"3TMVXAL5`2*[0EPbI5i9N4.8-?oG03]2Nnk6NQ5mL[pPL**JQ&B(fF:?B%,KEQ_Tf@54IL0O4k,Cmpl6)5UoO/l*SLcFW*LA1*m.?8aOIc**"gZT`KKs_)i$",OkZ6]q.3X[1G)e$83-MYCJgLu9L7!g-TacIi%Me<6Qh$IXZ&I=gbZop*d91It#$=con6/d(UM^TRk9j#<c\\qV.fU]f%'P]R&FH@Ra]+t?XFht?3%Q$1hc:5gYM\ee;W@J1P\#YEA%dZAWn1$\-2a=bVG!80eX]`M^\Z[Z_._F8<@&7h]_=6/"&j^fRT0$:?XfI:M90m6E^Ar*]rGO2C6KM8,8YT[Ni$&X'!5jBeA;7oY%%m%OTjJZBF6J#(^cmAlF[kE85p@M^';%?ZmRll;hR7:iJC`@a1O>ZDX:Q=B#$S>=fJBI5HW0()AkSI9'CA*;jmjOh![Zk'uOeeP/Q%=*=ar-*$]8p"QC!MfFYVV\o.K_p6eV\/70Y25SX@W:(d:a/H0YFq,YW6L[aiW3:j&1$VE!=h"i34,=n9fcA$!,.e;)Mdgmqc+A"[%X.Nq&T4iGua0m;Y,H/ijiU81<lq'P1U8VOOfL5oV`NXD+4tu>TC(#ce#W7:f"dW5h$Har:U3q,PfVJu+DVA%-[FrgDKPZ`<fHp(2%J?V\'jWS)r`-NWD/iagi67/\1M$TLpdE>(bo4UCB9N%->KM3$@8-/&i]cI4@4>7<H]-N[P!Hr1]AW4B"s&4hHMo8#4>o')j!4sca%'4@/PT2Pa%/F/F+Q[+W`"M;miPX=#6#B41oKZf#[G$-.7__1Q9Or/A&*CtojdD/^:3<V!gYUd@X."km:T^FB)m'(YhRHPQd&9^J_%:53%o9gd:'#d/oLM*bQ9fG2*H6J+<N*t`Z?+:2K>RRVs9;DZCue!LrhY/p0EfEonML7Q6M&RqZSllgOHcV9)+J^YjGDTXV77g\V`%EoGZ-RmrKFF2Jt&,F_5[3#C6lb=32[7JG;+e<V)djre,!&R]+)"l>^qP:\JUN;3Mp4'`";aH!a8ag'=FD0"t[i[2[j8WmQEPh[]c%fH$g)g[]K=\)jY#Dp,U$hGt<*N"iln<Ylp&NO(J[FtL;')?Sks#)4/%q[6h6\W2e[=#h96?rnAK%FKAC$5n58A"!8+>.olo*;*6B%L3*hbAsstR%OW8I+k5N''hr#qf9NLf(cj[phr:SE+Y],X\rpb?S9-;;3CE6\H&5joAN@8'*l/(GCWCc%WnUHHG/Q?[F]:+s_<WjO%c&#_m7/eFD:+IUCFbp68Z0U1#:Ng#A_o/\s?7$HE/\E^I1?`:pmbJ#dMtB3MlQ"uGn2di^`NHiBlj0f4FSV?o](ko2o.AuSIj'3q%r.EtoEqj,=\qc9'T)l/pWs,_#=kD/(i;']%G*\#T:2E$Wl`V2V0<dN7\-B9KF'gVmhuB%MkY[-,\KS7h7MP%5Sp9Z:=:0/c^N>>T%PMqAIC\C\'dfrVab_dHaemI2l:YgrY`_>V,fOsU79'>Dc)#6hCK^,Z-7.ZVd7#2r``?hka?XshhH5SVt8@jGGHBgp`lX[AQPN@&h%>FN@Lb(F_K![j`P^nD.Ig>PGq*==mLeFNge"^-@@4Nr8e.<:;R!(SCn"$$3c]\?.bZ4(WcUE*NfF2Q)H%Pq;i5@&O635HYUJ4;g:%M_DO!Zqk9abQ()o,Wh,PoE$/(!I1D"mZ"'Wp\Mg11^d9j!qU_WF@(@1"GT&amsf:s?D<<593G8o80Lf0'cZ\f(I?9@.q0XO!';UF%"C+dBHOPKHi^5#6'q8V4!>)g,FO^L91tp$0'6LE#:a.NnKWY[B]>l]]E>hu:&-SE6auU.Y3#JKT-qIqPr[PfS,KcBViZ^/d>\%)a%SLiZ`M^pYd=a<h]7?Rn7$f&B$6_h97"=[>57h]itieC3InAujf3&'K3DMb<&(kWh=cDL0T/f?5pV/C?rZqh]f#q/IV4mq*$?^8mj%+i62/Y#(K(;nNg<ATZo^<#a^lGDas,>+oloDHM\en?qQGW4[KlAU1"9,Ms8ae1s>0MgOF+N=ap8Ti''J\lZm`&>?$;;Oa^jqI\4T%1X9W-raOJtD%fq`3]X%i(MeJ2IO96;)'u=1jI*UT]^(:kN7)inPER5rViD8A7?M_uMIP6mhT3:L7%9Ic$uh>s!A6-6eFTthqchqH%]#\Od-VJ[F%b\Y>BEJZ]lm#b'ZiJ]r,$hOdG/s_);V]mLm-Z#!E+Xgq(Q7-IDLWJq2_V"A+e>A%3Z+s+ha*ENGtg\6Z=U'ie_9KC%<c5.R[?V/(\$k:f6?HunGN,)u>N!sI(g<X?5d2B<ep_YUNG)Of3^3%rOUk+e.Bh<Bbr#([r[f`n#$stLG"gZj_\^-s:XW$aB/9(V%f)FW$AP@p8;`K9p*i5S;K/JM^<$`S#<&fT!:>%OUk]-SW+BoEm-ZUsu!5_[V?Q+$\CCi!"hRE/%"sKN9nXrRMO.D6G$HeN@>tu/R%YEo#-M3kW>7\j6Bo+J%qka_N3N_@A"Xi(Sp)8MAk)0U%rj4gW2JJX.`Dq@Enf\,cl7'R,=r&ek`WJMU4(RN6+DASn:a6bX9;057Z%:("P*!S<Z:A/jJ$H2]Go5"FT?\E0eRLag..o2K&_T-rIP%e0?8W]'oYT!Gp4IUC7_$IT$_04T48!]htU87-7;1Q><OpIjGsK)tCJ%'!.'O:)t`B^`CpbeWQ>3MRj6U;g#!YZ_QosC^D_;-f.T/E!J$?mZVW%+S^>LR0ELa$S!>4gFlDkRBC:@^69!?l=FYCPMJ14\`QQ)%k4?'pEI3tu!+]AJ'[-2/[@\rOmMn9rF(hiZ7g8h),Ubpnh8CR,=Ff;l^sMtYn,BG)R[HFN[Xd1D&YoLK5Mi%JYrdfT)rUK;0a7\!%5NO,2AFHZI"HHi0lRKF>afVU_r)3:c\<6+LR0A>sB,5G:-B8Z`nQQ)8^Z:]tJH;tMS<._L:LdTk3N>4>^8*cW/93Zs@tu_"nJU9Z%kmjt[jk4(iiV2Hl.VF-E6&PgB^+?!qJDYPq_gO6eg[2bu&rRJ+h6ul-Z@[*o4ZIm,&_#XA@IX/s1)W?)p46,TXPFd*>C90]K.K9B%2Xn::10B))mGKO'3,@mM3CCb."#u`2!trP)#FV6bLk]BNo[*fWGr$iiII4,N\ab$h[c%CL;=Ii?P6fc90pF!="$SeE3F'=h]Y8cK%C5;,APLikJ]4(ZBalefSnG]_4ee+C!=l`fknr)+42CQ:gAcp<#$MYF+'UsJQPAQ!IQUM5/\H#l$:D)HUDVUj@rFS7tN%2^C'/&mq%"6iG\n!h>"JibGL]-PA:QmD`:Ioi&k`Q<)*e*D)A!%4OM*:TSTThVj%"*?X`s0<d80g!8u(;Y&11glUUS;\e6Gm7p`-_h!<Cpr*U%(7B\a0[#!I?]bZI%NN:R-7CVMbu\EX$oRDMjegE6%o?smcU7uLf]K5N-K)oq.199#ZV#K#E^%8>b['fQ*5L@/Nd263h&<QkQc2AR%M%Q;>EVU9T]LFl2g#\=2aV&/s9*@Fhd;C.U^c^.&m/7YX0irQ'8,Dq@0.q)BHpC2EonaX7>e#;1Wlf8]H)0VdhLVN?"h^^[fH\*u%=c1jgMl`USeeg$t<G!#Vr-"`<-Sl,Y8HUCWY'OB/PrS?=c_mi0M+;NB>B@ALi%e2t$'Z?Z7s1>aGoS!+DrCbT+d.)Ek=11\i+/V=%s-@01A\Bc2W%-H^/,FLM6Pa(QYg)@511UD.nfjg@^=.f@_)9ocriI^&3]qDP_$;O6(D5J#$`D9$i"fTdH&GmKi<21YEC?2'A6K.#%TJ-UCnko%q'X?-MOp"2JJ41nhYgHP-r(Gt"RmReNoa+@N"I:CPPK_B5]!9XaRW"Q25[PcC\Z:r:-,Ba9qFDe#Uq"nuDuk+7FNM`,%(R]F?7:m=Fa;W2iILN`:\i]oN<a+)]"6D_W<gmW?q,M)E-5R!60$%Q8Fn3QgK7s3<U3&_4\&e,sl%=Zm9J3#lbH=`>C1IW5[-/.4%QrULYOp"]grX?;j=4q9]^SLs5#(jV(H:\<KerfU?!n[NqL.\becqj$\ke:./$s*SB,>uR%_/=o.=S.`FGkuNlT:,efNQ[PB3r?>5%`fOlPX=Mp)XSNQ%nGfLP>nRf+CLU$-s$U0R;qRTU:a5*L]1"!9ZCBq%.:F#ha`!ID7L>iVN(KgR!r.6t?OF.#kX=^YFCRi(ZC21$%Y@]WoRt*FQ,VjDGN8-![T:*KkX^SML1--(lql7B);NV.018^jj"t26Wcf'LS,CaG4ct\cEc489!nGek`=Qt<_2cb(1bQ#JM1jl4*%gZO>\eI\CE&GrR^UD!L>X,JEfh/<PAAX+W4*_-_O.aoP59a5!o.7AWu;;hH<N-!F8c/dBZZX"n&*d`&pXVc<L7_!qA'"p[q*M$.C%juDgEfKa>JW++!Or#AB!ri2FlZ.W3(n76033e-GG&@0U:]Z!gHML$S%H$'>bP[+f-VhDEgFh$..B/</FGa`u*AX8A#-1-<Q=7n_=%Gj=$XH).TKA7bi9>B^@CAWY3785R00T<%NZqjW%L_d/m,Bug:W#d]&NoEflng;&AXm#$494n/M)rpoWEff3qG!].!k`?3ibeZEmF%O&aVLAt)F7.jf&l)rpKpU#P.Zl-l(KIs'E$V8^$gRLNn24bE1uo"lu[eMiJkJkN)^GC_cOJkU^kj`(5PA2o<3lQu,:>fo'<kSikD%^'RQ(bluR_\h29n@k-]ZJ]e)&%D^^%9)%H<T4ReI9sYIn4u[m,&4@iXh3fbZCqha?nVD;Ijr&GU9bE2?4i$4.;\AOIkDWZPp)rm-%dpUBf!@lqkr`Q!@`r'AlFWuZng.:12mA@.Z&HQceTYUSC)Itt[h=u8ZYm8pgbF%8g\V,;lqq\PZB,6SeO:_P3>[4SX-0VY9R/s%_%M&@GW!(i@t9>Fl+.$%#50>&6rf^!UH'1m^qZWBU%fZd`jrh&1/,fNcMHk)WoDC*F#IPrHKmTQd,nQ\[AK#!Z1)kMM^[u'(d[M8Q>%>CB5K:1c9#jCL7/[=[T4?jnaR,.IT.[VP^Lb]*TN1G[b#2Vh/Qqn'M0N30gcr(jd&\pKXGe^q4FS`0TkpC\V$gUieh$Zr$!DB#6i%mE=/IF(n?(gqQ%$:%ii#DD]6/ldMifj1W']&`-l=!u0U!QcfDmheJP%QU_/9Q,6:'=8X5ZrTe>(+P>H@9pM3=!q6j/r'-OR1LmK3%O1^4tTARJqak:l&mFZuWWer*HFTW0R?QQoeg[0\VM,\g\Is>[1!tc<fmhl;CAeN$*,hA+@s7G95]?UGhk6gW"3.8_>d&b$@9RUej%Et)DIN9kTF+Ql,sKnLGC-*fpcDS1MUj753Acq5bo7SC0'G#TdN+E+Lhs4kVK\-uX\Gt6.s4=!/H0T<)D>koF#[q(e):8pdiH%n<k%G'2qK4=uY^(bLB0P,]14"!hG%ahZLS-.'inX!H,(;RRU]S6T-G8ed\C-j.@2]_O!<gOGK*"'g;d4'O-)-/7f_/sdh37u>0e;qA#b%/f!Hm]95_W89r&R8jZMXge18(;NRLs\]fa.(1=G367uX75;eb"1=$Ym!j?Lk:Mg6EoS_YNOC5Rd%1*,B7CE6B)p0^?!8-M,@kpCg%Pdr<&`bY[Y`^N3d<"?n2A36?W&r.3@D2LBL7#^l]eja2*oHMJYGPU>Y5QP+c))L*?H?!%R]X.hn[N4@A-JQ5)Pn'bn?g*[P'enC,%)mCT!I:UZUEd5UEn5ob-OX27uLK'"$YRl4Ha)q?mQ\=3rQ;cr@bf)eZSB'tGC]cpAq+Ls\Q&V^B\<r\ZYCJ?oM7-@&d&c:t"^o?O%FEdsC\u\?'A/KhgiX5I?=YihS?RQ^t/.KDO!Tu1Y_Cr\9q7N%3UV6LBRfO3+.)6R/QQHrE]W?KN9QKE-R\eeZ1RH<:T\3&]:mDfs%&37j+Hj-M;>bJ56,WXE#>ToLjq<':0V+XKdO:4#DV@g&SQPS)bP1<ea@3l$N`<5AJ/_b3>E`Wu@s,*;j^lZ7PbV3:e$eTu2FZ'bD%<A#""_55Q_MRpg\7,S8tQ!o99S)BK.+4.DABbFi4=nuN\Gr%=K2,/`V_^m0%<i'LW%!mp?7U7?E1BB;-Pm.U!?TT228da?1'=sF<%o56fO/HqAi[4C19'&`Uq6*>C="-V7pU<<OQ/-+9S4)`_K^fLeehMTL,%+ih?#Q;Jcd+-sB]]&c'2Zk4QU)T*]rRST;)@m8OWiEl/%'9G*ekPH^cDaCgAg).Pra;gN8[qnO@MD,DdUG-YL74Sp3^X?D]f)4Kq23FH_,mCa.]*Ss]mYZ'1i;'q%Yll$_k$9S.r2u)8.C>EB%]h?PbodbYhS`jju!5nCY6c03m5PJ;[i;"*HSV)Ptj>7IV]Z-cG[_hVdb1^.;b>]06&]sBKWtcNMHn+!G&\qAY5W>;Y_[=f"JBNH_%@"O;qcsnFZ'/\T'VV+u^'B>,;F!HE$;cM?s"#+5'PQ>%7k(J<+gqiX\\hA[6mIXBe4f7+r)"(#X)`7hsMQlV7rD1Z<>(S8P5F8.8%l(_PVZGQ@:au`agID%DV,RN'[WjUd]f'%Up/Po^cBR#"A,]%%jY"U3GiVQWA.N6+hRXHEh!NIKUC>4,/jq;!i!O?GKnmg3r=lK;c%J\P`-JB[;0&4t9-Hf<.HA4F,./#\=Uer4XK?:@k%-ocl;lZLFW$<'_&G$O-u<d99t4tH`noobCuTJJQB$blAc6-OYIe1s":<=VAJ%)?LmiE!WX&NWCff(:_F(b&q9_$'YIs+s$6Nb-V.=BTWHXEE.u!=q@d.[lj5Bqi7`r"12Bg$!c&"\:1i1I:`P_[^DjMl0_W_IeAj2%h-Pa!X'ujkB3)-Z%3",8G^`X)J-sW+]#h4N_qdulc`aqA!QbeN2@D!>^T&SNRFRSW]>F5^S(P-b!cE17moQo3<qq+rq0>>_&)Rf%%J<Ei4+L(0nV;V5VAJ)mBR@2tW1D=$9-nH0W@6/X%6n:1k>VirB^i@2ln]h2A(19p]R38PV'?.9/L.oC.Pe2=G2hk#aA-q@,:^pPm%+r\8qOp5m%dK$Fnlu,ROj+.68aldJ!g^oQ*[\"cTm[oDQ=1E`1->oYhO0:;RH%kik\T_,[`RgJ.]#+2WDQuV?N2E/C$K&#j?ankf%VF837>C9/W:DM/^;b#r-/\^@J?oWXq.rYU^\T,&oE;c6VL'H7*R;/%(GBMBYf\lT4::=[:HcmnU%%r[6L+U-Zc(#!aYOQ+MafPH[%f>QCh&"!RAcc$b@2Y_0#%6p+o&,!!I$uh?jgLB.;WHKp987.rDZ\m<<-<K^(NA:mmWJ6DI)d+t\_L*-m4[nR*pk.Gon-?/&Lgn%+%h*HJAq7Fd/0Mn$f\%oC&4g4qW6$P3',?08S-0sb)NjGNYJD%6E,?3*f-(?<LFb*'8R/(@9bQQX*C[_V!:?ON[IkF(EYkQakPbQ"m%EtS/$bs,b>8PEU@R]i?s$/O4ZCnNEl-G*sIla&54?D#n9F#&qg1p%r2ra4+]e,W$TRTURL5Sm@6DucAN#oal"2Ur9sJ5)Xk%GQAL%qRW%'']*:SNlIkh94g)L^<RDRHJ,_-Vt:/ucp*85^8oIOE04]IMlKaE^rZq@AM^>[^uj2Q-GW)Xj2/b4+W&NkW=lK7&0]/OfAG),%-]<1\a"F!&IoH7?C,C&lLItMB#HM<J<qMO.i;Ie(UMS"!f7Rjm`B8c(%.CA)]`d!LlWRV_!2V3Ue$.$Y,2E^b?e<"3';]g<:H*NJ%4aDJ1!m74#Qr'Vpc%Yc@)&[5Bjm.k%2#)Nj+,5dF?%$?D\:38Yh/N>(Rt.ccfA0sFf<6"(N(g1JTPoJKfA0tq!,krkVSW)o7I(%"%]UbZQ%DH3$<UU.LY8:PWlYc)U2E61ffcKUqC@6ZIk@FqhqVT0e]?8>#(YO)diDRE>'0)C++2#[.!b)hho87aAH$RON3ec.Qc8q,2%FG_S_4K+CDA$,"J"E`5Z6.W:afFe)L=t#e/V_`tWP%A_B`dNV`fQI4Xq0"g*g+=2+6J;.tE"76d[Bm>.S&uc.@;d-c*V&$iXiCqG%Y\W"!_`_7-?`^Zf"ROojmViXtpRXIT!*@;ZZld"jf,ed!oN0_A:>'O"G+(L6Ch\IffE:L:FQm`H]09L]F)aoU@r&h+l]1IQfAVPr%2ir;@QY<j8M1V%P=d*5?3.X[&Zt-eTPl`@VG_+)hZp[S?`Gkr,E%'/_&cNf>k<#3LX3C.]>\#YIs-EJM.)QhY<CR?URBg"iIT\":%17H##Pl430fg)k:T\Ol5+9\bS8kVVm[+%f<'C[$XIc&M<D_El^khSW=V/kY5"WZ;8mYLlQIB.O9J4dM^A7bfF#Wk/a&UdBt!7;Tu%*NfRS_ZLnERhdm<"+DN(+9(0E2f2([GNbO)_Z:bRVX8=&LN`PUG5I#[fFA.*BSl-/m2K5<3ul&0DjQJTn!W"2S&c"7I$MqV`>;sr%]d@Ike-o0%.r<#5#oPARE"b"d]L-$c*A68hP;HO[ThWN:(N@Kt0Alj@I2mBGp*h*6.7<MPc8=2?]?8>!(E%9sH.b*l7:mlc1@4^?%AS-OP/DZT7A9eto^+1!`i)OAIE!mSmqaP'kG+!lKqsL:6:K^2!3!XXFL3#$M^k9[JHC%ns^k_9.AT#R?*:lO0@J;OPRDOUtY2R`V%EG$I\ID9s8L-l3>3s*3MU"p41E"$*,).<4`C_R<81,FIS@llRLLKe&P>tprk*AQKGn"\0uK`$d.'"4c`"8dVt/Z%qFBCJ@FSb;@=%s/):H&Hn]A2hP8^nG^9&S'`$fWPp($fmrfUFjtD=+)ksa+)q6,:FuuCJ>X`>ArW8e'+RE\De,dQqM3bcY-NdkS]hL]Oc=Vc>?\ha%k$>Mp-?(`/^rb#1\PY7M#7YMG?"LBo:%QMVViT"5AHMMkLb]"NPd9B7,BU^%S2r>ZYj&Wqbq.EsT_#;g1#T$LeH$2".bZi>!DWe*%I3QD)hjO^(MoD:F<.n<JqR!sHm.jAXY6-E8eG?2XIRW940&S:p).inT6h'pOltmX0!2o5e$uG`6&iuB'/>/J6!tjEZm-QAl[Oo:a%%Kd4!e9.C7*PXD$+Fe,Ad+gdgj#<G\QDk/C6&>:g9!7fS"a'#/P-PX1^]S*c_^.&GX@_9u@Dd"A*`F/"!N3*N%;bgqaL2C-1,Ha8%AgY%/bQJa8H2R\Cf'\#L=Y<AO-h&UD/D&"4[DQl0%/>>h;+@POa=7SU:;jqshsBW5@m;VL8c3EmWORk;m#F`i==an(d,KRc#jKN2%2Gk@a/f_bX!:.Eai"U]a^bMA5*_$@U1WQ#7CM(u5M1IAMe>:[rcYuWdL=p/712IY<?ZEk;S@f^qE!JAlHJec*0F0]tE!85b-CAgV%l5JU]!@I$!otVU+^l)brH)Vb?"':"?<"ZeAiF[@?!=hGB%R:#HS'aNP$+ab4E!nYh95&hU'6NDci"iP[9;DRi%$O>[JP3epc2:rL%._.qc+M]C>`0)S>K4IUP+;scUE3+QiF-Y:FKG.!J'0$k(i+5T2+W4#4A@ICJd[7<@hCBrL\;4MnG,.e'Ja5L0ao^p7Qg"UIeg:1N%0EV>&A.CCBq@J@'!!!Zf]9.A&FEM@!!Z85Hn3jhoX2r68?Y.8\12FU;2bNZbRbS#G->7C!RZHHcYibP3W02PlNpO^?hk8/h';Utf%bLB/Ud<pqu!6s,?,237?p&sV+n;aTuI->b/"9L8jO].\ZcMG]S+`c`Kkp>OeV6YJj[1'"#TFW*?q9TSu#m-bt9-gA0d$[\kq<5Q8%PPHOJA"F3:&=c#!>\2-*JB;F*!I0mck']c6pOBBPgUn%gM*<OI-@Tp>rh/'$g_WP=5'Sl)!qteF=VedeW]V@s/TJq#D?@Mf6m'(]%5-k[5(P@Q.ZolVb"#L`c"0ciPU5paOAq9,L@3]+RL'c@&R(b$`fd=X?]TXBh_?9imLlBUF+-DKI`2-jQi``X@*#*3B/c\BnXqU`"%-sd4DImdT&<RP5?_jLBIC*fDN!63+%L:MlCBJTBRe,hWrJ5MKmU`@7Ap*Tho;=khTs+pO4R32K!JPDO0,O1dGPCGuo"ssU09I,af%r$1Jdble#9aX*+5Iq[hC3b)Gr<Uu3OlmD6i;VL/hN-R%Glo+B$;PoMUN6*^u.hBe99n'?X["4Fs-Fu0JYQ9'pAbt=eBef^#0%C2R%\'"o%-XE__p,MO;\qLe=?n?\2R-I&kRL'3q3U`,/I0cl:i;c@+D3X=\po7GW='+`Rb)*3#=GOKlQFWgI!m=7ZDLmKD(u58:9HX*\%ST"S(BIXZ*@+8MVEdd-eg4TPFM%W[cO7'&b(?iKT"$%a+Wl"*5YR9/M,pH,WoqB^$$3)Ziq4"oYh#,DJg%sc,Z4F5@-N$)p9Yr1+%VNI;46Wflc&+D&Yq?+)5*oKK*lj$:=j9Ltr?(!mhkVi0&p'JC&lo*2/.;S[mA`@JQ;tD<ID>kurVS?4W[=3<f<i-D(H4N=/[l5rj%eH]$?LF<6Iqmk&FJSaU8jZ&FPqb/)&:@Bue9^+@sGu0cWH:bqQV'5)V/%-\e6rtn+DpoG0RB*)6&=Ktr/VEqeU0<\@i&^-s_SRPQ%s5i@.+n<#U,ik^cZM4F70OZQX+Yc:Xk`d4g"+)"_@ERjn9:D?UDb*AN$J,h6he.':ZKnA=>Ccd<$3q<96KK04!D.O$?m7*+85W=E%'In/j%S50O/."tXgL"V+V?"/_R/N_bJDL-]Ll!aSN7f;KD;H#L[R8"*+0Mb8D0N;?bR^W<Y3j39>r(QQE5,uMSZFt&Qd'0&g%p`c%.V_+RPeuQm`47-8*"Hrb;WVkr2TVpg"2)?IealK*;,pi]6<<gUX=PIDQYIPsoHGGmEb`=INcYqo[HkmlTlr/1^"T\0h`8G*`CHgU%3..](<O9+EC1;LMiDaA6R:+4-NUNRM&&)B0.[QFV_p.'J%A0eVNZ8^4597g"dI^@Qq=MWUf`CFF?VcLfo$6ZcHt%_,esactOI=lK%]@jf#0.YYjP+D!TMO<\EbAM>oj>49c>m\_si+,OTTZR^C7&#MH'5SCAomH(\CV=9C-H3nPgYM=![%[3*kKnZ*@f'G2>.gj)\8T)S%m(m7@W;.8V@h8,MZn`%I+/@Vfp#%nlg!=IK>eD%Z1FDdN/97KL;+$sI4e`-(o6;XjIA6+#9+&"O,d4Br[tN4C4j@Ie9=C=N0?:/a%*r$X77D&6Fougu;O*7CJLj[:tcL[Y]DP_JA'UL?qf*(AcVYSm@@,D6n05IFbQB1=R22a02QBgMu;f.3>Vc3dlAeqAKXitU3)'Zr^%;^R+/PC0/f=_g2S6ro>/Mi<K%S8>\7U9-U-Q0lW''r-ce982&J[#55S[*lmkk0kSQmDfSHPM/fR-FMaQd[f'T%,b[,h>\5pE5g6*%XBq%jfSjojJGW:e91B:_Q+Da#j)BTcQ^`^C'6uE7%_c4d.[>iQRS$s3%t:FJZJGM_p+qn&=3naqb?]$O`c*$6IbOiiG%)X+XecWt%?08%]2"rVDePm<Fae8h2/o*1(PBaGJnfR[,6>?Pcb/bi:&a!#8[U!#=QAc+Z>QMe=A+GQImDMuH9];\X&Z6&:"]UaMe4#6tZEs(-%"Rf+-#4bOJOmZcIm\f<X:j@3$QfKrT8%Ve<cCJuFA1$eRL5^NBmq?;E.UtMpWN%\$a&Lk!N':?&B($S8)r*O42[un(b1bZ]WSRT=%?1!O%bu[?$]Yh.Nq9J.Vd<lk3WUDXN%@FfnQfr'`[0`&':o<YO.KTNS8U@e3\g'cg4M7Db28[6]>$IE*6f4CG*a[e`@,@kEdOF4l%0b:JW,=[MOML$0N?E(XN]D^9h_:nA/(3k(5rT>tV8+W,SQA>hTpc:*I#<sper&^T7?JJ/t*FLW52f$:t;_j(R1SaFI7EI[Ij9iZj%.^SYpO_q-Y&T`5r"?:kQ3frBt;)i`db(Cd8EQTUbn[-^4er6TZ<u"QZ'1F3Ll^:Hjqb/'tCcHmd`,Hn%@<L0-VQ><%'3mb5JB0g=%8%OnP!SgIb!%4NFba^-/!3!+7Gp!.-.73p4PVjttl^)EO#*(H^W*<1smh\,GOZA$iR'D8U_'QGMo?1,O4,3d721PIpg/ut@?ns[E%kYmZo40$##G05heb%Lcro."BJ-L;;/J&qm-$+O?6,J?QR..]C%^'N_!I9In@GuaHCJsWCr$CM2^W]i?S]KG:ja@t6[S.82(#0=M2%Aq6q`h*'>W2F?[5Ma_QRS*+RBrAl5@3+];ohSh9Z7rrANQA"Y'fsBBSoZI<Bo9[\Xd.L$Yl_&sjj"[r.<iur.%4S@XURGSmO1lh%%Ii8W"SoR-XKH7\jF1_*?)cLn+1J.*-I,t]>cZcOjq2N."lX;'nX:r-gM/EulA=ocPI0q@*B(ZQGF_(.o]Y(6j2o3\<7:e/O#Ij^G%]Y%G@P$l1&_#>Y7c$'gAo5n[>:N5p*QBu-2?L>HN*K9oi;G$/6;R_"!pn(;Hni>j"Vdnp*JY,HTG?1.B`C(@:4=,DX12HnY<c/O>%//d-c$&8uYV(YVI]<BGeb0YZMnd^*.UaE.H],Rl([u%XWge87QceI*\nnQdg$1G'@)25%Ogd2/4YL4^pk)SRR_D)YuPdS2FcnTTs%^A8M55G`/:$!V[Il`ap3nbUa9if:'U\).)5S3Q/+a@b4G7f#sAq(`D>IWk]ej#QtVK@(2_ceBFWT$j9BA`n"Q%6)TB)^aa81*,/_%`\5l5Rj4IJ%PMnpRV"'pGqEa%_e*4b:b%m"-^]<o@ZKS_*-ca'gL+Z'Nct!\h.)bLTR(__)'V%@iT)j*-2;_E"--MEPgEj\XRU<s%R?cf%[[VdBD+:Mgl>04e.[&cN23")aI60_M:0H=P68'`;LZ[\,-a.+]gbbe,WRcBDV^X'M<gOfZcYO>$]V]U\A`X24C"1AiMVu^6%#pRj=)u_i:ka[rZj;`s,+k+K\XH]u,Vu.#t[U4(s#0b<5Tl^mE$u[+;BCXV8e1S=W_uJ6CF7'cSgTt\LYKq1W)Vn@=jG7-1Faim:%)sCEoLP*Y&+?:g/F4J0Sg9i"$SWXEBN'4eu(I+C9-U:%23fYhj1;glm4G8p)q0--5AVPihh-0sdYBMW]41Yq3I5lJBEu/n;FDf'/%\9D4_ED4BG":upmH=pl0!u(Z><sN3\Xq-fupTA]fg7u<mGMLucY4sG%EHHJ:)?*pnJV7hL?K5Sqia2EN']&FFSA#be;f@)U9V9Y]%Nlft+HC?pB)G4uEgh%.^F(B,WAGCO)2T+l$8T$eJe!IS%AAi/(''b^`k/ZC1D!+aII,<&nWKOo"5'OC`B3rl+_[H2oL;&Q9hSrdh%!P:M&6j@0m\.t8bnLV?&ElqGS([5^Bj'EqHq=Y!,S8gEqJk`O=BB(#Z2BsqHhK_pp&Rq0q)HY3"W6L`S?VYEbCd&.j7fJBgG/e%#%O*A/@:=aU>Jn@`m[G4.Ya][3?!g20a*Mu!7[6#[IgJ`&8-=_!PgPq7mN<5Lo:03F+'G.Dc]BtHA5Vl>WU`d8Mb,<Gs3=drQSMdM9%fh'h>pVYh1m_hF5ep+`Fbe'!ll38e4RN)bu7XM<%._s-t8OEk^(;fN]*pht-g.p]2TI"UF2E,f2\TOgLciDk4c#+p0aEIhO\qtUb%"nFi5*lR1@oLhO?[X6/OG[ts+>BeN@oi)1agf;TQ][7I52SDKrN?Dh>,<_5f+R]D%>M6W1rXC@<0WS&C[k[i&]CD:JR'Z@#J<[Q3%Q@M4@?d,W6?_!.sXI#D0Td0#YX0B:pKF44U.aG1E>:)/\7P8uq0YRsghJ%gf\7HD4bI3h[gp?#pgt:,i9BX_[S0I$$?rM'up+!E2%?[hnPfCam!]'RM'i"Omi3.D9OdnQYQ;M<Qub@\<jK81=lCt^QO:#W\D2Y^=@Ed?I=p2a,h[8uXBNXZ0+EADa@Lt%cr'Tuo/A08CU%`"/N:ruWBH5h?6YoH+4/A#,GVoo-]I$S,s2jf`4qb1l.u!56;LK3+%M/&i%#2L>AD[p2A.Q*Pd.Z&QRqf@M*HJ%7J`?W1s'^ArM5%o='qi3Z8M&GM!WW*5<N\BRFXjQY?4m(k2EaSoB2WCfb9ai#"gI_26r%$BY/N0<Yq"Da2rVqsMc,li6JK.7]NX#`<Pb<M_G.Hl6;T%]e[`,a3!'Z?8)SRn+H,YLclRsS)3Jk4bg\!*)(u,^Oh+\^Og"TK=c9^DP'+$PhscUnj)Z/_9N9D-GP"WWDd0=Y!5G(KkgM_koXTP%6CA+C`eMq1R.+H6;]6UD9TH(P1gS.ac9P*PrdbRG:3%72r!,SPfj,W_Y*%!hJ_ejrm5`[O@KL^37#e"H0e8FaZLuHc]5nEj.Vs>5%P4!Z#6HoQ/,f&it2;\VjS\!sQ"?&UGKAR-'9Ln#P0>6]tGS4+4.;XgL%T'g3N#:f.[8:n;gpj<TJ<315BlWhIITN4??DG"1IQ,EY%H-(J^-G]+cPecdCjoCRrd+9?JYH4a`KqTR\WRlPO%h5I"E!.i-IFhi<m^o2]GmtQJE4h7?k20Iq.Is,rBAYk;,d3l9]S:$<A'=mB%IujU#m8..7.Mh9,kdlI6LN1#BHiI!q?oPQ)])gQoF+WS[bGIj8K5G.*>P?\"KOiq3SP=OK->;6]aecAaeCT"uk"Y6LTX;^Tj]8h>%0+YbAX$sd#>!o?1?[lJ^`WmjC?Wl6T\O]r9miU:''fFl-$>rZ\iAFJKJ\b"Q-iF4Dgr:]\>5m]'IGXhVVlM5R:i)A"@+`<oVEW6<%geXXY-FF<EnCcne`WXgM6qo&M?]A<nd2"Tpo3.Sa0aIS^D8Tu+!9eGIae*Yj9O\t&ATnT@@b^:^bP:dFUXhn[K]S\(m[KkpAT:e_%)T>^?qceQ1\f+<;o)3(Z)#Ul>=M4\)K_1n4DAljS."CT0YHo(oe/3cAU,StS`(9?bE$o=j"M2pSY4Jf)1\*]p)`bb*VK/mT240"D%=Ir,JdaO#(,@+phRc&F3l%_kkN?r6\H*_l--UtY0k"LrYk5?V]NMY#1N]5.*FJeXZ!_cG'O#AHq'V"uD[o-A%4FtWV"UY.jMk9L3%n%n*MI<GA3ThdD&`>@J?!65AFFj`c>dN'2*7f@Z_NFP<UnFiFPb<cr#E[0Bn[f-.\krmu@*=]a]pqb]<3Z<rhaF+IX0YFsh/Yn>[%k,B".DjEeKMVV5\DC3Dn><bfgd.9c!J`QW*&YB'5jtfuaE6W;K8=hcSeh#H6B=nldcW*6)L.5>&RS0L2U$DpD**h)ikW+mBGMRIS%(6n0u,UJO70*s5^@ZP\b*c^!hha`d@ZKO)A[8VGPY<T8jEc!0R6a9!-ch5*Xo92#HH,n1E1SMF1Z$fXf3'&)\U*ic:5UL4Q'PnX#%c0(q)T`VqmhZq+B\BfH8-h/_GF:c3J2T)$"W:M9`+&/Am23&-O''7G"Sk9up73tXE)B[bgmGlrA0YA%U.]e15k"RKN^We70iOY@o%+6XWu=(TU>i]4W@*`3X83+*.VMKu?SZR<e7c"88piUtNns'G`\p##(B9E-lSE)8[K`58jFkLA@89cYDf9:+a2f1aOWnQ[/c$"t`R%3&mMqC[*$f^?RKU+q@iO;G&(P^S>]0]0>omJ853acX>M1A##7iS4J\7dI^R5iI$hQ#rinfR=&[s3?8Osj&ORC^GES'@&&`K5sk#X%9p>In7bJ&.4+7_@eF#r!#5smB64,KqH^Wf>q<Lq;!4#J7LK@WeX3M59cQQ1C1H7dWSDSWDAJ@,P;7?q09aAoNeab,W&J*bBG[BTM%JYR*!9qspu?8RX.[*T2_T/_(%BV!,+k=*iZ8(k$rO#hMlBM.8e[YnJl>5GG%#":=7P;rlm$V^bpX0TmE'[6o3LI(Mul%PQD1$Tu3%'O\TH%e\0]X=)=%Y.@1[6Ua71fhO:37t.=\'c8VRAnX6ci->qK0[E2@O/C51$=A9jrT2Z[*PaB6p@ls(l%&>hq#`;gPn1<>Sc?Ng%cfti!TstfkGB$b30![@IN,%r[:FJOJ`MNn@EN[sF!%\;(Bm2!+r2F3imqkmm!sS<MVFGopdD/9RqhpUtMi%`/K)UH[EId5+/,^d?%MipcMo:fboPk2cX'<_)'nP>heQ&m"S0=6GSF4E1UGjHQ!TimA-l':'eT%1L3`72Wp6E*p6):UZ-U,CPNj\<j-kVF8fHGR60+F9`H%>cD8t;]K1kdUo^K4`@;\(s2F$;ism5^uPYf"*0Vo1-J2b*7H;2K(GQ4,b&`eFn26F7+Hs"ZhF@"fDgmiW[8E!r@^)*?f4d-U=qf1%2-?MppX-td^k?:RqUke"#]rK8K;-Ft@!"k>"Rn.+/DVm(`TRX/#68<jPUHW5DeVX41)\g%+IS0h4j*hEFt/acD0ZDK^")dX/CH.^%e4?mSPY`ZhTa>Lbm$0.sO^rBM^++sJQL4fZDm==%=h.a;d8D]M5>LKRBOra1o[]s[dsFe`,`ojA8V$"VIB=fWThf`[lRgZc!fOEY%+6#i"-W()35fTlr*093*,2&PE),0lDWZq`#Scfm*qT5X9djMg3P<d+m>6a#<mB^,N8Kd&gbs1'3Koj%KQX>biquDkD'P-eW+M+iR%@%q7"Yq8-TiD1Y":#);[PS^LLn=Ab5mF%L[>`mu!E(,MRg+;VC'm@LV^?Z(>c<0paFIt4M_AQ2NVu'>RV#+?mMBmdH.ujWS\<Ktq%`P&+L)G(&J/"70r?r@FF^/^>20&Eao;o/3/af43F92hG'b21heDEstj^s-_`%g)mA[nC&Go'J%i!-E.#-50d6>=Ci8A*id6#2S%q%UQ+!aDFBY(:N?k5BoH=]j'[4u@lR`4]rEe(PqdH_/l4!jfQKH#$JK-d"J[Zj7pES)_=h"[iRfQC+<0,i[a2f%8%u!OJ$8IS(akdb%-mhD+G6Z&f!+^]](cYM3"0Zi1o)ItZ*4hDr`/@r0HX$A^,`AA5mK23k]B+3B2^$CrQQoWAL`.9PdIPkb>6BrB\i%11qUceQR\6g=%Rum.CC18Td0$q;6N4P2?D'`.Q@V@C*5kh^!Sh#_D>LT2J[eFrN]j:8)Or3X5`b4#RIiY+a@!c*j<$[;TTjMbTf70u1Ce-?i9D8MD%gY?&JYY_rSJ7^+^gH6f05n"cV?7=f)KAk1Pk!a1(Ukdo\$a(kfKgVU*RDnf$*Pj"Vn^2N2I'?0_!B04OI'BIE+)LnfkCW&KZl,Ko%W$g9qBVITj<Ko^NDqBPoiZ9roNlaF1(ij"_,=AC-Q74@E$aOdRGI(<'1'N@rPG+Z=rF]\[CYlUV@Y04H<?Yl<cXff&BMAOGl41-c%!Okfp/5X-ql=0pZ$lDg6J6U(J(Q*Qdf10*?eS.bK(cloN5QS>hWiYQ_nn?mjE!G@MoPrgu`l"BQ/!&>sXZI+@SA9AkKR)O4mA!VN%$V)ll*jCAY`mJ)urjb.CdAd`O"O=mubL"'bdL1"%X]4.pQ\cM+CnL8-cV>r&?8/<c87^]K4\,W.+PB:S)@H`YN6aCs,'6#bo:a,K%8Hd]^V&0aUoZI&Eq^dSC"M=`2f][gi8HPX=r;1j.]B9ACJ.WA#!(V/[!.9R<!:XK%,VV3H636"_/s"IF3ZGNS980AR-3Xgc+C/ZH%pQW<^"UlDHQNDmJ0\WBd>%*Tr`[Hn=OCH!kXbHARO*YNCm$@C)qLjA3"33*UfKPa]Y3_VJkX:6f06g6:Tkhfg1X%@FdlqM4ZHt2l%;0NnW?bEL:->lQH20i><S+:fL6GD]I2UF>CD8Fm#k5m[QN"W_!]IaunfGs3<\@8bLShq6WqA22)\T+A;@8kC@4]A/d?rFaa\#<&,%-8gJ%^NKkY8(/h?"I&c&#MX[U+&&<7&5;@*+)TX.&%;GmA'l:bUFlHEB_r2A>uR](?lLJ.5FC@m7\R1BW4$Y]E$)9+2nFK'V-h!D%rGjHJ#ele?.3_M,4)s1[Z^]s*pIm"E2([SIU@P6kWMD4m)KVZRhP9+Z)bj9Q*TWFtL=59T':&:@8)us'jjDn0ck(*RLi%Kr&(q=q%D*N3P:h`YO`Ne0pPLCI&<1;*.mQ>"6PTDc0W&3U&l<lFq^5YU-Xk+p/kUsA_:%.cJhIrY3H@7?Vs'p/EM+U^mOH!2IDkfMp\a)K+%QW*<=&dua7hZ"QffgA18$RWClIJ5[hW-kt3p>';P`=GXW(E[JXrWh1jnUk?K!>PB;CnJZfNn.M5HnWdp;G?&:1'"W,J%ifLs7uP\%oUgc8BO,#U::\\0N<?RU,8^imBs3Ah/sJ(L(g^.]!D-S$qjNa%L;k2]?;pk..:&ksgBP]68u!>2<8&ma\F)/29'/HSFJDu2e+)dq%'X-a@\l::=L"r>G/LoU=d%eHPmkpGob!emU@!GBZQOS]$9(o"%`R6QXn/C%)8EHRnQU1/1^<:2Wd`R>*).$M^83goubDCq.DEZtT%?bYFI\Bm'GKAq<dh1<irr#5e-K8D2[AK't-I8i=jC&[%Al1tWhHkoo<@!<]0l2(])I>;P:^isln.Hn3Fa(V-SKc4Cd/a#,p2nd7i%ht!?lI`m0&1Hh?JqYPA`nW.8)Dg%6Aq?-%:f6/*a58E[Bn3RW`GJ]bRd#g`:"2`YM)')\hkffdAFus+gNK+5q<'&LlRJE`L6N1!j%"YY2B^c]'[$(^\.1I:_]=iTm.'4)rS".`RNj;#*C]+*Y#m5lX#/DR]jW-?W`GX;,9km;$tdda.t-FDTYF=WjZo;Rtd)"J')n*N$Q%5K@+1oX1sUIf[T%rt@$er/R3GK45Y&;!W_VGfTML?=?[Xie*(c#Pr60q2nssbOes#?qA])KC-"j_2tH]EP<7PAR#04^$qVj,&%("%p&jcChXf865n!Z39^Zu;6-s(U3.TlYWSp*6MlGY8HIo(O4m61D"n7,Z6:$e&H[Y6Mmg_M_"L#EY6!4S^[n6'MbGdk/(<iL?WYSJ3%gdm9Uo%,3F(<W8m!3H%[mQb.U0S/-SV7/flMoB$Hk[!*B0S/*R/cR88Z1SCL]=p-t-u?0M"W1S'Hn9Cl[N(d/48p>l7WeQH*I"OB%Ih9]!NrOa3(=GW2"UK5J0/g38Y9pXSV[Wd45/O/`+;4nhJ/@l>M&%'MoaYLOe6.>!0)(9`r`>Tda'cLV0:,PlU"J9fOVDX?3"\Ao%?d]]0,U)pP=Ur!g:QD5&>^q^ho;>/oM^GslGLlD(W,9p=1dUW4eRpF(/M*X>=,kAheLLF`++F%Me1.-,!9^;+dIiabI9'5p3osMd%V-naa!Y*80OuFh8@=#=(Il?Sa]>&kns&q[)!?XR!?Be5?W1T@D/k%G9G8K&\VUu6cT9\jtAM9oE$=JAKb!./!1$.g%/:9.IHVqN1%TRS&#kke^\m/(/h*;f^OgW!.qjKn?nORNDe8pfX69]*B6N=.Z#4uWET3f.*\-?q@$5KPL9WcCsRrnV/X^Y%b"GqAk@\fu.qa-tdR%R&\.pi$t`J4SiRP5'O@RgN=SGU.:af@LJ,7,q_/Q4c5f^ql#RsZ-HpjA%V/!okQj0!Q1]ZeMGc#LGUV!d8Amil*Mbe1JT-L'J;Ak%3@-4I/MQ<`\58K-+FBuh3#+'c;u`A_$3/@^g%ul[$["Nggcm\Ri@g7"p\XmB2fLpff,p6e:iiCAF"\R.:YcGj#K2A.SKnkD71<o=%1<oOkX_drCD#W6XebNS!f_V3B_V"^W_pH,A*`]hGXOBH,C>=]b"lDM2?B'6X\0s6@+)k23l$]r/9img6G?Ok%WLnkd7Zk2/Nd^*j%PlH]tG7#.aJ;'XXn"df(EId5O0?fNr7G%D<d2Tds3JZAk^+PY[:a0a!HG_S*-uiZ1an:,0;^u$#Bf>In_$S?A8GN.ur,QU4/kV\_%^/187TR]C:;b19Zb6e0g#5LX/(LI+W>Q7J^PJ-G\2$*`P#f1:ckC8M$C0uY.Ic,]T4rBHs#R*Efha^WF,e%aR=$JS$5Gc9kq#R*F%*f^]tEstG2_Y*kf+*^TC$YRCFhG6:c\d'2U7JVO$#LAT5_5PcuDur-tdL)b,>gTapQd>CkNJiiU+=Xe:s71ih+qLU$$30fGL;q1;%?g0dRm[!nN_JHo7+p$"/-09$XlgjcYJdWEOPdsm_%%]DD?4UU"<k7o"?d^Gn/p;[,K%pE_:=?esQG%nh([;*KD!2=c2Z\nrg$5[[%4ns)O;;u&*s5("HJ=u-5"*t?C_C0FJZ%5hMK\QW8"B@'$^PNs^:Wa#s+r?D439mZerF,iOqe0aZ>KHQc)eBQT";L;3&CA(I2j\;-%^ZrMSq4U#BmhoK>5;$pXad]ElTZ"gtXctuq;`E21pf+[i/oR!f(LfRk\6t?`@!PX?(fIm=?lM,e[[oP7pU=&qJF<L?(EtBCbPqY=%Zc'nW^]cYH*Kts_>nOSS#Q?sbgRl3>VtoH3^AQmgch$8-/>4!3[X\*rdBETJ03e=CTE"'r^\k!J\ae;Ooaa:er3sH<mI.gfL\kGn%q;peSr7u:@rh&*IgY/!$J,SErs7!d2ps20QRpZ3MQgs2;pic&rjmRZqPCNCl5Q1.ss6\Qjrq3c#rU4uYHbNd[Vgi2H]A9CbftZB9%cImCg=9BHIZsb`I(3`Di#S"2RM^IlcZ[;@\]4/qolQ]-YBM]*t-I;'l3CqkU[.o9ra(l%M>ROlHY]DCGkO%W1a]n?]FDRQCk-/aW%8+R!@UrBa^X_B.W,@\m3+*+s$TIeB*Dm(VgDaKEOo##n&D*_<0>N(UeoA69J9cIeM7Eg0Z"`["^5PAU)7P[6cpb[%N>WY#]nlA$4%:YeNaTkGqc=$;T27XuGMS+b9Pm$`?>)$57"?X&9#Ydq8X1Q>DU)$2=MYIaL='llbDbMl6#BhX>P[ZV4WeA]aWYXF(GpqtA,Y:UtQ%KGa"6cOf*5X^j]@h)&@pG\n=K;%Nu(=qGa*=[APY(_q&)mO?([Hc_)RA&(k`mYJY(@d]hU6B#V<\#-j9oR@3&51%Ui@XOgjZEn^4%c^]?q+qAEu.u5!"Ynb1pJX;;b\rBF#KT&_!j+M4SJ.&Ysn(\7TQ2tqJ2N7AA@RC8bLbTQmbIQR62XI=d@RC:T!Xl3lhDlb)!(98g%nQ6r0s$MSs(Oq_^%g68H1$7I+)[A6<Tm<]=S_%EUQ4OSoT)47eVN"g&,'][=\LVo17UT6?JW3k;F1uS@f%632fYWS11iFNOR&BY>%&bEqshnhL`LQ%VHN-l]d0i,_q$SuDUm1JKeO_,[S1!beEHRe/_AUc1ADBg[!D[bJpAam8MK==edba=[Q/SHqW%F6>4cPX$Qk&=Vo%1*D"WZhNqgjd0I5ltf<Ye]oe:r2VhN3]:km$XPcs[1,_)m'Ff\"2AqOc!03nGAX9/c=Cmu%ahZ0VCVY5RC=feJ_5&f%`G4P1$7WP%.bF)PRsQe##9qNO34-qf#r&a4$A\f`>=HbAAfNOmS@=X]"!bXHZU;@KLj3W0*>'qmJ/b5Pp=]p@`q6nQ6='r5&7f[f)1i84W,5r0%m^Kb$&i+.Y>Gf:\kC/mt+`j\%;]p=Xp5:eF\=&!Y)Q55um;0;S>EJrqG+'!t2r%(M"q>t'D*Z;s2^JWZ#IZ)"i.9-'idB]k&9G/q%1Z69'pOYC'k6cS!m[D/UX2fAci'@4o1&sGNg:=nonGq'SZVPr'qUo1rmR9"uR'=U_&U/,rBfO]8RaV57LsuC&Lq0iE1Z5N`hHLP4%CE4">#&;=d^Dh"KfNRdUN5-':9[^J2mPT!n*?g%=EZ8<IrYfXK4#YDhM7@!,YDQG/cL/`fF,/#n'#s5m!ZNuV[;BaR!ogArF[QWR%aSfJ:HYg%im+AQ,N/0R8q\EYf^s;THg*ZN9&TQ.kr>'m5(c8H]3)S>9c%bKO[;h71VX/c?g#TgM1\[7K1H4#ArOoWYK&216[)n8o%\^RD^1PfFW_T],?9pe3LY?h[@F$,eV5m2P8Qiii4$Kh6*H`rem#$mV,f;8p3W8LlYl+HGEq6tn&H!SJa2I[_!K='aBT?T9>DpjTJ%hc[_!KOaTNK62cNE*,)HD&F1n9m#d=iSO*7]7JqXIt,6E[>V2''97'kK-"c;?,(`*U26nmVAg9ai`S1o+nS^&Y_[NJ!).j^L0\I\%4Nf?6+J'DSUEJ\GZj:!Xh0),Trf;q]A+(3GK,]!r^=SYOQpQaK37=fe2U?`,f^V=r8gRkqI0qb'iUf^_Y&.j*$j,(p6I+3M'lldZ%/*-UK\Al!n*uZ;4-Vc>J%hu7[+CcosG<uK9eD@RaQ4Zsa_c@ao=*nf>LIT45!?XW:$J8#F_cE:/bYj6Q!`9PB"G2H7jeeC*#6rfs%&MFRf-,^pVI0hY%h"2o2@"<Y30c8j%3lgQrl]-e;!4eZ'F43k@'ldXYRh4b5h\C/-^P*O&YF"=Z[1eUW5lb9:80HdCF[sAXJA#JX%<;k+FYl'ArD8u]gDRt)r)$H&u]j=WF$Wo^=I<PkbNIX/,0fRtNFKi5ES'cc]DS(b\(rklZ":S;Vf@7&1%#>j;IYOlcCJ+V0p$CCT%_lDn)@65A=T3XC$0/?m]ZlQ7kc3X'"pqH4/`GEDGD.gq;g3D)7XW&+MF^aF`RkDomJ>UP7\),neM&@#S\hH'[4X4Q<rQKp4*:P?p%n[cMr[t8mFa."bq%'3p`(b!QbO?bU17bQ*]R)&i2bsPn$p)=c2O6sqp#W)54$t0>J1sZ!dR_nh!o#n:LFI3'=0ulb+-A03AGeKdp%B\X0tg+kXO/;%/JZnq1'YVQ[:s(os%HSNf?44>$re'9cm7R^/N]T*F?dtlY`$'0m.%S[7k]5t@Vle$(X]HYW,GX9!Q,:l'V%G]=#%Lf"a@(Lg3.dtEgpF%lD5Th8uA`#sUH6B$ep2OGMSkIk7@%2D0G3dY`!S0l;bO"HGL!)XnP"@A3J2Q%-B=J0@ta;m==).<UV1hFIW%JtO\]"q<Ca$+WFD1aQsGJ]7iF5QYe&`.:X&"nBI,\:Q[F]J<mTB'_+fgl/q#(c9T!-#D@qXTZ_I34=Y\,Z+C+\i/S^7bCs-[#!@U%^e5^5fM2Rh;\=)/<^D,j2tu[PVAfO&mcrMco+3W9TXLWgL6A1)d9[ddBJBOB2JEaX8Dr1YQ&*6X7han/G!'A%YWuouG4!@b"`e!\%@"FgKkY0[fJ>3K,8>*DLonJXectoq;"V/c][3MRW0j*A772NUSi42+cZqHC7\Kf.N(_seo'f!1s'u[X-a"$'W5fnK1P%-fe(AKAu%!ARW(O7ZXg/$QfdZ6*3,h=lZinpM$W"q)E>ph<OL:rWJE*(-*up,ba_S1tiqF2hTebk]7k`LJZM`-f&Ulsg.[%N[Sdp#EcVTe+e;%mE#Im%O*khp#F&^=-5'hpSViOlF\ai]G#>k'>3)9ZC^R-qN;!Lf?mp1f>d2]RJT%tiUH-QkNuHd2f70h,'iXU"_sCZCZBRqUhfDN%dC-2f]5ce_OBZm_-A9'H^E*r=)\,k8\RfDe51m[\7o[D7:IX^;i.`J0(e__5'>b5s3&i)JTS>h5O*c$SMkM08E2XW-;%&UVgTb2%%)H%[OljQl]48@]023aSR`ib-hFY!3/&AYP$jF#jdL3@IZeqC9&'K@omm,3@\jj;;tfd_c#&AXtG@0Zn)O!(2330jD&(uTcE)5Y.E%'Zdh%l)BbcgCeR7#QL8h7@`+u<"//hm*>cC0Yj[Kf14N&'tfS([YPc9_NQdm%K`S'<NhDZ[X]205Adbg2U>S8ikSJ#ie>Wt"n<W&%ZWG'agZ=69C?$'@KE'1K`8H.#I.s):71Y2?s!3<kg:0]b\Z^Yc8QY;eAHY\_5ldg[K,k)6.f"5:r/U7aYKI3Uk1O$e'F>ZTDmJNY%Yo5`)oBbCb;`2l2r\l\Pm&9\R9a3Zbi2_I[H!QI)+iGLREtlQD`tlT2!+ikSr\m?$S,lI6Z\&8'.EJI_c'%n<!+5,ncKfMd:I,0e%4=Xcr"cL+$A3M]_3JBJ6;nuA_Z_QYA]jf8(PU(HfIf%b)k)=jmbW4`iR)&g$$Ssd#X#Lj,Y2d(2$k>6SmH^_I9hkLG38c?%%dUi-%FjIc5"4]Or=Q#-q3T%C4Sp_ad!R+nZ*GPKGcbCIS"r`G?:rB9S?q2qj.f"W5:/sYC<eDds+W]=Va$[bJ/`X.T0Mi.AZIWg7\>U>"%;%/tb%!E3"\LQSIb:\V"s'657s-a<6[qkRDo!*JsMr\NL"\q[R]XEcL-A0;IgRJZjBV?sN)/,_M(i#uQ\r*0c<p3=JI")C(gh.a[%r`$fDO"H0+"C.-V_eQD+q&($B2aIWMFB1a<V*NXCcp.S:P<hPbcrCQ50L/]"e?BqZRLC)_TXP7g6dR=Dqng$Ja;KS9+Q!4gRLL/P%TJQB]<eF\s:]gfA'giE=cnu[t'EVRncThM:`DAq4cV93]!M-P__eQDs$g;BL!*DOWr`_g]r`_g]!RPB(;!jGTf5&P8W"`tpp\>A0%0L-^JN4!%864<qZK8@AD>Z3pU[Eg]F2"3_2nhX8BHrS$%JPd$BJCdcI^]7Z^cbKOA@TQlkHCqP#Bcqr/R@p8/kH&kGpn+VDBit!"%.E!?ZY)/g&!P0V0"pX9t&SD6Z,0orM"`X`3F$;t!cWT]nn3:!fe$/!#Wco?eTPFXgJH8AQm'Ys@%Nu#YoFPJ2q`It'2_[Kui\N.^%H8&J@(naC<S.UR7H/lHV(^:?2.X2lSIBJ1"JHHs5Zc%Gq?XL\:\K/JP0S9K(&nVjU>gkn.9`>YjHYnf+(<dYK>qt6tn%3&S)!m,?%A&+8jf?`%D*dQrRC?R.#)Q9@9&8J-G\gE%6B'@Bc-j.$fTa"sCV.%ef]mZ^RL)0Ar4&N4W_3rnu>6^_>+#?XcP_N%Rk-^b"Dh]>0%a)lVD)qDa85mc"4JkZkk`kM;QmC#\@bDc]X,V'0:7mQDQ@Yc0F%p?QRgG@NO+Qq1V=X3"gJ7boM^&]p0epgC3J6!7p!(q]o)Nm-`%*1Q-)*.:u^1M]=9T)$rk(rDVP\T,K."42`=/b@;',;-THgU[r7ptmU]^f(X#$p_"P(EQclB*>/1h$:OR)['DP;nd-!GorO=Xbh9f%&':d2rS#\Ljk#Vf^NPq^EErc6q/r?G^2\qmCWd!BMDuiR*AmqV82_sYN5-j'F2/;P7c/SlJfP:4GSBGZFVt3+fR_'<AO1;m]^I;j%%3a)Mid`A=9gM83I%,fE0]:gk9.1YYaFCn#%)As#2kF1aB*>T73$=&W()08/"LOg]TRUZ.`+Y]k()1DM1'#f6HYrSmSVYZSs"#QF%if;Wm"?SXGi"^5Apo'!)!`9PB"JR*c#Qta7FhWP@)d[_"0fnKiou'6,8YiY`3",h4djqWF!%>Mj1s*3Q`.eOK+bhV4Bb!/M-JqjX%S-+3Ta;KLSa:Q-D#W<dR%DWV9JH.+/%`fjI(1QpX[k5N#j'?`IJO]IDKm;B@DmkLI+99"tc2d3_3.ReI^AaJl_uX/>nH^ifjd5YY%OgR>N^Q2kd&K$`>qt^E\0?87r1*68m!MuL&2j+9s=_5N_'3I0,8<ChBX,J82IQ!Gb"uO]M.c\>?9QcIW[MtR1a?pqg1a7Z$dV(u6%#YQCOBHiE_`/m5c",b]RIg&2bD`@fk<Q5&VbgD+]6:kgTO\de78pg`@88"3Mf4>)2J\:O*!]^@U]E`T'@6tq>J6!NmKJ80>QO`4'%PuYg9Lk#ddKTUuq0kAXd&TKGu^*Y$.pD]kM:B*gQS8WaR`#/Pl/fbKm.VjtFjDPGM?5W,uLdD$[+C]<);:==<l^gKQl??8Go61RR%Up@is5lF/DHVhR1.uXScDp4(u,;:Y-%4KFE+Fh94H/j<7+bTZ_[D[_"D5<j\lN$Z@Mi#)!,G:eH"6?X:-4[8piI\`4^:ckY&4D5B%"$R(QN'L@`3T->"-Fhr99Y?]dOMA)g32)C4()&(J?Wg'm%gKZ^'.;GiTKr3db5oA.G_5i&jh:I4!375;s&VXZri_3(j/E3%#!fN;%$%\nWKG`e=/gcUcAHXn'KDQ,>]a=*c2A&;!l)Z0X@SjhFQ8fff]^jn^pFC$9'69IT](+Kl"QiVphZun%^'T@dq$8ashg>\ibBe?_%&ebV^hdhJ2OMa1rM7i0ZTWBG7E5/C*h?<YDRdEh25BUI\D>/J)<Y=3pbZ5;4nU<Mp&5!.W)/_bNo;j8#A`/#M/TLEiAH4RARug0%%CPf\V,JYPs?[lJ^jk0")i3"bo]K>/j8`57sk#C3,@"`0H&XR'.W-8-n(7r[iK+Lf>]a9t"ZGJT;#cCEtbZsPCWCc"N-(LJ.:,'Pk%^rX]>&/Z"3&5LIN-WH8+k(",NkYlbFB!'D%$KD76S>.:R#`OX#,G;t65mc]cAEY;`6-*GeEsOOc1+2\M"SJ6OLaN7s"i^l:2`1c/%+FdsREDF/aSZ8&"IqO=pM"=\%$fVT1XGAeV/&^]P'Ol$rZFi.;Dd-/U$1_/`(FK>?V[G6#hp`Wb64n9Z%QM<'VUF=C"Mfj2eF+q@%%NnOHUE\!mXgC%'rQ=-ZKHfR.T$dr92`1i1JI%LQ#P*)*&TM)G+:(!s\hs__i-nUG^kj8m=\%Oq)1bd2kC?nSEe[t%a;KS0+`BK0%OMUoC-\2q2^8X]^"SnP0Hg('Aee*11#!hL1'BH?u,>PJXZApo\rlR:]7$V]YMDuib$fX8+^#V><5CX%"li1*X9Z5k<AK>cBqmkj>%'1KX@N]9?(au\NMQ-V>DRim4+l/%(GVO+q#mcUZl:/J^3N(Cn]D3nhP$0p\"n"Ig(Q4YLST<$3#ON)B:pDi8?Q1u?[cW0+LPkgh\%:'^MTbD6slUWVcDE";/WQ4\Dq*UdVYnYT=lp[_]'B*<NL]RZe#c3UAml)=/5VgApApF[Zl0oCA(%-O:4B,QhuV>hm\i-qi^SqHs3%A]/ZGD3aVT?bX4M?]Jt)&:FR2oML%I^B>XtQOJjoT/ZZ\7e%cLU\^m@'UAnl8+k2nq])]A/20,bJ$/XGK,2$FK&6#ji'br.$=2ah%LN98ur95>X4tGXbIoaJq:G%AY!4*m+GUsGZ(:rXZDMWh+T7[ojlCSPikcB7pb("VddF4B^@.&)8s6]q50$=6nroo/EJlfl.!@9r8%!VE=Ho6j+tS.X[Acr'f6&7Y,nBDp;QP3F..i.#<`dD>ifdm+-=/B`q]!pHY63m)rTH(]ciqC7;B]IWY8pn+aAGiPbGr!rR)()J"`%c^">HFhY/kkhprnqPU+8kF)W:#bW^B3V:[(ohPenFOiYsr6I52F;4S!=3)81>p8)++&@T<6P,[k3X!hto0<N_$me+C",oa3;<eNa%"<@V!1_Fh/qLZ9(_>iL,@MJZ*V+q6rN)gPJ#_\A5K)nHBLbf+7,/,]m3"^6D^aQ`(Q+gY*e%u'Y#r+9a6`!N_s,/MJ+Fp.`Vk_TT%.WmcX?td^GW:WM3Lbf%E,$oMq&?#QA,#8.qj)Yq2U?"N-^JLoY;<SCQ3ZS>W2!&e[njZ3"+Fp.`VdkuN=R("t^G%qXrsNBt'`)9<%`#4)&&a+B\'lc].1Hri/DlD1M+Fp.`Vh4sRVgQ5IeqVdE`8H-=%#6lNW7:(iJ+:hZOuQj72`Tjpq?-%:f65&0&g(dqbj*4MR,UWU%KbM9fq(J!,!j"(XrsUIWL9nr@+GHM7@"8rGnm6h]L?bB3<Z%id#0MFhM-tiLL)7f(.u9'B!tYWUqB$GlqQG0PJ/!b/?D.-2Wdb4T%@;$]!.0#"`JH8pk8pl2dhba8-5lQB.cN*]t--.M7"nQ&NqSfIjo2i.Gif([QLc:o_/.s(TU&&DPr.XF.Jb!/e*Z3gaZ%X%V^L7!r%5lG."0rf_sBjcJgKr0EPV;Ko?E<&QrHm>keMYOpSob>>'!)%#Z;#XZMIg2k/;Y`,QoXcph$rF^8ZkqYL9D-UrSStM,)'FE%o>!Vb%D^k,YaPU_Inf@5#(!%8C<Zu)U1_1!/qN_J]!V3_,h'Gn]>FGd$f\b+>0X18_PkY=HDlM5(=SlBo#R8B-dR5cSrYG*3T[:/o7@XDB%(%K.>$f[+q&mo&6GH'(0@"1hGc2d`GS-T<KI7ni=5lMNlSUj,bX(2aZi-n=qcG1pudVLR%rmn$(1BO<qcM'IOif(Z$Li^?^mfg5Y%@\klbaLeh6,s_EpApXRD\!6Uggi'1A);os:V9V?&DeZd!+Fd%\c9S@IbmHHU0FQrq`tl`6!+e,d^K3*1Lf*A_"lj[l*oMK?Zb8Vt%DeZWr+Fd%\cG1pu;Q2H;rYDDY!UdG(h'Gn]>KUoXI`j8$*:EpH?U%b5"X1Ye=&_ET=&9MO.,e&)1dDA6$D7Dl\2Xd'0Z$i\*m/tj%p!3U]>eqV*T_c,S#7M0\<Uq3^I[B>l!CjS"7@Xrl'la_8<=idC<;m;jrt`eM!CF;^&7asKBatt&KWF/s/H%3O56KHNV)_q6&h_E0%"6I9t&g,3Pg(eYd\Up=PfG3rd^fK;Zol"W8k5tD4WdcX#s0eeT$fl4VnLZ<jDUgrfaPU%sF(+<WEt5^qrO2:R!r(HNIkF_#G,pG&%s1;:LGJ*BF&SD)I7D/.m+pRktRKG1(^Weds6MYOMm4E:lc1:$aol$o/\Np,%VLT%I^KYDjJbs;$o3C4&]2uq%`tlT2!Th"K.c7ZA%3?u?9kJGC1ef8X[qe`4D"mWQss'4K2>J"/V\DPjOE1t@^2$I5-Ip72:TusiEj]ipXHPFC9J5Hnk!(K8ErXU/ANGkl?\\S0PVLT%3%^9,&W5lS3lS-t7fRsd\cm7-$X!GC+A!br[\;!$H0b_bX@!cOWN[^>.PVom\th%75UO4PsGGP)9d)1tlN4PSd1f\b8-Dh7k((M9nd%Xj"7NkM%W5@"3+`?=66nDkGMM*OZmh(M55jDAQp3^[2bW`ZQbnI,ua!iOXt6<6RAb6^Y^ih@@36N0W7JZ5g$j(kaSq!:CD1<;LbD%1Do%6@V<2'8,X'40YjeokJC-c?57P$?rbDgK2jXE4SKe,s2$rl+91Hr;-G)tRu6$MTa8.c*F*!-S(a^B/UnA4K.aCGXg@[.bJ9T[%lPIY$enL!FEk$C`@\F(;Fdccj)a[umg&b'hEJfIqIuhaF$YOp\V]r#;!th<ob>WF(cMTlk/$j3Kj5J\fKd4?ncIOY=p38D9>WD<O%W3OQ5lb>r4d"S>MO62'&7t.9hEGQ2:.$,6e-OSoDi<_chM-jsj*8?GQqoUHHI<j=DB&O<jUH7U*e!ER;lQu:&Os%?M4DHDl]al-d%?YKE4oR]'l=<)cp3!9*NJp9S(U*.b5Xm+b1dhaH,FNJs0%_C$ZjjDb-l$]M&kX+T"8ka?kI@(REmt59=(L"O83a48JO&6KfrrL.t%-20,D@d6/l`#G]i5eM*lpJG._NKu5Y)N%/UK+17.3kd^;>;*Mto[81_e:.I-WI8ICbJnPZ7n;l(>.[=7U.al`<l>BO'*[pGF+ot_%(dq'.%jtgCrd/ak?>:R^GY7?j#O=<P]0**<9'o"56oTG(4??Rt\IZ+^h<=b1[Nt7QN:IKG]V%;_&6&RZLoL*Ap+[Mg>om!.V=pTm%oc%cJSe,ARI0<aTCn13IRtu5o8,WZL)j9'5NmM]$GEKm5Qeoc_QnnlG@U=:s_435^_Mmn8NuH)1n3cTM2nHU`>F;DbTgSGkh-HVs%duRE):^<DJrdKp.Sl5J_92R-eW9Uq@hW<E*F11sp.V@s1'[.N-'?#h6IuOoF^OBgD=TX:BRa0K&*!:*.=*e^(@MIbK'EW!u=*e]c%@ME2e'EVu0>JJSZYOQElF[2C9haZ54`kF2I9j_))Lc5Ga$K;N2$04:mJ@$ZAkk`_,$`+8&e'\#OY('0R:s+;F23s@5#g_(?FF@ja%>;$^&9aWhj^9h2i#9M(9K!p02=3/m?.$1G,5fdX9dWE!*.NgiY^X;aDne,5++&%,&D?$%Cb=Lkb`R'TC^eJJ-2nH^[ANqVlW3a];%gQsfJiW[F1+jL(Pj@?0[2O<#=J5'\BV=^HQTp.`_[XNi02AJTUoV&Va)[rrb;CJLTSuplmJ8J?*!Q>?g??g3N]HB12&8s[raU\NY%C#>hQ5'45^K)nSMU.aaGA3Vc`VIlPA%']8@]p(^&\:0&12C1QpI<\1Sl%akXdLQL9V&p%R8j<kAPs3\jFFsTPp(EY=LQ9r(&AZ<R%0bX?0ancGJfMqR/d"bBI9B`/34tsd\.cQ!:"A[Nd0L2U18ElnF4qPMamP-&^&"]hOD,bsT`350K&",j[66@b**ZLms'!Y$mKBc(4%/L*N'-'Qg`eWl0^7Y'brY:UkW;(uXhn#'WloE-hC\P%F*)&0;>_MmV0P*^E1g$YBt[#J62r=NX`GNk/BK*+_P_C5-*WNPmI./csr%#:(Z(AkG9%bZC"7Zh4(IN_X/(Jd`:e2@0LsBQEenaJlg)EJ_;Qn[j;Gjd<=a3Z?2SVMn38-`PYL.BR\cOFG:8lYE!:Tu_Uu:MP#q%(.;M.5_^Ic^I\L&F,32F]ef>L'L7V%_$dj]0*Kt?.In/Q@Hop4kY3c%OC[f,`$rgb9n95C_0Y=M626"e;j+hT!]V;];#jPhT`Deo%?rXcXC(nNYnW+j+ct&KMKLu)oRIAe$q`qsDAFG_<.J#9J)!nFNn_""9p-+0i-/&0sJ-->DfEV6=9RO&2qEK\#+s/GM+Fi4(2^R-=%ZefJlj9+=<ikkp9P3h"YQP(Am]Ti21iIrV*pBim8H;q]0Hk>3Ul;8.#pOe!qn.>^1hBu0Wf65t_c8,cSK^aTfoaouE?C.P-0gY<&%"YZY/"7\^*]rqJsTJKFF0Bc)Sa(=N6Wdm%"9#.*JI0hUGf;0p9CrcQ-^m+S$.iGti*qr\8:@30Q8sn*k2XuCjoe!hU^#!se9=]r^%QYI%)G7\,jVrFQ,"7`,&7mW!`FM5/Hm82cJLO_\dlk*W=YM1;?WP*0qf7EKq'B#-og6r#>p:@Yh2]sh`aA&=TegfT6d&i.%JFQbU%?nae;GHiC[EGm.20L"e(N:NQ_!J^6Xe0I`1*aQl*Pg?oP6[RY#+B.$i=3(Dr$"dhKY?S2tDZj2$1eE%u_Kfr/H9dX,WP37$E5&3.%!1SbX2M8_sUBC+#lUqMDi.kB^M.;/"7&FS<IB`#4g+k&Y$P"Mo%rQtZ2CL\<9JgFg)g?e#j?>QnZN_19&IE7"A2g?rQC@.u#aed;%6\%H',p?\K2;(]\:/W04;$R31.D.+PDR71hW(J0i9Bfqe]]oDHJ2^FR#T*\@%:<FG]'hsZTaqrK&3Y(XL+9e\,[T47J."*^4C!]Y%oZW.OM4Ohq9O]'eF:C@YU>il(5:ToQ4)eG'b!W/2J`msZSgH%M&70*s"S%*,R<"k*4;IsMkLgJU_ba],S30U,&LJfb<<9#tWrg$7%0B&aj#A8Dn4O98VNfo0)SVW<,W9Z^YeFCn5YCYf';I'CLZRri>n^t\dSgWn2PE(E]>m&In:ITYdqKNA.j8RDAO"qc/WU?d2g`$PZ%H/<e!(Zi<'\R#BcPB)<s&W_8ViI^6P-FhuZUClq,03Yq!YDJ\XK"E-O;;e>?XlA/]..MoP%;!+$iGn<4i8f09\k0)^RL[.!q5/o[%>t^VF3q6+`UC/_WhWViBl+OB-"3VXs_HkNN-ueX%[L/@Q%[]g\^r(gA/8n??aX#f<q-4$H;`be2TR!<.1^\Jp+G8ke'BI5s0%#Jb%3tW<%bS9O`'f,G%$KN.W;%[FD#,sumd2PH/=2*uD^`[qj'0>B%9Vi"K]eP5.!Zl.kqXq2foNH]\e9Jc2!WS@BKLsa)1,FR_NEP(>%^p9("PQ.W$Mb2F9Q(#PhL5S\Mru7Ej8^i;*]a"<l8tOf5$ZNrdq&:rr'_Ka/YCZV2P3==X&ILV@hh[.Kh2_n&7fYJj=pOpDXDZ`,%oXOWBjIYFNBVHk7%o)[WB\m->o<hm(=kkj5H"`r(61cE<@7Rfe?A;/*_=P[HGS^K.KK%^o'l^b19IJL'eM]L&hGA&fZ5oCtFV)6[%>^'a@m_)#Y6uQlBVJHKMH<7Q8hMKJ(PNRp2n-5Ien5@2ui&q0J1(hP0&I61l_X:B+Z\.Db7sI>kW"WSRm?l%<*@u+m"H;'je3pKm%j[gf9Y%C2=Oq=29*VX3IJ>qL(!8gj0R>BI<rE$"oAB/Kf%%]Bs!S\XY;tIX3Q8b5rW7Nb(\a3J0RpBu!ntp#EP3^IGYCkr]?L\5k%MAg:9c'uE):%*E4I(a1SZ@h44<A$?_G>iRqSh*Y=&LOam-+XST2beNe\o30.Q:HL^f0o-5Uq*(N]1H_4f0o.`Jp0L:U>Sc7Q04sn%TuppObF:kL61a4M@Z#;)+QD#rhE].1hT[Lnan)AVF;!odKW]sj9r54g6uUA.3$U+-iW[G[Jp?HWOdS:ehK/dq<eh&:Ln<*>9O]#;%0%%N-VQ,t'<,\d_.Bs@_00@83<*JT9hb@-)^OEW:pGh3<S[bVo.1$M[oK!h^'I0\,".UoV9#!_>bmjgM2He/_hm9,VN\7LaK+asm%P4.=#^14c@d6(4q*Lu;8d(`^=*U)Bc"`Q^XU&Y[Z754'VlHPLWP5\1@1o9$5";pcLC80=Dr_7:c1eDn-!=&Ll/8=gZktTFo3bY,=%\QHm-mSloeKBLKb!=,DE34)Q4P:jeY*WNeu4&knN&RmFWk=k>ZFS)R@EGU*-6E1.6F4E*/C3m%OAl#-K;$`p^LR1sFVWXsn*efW$%=b05^#/OTlM.!1_cgt3,VXl9O;P1iad50-38O=9e3F"F9"4;2?1p9/7^R>^jfTPGq'&n$4L.VRK)iAj"/XsfApSrg(nB?KNEYV,f%8"IQ$*e`HLXatF?c=)<oV)qb]1XJ6CiMAMh&MI7XCRunj%d#eSbB&q$%5cCd!%6%_;=RPb!Rj.ul-;d&I,1\7P"D'oKhDNmP8_AR%5FrAh>`_'LiR5O4>a%:n\t,W>NX8#]aE*O+R">^3kHj.WkX/`]C7ojT6t`0<:)tUD0S`8e#+k!->oII%Y"WJ"oN[YSl#O9VKB]oS%E\]e%+U6D:(Lf']G9P8cSU1N6SV@2j5p)g$c2^7$9UuA3#1o%S`+an]nm8,($$1bBKC!jh1?s)3JiMT6:B\11dj3/2lD9(!\Z2!^%CsQ0O*)MF3/9-^sI/91JRJ3%XbLl=FqWY/SGei\U1se8;P@B;ZHNk8L/8Rq_6\S5@G&/cW(eC<G\<mC\2Aq4""o9!BXPg[eH^64E%;@l=.NaTHqHE=<V-Y`3u6@pGoGF@sWMj#&jS^;6lmpl\(`^,Ti9P?DkCHMrDCp1/m)r.2:YDk"@pLKO,:@(RYicK9\H0[V5C!btG%]1e%(Z=3K+!A?RC+?o4[AO6ZAS8UFgB-H_ke,f>b439`)oJb(9](7D(1^*=)eQTSCKFZIR^1:3MC,'nG52G0NNaD6RU7pLN&;DTX%ds^V2OX*F5@eArl:;dP.G<oR"I`\R&eRDg?(LD5UW[e0Z!_b`e'4A1^0b`KW?@+kk_OLO/_7Q?J;=O"$kR(R[cC<`iNME<!%I^\C%-oDLZ*t=5+b%dSd\3C+@Vu)*kdAOt9$-$fA<=]/fkr]KpS$Y.e`Ck3*K(jRU.pQgF!:E*:(?9]8e&pO\W'@q\%RCB9PnXI`_]RA#%S]B\`8fUI%"&8WN*Ns<Bn6Qu48fV.<#6Z1Wi#Lra$li(>mm9\o%OY`XkVF%7QL:O*Mb/XJKGV=(b$s:Bq4:S/*GED9km*CZLF.kQ%_>U<W"*tNq94<^02n`Q%n:hha!M^B&=UQ2i"+:Jq:\Q_:PR*%bk!0kL>6<U/s$aR7iF&jUA%V/IipAbOGD/[aL&uQb$=X.A9CI)D%]-.@:kaQsC(4Q!2hpS.H3OV%)"D6*tSC/F=>X=:6n^*P+XgQ!_n>D=so;W%(eE.UjF9C]Lb;/%dN:6[,&:#8CQ1DiWljkrZA@cdH%GW&aE92u2S`;s6N59']Sj8EA_)sGR&Rdf<aDHS;+"7A)K`qeDq9K:CjAMaG5jk;LiJU"!j]`=oV6NMQ>_<;'lotCeeFZHg&37+-`%WXhTo+J268BZrEHi)5-D"F%_2,@:"S)+o!Ki%X/]E8E)&J.P*LSF.oVN=#?],/4%lfB3.[)af,rY?IoC,gRDsJ188g#T,C:%/h#+%#J+ZJ""\Apq27gn6]6W8o0n^tQ[0&Dmt(s9_40l=$91QP,[et]8Ntc,bo=fJ<8X&E%%]DblZ328[?^nb'"q._*Q9tE)E:"SL'qsr%s'G2lq^'^Bjp`tgG<W@K:$5M7Q1Te=/m)F_%@$L><W`S?h?`'Dc(j'H8UI5n3mbMO"M?G:6\prfQ,Q!;Dj43+RTEMl8(,&TKU9Op%96e;E7S._a#Po'>d(HW>Qb",/Gers*;B9=-QLKLgQ,UN>RQ#Bn*0>XuJ18E5!9Zo1(%Lr=/Nun7)f5%iCtF(^[$`ahYed57FJCAk%:@L@P4WNF8FtZ3LS)ARU#MY64)jC4`O1rMOT0a&Xd>b,Y7a[4k'YN&nq,G/_HG#qodJ89c_>lJKF&hpI3hT@@-`b!6NfMBQc#a'[%DebRs63!n_E:.E6.XHY`/@3_3OM@bdhRk-sPDoG8,EQ:uQBM`4ed*YEhs;(r#"<Sqa`&ZS9sDCcKpXn@SVY,]V".nLf4pA@6cWci%I1p"gE+k5MG.`=LnRg4aZ:65S%]aj'J#dg<5#lPN5XDmoi>@5`q4<B"K&Mt@6A]PmMDmikaqCDd2KZH;K&]R"nts6O:@`!p]W!G@%61O(gGk4AM$MZZc3M*$)f['EHY4l*BS0QkAL<g0`2`8^HTQjC,DN9+l0"bS:dtsD`)k,e]&3QpRR$9M-C34:DIBS1MJ$4Ye*_XEo%GuK!+:(6b+j<T#7ZTK[RBU1TnnKtTtSEYJ.0.>],L<g0`=&oCcbVuXT2aQuV6D/EY<e[%2YC`+H$V20L'Q5V`"iHg&J17gu8_sTh%PHog8PjQUci(T/4('5egTip4Ta.orXH#nG<.X2&)&&PrOohb/7J\EYioY)S2C2Bh^3Pk3^Wg;/eOKQL+6$.Zl%M[5h[A:luZYDKd%nb`u.eEpLT/fC6F'l`*)"Y`@m$K0sZ<#po!)m5ps"NPQu/SA,OS5Zs)L*oh'UVMU7SUo^E'4*@TVjNTD?UL7lB*_f3]@&I7G2=`W%.P;FNGGJ0ei=*,;Y@9\j^'8A='3.-_!h9\fX90dZWb\hmFY4JXr"hT<$ms&&=X'A=c>uuA-choqOsf&p:@]aAT3Lt6T`6-1(*8>n%h?<M8@_>9U6`J?srlPkI5DY7FH(O@uJduFXHesWbk:#T*b*ejfcWSPXl3?o$NpXF(9]o4N!_.l:Xb?hC=pkN%*<JiU%drL0B1d54%j\,p&F3a<O\M8dS/C.JFoEOKV!%5r?l[o\5-S5REeFUfaTdS*+YB]XDi"^1Amfi1*LEb&)8=m/Tl/6f1H-k#`?aF?h%Z9H9?>U>*%:c6_<nQb0LWG6+(k?rS<9]of/Y&^CM2523gpGL!4'_J3^E.3nhJ!Df9WhFI1KBB`,Gb.#n64W0;H@[Kn3I%-rSEX1bF3a:q/5J;:%-;=pr3X<du?1Cg&U#;ce6G]/Z/([?j6VDq>U?AO[3pLn68Y.<U$Y;@kC'9H\%[n2p!%6#!c1*3\+Us3:K<>=HB$i6&$9-^S58EV'%;[)oA+0FP!^&meuC)<>u3Co_e*/o1^TiC3JH(h77UMLaH>'fa%8N7RK1d\1e_=Ku^92D,q]`?>)o">+%]L(`cc_=_;$9,Y"d8F-d%R`md*Scg$nNXS;rLmMQhW`hGs?>qeM0b"e(d(EaQF"GUk$$"D+TQZGh9#E.:Kngj2Hh+gGd8Ej\.U"lX*p"?$.#m,bR*NM<Ji-1-%BrGY.+F.nGE-+>DAA+f?#PF"<jX@=+;Po*D`Md\8pn-(G8h7uB%*GZ#gn:m7l/7#a8Y2]C-gcXuo6VAF;HuSS9F(A$:%CDJCaInV%9[HdIR\RBI.[cm9]^UM3T]T)?/uUcQbCTJC=1fI_-!kQ*ckOelrh:[L,_)L[VM!l^.[c<#?>tqfamc+\?rGQ`+k&aH,(qmVCa1E7%MFnSme5Ri8msA@U/gV54<sfk9iW]*_.*5%HK8%ML^PbOn!IcED#*XQA4&qoV4!YO@3)Ia*<AGdJ?L/"YLUj]qJE"PNLp-ij!)E8G%`sXT6@#g-rfnBd$!J7d[aJ=.%dL7eEn0H[p<6n[hEWM',<65PF]Yu<@jYJ18E,;,T$Lko2$f^4Fd_6EQB1T8cfV#*l//QFuQ:dGW%cWDZ""utK!*&"U0\!5nS$u`C]8a22a";_2Zono)>$HO*JcKH!]]&,$rlklod?@_$4Y/(2*Z:e=QP2Run/>\la"W.A<@LX]!*VYiZ%,b1QkAUr_kPq4/<G1(+b1.9`B,rl9E=N-ct>618NRfHAGK1R]2n(&%Xb%@Sc).7\^'=koqlr)4dP2\(D/1$dZRUr..[lBS0A9_!e%0WA[.JsRqo"n*Jp'IZ!hW$i302)?R^7"F5J'eKLrDlID!d1"=]!X*EjT1Lkl7EY\I>:`s,rG9/iJ\Z<ndek_\p+9jd!:O-lA-PYO%bGuR@.[o9e84-N45l?oTR?=PXMhT@Tm9?%;8Ol,]]Z<_%;O.^;^84H!A2H-X$h-?Z1mhf1U&q3F633VUYCcP\^B>CdD^ir)PdcqY%-gt7hA4f6We%5VM>:%PU@dR&:1ViLG$CLpL[lD-\XQ6LHjM:68/oVUp)[bBmI94'#%jbO9]VS54JDi([19$SE289Mq4=W0iTU*&[%RS/CE=i[==`n$`G!5Xj__dO7.04U/4+`BR[mt,(;_0]Lqj;Esag'PuD=KL=.A-Nn-AgNX=)-bS%!5mR6EZfU2PtWZ=D!ae#:qWpp%?(bXSH%ofjrq?bedKp(2V%X",]!(q#KJJqU()Yn/+`h5*DJN%j!lL3YK1RCW=`/fMD:L/5PG*<!F>>hh>@;\[Bhg],<WEBc)@GDV%V\[5&I:YF<A>ibD5k2;*Pq+lOf)/8m)4]S9:qWoFjiW22B!lZ1i,*=&O[b)fE=2nfO,B9m#rqE+NJr_Nqo<m9Ij]8HVenf%@J%2B%*:N:Bg@IA,bO15Dqo@i*AJn/c)(3\f1;dUGn@BP=LK]4",K#3P/FVu*g3MKpl!=C'!*$4f7YY![)$$jr2hW**Qm*D#`*dk/ZW'2e%84Ek?Gi%0l[I^tg5R;H%]WIpi!md&WK.W>T[Z]?:T!nfX^O@pZ3[!)aST7ijITNBidWU*@3p!T]rSHD.Gr@pf)(K1"XQ45h>[QE<%>FA6\)*6!G_#6/%1Is;hLD^l;T9L1/Jbs;TArpVZ8sp(RDsrQCLVU'SDZH$f,ak@D$k)]Go/+A-"^;9f**NZ2KKO[fE73`CPEqJ(%CEHP3(CjV>L;>"!EF]o<fA2&pcVs?<Sm(Vq^[S/Z]a&ErF_QCR`fXLs_!%K_kihl[dFq*S]TkWZ*Z\OA,/t4'#[Whrlg4Jj-7Y(:%Y!Wdg+q2KpJHXuW'=:OgE2empi%E)+'Y*D@g9aB]6`&"\F1%(SXtMV/OTpG0%mtbK(7M0alFXTGM"]flop*5]*Z\RR*!R<V*u"8Y%#WOoE4BCtVSltP8Lb][W4!.Ya;B:=-.>G[ARgZ@h,f!e#_\g<b/I\1U?YH,'BT=Gl%%U[2BU/.QA;;tJO.*GWm$7=h$CKfY!_dG6%S2OX*.ck(l(+E\Ui;,d<PXdUSPm:tEojV(fPkV+g.3T+j>[KHjqrm,;6F.B+0:7tX>^4XHjm`C3+NR@ZVtXKu00HWb^@&%8.3/gS%h:stV/+J='48uS:Zq1KI#^E+EaqHmO^[hT1Zknbe\fX%N-li_=A(c-^p5',9+NI:YkGqY:Ehc^YZRXrD3<gZs9>"mD0q+q0HK!NS%?:MlsQ1F-tqSju<7l.`I]i$,g@$8?&h/]8>hP56F4&=6f])niV634`l`K6uBo45\XJ%7.fG+PmcfV`;UNQS$FldEhHm*M/(gqY>m%;'4h8Y8Fp4Z3[,G)gt\S:9RS<UFG);1fA%&eZs25[dj:lc9<`FWJCXPAaIetY<<Wjn\;'#\T-c?BstLu7n(9&B<L7g<oQOmQ)=0=%eAc/a^V8)J:V$p'BoL&R\'Zh3WE%,2,F,.#-C$<SNj!@X;JAaJ)s;"+R^MMKUsa@6>nRu:^V8)KY:8;pm%i(^WC6k*3ki>U8>U%/%\+=EQe+**j7Oh+i:$H$Kr;&mp]Ohms5_hXMdsJ-?dsETq.K2TJBVZio"ku"'gQ_/Mp<.6OBhJ@kkLVZ6Sg5,tgoB2ROR=BDU!B,H%A?YM+qp#;ND,e/I6ceU;m>G-+VY@FVV&BF*;Yre_2`J6Q;l:Cf?`<Y[#2*d.]t)NZ7=kn[VKUa-\s)c?:9SSX951D4mc8[l>;.L5%.,Aa%^#g'ucA1C-p]f?Fg4DolU1?>^]uGLP)bdI"n@F9+<5%'pHEEu)$=B`Z\\[s-%^0gC95-H"^6@n\CuJ%i+bWYlkH!1eopo?k%Bi6>7$gg^Bi-MLN]53h^<5./GH;0AX-$unM2uBGYP3g!Wg(n)=?>KWHf.1#4d_.'^%V2d1MDt^B/*%WL[GK]3HVF[fNIE<N/Qm8F%^&A9l)Q*-sLdCcmd_a:a.K'idYe@3"//r]7CKe3R@7npMfV!TiWIPeV=o_J'TchW%i7(p)qOR9u+ZP():e&N"2]e'rN_V0Y=r<en%3KMGVenbdL*jef/9Qau7RsGK7-3g;#3pW6T"pK\@p1KD4U;FM(RGpO6T`CqkJcP8(>pssHHVX9hF>1;qJc^*r2MZB.\c@?b8n?mS%O.h(h`72UW+U/8>7`=Md,*@Rho6]"^F[I>i<WT,q<WVZR>p*I2?ng+O)\`i=3=fk1%)E+pl[s/UFhpaqCtJPM][XM0_Fq"h+hXIn%P#rP6]9j<e'bC`1"keT](^^NK9X0L)^u0Kd&oc:35)#>$(K5QEo/\\`T[\Z'/neR8_55Y8$SH[1B<F=;GN^Xn^^J!e!kb2<:_7P-%G,>)/H//Xk=r/@#K*hke9W<p]?qO^X!%61[+hX&N#iZ$6PK(J4e3t(]<.?<8WIIb&;?3EKV#Z,+I8T9=#qpO0Vl\7,fYo%Bn@[%G%2^EROLj2htJUg&XqA*I2>qj_JS);BrhLOlX_41GmMKbubK&EO#>Au$6YmD4=(L(iEo$f^3;!Gh<_$/#g7sNE3cQ;$Kc]c;aT[\ZM%d2e_6b6m0XlpCF5):Z6Z`kj01U]<`Y\O!2&CI/H(B2+27!XJo;U1[1<!^tA'!,)8URK/!'=VG0Wn>*=.WZKMO.#=jP:_6S*THL-2%6%PQ^hFg`Ke[$mLPe1>tc**bAVaPK?mLW^GHa<a%8T`m?L8sC/"GY#+8miK:&rmD&#g@@O^b@JLYWq1)Pp$GBcL[(`#,PikC1%GN%#5tko^gMXMKU<Yp6ZEA0ZQ[9:^_hrUdQ\[;9F6Y$`1VT<KQpDrT`E@M0FM7q+;DUQAJ^Hl_"*G,bp!#nehp6Sk.8lahN._l;OsU9%=P,_okT9f/`%Eam4*;P,+!>VqliMmcA+FtH!?;YV."KcpYCLhS/eB\$/mNY;o.5P2;AVX/@!SV;-`N"H>`_&Ui<@>e_SVDaKecp9%bHn-t"-5$a.=b4p0?>agf<n'K"<s_o`?Jb`>q@-oRV,<9'"V2^$^t^$GTh16";`mj$4B3f(L(iEo5%L@e3=N$"keT]G<pC<J2a&l%^n>t]"di1(>DS7?#fq,t4E!=`N8!*\Ra<K[V#USdU3&>Yko+6lG_e;Jjc-1Tc1^$jKtAJ=J@koVMpX"Zl5pQi.X.Wo/m-u'R*_MW%`Fo;]RQ%/l1oPOO1nSPTo@,k`<4a9b5fBVWN@r;)&dSY\5^&hDV??r5*MkB7"e5VW!XtYJQ%_N+$VC_r;Ak-(#aed3-G\Pb_h=Cd%(G&manei,QL_rg(Qlo>q_CFVsnj7o?nD&U5+qTE$\I2-r)RuA<('`kQPggt&_<U.6cdqo8,<?Q"a>&4s;[%de]`nNtPj+uqJWf/p%dG:ISl3.>&EZ*ig/eFkj"p4RC;!GW16[']snu%o]h$!kW$jLoj*h2'1LmTY/PDDL)LLtia."T1<;Zjo@(^+ffiXQD+YB\NGYBUk:%(CK$kh^dUoklh'a#)6`9%7G+_fhhhr";jgNKE+pQ6SlEA<,\"38$RtKEX(&5+i$\B7MNN2W_9>odi5@Gh'os4i)0Q+E2duRM-^;3%)bYEAoYqMMWa.17"js*d_N<PA8Tl5&@hUQH/i;$mRgKE)0I79tlR6q]/)Zu($c"9p$gpqR[d1\K*Q0QW]5F4?,npn'0=<F0VKs7F%D_fped(IJXk+L;EA4?)h10`U=!!f*!!+u]/VZN^u69u"d"98YRPK(J4fYqCgZ8X6U&2-Y";\QhSU*kqS!ND!V<7aG.AeSD\]h(5X%!Nc`E/=_kO";$[ZUik&m>RDSf]GnEi`!`"mQ0G)eU!fdE0"M%8ktMh!MHt0jf/k8i#aed3PS6*dlb6tQe@Mjk3;p;nGX6SJ!/B2p%_+P(;ihb30oA%rirp4QQqDJDir7b"aiD[1j_<in]=lZC>JZcgRZLQe$qSD(dZ0bnIqV.Wkp"t8tkC<9es7VM's2TWerU54,L]@&/%5CG>9)r=qNrRX:6k+BBcae/UprplDjr:BCWnAd23nb[h7h/E>Tb?t;05Q$R,roodLn6YjlNrAiVrlsp3q-M[e"mb'ZlE>[9J+M"b%ag[o?q7f/mo'<K/r51bumN91@a^=tbTE"lIs6D=frVJhYk!aMJm-jf2^],,MiqIs#j6qK.Qi?/ds8-M[q3+&Anot-$Vn`(dT76Ir%Il[Q+J,.o=s6;QClfUM1a8bq`YC?.orT52NrgQ.MjraWfk<Jn:&-)3is6o,(^\Q^ShT,Tmcen``b<Pp`kC<<fn,MnKQ[efQ^]1dp%o'I2tri9E)QiHZlrq-3m.^sH?~>%AI9_PrivateDataEnd